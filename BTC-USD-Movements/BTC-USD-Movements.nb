(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    292773,       5359]
NotebookOptionsPosition[    291198,       5320]
NotebookOutlinePosition[    291595,       5336]
CellTagsIndexPosition[    291552,       5333]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.952950242158903*^9, 3.9530648211300364`*^9, 3.953064958622326*^9, 
   3.953064994240164*^9, 3.953065349950439*^9, 3.953065465573783*^9, 
   3.953126301207666*^9, 3.953126763140174*^9, 3.95312695500004*^9, 
   3.953127117979952*^9, 3.9531271852779837`*^9, 3.953127515891465*^9, 
   3.953127565970191*^9, 3.953127614148252*^9, 3.953127664280751*^9, 
   3.953136707707389*^9, 3.9531368280231953`*^9, 3.953136973229302*^9, 
   3.953137162354211*^9, 3.953137357043047*^9, 3.953137409894322*^9, 
   3.953137478783972*^9, 3.953137580524066*^9, 3.953285299268303*^9, 
   3.9532853579233027`*^9, 3.953285456811905*^9, 3.9534102329466753`*^9, 
   3.9542733120956717`*^9, 3.95444635802569*^9, 3.9551400263429003`*^9, 
   3.95548301709028*^9, 3.955483914695512*^9, 3.955484592070867*^9, 
   3.9556323769979563`*^9, 3.955788802405212*^9, 3.9559111390723*^9, {
   3.955911408801759*^9, 3.955911408886239*^9}},
 CellLabel->
  "Out[168]=",ExpressionUUID->"3e6d7160-32a1-44a9-8b53-11a14229d3d6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Automatic", "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.005", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.010", "]"}]}], "\[IndentingNewLine]",
               "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}, {3.9554843906883707`*^9, 
   3.9554844202100267`*^9}, 3.9554844683149023`*^9, {3.955484509072035*^9, 
   3.955484573338862*^9}, 3.955484816424817*^9, 3.955484990240109*^9, {
   3.955485048330737*^9, 3.9554850666151657`*^9}, {3.955485212388727*^9, 
   3.955485238935068*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4899, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4899}, {
      4899 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2803.618403972645, 2809.350337566395}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4899}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4899}, {
         4899 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2871.432579387684, 2877.164512981434}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953127185868351*^9, 3.953127399371324*^9, 
  3.953127516744842*^9, 3.953127566636895*^9, 3.953127614757175*^9, 
  3.9531276649479303`*^9, 3.953136708325881*^9, 3.953136828734364*^9, 
  3.9531369738923807`*^9, 3.953137163086714*^9, 3.953137361194911*^9, 
  3.9531374105258427`*^9, 3.9531374818910313`*^9, 3.953137581144923*^9, 
  3.9532852998972692`*^9, 3.953285358708744*^9, 3.953285457535769*^9, 
  3.9534102338402042`*^9, 3.954273313316141*^9, 3.954446359469681*^9, 
  3.955140031195878*^9, 3.955483021842887*^9, 3.955483916294313*^9, 
  3.95548459335896*^9, 3.9554848195482388`*^9, 3.955485068466544*^9, 
  3.955485251684599*^9, 3.955632377787364*^9, 3.9557888035429296`*^9, 
  3.955911140380328*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"39b76e85-97a3-46ba-8f44-9160ec808b61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
QPfNc+KK6PifCrsmdKmbc5eO/w/gzxkab1eTJV/hzVfd9uVX0PGfU6Lkb+V+
8jKsouP/bDhz+NYn/Gf0+c9GeEPWjHHF9HmT4ARcJD5iva2JPv+5C//aN0hy
sTt9/tUKfzeNGm3emz7/MryL/cH8outoMtsBDjv7eMOm/ox56//6rsRp3gjG
omPw0DuC0GB/+vyvCO4cEjdjziH6/E8N31uiezUwlT7/G3gP8yENix/XLtHn
fzPgZJZ2St01+vwvAM5bFvl8wgP6/O8IPHTY26wMsvwWPHZwCFdGVn+Asxu+
bWx4RJ//6d3H/hO+zPMyWTANbn1YtmQIO4fpXwvHHr7q79CTsSwevj95ZofL
vozr5PCZr7zPqlzGbBWcpWfsuO4eY17fB5iP2a9pSL/PWGQLP3L7Wh9Glq6C
c2Kku348ZKyIhasOzZWryKwCePgm39Ynjxhz38KW5/dv+1bJWNirFMfzoVqT
TZ8zlkyBDZc9vBFOlvvCU0JXdvcmqyWlf683NpgLyJzrcNtCx6/BZEEj7PSu
gP+MLO7xUMnves6NK66m/knw8jcrj28i13nDbGU38Qky+yB859OF65MaqD8P
Dh6tce13PfU3wFlamj56HS4x/dqPsL2PnbdtrSZjhRX8xrj1ljeZtQzO+z3/
8Rsydz/ca+/d/yw6MRZehisOakqaujGWvIQjG3todNBmLNdSKPk996cKN3dn
rB4Hb/88JsyNzFkK73/R0S5Eh7FgLxyT0JS9W5ex+CK8Lipg1wz6e7Ia+JvV
55oR9Pi6zmVK/qYC5+5xZLY5/CXXYFsBmecBN07Sr26k1yfaDYd1rf6WrkX9
5+GhkTWr4unvK57BZzoV6EnJrI7l2L9m+v45QeaOhRVhHUa96Uv97vAe/2kf
fftTfzg89oHD4Et9qD8bjhaYjvrWm/or4HGn+zT+JHM0Hiv5Ds6d5hn1ov7R
8PymmnmqntTvBhcMnjrrNpv6w+DaoJuL3pDrTsNt5S/C7On57CfwUTu73bH0
93m/4ZGz81beMKB+kydK/qWThY0jB1G/C7z+ZdeNYkPq3wZ/nP3nVT8yKwNe
Gv/RMJ/MLYOnRx11aTGi/h/w/YJLfqzh1D/8Kcbj5LHLOoylfid4V/eF0SNG
UP8W2Lii+/t+o6k/HV7R1XbOELLgIayx4fi6lFHU/w2W3i2bcJMsG1Kh5LsM
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
hOpCeOnTTUsncrye4Df8c4reKG3uRyAakIz2aq8hIS+5/4OHBD4mm9WuUxGf
N2yB7TXenFHk/JaCi/Bvs461bpwfI5cP7xjk1OYxLfwBDx3uon0/kc8b9FKk
4o+Dx775w+fVQZbwupIZKguy+LxhIxwo6CPdlMfnDefh2PsT5gzheEDdPFgp
5eYgL1rSBD81mjbPg5/HVzcV5eneqf5vOR4wwRy+FhSXtp3jBavXw6G1TmGB
rfOHQuHdOhLl463zhx7AnysVBj7l83aPBthj0Zu/H8OZv1ca2s89Nvc5G8T8
0+DKfemND2g5T9gy4YjXPM6PEp6F99Xf6N6Xds6FDbzNdnXg+MAgGezwK/Pe
UDqzRzq+b2nR5CjuLyIzg0cpuq7d5cX87nBY/bRhi3lccgoeuCm9dCbtmwWv
nvRoyqMNzF8HSy8XqntuYX7N22g/6kwbcZ4WmMDNifPcYmiRK2yp1ebgMtrj
OLy16cyur3RYJjzC3M0lgS74BDv+6LZVnvuXyHXNwP3DR61JfyfzT4Y3Xcj/
dap1/ONK2PSX5Gw3OugIfDIxeaUhnZkOv/Hq8/4I/1/2Hg6X7zasdhfzd8nE
/b286cXG3cxvDOe5KarP3sr8y+CgwFux3bYxfxCcv8m8dA2PC97Bdz9GpN7g
64tU76B+tGWP20OOfwxzgYu2dJBFrmK+A7Ds2t+MJcwrdwuelzBjSspG5nsN
FxafTjruwHyd7uL7iiw8f4gOMoKHLxygfXU+8znDvpuGm8rNZr69sOUeK98o
jo/UTYR9HG3/rONxyUv4uOq+4j4cT+mrnIX2upK4Yuk45huV9a9/+/1KVT5/
rF4AZ2UkFM+lBYFwu4/Rn305flJ0Dd4fZCnI53hJj0q4fXD+kQhl5lfMRv3H
9kWsF10ghPedeZO1l89D5ebDlxY1CXPYfyb0hxd4lY9Zzv4153j4za2NVtrs
Pwsqh4c2jQ+pY3+XbGgOfo8tw01FX9kfaA8fD1n21ayO/SN+sEfymsqfVewf
iYM7OHts9X3B/pFS2Di9JPM953NXy+Xienqruk+F/YWCIXD2oin909i/KLKF
e2WabrpKe/jAV9KjdzQf5fPiaLhntOSmPuerFRTD3uqus8ex/1Xuz7/jEwyd
7vN5vnDgPZyfrveHyPF5u7M1LN3ZPLdfa//IVniqvOXV3jyeeQn+syBeqs35
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
vr4Z5uiklwwcTJ+vn4R7dm9Zbkifvwuewhu6n6fH6lL/N7jPisXnO4ZRv8Ec
bB+Hk3oE9Hm2xgz4m14fDRGZvQH+9MZgwghl6k+Er52bOCGxk85HH8OFUdWr
dlOPpBX22pV8b10NnY8O5ko5voo27r/p826WExxTNX5TN5m3Hj4zbWXH8m/U
/x8se8u0tIhe/7YW+K1KW/YSc+rVmSvl7M9gq6dNo14OXLljnU0+vb6CdTBH
XXHBcnLaMXjbrrUTx9hT78O/js6xFk+gPi0PHH+H7L6oN5nGczVccZO3ZgZ9
3i+Jg9dPsXltQ5bJgq0kggf3F9B4NsAfBo9e1debPi8fMA/nCwXsKwpk4WS4
scRsfwuXrhesgL+YXzzwm9x2GP4lCvrGmUt99+GMTl3LJx7UVwuXfrhb03ch
Pf9lnlJOybyLty/603hFw7MWp259H0I9d+C8MfI/poXTeH2E2XyF7jGHqcd6
vpRTs9Ny9aN46uHB6nOfFej+Rz0H4LzKodqtJ6gnAz49yrjq7HHq+QCnqtka
BCdRT18v9A5/N2HFGeoZD897f9x5/nnqWQzbzQxWCP53/WsfvDf9ao+DmMbr
Blw/Qc/qFTntHRw2pOLCpxrqVViA48F77FVhn6iXBdvPEcsfqKfehfCVfRNN
iiXUGwmLNucJJ7yl8bwGjxiXVHuNLCmDu01sjsiTZeS8cX4Woe75hq7XscbA
lpJ4hfP0+3gLYBWNAsE6ur8wHL5SNUf/Tz71p8K6Cj9PBa6j/lJ4TPCD4xWr
qV/GB883V9M3ehn1W8CmowceS15L/Z5w48XuD30F1L8L5jum809FUP9FuHlz
zOHpB6m/GLa248wyFlJ/L+w75UIqh8w3X4jzM/nYkSZx1D8XXr2jds1JGl/J
dtgllNfhdpb6z8MzPA2MuuXo+qcEjl1WOvurPF3//AW3R6XVlJOFpouknIS3
m9K1Fej652xY8dhnbVt1uv4bAu8Z9V1fN5iu/56Bjwp/rFcOo+u/L+H+58sH
R4fT9d9OeMecwEciut6cNswX53tHuzUT4un670x4eW3ckQ9H6frvFpi/L0ey
4jhd/xXBlXvHBnJO0vXfZ/Cp485X/FLo+u93+OqLfqeLRXT913CxlDOspMjG
Oo2u/7rC+SkhslGXqX8TrHA1edOva9SfDE/J/vSqkK6vC/PhQOfx39KvU/9X
+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
nrjI
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJws3Xtci/0fx/Elp6jMOSnNKTmklYRIG0mIVolIGqWc0iJE1ISQaEkHEutA
URih0J0JlUOsUFFRUdjIEiKn++36+P3zezwf15a9dl3X9/pe167tHrw8wGVF
BxaLVdSTxfr7//ifqCRMyd/P6rt40OqLtrD0E7zHLv/bsOWMFQZiJX8a76HH
ssWMWTNh9379HrxzY8wNhDteUmqryMIk+NnsjBijhYwld+C504p6GZDlH+EH
3EjRsymM1QN2YPmLSWU+Now5drBDcMKwuWTBOvjbXZHdGrI4EVYIdM2OkGWF
sPBHSi93a8Z17+HfCTEeRp8u/DW7f7iSbzjfceXWFsY8PvyzaknULTVj0Rr4
lMW7pidkaRy8ZeT+I0uUjBU34J7Ol/7LaWTMUsJfVNcc4l4y5vbZqeR76W4M
SqpjLJwKG3k3nx5LlqyE/WWNo3qS5Yfg6EWF/117xVidD4f5VH/yrWfMeQN/
u65+sPUOY0HPXUq+3OTyibu3GYsnw0Gz3A6+y2QsWwGnzfW66nqMcV00HBqx
b33iEeq/BlcaGn87Tua9hmca1F7fQRbp7lbyl7sMWJsQS/0T4byJxTozDlD/
cnj3uzT77P3UfwC+O/RXeeJu6s+FrXS6sLzDqL8e9jz8tXb96fNMf/cIJX/A
0nSHSLJ8PDw9vu6r6XHGai94kHHLeu3DjDmRcKX56nq/lnNM/yU4a/Jgl/VK
xuIX8AH95DfTmhnLuu5R8het878+/xXjOgv4RPCn7WXR2Uy/J7zz4SILj3DG
vD1w2q3TVdECxqIL8L6RWl1vz2AsrYYHzRLkjbVnrOi0V8kvzBZ3HTGFMYsL
Pz7v5mVuwZi7GB5aMGrubGPGwl3w9JZuP87dzmL6z8F6hzaum3uLsbwK3uNl
d2/LVcbqDvuU/MFrM5/OusSYYwpPz/jao/YkY8FC+I2mtqSKLN4Be4dtkSnI
six4TWNMd29y3VO4LuHskc1kNitSyX/VXehh4H2G6R8FC+LsGw/4MhbNh5ca
JTgKv55m+kPh/wKN4kLIikz43LDm2StCGbMewzsNA05JtjLm/oJFcT9WBG5m
LByxX8lP3rDMe8NaxhJnOL1inO71kYzlIfBvB4uiGg5j9Un4ZeChmFVPM5l+
BdwlwHFbv1zGgnY4aD/b8CVZPCxKyW/OmfnN7zxj2TzYxdy885hMxnXBcG7W
suaWU4zZafAkL96EGEfGvFK4Orjld+cpjEVtcPuDhijNjoylgw8o+XN+ZBSc
/5XB9M+BX+2oPr3uJ2PWJjjw4tmDZrScK4UlRxaVtNJy4T14+QGXyb2qGEs+
w+Hbri91I8sHHVTy3QasCGMpGKsd4OLFfe8uvc+YswEu2pac7HyPsSAZfjxB
dNjoP8biYji0Sr3w/nXGshY4Wv9V0cirjOsGRiv53AX7Fi8ls+3hFA87s51k
ngheafUxdfcFxqKjcOgi91P1ZOlteEXzB/ONMdTfDAdYrG72HEn9AyRKfsb2
wwevD6H+6fBVu+tuJnrU7w/fNfS58KY/9SfA5X0/aL7uS/034Vu7unl+60P9
Knhqxi+TcDKnX4ySP+LFsNM/e1M/D/5Tv2/gP4tXw5+Omhu90ab+w/DCVads
Er6fYvoL4ACf3E4uLxmz38F9X516+rOQMa/3ISX/V/0Qwx63GIts4M6fxm1d
k8tY6gfHV8Wb3D3LWBEDp0XuczAxZ8zKhz869bZN1WTMbYL3Rvmu0ik6yfSz
Y5V8/avOfTrdYiyxhj38zfsUxzGW+8A5z5wujnFjrD4IO/63+73ElTHnKjy2
JYC30oax4BU8yOt7y28eY7HOYSV/Xug61zorxrIJ8MGcU+viv6Qz/ctgff4V
yX8azHJ2FHw6snnY+HBmOe8K3HnJmk+jujAW1cE2OUtGNOakMf3d4rA+5euf
RRxkrLCEV72r/vroMGOWFzzRL2TBDzJ3H1yh2TKSd4CxMAde9jvS5ghZUgvv
vJfgrR/BWN4lXsk3v9zfRnskY7U5/LWxqf+RYYw5S+Aj5z2DJ0WkMv0RcGe2
gZ7NbMZiGaz/deRH+XzGsuewmeYT3tcZjOs6Jij5F9r6WZT0Z8w2g1e+P3T1
TyfGvEXw4v9y7LQ6MxbthPe7nzKN/5TC9J+FpyaZ9e5Qx1hRCUv3VVQ9bmTM
6pCI/bfMdG3SO8bcMfCv0NBHnmThAnjJhvt1IhVjiRjudErutI0sPwO3GxVG
sV4xVj+BUz9IB+k3MOb8gU0yDB2vdKH+kUeUfE5H98D6dcxysSv84rrHw2Af
xrLtcNWaw4tmezKuy4CvL77kds+dMbscfn9urVfZdMa8n7B+vxMjVvEYi4yP
Kvndtfp/HkuWCuBprOqo71OofyucnrpgZxktZ52Ej06eYfPxqZTpfwRHRToW
D73DWPgdXq7/pDmyiLFkaBLG89jfew3J8rmwfKekpMNzxurNcNx4x703qxlz
UuF1js83WtYyFjyAJyUvTgxXMBZ/hZNs9Gf3pMfLOMeU/E3Xn53j9KT+2fCv
8X3bS7tT/0a45/hfV9PJvBNwVenPu0P6UP9d+Alv4t1PhtTfCoc0DxtdTlYY
Jiv5pXEpb63NqN8BLjfbbXhCQOt/PfzkmzCq3yJa/8fgoeNsHhbMovVfBPvf
7i2eRZarYe3iitbZDrT+9Y9j/+3/gC+m9cOZAV/ma1QbuzAWBMCTkn6P93xI
6/8IfO1B5nCDAlr/t2DfjQbWWT+o/wOsjjZZocmi7V/vhJKvyepWzBlL2/80
ONwpeGvoPNr+18Jvb810WS1kLI2HW81mR9suYKyQw3Z3Hlfp7GHMUsF9sxc1
zSdz+0qx/jIdh5uQhbbwudUajU93MZasgvtr7tvzLJKxPBZ+7HW0V3sGY/V/
8NW+R9Oyyxlz3sIXLzVcLjNmxgNBrxTMzx4v1NAbzlg8BS7M6OuWNYaxzBc2
4MfLjUwZ10ngTPmQmeGxjNnX4bNNcV1m0fjGa4Rvho2rr11J41+PVCV/4x7Z
mYLtNP5PgrWvre73PYDmf97w1P9Wb3IRnGX6D8KzRiR3/nODMTcPFlw8utVb
zljYANs3rTjbNJeZj0q00/D6LvsdueLLWG4F/3r2tt/zqTT/FcK/s6ItAtJo
/rsf9nZpmv7gLGPBZbjqVdx0dR5j8Uu4ttVhTfAtxjKtdCX/itN/25oKGdeN
g8tN53zbVc2YvRTObY82DG1kzNsLL9W81Nz7I2PRRbglyC5z+GfG0hq4xGi+
7tnfjBWdT/7dHwZeSdGQMf3msGK8MGKCJmOuByy94Z+b05GxcDe8qGmPnXQC
Y8l5eJtd/LE7dozlz2Dt6MbNGs6M1ZqncLwNH6d1eiVjzlj4xtfYGfNWMRa4
w1E2sRXhaxiLw2Groi/TO/kzlmXDr6b3MZhJrquAl0zxVYWR2RoZOL6maLj+
CmDMGw0HJmaV+ZFFbrAsxMUkliwNg3u5f7lkSVaczvg7XzfwFmyl/ifwlQVb
wmeRub9hl8C0xCMh1G+SiflHbW1J723U7wLLIg4UvKXl8m2wt+5n10Zarj4F
53aMXvqUzCmDTYfHGG0kC37Ay/M/2G0ni4efVvJZFx1X2G+nfid4XPxx9aZQ
6t8CL7p6URJKZqfDllz/0iFk3kN4YMqaRcfCqP8b3MVbf955snTIGZz/tY+d
HyqmfkfYZLD77QXh1L8ZlmQvSnQlc1Ngn9Va35zJwvtw7NUHHYIjqP8LXNoj
t3EqWW6UheOdwu7Nmj3UPwtum77C2J/MCYIXOAaquu6l/uPw6h0J06/GUH8J
3Hhpvq6SLPsE++wvOfktmfoNspX84QXVMT/I7JmwsY6+heFx6g+E3xRPst5N
FiXB9lW9T12VUv8d+FBiUKl1KvV/hH/afxxrS2bpn8W/t3S1l/lR6reDNddK
RH3IwnWwv70Va8UR6k+Ejzmf7WydSP2FsLZFcS+vOOp/Dz9L15ONIHP6n8P8
KvjlnjaygA+/dtxqn0UWr4GHta7IaDpM/XGws4KbJKHldTdgw0utsV60nK2E
n/ikBW2n5bw+55V84YptwWvp/RFNhZ8KpvEfk6Ur4RsDV0WXkhWH4M9f0vse
SqP+/+D3JWvMdqdT/xu4b3WMW0MB9feUYT5meEPc/B/1T4YlO8Ztu/aW+lfA
ex9l+hwhq6PhjYEZ3plfqf8a3FJW/ef9F+p/DZtm7PQ+ShbrXlDyPxwf+cBd
m65/TIRzpgoLh5LrlsOm75ZLh+jQ9Y8D8NDOz0Rztej6Ry7M7v1gSe9udP2j
Hn5oa+vi352uf3S/iPlTmdf0i/T3FONho26vUwZp0vUPITxWtmbyePp73Ei4
8wHTLZLOdP3jEvznZ+0JRSe6/vMC1va1ODadni/vmoPxt5dDT7sOdP3HAi7V
KdS9+4f6PeEoAdfvElmwBzZPec5rIosvwN0utiz+QZZVwy0TXgW8YlF/p0tK
flOPQc1b6d9jc2H9Aebv/pm3GPaJDw48QBbtgt1m1KTfo9cjPQcvtzpce5Os
qIJ/DPyy5jmZpXlZyf/P0Kvaoo3Wvyl8Im7TMmtaf8KF8EuJqtvbz7T+d8AX
R9+WF5LlWXBQutEiJVn9FLa3S2e5/1v/rCs4nkzRW32eLBgF7+3Yy+40WTwf
1ri1x/gLbQ+yUHjlkZhJXWl5XSa8q3Lsvutk9mN4kVx5L5sez/sFs6xG284k
i0bk/j3/5g22b6Ht3xlOH9PVI1xN238IbLL2ld0Z2l5Zp+D4EJeE8pfUr4BX
X4sL7TuK+tvhLeM6jOlURde/huVhvpMXPraRLJ8Hb9iXtOpqJR3/g+Gk2pOm
L8mcNPiTyduGvvR4QSls2XYuNZQsboOL1a6z59LxXTb4qpK/Wys2ZzI9v24O
XD+uQf9SBR3/N8HNu/cPTHpOx38p/GVhztZwsuge3EfQ0Ti5nI7/n2FFyvGw
ngo6/g+6puQf2C/YsvkRY9Ys+IhwpJczvR7uBnj4gDt/DtG/J0yGeefZTYPo
9UiK4QVe+XHj/vW3wFPy2c94z6h/4HWcf6SvNBhKr4djD9suWJPcmywQwQk/
B49V1FL/UTjr+PtrkS+o/zY8V9poGUOua4Y/uvX096mn/gH52P62LTHSJvOm
wzt5Cr+fddTvD8/rkv60lSxNgBuEae3d6PGKm7DTuoHOQa+o/z08/oylUb8G
6u/3n5K/4/2STRX0eCEPTvx0XRpMlqyGY1sSrvehvy8/DEt0Bs/XIasL4NFd
rl6seUn97+DIMV31VdQj6F2g5FcWJxsH1FC/DTxRx2hRGlnmBzv3FRlmkOti
4H1Vn263k9n5cP/ejcrjZF4TbGynP/LRGNr+2TeU/G/77t37PJW2f2s4eND7
WS22tP37/PUho5EXaTkrGi76U/9lN5l7FU4R3OVZkoWv4FMj7285NpH2fx05
5qNaRidWkOUT4Bruk6gImh+ql8ETyi5OsCVzomAfL51hciva/6/Aw37Nm+9C
y8V18Mbg/tv9yLJuNzEe6g7SHGdN+78lvMFpjfvWKbT/e8GKoh12tvT6ePvg
1OZiM6Np1J8Dn81f0PPhLOqvhVe9vjNgEVnRpRDHi8aOJkME1G8BD74S4BpE
81fuEvh8S7CW1ULqj4BLOo3id11C/TI4oa1WZL2U+p/DAw8f/tqZHq/ueAvj
yehr/Te7U78ZvFgr+Fz9AupfBCtHTw91oeXinfCXSnmv5MXUfxauTn61nOtB
/ZXwtxwnvcVkdofbSn6EsUOIOT2eNwbe3Tm+xZgsWgDfV//wzBJSvxj+vNDK
7cAK6j8Dl286PC1vLfU/hY8cnKg9OJj6/8ClS1itXaOpf+QdvN962TpDyBJX
+M60T6VXaT4i3w4n6yW3HaT5kDoDjvBqu8Wh+RKnHJbYyCVGJ6n/J+x8/pqZ
SSb1Gxcp+bPFb96WkWUCWDT7bklUFvVvha+0z9/4JYf6T8IDzZ3Cc/l0/HsE
LzecUz5lLx3/vsMF3e+7VsbR8W9osZI//2Vde8p1Ov7Nhd9Nyd4QQJ/HsILh
QPfNc+KK6PifCrsmdKmbc5eO/w/gzxkab1eTJV/hzVfd9uVX0PGfU6Lkb+V+
8jKsouP/bDhz+NYn/Gf0+c9GeEPWjHHF9HmT4ARcJD5iva2JPv+5C//aN0hy
sTt9/tUKfzeNGm3emz7/MryL/cH8outoMtsBDjv7eMOm/ox56//6rsRp3gjG
omPw0DuC0GB/+vyvCO4cEjdjziH6/E8N31uiezUwlT7/G3gP8yENix/XLtHn
fzPgZJZ2St01+vwvAM5bFvl8wgP6/O8IPHTY26wMsvwWPHZwCFdGVn+Asxu+
bWx4RJ//6d3H/hO+zPMyWTANbn1YtmQIO4fpXwvHHr7q79CTsSwevj95ZofL
vozr5PCZr7zPqlzGbBWcpWfsuO4eY17fB5iP2a9pSL/PWGQLP3L7Wh9Glq6C
c2Kku348ZKyIhasOzZWryKwCePgm39Ynjxhz38KW5/dv+1bJWNirFMfzoVqT
TZ8zlkyBDZc9vBFOlvvCU0JXdvcmqyWlf683NpgLyJzrcNtCx6/BZEEj7PSu
gP+MLO7xUMnves6NK66m/knw8jcrj28i13nDbGU38Qky+yB859OF65MaqD8P
Dh6tce13PfU3wFlamj56HS4x/dqPsL2PnbdtrSZjhRX8xrj1ljeZtQzO+z3/
8Rsydz/ca+/d/yw6MRZehisOakqaujGWvIQjG3todNBmLNdSKPk996cKN3dn
rB4Hb/88JsyNzFkK73/R0S5Eh7FgLxyT0JS9W5ex+CK8Lipg1wz6e7Ia+JvV
55oR9Pi6zmVK/qYC5+5xZLY5/CXXYFsBmecBN07Sr26k1yfaDYd1rf6WrkX9
5+GhkTWr4unvK57BZzoV6EnJrI7l2L9m+v45QeaOhRVhHUa96Uv97vAe/2kf
fftTfzg89oHD4Et9qD8bjhaYjvrWm/or4HGn+zT+JHM0Hiv5Ds6d5hn1ov7R
8PymmnmqntTvBhcMnjrrNpv6w+DaoJuL3pDrTsNt5S/C7On57CfwUTu73bH0
93m/4ZGz81beMKB+kydK/qWThY0jB1G/C7z+ZdeNYkPq3wZ/nP3nVT8yKwNe
Gv/RMJ/MLYOnRx11aTGi/h/w/YJLfqzh1D/8Kcbj5LHLOoylfid4V/eF0SNG
UP8W2Lii+/t+o6k/HV7R1XbOELLgIayx4fi6lFHU/w2W3i2bcJMsG1Kh5LsM
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
hOpCeOnTTUsncrye4Df8c4reKG3uRyAakIz2aq8hIS+5/4OHBD4mm9WuUxGf
N2yB7TXenFHk/JaCi/Bvs461bpwfI5cP7xjk1OYxLfwBDx3uon0/kc8b9FKk
4o+Dx775w+fVQZbwupIZKguy+LxhIxwo6CPdlMfnDefh2PsT5gzheEDdPFgp
5eYgL1rSBD81mjbPg5/HVzcV5eneqf5vOR4wwRy+FhSXtp3jBavXw6G1TmGB
rfOHQuHdOhLl463zhx7AnysVBj7l83aPBthj0Zu/H8OZv1ca2s89Nvc5G8T8
0+DKfemND2g5T9gy4YjXPM6PEp6F99Xf6N6Xds6FDbzNdnXg+MAgGezwK/Pe
UDqzRzq+b2nR5CjuLyIzg0cpuq7d5cX87nBY/bRhi3lccgoeuCm9dCbtmwWv
nvRoyqMNzF8HSy8XqntuYX7N22g/6kwbcZ4WmMDNifPcYmiRK2yp1ebgMtrj
OLy16cyur3RYJjzC3M0lgS74BDv+6LZVnvuXyHXNwP3DR61JfyfzT4Y3Xcj/
dap1/ONK2PSX5Gw3OugIfDIxeaUhnZkOv/Hq8/4I/1/2Hg6X7zasdhfzd8nE
/b286cXG3cxvDOe5KarP3sr8y+CgwFux3bYxfxCcv8m8dA2PC97Bdz9GpN7g
64tU76B+tGWP20OOfwxzgYu2dJBFrmK+A7Ds2t+MJcwrdwuelzBjSspG5nsN
FxafTjruwHyd7uL7iiw8f4gOMoKHLxygfXU+8znDvpuGm8rNZr69sOUeK98o
jo/UTYR9HG3/rONxyUv4uOq+4j4cT+mrnIX2upK4Yuk45huV9a9/+/1KVT5/
rF4AZ2UkFM+lBYFwu4/Rn305flJ0Dd4fZCnI53hJj0q4fXD+kQhl5lfMRv3H
9kWsF10ghPedeZO1l89D5ebDlxY1CXPYfyb0hxd4lY9Zzv4153j4za2NVtrs
Pwsqh4c2jQ+pY3+XbGgOfo8tw01FX9kfaA8fD1n21ayO/SN+sEfymsqfVewf
iYM7OHts9X3B/pFS2Di9JPM953NXy+Xienqruk+F/YWCIXD2oin909i/KLKF
e2WabrpKe/jAV9KjdzQf5fPiaLhntOSmPuerFRTD3uqus8ex/1Xuz7/jEwyd
7vN5vnDgPZyfrveHyPF5u7M1LN3ZPLdfa//IVniqvOXV3jyeeQn+syBeqs35
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
vr4Z5uiklwwcTJ+vn4R7dm9Zbkifvwuewhu6n6fH6lL/N7jPisXnO4ZRv8Ec
bB+Hk3oE9Hm2xgz4m14fDRGZvQH+9MZgwghl6k+Er52bOCGxk85HH8OFUdWr
dlOPpBX22pV8b10NnY8O5ko5voo27r/p826WExxTNX5TN5m3Hj4zbWXH8m/U
/x8se8u0tIhe/7YW+K1KW/YSc+rVmSvl7M9gq6dNo14OXLljnU0+vb6CdTBH
XXHBcnLaMXjbrrUTx9hT78O/js6xFk+gPi0PHH+H7L6oN5nGczVccZO3ZgZ9
3i+Jg9dPsXltQ5bJgq0kggf3F9B4NsAfBo9e1debPi8fMA/nCwXsKwpk4WS4
scRsfwuXrhesgL+YXzzwm9x2GP4lCvrGmUt99+GMTl3LJx7UVwuXfrhb03ch
Pf9lnlJOybyLty/603hFw7MWp259H0I9d+C8MfI/poXTeH2E2XyF7jGHqcd6
vpRTs9Ny9aN46uHB6nOfFej+Rz0H4LzKodqtJ6gnAz49yrjq7HHq+QCnqtka
BCdRT18v9A5/N2HFGeoZD897f9x5/nnqWQzbzQxWCP53/WsfvDf9ao+DmMbr
Blw/Qc/qFTntHRw2pOLCpxrqVViA48F77FVhn6iXBdvPEcsfqKfehfCVfRNN
iiXUGwmLNucJJ7yl8bwGjxiXVHuNLCmDu01sjsiTZeS8cX4Woe75hq7XscbA
lpJ4hfP0+3gLYBWNAsE6ur8wHL5SNUf/Tz71p8K6Cj9PBa6j/lJ4TPCD4xWr
qV/GB883V9M3ehn1W8CmowceS15L/Z5w48XuD30F1L8L5jum809FUP9FuHlz
zOHpB6m/GLa248wyFlJ/L+w75UIqh8w3X4jzM/nYkSZx1D8XXr2jds1JGl/J
dtgllNfhdpb6z8MzPA2MuuXo+qcEjl1WOvurPF3//AW3R6XVlJOFpouknIS3
m9K1Fej652xY8dhnbVt1uv4bAu8Z9V1fN5iu/56Bjwp/rFcOo+u/L+H+58sH
R4fT9d9OeMecwEciut6cNswX53tHuzUT4un670x4eW3ckQ9H6frvFpi/L0ey
4jhd/xXBlXvHBnJO0vXfZ/Cp485X/FLo+u93+OqLfqeLRXT913CxlDOspMjG
Oo2u/7rC+SkhslGXqX8TrHA1edOva9SfDE/J/vSqkK6vC/PhQOfx39KvU/9X
+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
nrjI
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.955824*^9}, {
              0, 0.07985452574715149}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.955824*^9}, {
             0, 0.07985452574715149}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
QPfNc+KK6PifCrsmdKmbc5eO/w/gzxkab1eTJV/hzVfd9uVX0PGfU6Lkb+V+
8jKsouP/bDhz+NYn/Gf0+c9GeEPWjHHF9HmT4ARcJD5iva2JPv+5C//aN0hy
sTt9/tUKfzeNGm3emz7/MryL/cH8outoMtsBDjv7eMOm/ox56//6rsRp3gjG
omPw0DuC0GB/+vyvCO4cEjdjziH6/E8N31uiezUwlT7/G3gP8yENix/XLtHn
fzPgZJZ2St01+vwvAM5bFvl8wgP6/O8IPHTY26wMsvwWPHZwCFdGVn+Asxu+
bWx4RJ//6d3H/hO+zPMyWTANbn1YtmQIO4fpXwvHHr7q79CTsSwevj95ZofL
vozr5PCZr7zPqlzGbBWcpWfsuO4eY17fB5iP2a9pSL/PWGQLP3L7Wh9Glq6C
c2Kku348ZKyIhasOzZWryKwCePgm39Ynjxhz38KW5/dv+1bJWNirFMfzoVqT
TZ8zlkyBDZc9vBFOlvvCU0JXdvcmqyWlf683NpgLyJzrcNtCx6/BZEEj7PSu
gP+MLO7xUMnves6NK66m/knw8jcrj28i13nDbGU38Qky+yB859OF65MaqD8P
Dh6tce13PfU3wFlamj56HS4x/dqPsL2PnbdtrSZjhRX8xrj1ljeZtQzO+z3/
8Rsydz/ca+/d/yw6MRZehisOakqaujGWvIQjG3todNBmLNdSKPk996cKN3dn
rB4Hb/88JsyNzFkK73/R0S5Eh7FgLxyT0JS9W5ex+CK8Lipg1wz6e7Ia+JvV
55oR9Pi6zmVK/qYC5+5xZLY5/CXXYFsBmecBN07Sr26k1yfaDYd1rf6WrkX9
5+GhkTWr4unvK57BZzoV6EnJrI7l2L9m+v45QeaOhRVhHUa96Uv97vAe/2kf
fftTfzg89oHD4Et9qD8bjhaYjvrWm/or4HGn+zT+JHM0Hiv5Ds6d5hn1ov7R
8PymmnmqntTvBhcMnjrrNpv6w+DaoJuL3pDrTsNt5S/C7On57CfwUTu73bH0
93m/4ZGz81beMKB+kydK/qWThY0jB1G/C7z+ZdeNYkPq3wZ/nP3nVT8yKwNe
Gv/RMJ/MLYOnRx11aTGi/h/w/YJLfqzh1D/8Kcbj5LHLOoylfid4V/eF0SNG
UP8W2Lii+/t+o6k/HV7R1XbOELLgIayx4fi6lFHU/w2W3i2bcJMsG1Kh5LsM
lp/pZkH9jnDStE8jUsnszXDOcP+YMEvqT4H3Z5/XiCWL7sMxGYMNbztQ/xf4
RMmEtudkhVElzp+sL5hbCKh/NvwsIN9uOJkbBKdkrqo6Op/6j8NVPYZuaKLl
khK4qV3/5way/BN8QKp5bEAg9RtUYb6/Z7fUncyZCT8+3tt65jrqD4S5O8on
XVtO/Ukw38TwoIsv9d+B0wYn6x4n132ED8Vddp67gvr1nyn5L7RiSiu9qd8O
nqHH2WRHFq2Dj/g3X8z3ov5E+MfHbpFB7tRfCOtVb0rYu5D6P8ANJbeGhpC5
/Z//fX9rboWShXx45Pl6cy49X7IG/rOv42gZWR4HfzfXWGXlRv03YPZmdyez
ydSvhI/MGb38uxX196nG8WhlTU6rCfVPhd20920Ioe1HthKecWLuj1u0/dYd
qv47XvXa/5H2R/Z/cGVOYnQR7T+8N3APg2ROiw3196xR8m8F3uWcGEf9k+HF
gZXuhrR9KFbAY3Q75fSwpn5Jzd/jU1e7wknUfw12H2l7qR8tF76G553KGK2m
HoluLbbHeQ1Tvc2pfyL86pf3j9UDqX85PO3xdUdD2h85B+CQaKeSlwOoPxd2
0uLd+ahP/fXwvGGjTL78ofG/+wuMv592nNnXQuP/eLhnZUJsuYrGfyE8O+Zc
W4+tNP5Hwq7zzHZf20jzn0uwVfurcGFfmv+8gCNfxR1Y3Urzv64vMV8uUT/c
34XmP+PgNnXe+xX3aP7nCaeZZBo436H53x54cVawrJLmk5ILsJnqwgU/Ls3/
quHPta/EGSNp/tepDvMJj7h8vaE0/+PCOzVerJ1qSPO/xfCjU60fnAfS/G8X
HNMx7sMBHZr/nYO7aAetjtem+V8V/HNeUQcHLZr/adbj3+869cBxXZr/msJv
5WG5X7rS/HchfHfgxTN6nWn+uwO2Svc+9pyudyuyYJ/X2045/bv+XQG/GX/h
v+mpdP7HalDyLzu6eX2LovO/UTB7jX7Hho10/jcfPuSZOu8cn87/QuEFPo46
FrZ0/pcJP/X9sC9mCp3/PYZzC44u87em879f8O6ckit+ZPGIVzjf6BZ55/Mk
Ov9zhj1MW/ULJtL5Xwg8Yu2j7NVWdP53Cv4Q0P9GIJmngEe9G79vC1nUDgdF
J7ZtHEznv8Ne4/gUG7H5BYfOf+fBq1/orO1vSOe/W+BJq2Z23TSQ+tPgQ1rG
F/qShaXwo8RV1rWm1N8GzytzdmGNpf7BjZi/8H8KO06m/jnwLbX8dAaZswl+
/tRriQn1CKQwx77ixlR76r8Hz3M+cvgOWfYZ9vTNO/pzJvUPasL6uGS5P3UG
9c+CHfaxelXS43kb4GlxlW7jFlB/ctPf66kVYUJX6i+GMbfXdiUrWuD6sSfm
T19E/QZvMJ6ssJz83Zn67eG3M2qnVrtTvwjucXSpQwFZchRm2dVf5yym/tvw
goE/h4pouboZtn1Q3j2PXi9nwFvM16S5tW70egXT4Ygt2SOc6P0T+8ObA4LS
GrnUnwD7pJ7VV9Lj627CFj+0C7McqP89nFywfkMOmdfvHeYLjzwXbieLePBF
zmr1I7J0NRyU+2T/3dnUfxjeMkKr5h6ZdQN2/PgrsIoez30H3/jsIB8zi/p7
K3G+Wv2ul4Rej8QGFky8rxdMlvvBbSuyckvI6hg46HmM/Xh6PicfburkGTFw
DvU3wXn75pRZO1I/W6Xkvz45ccDOedRvDZ861u+I0Vzq94FLg7Z+DbSh/mg4
8kvFq9W0ffCuwpuGLpQeJotewRl9dtrOov1PqvNeybdXT5Ea0P6lmABP+qAh
f9CR+pfD+kGJV801qT8KftBhw6Adp5jP94RXYF3FstxlGfT5Xx2sbvnNvbqH
Pv/r9gHbX5r1yWF7GastYStJe/1JMscL9gm6OGj/fLr/bR+8eGp+2AayOAcO
b886c8eF7n+rhUMfFMhKXen+ty7NmN+byzkjaTnbAs6w8cxsmMeYtwQWH57d
M8CRsSgCVnTxsdInS2XwzoBTU4NtGCuew4nLd0liyaxOH/F6t4kLQqcw5prB
Tcum9c8iCxfB26PfFu4nS3bC3EjH1Vm21H8WVnrYlM8iqythfd6Z7KNkTgc1
Xn/JUZNysmAMXCVqPjZnKvUvgLtJnz0RT6R+MazM8zbtTcvrzsDhS+d39COz
n8JNWqxv/env8f7A7NwJQZdpuWhki5K/bfvIW7vIUlf49qSMaS5kxXZY8cS2
YDw9n5UJn/EYzW2l5dxy2O57rwcVZOFP+HTBqDnBZInxJ5yvu8zZ0WJN/QJ4
lXnZw32TqH8rHNF5gVYjvV+ck7Bh9prbYnq/BY9gj/+uDC7kU/93OGTbxC3T
3ah/aCvOj6t4+ZoLqH8u3KT/ufe+RdQfDM/saZniuZz6U+FLXVe+9ltN/Q9g
5Y3QBcv8qf8r7PHc55MgkPo5nzF+DcooThFR/xx4w7TWeafo+dyNcB3PoDpx
HfWfgJvXrDM/SpbchUvWVBaWkuWtsNtxg4vpa6nf8IuSn+l+YRCXzHGAx58N
ndKTPi8XrId/hMc1dyeLj8Eyoz3R+n7UXwQ7Nnzocp5cp4anJwu/naPHswd+
VfLnbLqfX7eC+mfAhyJqTPLIogB4PmfZlCh6vvQIbJa6J2SQF/XfgtnDJroZ
klnNcDm7+emGhdSv14b5yD3XOV5k4TQ4Pr2XZRatD8lauIjr0eM77b/yePjz
vL0GurT+1HK4sQvb3k9A/Sr4Y+rPWV+cqL/vN+wP2e9m9qblYlv40qwL6ea0
P8tWwd6j0rjt5LpYuPFR1NyxztRfACuCQ8yLPKn/LXzbYkKQbQD19/qO48/N
UrWA1q90Cny+VHzpz7/17wsH6qzka62n/hg4eEtsof1+6r8OT2jLtDaVUH8j
HFkQG257mPp7tCv5a5+lbVeT5ZPgRS1HjXXiqN8bHnK+Z/KSVOo/CMv3aiT7
kQV5cHbnfhlONJ6KG+Aq80yjqEzq1/6B7WHJnCFGWdRvBRvu2TlMz5z6l8FN
q9qfFulR/374cs3whSc51H8Z3jJ/+AGHEdT/Ei4aMW+pM1mh9VPJPxcvLDti
Rv2W8MyMgTvkFtS/FH55wPPlJbJwL/yqfV5QNllyETZ4Yx76lsYreQ08cSi2
Btrf1Z1/YX5RV/iyL40PHHN467HWGp3J1O8BB889G5ZoRf274eYjc2ffpj7Z
eXjhZpsOj02p/xn8UvNt45eh1N/xN87/RrE8jHtR/1i4ZtPe2zvIInf4xIzI
AxM1qD8c1i047ni4O/Vnw3PTL4TN/0n3v1TC20adTl3whe5/0fij5PdXD+Nf
V9P9L6PhiXsCdxeqGEvc4Lg1eTkWzxnLw+CGLckl1vWM1afhJ/0WzTpUy5jz
BN4murcmgB4v+A0PPPtwxvkXjMUmLBV/zYKYlZFkmQs86/mXUwPIddvgxA87
a7bXMGZnwCdsFzfVlDLmlcHlKauqLxYyFv2ANaf3c5p7gbF0uIaKPyGD28k4
lrHCCc5//2uPryf1b4X1u3tvDSNz0+G7C+K2t7pS/0P42zn9QZqh1P/t7/Mj
g6uHhVD/kA4qPvvYUvOOy6jfEfZqbHFaJ6T+zfDbmjc+Dt7UnwJ3Kbo38OUi
6r8P3ytPrwzlU/8X+OOmsm3WlXT/t5Gmim87xvvpeR7d/z0bbqsb8+lYX8a8
INhz0tlBt1Lp/u/j8H9X8/Xv7GEsLYEfa0wfELGDseIT/DZvfLfC7YxZhh1V
fHc/c9PgUMbcmXBb6NctLAFjYSB8bPwZjz4OjCVJcOyGfm8TpjKW34HNL0xY
0asnY/VH+ORR7ph2NmOOficVP+Cl646315j7wwV28JKN0lt+SYzF6+DHg5Mu
9D/GWJYImy8P0xobybiuELad3Se42Y8x+wNsMfD1gPBzdP93/84q/lX94OGV
znT/Nx822Dp99Z4BdP/3Gtgij70zqpzuf46Djxp2Kna5TPc/y+HELbK92vvp
/mclfLDSbuTXSLr/uU8XFf9Gzt6TZrRcMhUu/L3ex2cP3f+8Ep4dsy018SDd
/3wI/v6i9ab5U+b+M85/cF2Rt6b1M8aCN/DBAX6BIY/o/t+eXdG3Qmvdl33M
/WuyyXCw08YVl13p/t8VsEkei91/CWO2BO669XDnie50/+812Onm1ofhs+j+
t9dw/5bi5KOzGUt1tVT8tUlD9YtpuWIibPBz3PeaoYxZ3rCeR+Vh1SDG3AOw
InHP22AjxsJcWIfPfp5gyFhSD696/t/6UxzG8u7dVPwQk6qNroMZq8fD65+3
DnA3YMwRwouGloa+msBYEAlvXvIzx1nAWHwJztur99OAemUv4K73s38VWVB/
1+4qflzCuRBPej57HHxji4/HrVK6/88TrmsI3tZSxFi0B/bPM8wuqaD7ny/A
m9N39L9YTvc/V8NOh64tSb5D9z931sb2ejdTz1iX+rmw6+9dpadP0/3fi+EP
z/irpguZ9SfZBe8QNN3I8WAsPwcv3ysofLyUsboKDuXrnhq3hta/pg569nl2
lqyj9W8Kh8ka9ZetYixeCMcuitC5sYOxbAdcvDJUHL2T7n/Pgj1kp6J/k9kV
cOfc9sKEOLr/naWr4g8++Errfgzd/z4KLp8fVTUog+5/nA9XW/JvjDxP97+H
wmuNImLYb+n+99PwZaVHxyNv6P73x3D6vbgQByVj4S9Y5e7xai9ZMqIHxsO0
993FKup3hi0ejkvR/UD9IXB5/+VzhpM5p+AP47WvxDZTvwIOu6e3o88n6m+H
A/2Dr5eQZcPYKv7YlpOJk75Q/zx4//TGw33/3f+/Ba44czHFvJr602CnZsOf
u55Tfyn77/5z+00IWdoGxxXbL/IkKwb3RO/Reev7/Ot3hC9wNsw91Er9m+AJ
xSPeBNDrFUrh4PrSIiH1SO7B/vUVNqXvqP8zbLbjzDofej/Ug3qp+FvFT2z5
ZM4sOKFFlBDcQv0bYK7T/QM3i6k/Gf69pXKVUQn1F8PtvNkXWgqovwV2td81
5Z/ZBr0xXgrL3+7bRv32cFszb+0xskgED3FZ9fnDWuo/CttsDt6i60/9t+GF
wa3m6uXU/xG2ftjnZwhtn9wBffD3CrplfV1P/dPhwbq1E/0/0vcf/GGrWft8
l5LlCXCFeVTDdrL6Jvw5P8IrTE3ff3gPp0/odmvia/r+Q7++Kn73Zeee2yhp
/OPBxtMXLE16Q99/WA0LP4rb75LrDsPbPYvmL3xL33+4AYc/nHQ1iZ7PewfX
zb4/r+AdY1HvfhjPfw+b70yW2sD7HVsOW5EVfvDBlAHnvej5rEPwu8gp/QU9
qT8fFhn1K7rGpv4m+MaroVPae9H6Z/dX8ZsUEg9LHVr/1nBS11Pdd+nS+vfp
//d4II/xJ3Oi4S27oxzXD6H1fxV+vWtFs2AArf9XcPgLx51fyTIdPRV/zJzk
6u/kuglw6vcGJ51g6l8OH/nuEpIXSP1RcMOawvK89dR/BR5d+DLcREj9dfC9
4a6PdpAV3Qao+ENNWv3mLaL+8XDiqfKARmvGXC/4sovG/rYJNP7tG/B3fNG6
ajKR1n8OrC4V9fewpPVfCx96kDxnDlndRV/Fl7kZtTXS91k4FrByc/YfS7Jg
CTzTZYgynf6+OAKWyl46DIun8V8GV7Es60P+jf/P4TE27N9veDT+dxqI9zdv
N2ukHR3/zGAH50+av/To+LcIfna71+j9ZTT+74RlN0ZsWvCYxv+z8Ef+xDsH
btP4XwXLq5Z8HSGn7790MFDxeSvXpk3Ppe+/jIHnGHczTqXlkgXwnwLj8HNk
uRh+0CFzyG6y+gw8qeKBesdN+v7LUzj+Sdr51ht0//sf+Neu9A6vLtD97yMN
MR+bFGK/MJ/uf3eFc3WG7vXJpPvft8PhaZ2jxp6k+98z4cmeDY88z9LxrxyO
mCWreHqejn8/4em1YxOUtFxqPAjHn9JpnhtpuUIA+4x7PM0pi/pD4KCxg4Yf
JnNPwiuE60/vIgsfwemG/Q4OPUf93+Hqut6m5+nvy4caqfg9t+lXnyar58J3
Lgb4DDlD/cFwWbbH1kOnqT8Vfvjma5dnqdT/AG45c836Shr1f4W33A3NyiTX
cTgq/g+rhSWH6fHsOXD05bvjIsm8jfBSzfOmsWTRCfimJOa9MT1fehfe0/jp
VzeyohWOvCxbvIPMGjRYxb89rcO33mHU7wC3W/u0pZKF6+EFnkdG3PCl/mNw
07EXUbfI8iJY1/x7xWo/6lfDg9auSzW3p/6BQ3B+8/aOcIYd9c+A++e9Lr46
nfoDYK/HL0pOTqP+I/Bk9aTBx8h1t+Cs84XHojjU3wy/XXbloXQw9esNxfHy
T8UFp6HUPw3mJIRbTuhH/Wvhyesyxs7sS/3xcLp/t9jVOtR/Ex611y/Roiv1
q+C3Et53ty7U33cYxt9f/X3StKjfFlauWzHOvBv1r4LH69u4JtFydSy8MbD8
2wsypwC+O+65S1dN6n8Lj1zX+dLlBvr+V6/hKn5al9gKyxr6/tcU2HLGbJ/m
Svr+ly+81/OKZPFL+v5LDOwfPOFhO5l3HdbykI3uXk3ff2mELa5UvmggS3sY
q/glXpaZcc/o+y+T4Igo4Ym9ZJYP7FYxbrGQHs89CKd8tHawe07ff8mDWZcf
eu2ix0sa4LK4tZz99Prk2iNU/J1+p4VrntL3X6zgiBqbzkfInGWwx7eckbmP
6Ptf++EWifLU6zLqvwz/OW3Z7WcF9b+EdbXWPdItpH4tE8xH/K6sPkRmW8KR
7Zc+3JBT/1KYxTHu70HLRXvhD+6qN8uLqf8iXH8mrzC1hPpr/j7eViutQyn1
dxmp4m9rSq2fQ+aaw93eGAQbkYUecGLWf7vG11L/bvj6Ey9lWR31n4dvl5UG
XHxH/c/grJs5u/y+Un/HUTg+zA/4VvuN+sfCygtNk+Z+p3532PdmcMzXP9Qf
DitYpeu2s2j7z4avJ1YPvEbL2ZVw9JJZGR3IPI3ROB/3tloRSxaNhvOywg8e
IEvd4LX50zICyIqw0X/3z4SuIjLrDHzff3lpJW2v3Cew2YG07omdafv/DTfm
T9h8mvYHickYnC8dDHV9T5a7wAN6NDp/Jqu3wU9W11c/ov2JkwFrxr+xf0YW
lMHym9/Xve9A+/8PuKPPe53sn9Q/3BTH2weC0cH0/tQ5wUlPrazK6f1jb4Xv
5BXm2tNyXjqs2feLbTJZ9BA+q3g7TqOd+r/B1X77g13JiiFjMf46XqrqQ6+X
NRfuu7JDzFfq5W6Gz/eYeL7zv/0/BXZ8zNqlQfu75D48NjGy22l6vPwL7Nf2
3CH8X7+R2d/x7NOcx9THmQ3rcHPsZryh9R8E7zeObagji4/DK1MfVh16Qf0l
MDd75Bmn19T/Cf7zuNeS4S3Ub8hV8Qcef75U9oX6Z8L2Hf7ca6K/JwqEX/xX
mNLpLfUnwVnmS3qMIivuwE92FZvU0/vNUsMNcyvnmtHr5+qbq/gvG/+cjab1
JbSDHVo9emlSr2QdvKvolsHDf+NfIjxi+9mfG7pTfyGc8UPnM4/M+QDfXdLx
tx1Z0N8C73+28yy1Bq1/Pjw6/0DAd7JsDbxnpleXgTRe1sXBS71vTfj3frPl
MPd1U+yLjjT+K+GLD/0cOnai8b/POOzPvraL6mi5dCrcqF6yJZWWK1bC/Z+X
+Gyiv8eKhafn7886Rcu5/8HnV5WmaP/b/t/AWeP3H976b/vvaYn3P+2FA4d6
5JNh3QH+un3/9a+At7cYBHX81y+Bn2yNmHOf3i/BNfi4iUvsdm3qfw3baj6u
m07LZbrjcT5c8/135L/tfyL86+7V+jYab9je8I7Nnu/sabzmHYDLf4U+fULj
tSgXTv91fXAlWVoPP7P/+OrEOVr/3a0wHkh3b8zLpPVvBU9707xjVxqNf0JY
EG21ezJZGAnf237fy5++3yi5BBtPSp0aH0vj3wvY6uia2n9Wd52AnhaLjG70
/UjOOPiTme2FbXtp+/eEpfvePvTeTdv/Hnhrm9myw9to+78AW6/abuW5lPqr
4dkz9LSq6PvR7M4TMX8+qq+Z4ED9XNja4XTF85nUvxieEM7pNXgi9e+Cf5z5
OjHdnPrPwXPavXpuIrOewW0aM8wOkLmak3C+6HPMtXY49ZvCsrBdQUeMqH8h
fGnuoiaxIfXvgE2nO4u3DKb+LHgXa29ZCIf6K+AkPbXJyRHUz7LG9nOet8vP
mPpHwZe6Fkh3jaT++fDZeqcIJT2+LhS2zpsW+IaWs0/D2zIK7r0cRf2PYbXN
QHGvHtT/C1b5Ni342o/6R0zG+ajzkAy7vtTvDFuUtbHdB1D/Nnjeo0d+swZR
/yk4e/Gtuxr/+hVwR/aM/Q3UJ2mHG3sk9ZaYUv+wKRivk4XKa1bUPw9Wvf6e
dMKX+rfApx3vcqVHqD8NXvy4Qr7pKPWXwiuHf7ZWJVF/GzwzYLuD6jj1D7bB
+qjR1peT2Y4wL2qtfHsK9W+Cl+T4iO6TRVL4ipv++PnN1H8PFjuez4qi+aDi
M+yWtHu97RTa/42mqvjvp23M/0jjI3cWXDG+2SyAjufCDbBVVe/GdU3Unwxr
j7k1+DLN1+TFcGpTk3Ef2t/ULXD+f4EXJpA5BrZ/ry/ePrWUxneBPaw+dtPX
kywWwaO0d5Wsp/mR7Cgc/VL56sdD6r8NL+/Ua0wdmf0Rnjl2xtONt6l/AE/F
H/7UZvRvmu+IpsM6YYIiGY0XUn+Yc/Ppy6/0ehUJ8Jeuh358J7MK4T4LvEpH
11P/e1hu83TnFzr+CPvxVfzioKJfDh+onwe7eoVVnybLV8OVc/OaLpDVh+HT
QR0zrpM5N+Bj2x//3vib+t/BGQm9qp//ov7e01T8d69fJtvTcpkNbJgvEJmS
6/zghurAQiWNv+xDsMXCQ2OH/Zv/5MPPSpKvbaHzAVETvHNZh2YfExr/2dNV
/PWCKZfqRtD6t4arsnNyx9Fy1gq48GL5PEsLGv+j4TM9zoeMGEfj/1V45aNE
jUx6vuQV/Knt0dNo+n0HuY7d3+uLNkUdDGj8nwCbf+q4x4JeD2c53Hf43Vk9
jGj8j/q7fGMF+/4AGv+vwPHnEwLz2TT+18H1l45a6vWh41+3GSp+gfmyKS50
vGCPhw1bd/GKzOn45wXfMPs1Xpu+Py7aB4/Z6bNiHX2/XJoDr9GyMSum758r
auHIHhYRJ2k5q6u9it/5RbHgHplrAWdJ3yTLhlD/Eli37sIiJfVIIuDkn0Oy
fpDlMph/svOhDJpfqZ/DrTtZaVI6P+B0mqnin3s+LkRK34cXmMF7GvQmJdDx
S7wIrhzT9/y1f/P/nXDWTKfK749p/Z+FLXruvHibzhfYVfCR0eE2uQW0/js4
YPupaZiRfZ22/zFwQISE1esmbf8L4ItdhnX8uIS2fzF8L+qmg1kX+v2DLNgk
/OgIAwv6/YencG+bwPr15vT7D39gQ4dPhg3D6fcfRs5S8QPLuBN+9Kfff3CF
zb983vN1Kv3+w3bYsGHfRhMb+v2HzL+eVVi9ejz9/kM5vN701vsIsvgnvKa2
g9pkEv3+g/FsFX9GxgunAGPGdQL4Qi/BM13699kh8Gct+SG2JmPeSZg/esUV
9vcTTP8jWDW005AxLMbS77Ch80kL4bvjTP/QOfj72R/GLX3FmDUPfhi7X+dy
A2NuMPwsdvaBjvWMhanwI+GlvpavGUsewHYufUdM+s1Y/hUuPRz8ZsE3xmqO
I+a/ztO6bG5hzJkDb0/f3m/Ze8aCjbC5fFh5FP374hNw6pMRWd1rGcvuwrf7
PXrX+pxxXSs87LChr2UNY/aguTi+F258tIzMc4CNhg4SzKxmLFoPK/KfvOh5
k7H0GCy/7F9Ws4b6i+AQV73EBZ+Smf4WOOX971GN7Yy5A+ep+E7KEO6od4yF
M+CEpJFN154zlgTM+3u9duUkt4+M5UfguB4zRBp1jNW34NUu06eOJnOa4ZjM
JRmDXzEW6DnheL/i63AVLRdPg31T3nwuIsvWwo/yy1SvXzOui4ffz2h3HE1m
34R7GQXY3HvGmKeC59X86nQ4k7Gor0DF7zqs/supM4yltvDSNNOc/CzGilWw
Vt/cnKBd1H/473Lf0axxu6m/AK7z1YnZuJX638Kd/RdYm4qpv5czxm+fotG1
O6h/Ctz3R6/6LbRc7QtbFe7v1Y/MiYE3val8tmEd9V+H5RyF7+/V1N8ImzQ1
qJ0CqL+HC/bvT/GTJ66l/klwn2fbSqy8qd8H1pm2Z54dmXcQti+2+e/wMurP
g28fbX+XLqT+Bljo7VfTTo9XaLuq+BphH37ObTjG9E+AN8y72GBO5i6DlWWB
xlNqGQv3w6dO+KzyJUsuw4OmtZ1sKGMsfwlvZO18v4+s1pqP/ZndNnj2AcYc
S9hc+oF1O4qxYCncU2dr92IJY/FeOFPe78MysuwifLbfqgszyHU18LCYoLLt
mxmzu7hh+059pTVhPWOeOTzIs9bEOICxyMPt7/y5W2wnsnQ3HNLJ7+zbVYwV
5+GDe5Me6K6m/udwjy4F/G+0nNtxgYrvkR8WcI0sHAsLDzlu60yPl7jD50KF
Oim0XB4O74k603zQjfqz4dl+pw2cyZxKmG+0eHTAbOrXWIjzq5dRnH6zqH80
PPPM/A/HZlK/G9zLq8PsW3rUHwZv6bSui6MW9Z+BWXmGL56zqP8JrHAdk5bV
nsT0/4ZVg4/5XlEzlpq4q/g15a5GY1oZK1zgeX6FH798ZszaDlstGSTRbWPM
zYB/mqy5qKhnLCyDHbrV3vAkS37A02SeH/s3MpYPX/T3eO0e/pGWq53gtG4G
8X7VjDlb4ZbX4tHznzMWpMOv3LfznxUwFj+EnRObrLbfYCz7Bn+89aSL5m3G
dUMWq/hROmHTWs4yZs+FNyQ90WWdYszbDId3Xrf/YTr1p8B6up9W7j9B/ffh
e2n8y7nHqf8LvLi4pNPmVOrneODvvRhx5LKU+mfDyRlnZb2TqD8IXh3GksQe
pv7jcOud9uzYZOovgU3Wn1ndmR6v/gRrfrQ4/uco9Rsuwf7Q+2a6Ji0XzIQn
elR89Iun/kBY/9fJQdPIsiRYXPVpuWYC9d+B9yS4/vlAy9lq2KL1aeB7Mk/f
U8U3U7HTB/7rt4N/Vqp39jpJ/evgsU5v/BfSckUibHt5gNtDev9Yt+BAwwNN
u+nx3A+w5n+zPSzIwv5LsT/lqvPK6PkSPtxz7s8yd3p/5WvgIDHP7FEe9cfB
x2avDH48hbZ/OWz2sHlxrh1t/0q4ePD72yPm0fbfxwvj/dR6voz2B9lUuGJ3
/Aov2h/qVsJrHizq6DKDtv9YeOSj0k7/xhPef7B9ds9LEhovRG/gm2PV70Vx
tP/3FGL9VAhDvRNp/58M73aTH5Uk0f7vC28Zm+i7jsyVwDfaTnxsoMcLr8G2
1xM7epElr+HKfef6tZHlusvwemJT3HxovFZPhENqjE/o0XjO8Ybt43+vWvhv
/D8A9zKrml1Oy8W58OahTkOn0PFCVg/LEg8bvvSl8b/7csx3fA9MMfOh8d8K
1u80Z95MMk8IP6qKWdUcRON/JDzsku7Cr9p0/L8E+55rP2W/gY7/L2De7mdn
c0Q0/9HyxvElqElvKc0fuOPgH2H1iguVNP/xhHvWCi69oPmUZA/cj6uMXKvN
WH4BzhbMvOz+h+Y/1XBLUNGG6ZrMck5nHxV/QL5hp8qBjAVcWDdw8rVWNmPx
Ynjm3rypo/QZy3bBuY6+hbE8xnXnYL0BWz90t2fMfga79Jj7LNqBMU9zhYof
9mT7nP7WNP8zhUOeOLqG7aX530KYK0l5zTrJWLEDjl7tskScx5iVDQ+PPf9h
zzXG3Ap4o+W5Hn+OMBayfLE971Ju46dR/yg44n32Aato6p8PX18Z2aFsNWN1
KDxy0lS11zLqPw2POf1cp9aL+h/D468OcWx1ov5fcHA8q+s5smyEn4rfJa/7
Q8951O8MH+93P+MMLWdvg9eHTxyxk8w7BWtznt2etJD6FbBpxpQzO8jSdjhx
6ezYO2TFsJUq/jdxbvVgO+p3ghNCRh1wJ3O3/LXdsZzO06k/DX69xKhqwjTq
L4XjrbolePKpv+2vTW7fOWpD/YNXqfhrXasMNOZSvyNsb+W+J5TeD8EmWOP4
V4/Vcpr/S+E9hxUFjhPo98/uwYcaxr5VWNPvn32Gu9SYuvWh369jG63G+HtL
y8bQln7/bRbcQW+LeZAN/f7bBviX9/dDS8nSZDjHLUlsY0q//1YMc0vORxqN
pfOfT7DspSQulcw1WIPt51f29BVj6Pff7OFl2r8X+pAlIjjPKkXa1Zx+/+0o
nOkxRtSNrL4NywreOa7l0u+/fVzz93z6ZsVu+r05wYC1OB7d2++2lyyeDmvp
KBq89KnfH9Yo3zz90C86/0mAufk65298ovOfQljvqe3FkWTee7hf/NFhAS2M
Rf38VfwT9hccN6oZS3nwau8xe30fMVashtPuffw47RZjVhx8tWLp8fO36fzv
BswPfvwohix8B4/h9/iQTutL0nsd5vtH+j5oL6DzPxv4XNlCu/AbdP7nB2da
FvpbkDmH4Ig2V40d9HhBPtzmvvzJYfr9QHETrBwxzbyc/j0ZOwA9U8JLdAup
3xrO6PSk03X6e+wVcISJceA6+nu8aHjwcN8ZR2m56Cq8sNPA4fvJ0lfwIcOf
E7rnU7+OCNvrtIb4OfT3WRNh71PLRe9uUv9yWHl25Fh3er4wCnbTmjvz1FXq
vwI7Rjf0U5DldTCv6dq4K2R1t0AVP7L31OY5ZM54+JtjzXvdPOr3gq/3HBsz
iyzeB6+ui7YW51J/Dqy+NWF5MT2/rhbe2zX3gj09nt11vYr/NbXroEn0eJ4F
vKX9bUZ/smgJvKMkdbn7FeqPgPUGL3hlScsVMnjRr0Mv0smsatjB9i4/nh7P
7bRBxR/IOlL07iL1m8HzbIaI95Ali+A5yzLu+JDlO+FJv87k3yOrz8LPJbqd
H5A5VXD97JK+DWRBhyDMF/7sKs8li8fARqxcn8tk2QL4LudR7eZs6hfDXOfM
7XOyqD8L1nHJsxaSeU/he6nl73eRRX/gvX4JA+/LqH/kRhxPLOXpTWSFK/ws
YZVGFZkVCgf1LvhxgszNhEs6iZaVn6f+cnjggrQNj8mSn3DMnS1XE85Qv/Em
HL/NDKNcMqlfAOsknVNbS6k/BF6TXz5lw3HqPwnP37gg4HYS9T+Cu3iwflw9
Qf3fYVbH+nWOydQ/dDNeb4/dXQ4eo/558OKfm/f/IvOC4U6btvxRJFJ/Kuwf
6DguiSx9APeyDagIPUz9X+G1vpO8O8RR/+BgzI9uvjRqjaH+OfDcb8+HtO+j
/o3wUbuyj6wd1H8C/rb1eS/WZuq/C+uY1Jav8KT+VnhW7y7mVaOpf9AWzJ9+
/HY2Jgsc4L6VL17IRlH/ejh/p1/xsMHUfwwufD1grI8B9RfBrFeXq/r2o/4W
+EvitO6hfal/4FYVX/CgdUaVJx3/ZsCn2388P/uF5j8B8PgRLwddSqb5zxF4
qCqowTOJ5j+3YdthNVNWHKH5TzPcvaH4e04czX/0QlR8v6d3ne9H0vWfafDa
7pwn/nvp+s9aOHXVgLzsPTT/iYe7jdZuEm6n6z834XuLrprlh9L1HxWcKzdy
OC2m6z99t6n4H3L+q78SRtd/bOHi+79TJ9LyulXw1a9Dmizo+ezD8L37VZWp
m+n6TwE8MtO+5uRUuv7zFtYWRW8Kt6H+XttV/M5aclfpFOqfAi9oSxkVwKV+
P3jyu+2r0kZSfwyss+nbhXw96r8OJxmkm5WTJY3wiJSD4Q/J8h6heDwr2HGE
AfVPgjMOmemdVdP81we+NzdI4yVdLxIchCv4C+pHkcV5sOvpq5GDyLIGWCuw
Nf7AQ5r/aodh/NLkOFmQ2RPguUMO/Xq9mea/y+A3nSRJGito/rsfNuGarncg
Sy/DJy9yFNo0X1a8hDuXFAcssKPrP93EKv6D0fZvftvQ9R9LuGFFx8ZOU+n6
z1K454sXMa6T6frPXtjAN7HGZQpd/7kIH1x6xL/Qgub/NbD+Fo85cXzq77JD
xf90P6OkI13vEZjDoctH1ZT8m/97wMPy363y8aP+3fCLHuwHmeS687C9llFz
XA/qfw5f+PywR/1Q6u8YruKfquz0RzmM+sfCRpvdS1uGUL87vNfaNE9OVoTD
3speSktL6j8Lp9wqtjtB5lbCPfROVp6eSP0aOzE/Xpb02nQf9Y+GuTeuhO+2
pfXvBi/KbjC7Qdcj1WGw+7JlHqlkzhn4W9Px7cMKaPt/Avexnl46+QZt/79h
njb3xYh7tP2b7MLr800w8JlP818XuODMW7FoCc1/t8PpFz5M9vam+W8GfDpa
LfroTvt/GTzYuP+OYLL0BxyWP6Auv5b6h+/G+GIf/bi4J23/Anho+6IvVf1o
+98K/6iUlUkG0PafDntc91+r3Z+2/4eww4izAaaFtP6/wV0fdu89Np/W/5AI
Fb9MnL7TLJLW/1yYPadVd2w0rf/NsMjXZ9WsPbT+UyL+3k+8Znh9BK3/+/C5
qlvvjpLrvsAKd6/Sk2Q2Zw/mt3f8UzLpfI83G5ayR3CnbaT1HwRbZZS3zaZ/
X3ocvtkxuCSanq8ogS/OvzPgNa1PVius3bo2gEWP5xruxfbrmat3P5zW/0w4
9HfEl5u0vUoC4aiSyLW3yfKkvX+P308dTvtT/52/yz/UNi8mc9Swhr5TT7sL
1K+/D8crpSWvMIf67eDX1qtMFl2m/nXw+MwxC1uuUH8ivOfsboMgMvsW/PVs
nWl8LvV/gJ0G3rv86RT194/E+F02Svgznfr5cJ+044Ms0qh/DTw0PGG8VRL1
x8Nvj0xuuk7myuHNIo1blseoXwkrfJwu3DtH/X32Y/vcFhFUQpZPhSPMPSo6
36b+lXC674oF6+j6MycWvpFfGR97ifr/g89YJl2edY3638Btrx/WTqIeWc8o
FX/0kzVZZ29R/2R4/Va265271O8LW2TccBHSeMiTwAXKFB+PR9R/DW6Zdt/N
9TH1v4YX+02dOLSI+nUP4PirMzEptYD6J8F7iy41vC2lfm84STLwuDFdPxAe
gMcvLx1e1Ye2/1y4o/OLsCkOtP/Xw79aLJ6OXEn7f/eDKv41ufa4+C20/1vB
RXeb2YZBtP8LYa9zxywGkcWR8IevYRlFZNkl2Kbu1aK1Z+n49wJ+z2JPm0DX
C9ha0Th+ZQdn3E+m/X8cPKDPdM8ZhbT/e8KT6x8sEJKle+AuGzWPu3ym898L
8LLfm1KWDqT5Tw187muq7TYyt7Pk7/28308VO9P8hwsnhz/Z0Xs+zX8Ww212
V8P3kuW74Nmbj5jmhND85xxsuqtFV2crzX+ewVHdNnSJIQs0Y3B+dd8pKiKY
5j+mcPdXthVfQmn+sxAu4pw06xhG858d8OWV4boDyexsOG3upm8Smq/xKuAu
FUM4ryU0/2MdwvHgQ/3rcbRcOgoemFgwvZjmn4r58K/gonGtZFYYPOxpYeQP
Mvc0LB3ySC+dLHwM/454NTWZLPkFbwm+FJVO81X5iFi8X9uCPxST1c7wvlr7
Euc06t8GH+tnsmUuWXAK7r9RbmSWTv0KePkMg7lKWi5rh+8ZvuuzlJbXDTuM
8zW/jQNPp1C/E6zZufemXmTeFtj5+xNfZSr1p8EqY5uQf4+XlsKbjCOKbcmK
NpizeKG5HZk1JA7nm9vLjT3JXEf4ymPvzp1o/i7cBK9v2y2po+USKTxw9xB9
yb/5/z04YKnbybX0etWf4Q2TR9zbTeYYxWP8mtGUOZ4smAW3y224V+h8RbwB
Xml9fPhdOt+TJcf/vf6+t2IZ/f5+XTF8tEE44dxv6v8ET9QcHm8zkK5/GCSo
+B8nT3R6b0TXP+zhRzmR+TYmdP1DBIcO1D23cBxd/zgKfz+51HGTJV3/uAO3
PO6WsYP+ewDcj7D9T6/6zTPo+seARBX//tAnfWrovz8gmQ7LZin6R/vR9Q9/
uNS4uNM/qxPgB3ecmxU76PpHIVxrt2tPYDhd/3gPKyyPtbnuo+sf/Y6o+J/3
Srhfouj6Bw/emWhpHJJJ139Ww2YtM6/WpdD1nzh4mEXi8yIy7waca7xZ1OUC
9b+D3eb0/FF2mfp7H8X2ayfotLCc+m3gA7Ne8IfSf5+BtRLu85/q3GRNuv/j
EPxn2vr8ELq/SJgPi9wUnA2WdP9HE3zN+7VAbUb3f7CTsL0UF83+YE+f/1vD
nOFP1g+n+7M4K2DF0cBzI1fR5//RcEf9Ae9urqTP/6/CDhH+82b50ef/r5L+
3k/3WqO3I33+r3NMxbfrsy1Z5Umf/0+E79r17avjQ5//L4dTf7Kr3dbR5/9R
cCvf3rM4gD7/vwKf3uKVsp6sqIPfZRfU/A6k+1+6J2P78ovTzV1P/ePhhZus
38yi+9mEXvDKukaVhE/9+2DRdtdEbbqfQJ4D39bTqsin+9XUtfCN8KTBs8ic
rsdV/DsprAMrqU9gASfdHvC4JIT6l8Cc80e/ff53/1sE3DAszPLnQeqXwfkq
4d5//z0CdjV82HfzovR/9791OoHHnylyeG1A/WbwHu0A0U26v0y6CL70XbT+
3Hda/zthK62PvV7Rfy+EdQ6WaPxIHdFG238VPH/N4KTt9N8PEXaQYryf4jqj
aytt/2Pg7LuTJ99T0/a/AK7NaOZoNNP2L4bjWw7uevGTtv8sOMfeUTOb/r7g
Kbyt5Vir6Ufa/v/AdzeMdT/ymbb/kSnYn+LWCn7R4+tc4XG95x8P6kj9oXCa
967DLvTfM+FlwvFLtFaUPqLtvxw+bHrAZlwNbf8/4aSYtbIbZIVxKuajsb2T
lP+zdN/xUP4BHMAlkUpOFJWkVBqqa9BS3aFF6ohQitJOSGmpSJE27SVSMosG
ZUUZLWVGRGlpOLoSWur36ffx5/v1cHefe577Pt/v811VvP6t4KEPx2/0LWN+
b3jmdHnrh635I+DzBRG3fPR4/vPh9/uHtDwcyPP/A9bMzEq/xOtRpncB10vJ
3lc/NvP8z4IvPLDXfMjzLdkEHz6QNG5OM89/OKz/226fLceLJ+TBthOzz/Wl
q5tgY+2a0Fe0oM/FWnHRrPiDdfx/kQXs8H3tJG+OF/fwgoe+HFC1jeNpw0Lh
v48UjK0436HgAfxbNCviMscXyX27+O/63NrrlhbH/+hEoL1Qo55bSjtPh+0+
vOn3qHX8jyfc/8YvK4PBHP9zFk6J9bWv5vwMWS5clvtFzobjKXW/wGvFJbUn
cnn+e15C+ygurDmK4xN9p8BxbzYcSOD4xAR3WDtszIQ/PZn/FBxsMz/3BS3I
hvNtXj1rx/GYovpL/+qHft820h5akbXi+PHth1YKef2bwOkbvbxTJvL37wrP
sri/UYPlldwJ2PdCRV28PX//d+CHNq+VvObz918LK+2e2WXPUp7/rlG14r4f
3unm8/ecORlOPTS8uAPLD9lKuHeda7gKrXsUVs3Zk7VvPc//bfhdtnz8by/m
/wBnT7qww2Ij83eJxv16emndeLraGC73kSu/sJ35l8M7LVu6D6dFwbBNcd+f
LrRHKqz25NVALzrsHTzRoGtp6/VXoBqD8qSgZXeeH/OPh2fcOuxWTwuXwLZr
wq+sbN3/5CC8vCbx3cV9zH8LVv6x9p32JeZ/Dc95Vb7PkJZ1isX1Mu1UYBHH
Z+mOgWN/mWYoczyWZBG8VCmgcfhD5t8H522e9G4enZAIL7ZQjQzk/Jjql7Ca
+qkjfzk+UdAhDveLqUFLe75j/tFw6KcUO1/aYyGs0iHt6AXOjwkLhHvcvOFe
yN9HwTU4dextk6Gnef1XwfcXjfo79D2vf6XLqM/UvZ/pQDuPgIc4bU8Lo4Pm
w+875Soc6cn53/5wuwr1W8UDOP87Hs4r99vzRJ/zvytg9ejOPWWTOP9b4Qru
31M+fk015vzvYfDCRMHSblM4/88ebm8rlFZz/nq1H/xq0h/Fy63z3y/DG4Rv
Xw5cwPl/ZbBprw33V6/n/L828fj9jtw7X5MOGwJfMdkiv5cusIXLs2yjHm3m
/Hdf2NFw4qkPtDAGTmtevb2Gdi6J/zdf/5Sivzfnv/+BJw1xeNPGh/kHJiD/
cZXYHFpmDfcT/rHr5Mv82+Crc5cfnkRLIuGIMYcdNfyZvxC+sC3m4+jW+f+/
4A2NI3470NX9r9aKV94/N/4xLZDAa043npdmMv8WuPiX9pnibOa/CCc3v89Z
m8v8T+DKDrN01z1g/u/whQ3eLl1oOb1rteIShcrd3x8zvyU8/+sAG90nzL8R
rpaqej6ng87DFu76WZufMv8jeNJkz5kutKwRVtOt3itXyvy61/H5OvTqmM7j
EnN4dsfCmtIPzL8efhG4MEFcx/znYP2DOYKn9cx/H76oee+jrYz5G2ADO72Y
zl+Yv9cNtAdHjBy7vy3nv06Dx3cIjvgmx/mva2/8m48bbdZXkfNfz8DL1nf/
PlWF819z4e63HAaIOnP+qwyude1iYqPK+a89EvH7eRLy05vvH2QGRw39fM1D
yvxu8Klk7eYfLcx/Eq6u9Rx14A/zZ8FjjRW/HVLg/Nc6eGDi1ekaapz/qplU
K/ZOOBryYijnP4vhbuE/3hgZcv7zajjG4raLujXn/x6HC647P4zgfGBRJmwy
4Y9gKe3xCbY49HiLJJT5NW7WimUXB3TadJX5J8FrPuhte5jA/CvhiZ/nReyj
hUfg1Ym29uuuMX86HJX6SfbgOuf/vodNTZwO3orn/F+1W2jvjSv9VUzLJsAe
Imn57huc/7sMzph48tVnWhIEf4hr2Loik/lT4DEpxzboP2b+t3DpXtuoZUXM
3zkZ928rE/0ptGAcHJyaVN5Ci1zgbUaxj1WKmf8AfG2IbfDDeua/CVsYZQjz
6YJX8NwplSbBnJ8u1ykF9eWTTm5XvzC/EXz86J9RbrSzM3xiuGKk8TTO/94L
Fz2r7G3G9Qcyb8BR2m3++HD9BNkLOHP8wBBdJe5/qJyK+13bKhtjWjIKrnJW
a7ljxP0PF8D1TrenvzDk/oe74f5X+rw1HM/9H6/ChwTHLf+O4/6PlbC5+vG7
mVO4/6NiGtoTt1Xtyxdx/0chnDm95tgPF+7/OA/upmsgGLqE65/sgmWSsftb
vLn+STzsiEaw+XGuf1IOHww7u+vPBa5/0jYd7b9rk5Pdyrj+yVB4zi/VhQWt
+1/awUXt3bJHPeX6Jzvgqyusy3YUM38cfKG3oXilIvf/LIVPhbaUjuvA/T/l
bqN9IjHpeUKT+38Ohsfr7em7Qp37f9rAjm9SFGoduP+nDzx6qktf9w1c/yUa
9klffKdxK9d/KYaTFQSPTY5x/ZcW2PR428Dbx/93gX4G2sN5kye0o+Ws4b2p
niPPRP5v4VZYsm3Pipur/rfzJdh9hbFGnun/DiqARTZj64oW/O/Mn/B6RYtR
ecv+t6xfZq140Mtvd6et4P6ns2FhcPaNujPMvxmebmDYOW0N81+A7y7f1i+Q
TngMexkcd1i/nvmb4RTLigaTdczf9w7Kj2LPnCoZ88+En4eP6TT8G/NvgC0d
j7nrVjF/GDzjZ21t/HPmfwh/HetcfeoX8zfCHsZhgYv7c//X3nfRHuk4PaN2
LPd/nQGn69oe8qGD1sFW6UuslETc/zUEbudYXxFKy+7Bg3f0j+wt/t+6X+Gs
4l8aFiZc/0c7C9dH4EgHKe07Fb7XYudYO5Pr/3jAE4cMtr3vw/V/TsOHLaZ/
1fXl+j85cKO7xXO16/9b9Bn27WfROeLG//bonl0r1hu9IOzoTe5/awprvb9+
cGcd979dA9d1O3991Tyuf3QSFt9zVp7N9ZGEd+HV77XeSf24/pE0+996Erua
Rx3n+kfdcmrFL62HlXQ6x/WPRPC1+08MLfdx/aNVsP2LoceTTnL9o2Ow/9i1
gwcm/m9JBrwk+lL567T/7fsR/tMp7ciBov+doJ6L31uT4pKmmv9dPRE2WOV/
6wgtWAHvlEwJFv3g/r+H4X5R9/UqlP5fD8ojDVaOlA4YzPWhwmrgSOMjZbc1
/neB4B7aGxtU8zMG/2+5CfCv+EsJm4b/b+HSe//qN42XD474386H4A8RfZtj
Dbn/cTKsnj10nosR9z9+A884WC/5LOb+xyr3cb/W/fIjhtYdC9sZ/gpuMeX+
x4vhcZprqnRmcv/j/XCT/9p3V825/3ESXHV/7zAJj1dX/7PrOV9bC65/1fEB
6uMuSs/dZnD9K0O4xWJOSm8H5neCyzaqq7f3ZP49sH9Yg6rpVua/DkclhWzo
t4r5X8BhzodC3qxl/vYP0V5LLemS48X8I+E/v7bFrdnA/I5wtzrPrFF8/cwA
WGox4HFWCPMnwEMXq7ZPo3Wfw++uZ+y5SEvaPUKe5GviYyeYfzhc1r35qsp2
5neAzyz30Vtkz/w7YWOp1qlxEua/Ase+OLbfnRY9g/3vaBuVTGF++bxa8ZG1
Xc895fkLM4Dff28IeD+O+efm/etfuX4pW5P5d8BLWsbO/q7N/LFwldZol5Z+
zP8UftuQNnKvKvP/hb/tL4pymMT8gx7j/qU4rVmb51c2B54SttRaj9bdDlf9
PVRgzutBEgUP7HXHrJnHfYvgJtGsbp9az/9vuOKQV1O/Bcw/4AnqF4X99FVp
gRXcdr7bz1on5veGzw+oVj3jyPwR8IiK7Z3q6LB8+HnJuiETFzP/j3/HD5Sv
mELL9cuvFY/8Ll94kRbOguvaL5l0+CTzb4L194TnatJB4XDgtEjXlGPMnwdn
h8asuXia+ZvglLyEfdWhzN+noFasUXhsumI481vAHtNMap9fZH4vOGTUgSb5
1v2/Q+EbhmPKfa8x/wO4/Yz6/uOuMv83WP+lXPlSHhfpFNaKXWJeelbzuMd0
eEHDEblfd5jfE1aaYmhtUcX8Z+HyHrv0HF8z/z34nm3LXO0PzP8F9v8zcuuZ
j8zfswjl+cDYLh1qmH8KfOlNbNOi98zvDj/xDjIYyr+XnYLPbt4dPeUt82fD
arlfxgjeMX89vGrvmg+9+Hl8tYprxcNcru+oSGV+E3hNp+AVKbHM7woHqSWf
PxzH/Cfg+OYv529FMf8d+HDkzl2r+f161MJJRk9M6/h9hnUtwfk+vsknMYH5
J8M7RgaoDuLry62CW3yL9nUKY/6jcEin7un6/H0634a7Hvz0dd8p5v8AP7Qd
uKrdXubv8rRW/P1zcvS5g8xvDPftcTtWdx/zL4ebpygcSw1k/mC46WbpLJ0t
zJ8K90h1bEyhE97BO9TPGl/ZxfyqpagPOok7TuT/C8bDy2+90dTmcdESOFSm
9agbyyOPg/CFWTGvb69k/luwhtIv1ZM2zP+69N/z91u5FyYzv0oZ2mfxBi2K
45l/DDxapud8heWB8yLYuUTifaQj8++DK0oSlZa1Z/5E2O9e8SPlr7z/vYT3
JMfsHUTrdniG9kvlxo+u33j/Gw1bDbvR/iXtuxB281uxPIn3t4RAuGh+57Sr
1bz/XXv2bz6RTt+ict7/qmDPvL7nU57x/qdUXiue/MeoY85vrn84Al40+vTz
yT+5/uF8OG9Y1Pnp8szvD69aa1low88nlwA/eLRK/RL/XlgBb1Zcf29CPe//
ChUo34t9m3rW8f4/DP5rdzhMTGfaw+e26b7ozM8v84OfZN9ve6SU+S/DthdX
vPF4yvxlsNyRsoy0+8zf5jl+HzNMs85+Zv4hsNyQxXbnZcxvC1+o91M4TAt8
YZeCtgZfPjF/DDzccNeKVfy8HiXw2n6Kt8bw84T9gYWHLCJeSLn+48BKlE9H
/E7ubGb+OXBhm46di1ifEG6DR89vCo+knSPhe58++bt9Z/5COGvm9TvD+Xkz
f8EN9XMNL/H9Zf2rasXyZ+/a/HjP/BK4X2i0kc0b5t8Ct+80bunEV8x/ER55
Z0bSOZ7fhCfwNfl+Pjl09XdY1virb5u3zK/3AvVjrdDuH/l9iixf/JsPmS+/
tYz5N8JbY3INY/n9h52H/SL7fYigCx7Bwmt+qdZZzN8Ez1yrl2Z5mfl1X6I+
0/n5354ZzG8O/24OfyJprf+th48uEG4+FcD85+CRTpohP2nZffhWwAj9K8OY
vwEenn9pfBIt6VWN60n6paBhFPNPg3ccrc2YbMH8a+HlM+PcfGcx/xnYeYt/
0hceF+TCKTMt4iZZMr8M9l+eM3uuGfP3eIX6/fZ5mWlcnzPMDFa6+stjkjHz
u8FP20QNGjyN+U+9+tefO7zXPjHzZ8HRDWs7txvD/HXwm4LMPR/pIM3XuP8u
7D7YnH+fKYYdHEvOfp/M/Kvh5K+DF9a2Y/7jcEC5q+thZebPhK+rLbCfo8H8
n+Arv/U9HXowv8abWnH3e/EzF+kz/yR4zNaavW1owUrYcfvXZuvuzH8Etnjy
fOimzsyfDndJ79l4Ton538M7DwkLnn1n/V/tba148V6V5x0a/recMXw0+0j0
DBnbP8vg1/4Oholf2P4J+ufbNqsm1LL9kwK7e4ScivvM9s9beHNVmGMD/17W
+R3aS2UplpFf2f4ZB+fqd7A35/tJXOCp7z2OjGpk++cAfHtSmfK+erZ/bsIh
L3bXiOjqV/CUgYPse/P1BZ1qasXhyxrGl/H1RUZw44HdF1vfz8MZLix9PSNG
yvbPXrh9jZt3LF1wA76TKJ7t84n5X8KBFQsrdWuYX/l9rTgn3P388qfMPwr+
YRP99B0dtABOs4i87vaW+XfDNYlHDhi9Y/6rcO7YrXMLqpi/Eh4l8iw1e838
ih9qxV/kugc0FDG/ELaX1sw1K2b+ebDMx/fbkkLm3wWXdldMdKMF8XDeKQt1
Bf69qBxObZsb8SKN+dt+rBULGpT8vrA9GTYULjMedCNehfntYIvPjRVt1Znf
DzaZs1tpNi2Mg/cPG2V6robt/1I4rPJZY9BLtv/lPtWKZ01oGNH7Ldv/g+Gg
yiTNvsVs/9vAIq2y4G9FbP/7wCPfBZ5cksf2f/Q/64w6/+Ih2//FcISfxGdz
Ctv/LbDmh/rSnrfZ/tevrRW/6Bzf92UU2//W8EaFbMentGgrfGfNEJso2uMS
LNAc7216ge3/AnjtX0l/Z7rgJ7y4e9ejh2m5/lL8Hp8tHvg+nM8/ZsOXrctG
Pg1j/s3wp6x2+vGhzH8BDos2SxpCZz6G3YPdzA6cY/5meMx81/NLTzF/3zrU
/ytranrweYxkJrzPp3FH03nm3wDfzDmfM5ROCIM1628PsFjN/A/h+AvRG4fw
+YqgETYte/Xo+Urm712P++vWZeVWfN7iMQMeflIUULWc+dfBev79bgmXMn8I
/O7pl3aDaLn7sJ9eY9NmF+b/Co82mTF/1zzm1/6M+/1o5aWb6aCpcB+zm9YS
OtMDjr+nUNaBz6dkp2HdFc9Lplkwfw78blTq+aQpzP8Zro2McezN50m+3WW4
HpdtHWQlZn5TWPjmWK4qj1evgUuc33lqCJn/JNzjtdvu3rToLvysefPq4AHM
L4X3B6n2mKbD/N2+oP0/d9evk3y+ViCC541Z4resG/Ovhnt1PayrocH8x2Dz
Z227mtHOGfArJ2lppBLzf4Q/9l1ycTaf52Wqf60V77qkVhfyh8//JsLveq3Z
Y97E538rvv5bv3f30TnVfP55GG4qnnr3WwWff6bB1jEl2Vo5fP5ZAxd7pm2+
+pDPPwUNteJMi0Xu1rRgAlxTUq4/JpzPP5fC0XoR048d4PPPQ3AX3W+fn3K9
5rBk+ODDj09+1fL55xv49ZVvTxbJM3/nbzifqgdGjGQ+4dh/LuynZtqafzH8
ae+xVBs+jwzaDwu0c2LNzJk/CV6ZpaVwz5Lnvxo+dT//lZDHdTs21ornL8nY
vnoCz78h/LVn/xuuS3j+neDrt9unOvL6S9gDO7ueS6/15Pm/Dj/s3DapaRPP
/wv4kUXi1Mu83kTtm5BXS8PKmL8Hj5Gw+ZntlUm8vsMc4XHGtoGVfJ5ZEACv
OBn/d8425r8K7y7ppNGuD/M/h/W69Exb6cfnv+2aa8XixOh8AzpoODy2zmtt
jBuf/zrAkzbZppq78/zvhIXz4x+uH8vzfwUenTN2zWgRz/8zWDSqTiNiMs+/
/Pd/z4P7ZanQCQbwRq3ub7cb8PzPhd/+VPG9O5jnfwcsdnp278Fonv9Y+Gq1
d3Yj7fEU/hz3x3iaFc//X3jL7AtNKeY8/4N+oL13ouWsznQ+/7aBFdt88hrc
k8+/t8Nr1g0e80Od+aPgjm0frNzYm/mL/vlA5flpdOZveGZ0bvhLro8sG/Cz
VmxgpjljjwLzW8F2h/80uf7h+q/e8O1ktdnO8swfATf0XLU5NJfrv+bD4ZVz
5w6P4PqvP+Clwydp1odz/d9+v2rF2SNX/+yznev/zoLfbB/9N2ML1//dBMs8
h65PpsPC4ZqPzR9O2XH93zx4WU5nlf1zuf5vM7w47mRFnTnXv+3zG/eTW8fz
ag25/q0FbBGyc8dzW/Z/eMFbUtYvqJ3N/o9QuGh1Uf0SbeZ/AG+eq/jaW5Pr
336DfxzQ6/i3J/PrtKD83r5EtFmL699Oh0Oi9T72bF3/1hNWeb55Xu0Z9v+c
haNeNHdzOM3+n3vwuC+qg8J4XPQFPqi9++Hbc+z/6fkH9Qv5VTfiPNj/MwV+
nzjJqO0M9v+4w2MfC46343q0cqfhA8MctinQwmx42Bs3u7v67P+ph7M/PDu4
sz/7v7T+4no1360XQGeawMbPMj9567H/yxVWGKJ8w6AP+79OwNZZ1XPm9GD/
1x14YGftx21q2P9ZC8tJV2rceMv+z65yUnFV54FJ76PZ/zkZVrw87edSWrAK
XibLPj3kPPs/j8JF4o+7/Zax//c2/FA/xrL+Hce/fIBVZY3K4kvs/+/SRire
L+56+AfXq5WbCLdXTLxpHsr+/+Ww0/j5D9WC2f8fDB87fGblhyD2/6fC9vZq
35b6cfzLO/hhwp6RMXM4/kVVXirObjKf1NeC6/+Mhwery7/twvV3JEvgecoH
f59sXf/uIDzw0ZC3d1rXv7sFp8tc23z7xvEPr+HSH9e6jeD4BoFKW6l4WEHl
cXWuTykaAytM3z6hMY/jHxbB9iq+G2JvcPzDPnjel4v+ZfEc/5EIK2Z7hORx
fU65arjzQHvRFq4/JeygIBWPy4jbNoV2Hg23PZhQYHqd4z8Wwp8nnJXXSuD4
j0C4tu+A0+O4vpzsGjwp5s04rRCO/6iCbdcd7THqLMd/KLWTivsWxhyNPM7x
HyNg1Q9fuqqEcvzHfFg/qTFiAF3tDx/cvSs/5QDzJ8BbjuRtvszxfKIKWCkt
d0w5x9t5KChKxfV/hurm0GHDYCPti9rhXD+uwB4e2Kx53ap1/bedcJdhXZ8L
OJ5LeBlOjYg/8Z3rrzmXwRV92uzw4/i2oDZKUrEILQ7xF45/GwK/aJ/UoQct
s4W9tvZVPP2W49984acXO45bwvFnkhj4Ztf1JasLOf6tBJ6fb3jy5QOOf/sD
27283vKFrh7YXire8Ch4/dt7HP85B148/sUz3WyOf9sGH0n0eJ+YyvFvkbDB
rdMLQ+mwQjgveIGxUzLHv/2CF45fF9IUz/FvA5Sl4scvRu4dl8DxbxL4Y/jn
0LEeHP+2BS6/q7jBcBXzX4RTGnWcK1Yy/xO48+Qey1f/Zf7vcFnRiTvVP5lf
r4NUPLxw772e/P4klrDNCa1o2zzm3wjbjdC9aE0nnIcDdXr83vSY+R/BTscM
p67n+DFBE7zlR5OVAS3S7Yjvb9baj4fvMr85vHhe4IcJBcy/Hq4f/VkynOMD
C87B/lMClVrWMv8DuCxLobHXeuZvgHcbtFljvIH5e3WSiu8dbO7u5Mn802CF
kTreSauZfy18uWrwY2d+P7Iz8EU7reJ1LsyfC5uf1OmTtZj5ZXAbvcPnlk9n
/h4qUnFW7KPRlTOY3wy+OygkebAl87vBrust7p2fyfyn4Lo/t4fKTWL+LPh1
x82Wq7SYvw5+9GjyapNOzK/ZWSr+rTB73AQF5hfDG60Hu1Q2cfy3K6x7W3Xa
6x8c/30cvmmo/Wwn7ZwJ2190LbrzneO/P8Huvyx1jvH1MjVUpeJNObFLJI0c
/z0JXjLVNO4SrbsSPmbd23TDN47/PgJ793gztEMDx3+nw/LVi+YX8e8T3sP1
2xbaFP7k+G81AT6P5189i78c/20MO7k07P5tw/zLYC/T52UfxMwfBMt9uvdq
sj/zp8Ce0qfJD3Yx/1t4nyC+cH4gz7+qmlR8fofiqf4Hef7HwVM67DqkGcHz
7wJvXKER/jeU5/8ArOHS443mJ+a/CZeq9ziuVsfz/wo2eldVvOA9z3+nLrhe
G1/0KGq9/o1gSYOx8+cann9neNs5s47bn/L874XHqld9OUBX34C7yafuz+f4
W8FL2L06uXQJx6eKlNVRfvXOC5XjcY9RsPwUF4PB/DxhC+C/TnE+elLm3w23
n2krzOf4Xblr8LBf14SxHI8rrITPznO6eovlmbOihlS8+vhuF0UVlv9CWL6P
1bQYjjfOnAevyrs8O53rScp2wbGuk/+u1mL5Hw+/Lgx03MLxm5JyWHDJrO1T
2rdtV6l4wEPT2B19Wf4PhTdVdRmYa8Dy3w6OLPm4dz7LE4EfXNjW4LHNH+aP
g0d9fpy6nN+HRykcdnZuvhzHO4fJdZOKM9ad/XK/Nf9g+Pa9y+9z3zG/LZw2
fPsdf55PoQ/cX0Xerze/P+do+PC67Ds7eD6DiuFXy31tvrWe/xY4eOk3OQOO
n5fpa6K8OxUTHNyR+a3hto01d69y/L1kK1yZsaDJnPa9BIt6/Oj/lp8noQBO
bqmSb6/G/D/hiu/Hff9s4f2vv5ZU3PzYUy0ijve/2fBqm7hnrtG8/22G022f
GdlyPGXYBdiuNNupiOtDFjyGzebOUHd/wPvfd3hXg9PGWQ28//XtjvJXO9Jb
j+sNOs+EXxkuqtlFB22ADXaltWvbmfWfMHjgUef761RZ/3kIa/a6tXYH1w/U
bYS/G84vecr12SW9e0jFR1PPiNsNYf1nBmxdmFK+R8j6zzrYssO1PdVGXP8w
BH7QPvyeYALXP7wPr1d5Xaa5gesffoVTXB1kkwI5/lm7J/KoDXRPa63/TYUH
flSXBJSz/ucBp1x2cr31ivW/M3D7PTo9Rr9m/S8HfudiUGPxhvk/w93TMjfE
8nhQd22peGvZxEBfvn6mKZywV/vv3nrmXwPvK3AXB3C8qO5J+NIJl9uDspj/
Lmwy4IFg023ml8LKbimhMu6XkNCtl1QsPqJyxpTHq0XwoKO3Z4lpwWr4W53W
p1BadAz2mZau8e4B82fAH9rtG9LA+m3YR1i1n5fqJ+6/UKCug/NTquQQfZf5
J8HfV8YVbKWFK+CJSZ36Kt1n/sPwh9DzJ7XzmD8NbnQ/2MeE+0lk1sDdt1YJ
NZ8wv6A36iu9rdZP5f4RuhPgRrP4p9tTmX8pPM93u4Iu90fwPQSf7Pq3dwP3
R0hIhu/ZJHjducH8b+C6mP1tevP9BJ11UX5KP8RHPGX+sfB875+Wo2iPxXCf
wPI+Y1r3P9oPZ3yLcqji5ytIgk2URqVP4vUg9wp+0H9Px1u0sGMf3G/21vwU
1zC/ISx0ftkvgddLkBPccrml43xeH5l7YINP59yO0LLr8MLRyrM/VjP/C3j8
9/IRRbSkfV+Urxs2x/k1Mv9I2KqkbvKHL8zvCKdNdgwK/cz8AfDe6bVz7WXM
fxX2OXctqkKO7Z/n8NEbfr0/y7P9004P7/d7rrs1j4cNh606N8+K/cv8DnDb
lWUD5vDv5XbB5qXRYz7Qwivw6lD1iSH8/pyfwZO7bY76xv2jguT74Xz0eWil
UsL8BnCcU80C/dbzPxd+9cj1XGQB8++Ay6rG/NhCS2LhPeKAzBW071M4cZHD
yVV0wl/Y4WGBqgZfr3pQf9Sfe0UYL6EFNnDf93+utVq0HX5kqP5HmZ/PIwoe
kGUyclk+z38RvLS/b8vv1vP/G/az+mor5nE5/QFo71QWjI6nhVbwtyeGXm35
e3L2hl+YzrXryv8PioDlTm4SuXO/rMx8WHXJb0kZLfsBT/VYIV+mwfGv/fSl
4itT7XWCunL87yy4ZzuLCasFbP9ugtW3FvcJVWP7Nxw+/rP6TJQ627958D6f
ugkNtKAZzo55E11Gi/oMxPd/ybihmu/nYQEPWp8Qf5cO84Jtrp2ZJk8XhMJu
3bvaaWny/D+EU78sstLm/mbCb/COJ7mR3WlnnUFS8YKMnno63C8taDqsWK6d
0NCP+T3h5DFBbZfTsrOwbpDfc2Xm1b0HH55Xtqy0Nf8XuN3JyPnafH/fnoNR
/1K7pLGkB/NPgZPm93+b1JrfHR4xcurWk/x/wWl4pJVn71palP3v72+GyX2j
PerhnS/OdC/sxvxaQ1CfOKQbmUIXmMCll+cdbT+B+dfAK87Pm69NC0/Ap2fH
hf/wZP478KEnqxvXHGH+WvhE0U+FTaHM39VAKjacvXqw9wXmnwzrjvGMO0br
roIlcw60fI9g/qOw60D3lrUXmf82vLRHYkkxnfABnj43zyOCf1/dZSjqd6cy
uiZEMv9EuPJRYscHUcy/HF41dv/Zl7RHMGw6Oqx4Eh2WCn99Ky5xpwvewcqx
99NLrzK/YJhUPFo7xCGGFo6Hv1trfRLcYP4l8F1F9ar8W8x7C25jNeT0UI6/
l72G/3oG+X2kdVWGS8UB1y4P7HuXecfAxzY2aQ3Zy7yL4NfPGm+b0Qn74Asf
xmZq7GeeDkKc7yGpX1JtmGc0HH3YecgEU+ZZCCcWlyxJ4/yJgkDYTMVXv2kI
81yHVxm+H9DOgHmq4FdX8u5o8P7trDQC7bVPE5Rets7nGAGvnzspePwzlmfz
4TXT1p83p2X+sL9Xpa3TRZZnCbDML6Xak/sTSSrgz+/63ll4mOWZwkjUZ34u
MH+8j+XZMDj6zuz+2+hqezg+x+XaLy+WZzvhj01WJla06DJ8ZsbpD37cT8ej
DD7U0OdZGZ8nhbUZhfJzWP7vT3TBELg09O+T1Nksz+bCPvEm72JmsDzzhU+M
+yIN5X47zjHwkKdN3j24v05QCTxqSNcIFTrzD7yxTVyGwmjmHzhaKo7ZbxKy
iutN686BfddEP38+kfm3wY7ey+Q6TGL+SDg4Pr1iM+eDiSSGUnGR66A/az+z
froFHp5z8eMKrg8edhFu/pst8KQLnsATyydMHCFl/fQHvDni5DYNrg8t1DNC
e6+j1dRaPr9ytoQtN/XZsILroQdthOMFa4oiYtg+OQ9L9zs3rOL68LJHcOfN
Lycpcj153Sb4dKxBxDc+r5LojkF50j5R/0cE2yfm8NTTj39WXGT7ZD28o//I
bO1w1s/Pwb/1rhyTowUP4Kats5JOXmb9vAF2377AoYWv79FrLOqL8eP92vD1
w6bBr6yzsr5z/lTBWvjiq47zznC/Bbmz8PUfS5Ry1jF/Lhx7qO3Kh7SzDH6a
X/pw72Hm7zFOKq6as8RVmfNHM83gtq+naalwPpfMDVbYcTiyhfsv6J6C7T1V
hz2mJVnwiWUxFV25f4NvHbxO/8Clw3uYX3O8VJz1W1PzHV+vWgwfObfonkrr
/DRX+NHRNw3deFx0HF4lbRmWRHtkwiVTIm+M5OuFfYL3Lusx/sJ+5teYgPvF
4tNG6/n55SbDCl37nRcHM/9KWGnTo/xCPj90PgJ/jH/3O5/Hg9LhF37F+3q1
7k/xHr4ceVRSw+9HpmaM+k6MfYEnrWsMb2uzUGnKUeZfBrd12X3mGu0bBF++
oGBV0Lo/QQqseWPkpt909VtYOeuH5i9aoDpRKnYW6h09zf0OROPg8F4jnD15
3MMFNtuWP8N9F/MfgH+PW95mLb+Pgpuw2tidOX9oudewUsjNUnNa2GkSXq+d
gtYs2tkIVjctr9jQev6d4eyrMwWVdOZeuE+2w/A3zCO7AZ8V2Yf8Psn8L+GS
rjMli7kfg0R5Mtofm7MruvB69R0F93jeMt2dv5eEBXDpyo0eAa37M+yGe45P
rpsdxvzX4N6NO13MeD2LKuHT9YZtT/O4h6II5UmOx4/cAOYXwoYpk3M70AXz
4C7vTL0u8XmvnD/suMi3yZTXjzAedutz2X5Va/5yeEbPnrNWBDF/WzHKryMn
fyXyepDZwfWbhtxz4fvr+sG7ehbF9Gz9vcfBC00nF97j9+FbCn9YfzHqIJ+f
J8iZ4Pqzf5mz/RHzDobXtV86szeftwts4axxJk+iaJEP3H9d5sg+j1h+R8PG
QesGb57J+1cxXDhWyXq1Fe9fLbC+eOT7R7TcQFOp2OhzN4dhi3n/soYfvPw4
3G0F78db4YLJXpPll7M+cgnWTkrwtS/g/be/GX4/7iqBb1/w/jsbttJ/0m7H
e95/N8ONcZWP137l/fcC3KvQtd0muvrxv/9vc2L0KlrwHc6Qi3s1uHW+Wd8p
aB+kebv+7MD+pplwwliljXfas38pDP7zpnnL0Z7sT2qE18kWHP48hf1JvadK
xbaOLvFaEvYnzYCTX/9su6qQ9Yt18OAv1/ucbc1zHy6N/PpjEd9f8hWWWzwg
YBPtqz1NKu5oNrLmZ+v8uamw8YaHBzf+Zh4P2Kn+Wqz5L+Y5A5tONBn6lfPj
RDlwTWT16P5/Wd/4DLtHtZNXlmf/WffpqJ8NSvTTVmI+U/jbUcP2Na3z59zg
ee5TlN/y+xCehI3bBS4/yr93vguHqPaLyKCDpHDv5gO57zqx/6zbDFyftWfn
XuTryURwh1irP/7q7D9bDael5ipc4/cpOQZvry+7p0v7ZsCzF2stmKLF+WMf
4b8zZsoUNNl/qG4uFU9xUc9t4fsLJsGWF1Iem/B8iVaY/+vvWizvb8zzeRiu
s1342Hci86fB9nlp60Loghr4s+rr671pOTULlI9L2789SQsnwO1qVBx1aOel
cOzxjr2Hj2L+Q/AA88tO0dxPMzMZTnWR6h7k38vewPXDHaLnmDB/55lScf7A
p5UBZsw/Fh7Rv/GU60HmXwy7H5uWn7OH+ffDjXp/Rn3bx/xJ8Jfi9m3GmzL/
K9hmyYvs27OYv6OlVDzzqqnvaX5fHobwwsu5Tf26Mb8T3Gmbz4sZ3Zl/D9zU
pVOBXhfmvwHrJBrF7+D1JnwBr7h728CM8x+d28/C+Xa5YfGN9eGgkfDYPjbX
Rt7h9e4Iq361u65OywLgvIkPd6en8Pq/Cq+ev3TzHNa/Jc/hwSl3lc1v8vpv
Nxu/30CVrn63ef0PhwdWbHm/8xKvfwe4tPB3ujUt2AUv8lmmP48WXYH7u3/a
akh7PIPnhEctF59leSUvQflWv396/AmWVwbw5i++7/ufZHllB7u9abmvRQt3
wEZfGvLmbmf+WPjVi+J2Rh7M/xSW1940cgqd+fff65k/+xHM9pZskBW+//kC
73x35reB9R3jFAJoyXb4sHfzr3trmT8KXn7LZMFBlocJRfDYYV4bC9gfXP0b
nvhpY4ULy1OBvjXqj+kfnrRaZAXvlfdOzbFlfm844ffuCyfZ/giLgOO++Mhn
cn/ugnz47bk+loGzmP8nLBZOnWvH8l3Ybw6+P89E6yTO33aeBZeU503rxP3H
gzbBncpqb5/m/q6Z4XBWS9K+tOHMnwfvF9rlrR/G/M2wQu4SwZ6hzN/HBuWJ
1+HU+Wwv+1rAhkN+3hvF50UJXrC/joZ/EZ+HVofCK0u/fja3ZXvjIayz86N/
/1msn3+DI9O6vt3eun+Ojq1U7NFx7qwBrL+HTYdfbFk+qqgX2xuecJFWx6rN
3B9JLgTuveRPWAv3axHe++cepmucaecvsN1c5YH9uP9LUM+5UvHB+OFhbbmf
S+YU+PyhP+s23uL92h02myeX9CyR9+vTsKfK6bZl7F+WZMPz7qt8v9S6f1Q9
7LU6YUYc6zsJWnYoj67O0i/legXVJrBm6OBOW2bxfr0Gnhx3r6PZON6vT9j9
e76YsaYt+2M97sDDjV7rX2V/ZFgtfD7ZcN+yc+w/6GqP8/M8YfAn9gfJiWC7
JeUv3UPYf7AK7phWnlbP485HYdsOpsbpZ9l/cBtu7zR/vNIR9h98gFfpZy7I
Ps7+oy4OUvGzhTVibfbX6k6EXSw1i5vYnytZDn8bsbeqbxL7D4LhCwolnSW3
2F/0DpYP0jw8iP2dAsE8lP8zrjn+ZH+yaDxsFnDrphz7Tz2WwCc/h2cL2b8c
dhC2dTWtUWT+glvwqlkj7BY9Yt43sPcQD6fk68yrMh+fT0lkcpr9yc5j4EVJ
OqZl7D8LWgTbrbvce3Q08+6DZ9gH/9nN/mZZIjyhWvlJ+QXmrYZ9J50zlIUx
bwdH/D4H2DutD2fe0fDWYeuG+PD7SlgIr+ukHDFnHfMHwjkfzE8v3MT81+G/
Dj2MlnkzfxWs1ZCdobWN+ZUWoH56Z71i3lbmnQ8fGxSb6s7XkwuA221xGrZ5
IfMm/PNM+5ha2rkCrklU1m10Zl6Fhbg/VIZr6vF45jD49fvPV1J4XGYPByeb
vl3T2j+8E9YZ1KmtugXzXoZDQg/qCWnfMthym+smezqhjZNUrBHbsf9V9gdX
D4EflRTVb2P/sWAufPP15PhQW+b1hY88VhMXzmPeGPiEfkxa7AKe7xK41/cz
zbE8XvAHzlrsWCNwYP5BzrjfuFgc+sT1r4RzYLfawdO+0M7bYO1fIzcm2TF/
JLzNaEr4ZzqzEM7UT7uwn/21sl/wRIOcKkN+Pt0Bi9A+ebrp52En5pfAkd3u
nLlH+26BC4o/L7/K/vPqJ/CK9imrrnP8geAH3Khk+UmT62+J9Bbj93fn4sZi
fr8elrBOnPz5+2uYdyNc9a7ghyddcB7eunCKqpwr8+bBqrXtZ5rxuLAJznEb
L5zD13fWdZGK18QZZzzneuVB5vDJ4mtHprH/PXM97Ln61ZbrnZn3HKxSEiUJ
ETDvA7jSuPq7kRrzNsCDYj7vn9aFeXstwf14Y/myZFWe72nwMKPy+KV09Vp4
w4G+BgtpwVm4Ku9TNwO+nygXlrzVbFSlPWRw4MQxMcvpsB5L8fnv5b5PpwvM
4JkvRwxSbs/87vDcsw3PZnRk/lNw6UGjgu9tmbcOPnxkcXgZ98/K1FyG+4uy
m4cXLRPD7wcMfnJekXldYeeC7uVL2jHvcVj77oGpk9swbya8YkybP/VyzPsJ
3p3Q6Pedx6s1lqN9HTjxhiHfXzAZ1t93ZnYPHeZdCUfsMJh1mPY4As8zs5h1
tg/zpsNtkzrFiJq5/t17WGnn9oF+tFyXFfi+XUp1grj+ttAYXmg0ouvNExz/
sAxeE/hx2MPDHP8QBD9WemQwjetHZ6bArqVpcwbQsrdwzevbR8KPcPyD6kqp
+Ong1WM8+f+ScfC5PlFBl7keta8LXJWTInxMJxyAXzZJ5rnR1Tfh4Kr2/Z9y
fW3Ba7hP5s+HCVyPW9RpFV5v5BubYfz8Hkbwld/ttK/e4Pp/znDWQZGOjOv1
FeyFhxTldiyh5RLhjtl3v/vw9YQvYRuXvz6qfD9n5dVo/2dVVGtwfcKgUfAk
4YPtJRHMvwAOXJ7942Dr+n+74bPjve+I+Xq61+BX7cdv2Mf18yWV8OKNVfuN
uN68r6KrVGzi4vg0JJ35hXCuue6Y66nMPw+2+3ymsjvXZxf4wy8TZZbduZ6k
KB42PKgTq7GM+cvhct/EpnHuzN92Da7HeGHT5jXMPxQuvbM4/+1j5reH91oW
Np2ghX7wLZmZKO4R88fB413ey2nzeFApPGqVRUJoNfPLuaF8P+c65NFz5h8M
H9W41GdNKfPbwi3RfRWPlzG/D+x/saJ8YznzR8Mxw5xG2tAJxfDg65sE3/j3
1S1w1Og7GTtpwUB33B826BkoP2N+a7ggNW+s/Evm3wp3ujNZb2gV81+CpRpL
LrlUMH8BnF+ysLKIfy/3C+4u22nx8g3z9/eQiqe6/o64SjvPhsuXNHT5xrxB
m+Ex9cvMDnG8TuYFOCf36IqkAfz9P4bfbZnZcESTv//vsKe/nXg/12eU9F2L
+9e873nDuvH3PxPOKXvazpflZ8IGuMMDnaERGvz9h8E7X3bJusLySvDon3Pu
Ku9ieSJqhK3LrnuNYXnj0dsTv18tu0ue3fn7nwH7anjMusz3L1gHOzZPyf5K
y52DI0/0HDK1L8u7+/DGuP1VwVwv0vkr/Hm9xbjF3K8iSHsdXr9n/IpCOnMq
bGm64OJrjgeTecCPfHJr5Vvv72fgn5kd4tsvZf4cOLjx+sM9Xsz/GVZSN3g1
KYD5u6/H/UT2OmoAxwtWm8JVPdSDLFk/FbjBMQuyXf1ZvxOdhGc/umfrUM78
d+HaBQ/jVbheWZgU7vooo7ZuG5+vdfPC7336wJP5Pqy/i+HdZ74P3MnxIMLV
cPL34Jc2XD/L+Rg8/ZC3Vf83rL9nwNFVhXONa1l//wjfOHEsZFjr/ufqG9De
qehy4kbr/p+TYMdQk/r+3G9asgLuUedcl83xHr6H4cvqcTNKuN9mQhrsXrTl
YzH7H6prYJ1zP1WGcH9LgdpGqbjfPKFa+Hi2XybAP1bfdJk2ne2XpfCqzunj
btiz/XIIzncM7dSwgu2XZHjPWql/xR72l7z993rX1kaO2sv+ks6bpOLbE/aI
zpxif8lYOLdwm/KrEPaXLIY9PdarWp1nf8l+uODmoLIzV9hfkgSvmuF04Ewc
+0tewd1GPVp0hZZ03Iz2/O4vmW84vsHXEB6wzkm0Mpv5nWBJ0ZnAZeyPr94D
Hx219WjPvmy/3oBzAgIv6g1k+/UFnOZZYWgoZPu1/RZ8/yH9S1rYHxY28p9H
m6b/YvuxwPGfl1lfujGC7dfd8PJV+cavaeFVuLhymUnwILZfn8MRInGt5kS2
X9t5S8Vq16yHvB7P9utweF4HtwPaYrZfHWA/vbf3b0xl+3UXXBt61ymXn09y
BXYJsdvt5Mz26zN4X8rIqKl83pAgvxX1xx+n1q1vHf9tACv3ilsxmP2pAjt4
zR+5aVdjmH8HHCBRn9LzGPPHwr2F3QKCrjP/U3hVTP8eMRxfXvAXvnNSkHLh
DfMP3ob7VdQpzYt83im0gd8rKT5Lb8fnV9vhuR/lCo34PCcoCu73vXukrJn5
i+ASp9IBA/m8UPYbthp/2ziHzxN19bdLxV3mt03ObH1+aQWnuw2rOMf39/WG
Awx8ejnQCRHwXs+qL+NfMX8+/D1oVUz1J17/P2GLhx7nJjny+u/nIxXbb9so
sFjH638W3EW65MI5T17/m2DdrPQVlxbyen8MH12x8+1iN17vzfD3Q4HTLblf
unMfX9SXril9n96637sFfLFX5N3NXD8v0wternQzIID728tCYeXtk+U0uP+r
7kO4m2dn+wZ1Xu/f4ENjX60Vtu53q7MD7dPkZZkLuB9uwnT4Rk9D4Ri62hPW
m/rXuDdfXxAC3xKafhrF8fGie3DczgmzVvD9PL7A43evCbBm/2JYTz/c/5Lb
Pg9u3e9+CizpsuL4vlyWdx7wDaslTteTWd6dhl18FijYpLC8y4a7LSgfK0pn
eVcPV5eOVX5GZ2rtRH3j0el0c/b3yUxg58QRiTXsX9RdAxunHtPfwf5CyQn4
QrVmlwj2T/jegfPrtvqcPMTnFbXwAtXRu+ayf6a66y7Ub7tNMVZmf5xABK8o
O95TjRatgq/N9BunzfLb4yjc/W9+4xuuNxp2Gw78a5kc3rrf+wdY1W6XRyz7
I+XU/aXiT3fUFzdx/KBwImz94dX6IeyPdF4Oi0pOJ8lxPGFQMLw2xOZiNu8P
mamw79Eep3LvMv+7f9Y/Hr2P1hUE4POm69xN5/wEyXi46sDCObf5/Md3Cfyk
/6eT6XTCQbhLg5HX0GfMfwsec1s3+tQ15lXZjfP36u3waXw+5DEG9jP5+6Ai
jXkXwWrDwrvc4P2pYB9cp1Y5dz/nT8glwQEr1WuONTJvNdx/nGS3q4x5OwRK
xbEtdw1v8H4WNBpWCXGzTm+9vy2Efz1ubzaM15MsEM4alrnkG/undK/DIXkJ
Haz4/ElSBY9xCKmbzf21fZX2SMVvnuqOW8fPlzAC7p7smazziXnnw7rGnb5a
834pCIC/1rtOf8nfjygBljzfuvAI94f2qICHdrhX3NWQv2+Fvbiea5ZubRjL
+9swuOcyA63+Vvy9O8AH+vYyGm/O3/tO2CG4xVEhgb/3y3DXsw0GYRxvk9lm
n1TcueDntdUcnyMbAqs7WF26Q+vOhaPlPZz78/mlxBc+K932Qsz7g28M3DJg
xYFhretZlsCmNkNXtZvG8uwPvKclLSBiOsvzQftRX5zV8CRNwvJ8DqwQMzF4
jDXL823w8MjoytFc/zIsEn7xclnfHbx/FBT+s9eKTQa03G/YbtLnyI20cMAB
lBfuPu8iT/F+JoGnNs+ur+L6hUFb4Pm3BtsL2H+UeRH26vWhtBMtewL77+w4
YUYt8/+AHcMfVq/m/UKid1Aq7tX179g7HdkfYQlr/rrqvYlO2Ai3NZxQ+YH9
OdXn4S15XayWsn9BkAdPnGy/TdKL/RFN8Fn/8Kvre7M/QvcQ2pvzT33dzvlV
YeawUNPU0WI8+yPWwwZ+uxyO0HKh8NOhsRGXROyPeQDPKb5f1L61/60BXn9j
d5KFC/tjegXhfBsqJCYvY3/MNPjLhjIf/XW8n62F12uYX928mf0xZ+Grt31M
NfzZH5MLjzju/dHsBPPL4D1Z9Ue6n2X+HsEoj2KuNMla57OZwRHn4vz387jA
HU7TH2ltzflrolOw1rKzH+1imT8LHnTVRqkxhvnr4IoHLxbaRDO/5mH8XhrU
A0sSmd8EPuv1cu/KJOZ3hZ+NfxVSy/UXnY/DooFCl978+6BM+FUHL/HOW8z/
CXZPCnBxTWZ+jSP4/db267Gc1p0Mz3FMWuyczfwr4RMPsxq8cpn/CGzk2H6d
yz3mT4fP3rF4FkZXv4e7uNfWBTxk/i5H8X2GL3d8XcD8xvAl9U872nxi/mWw
X2+ldR0+Mn8QPGx8p6PhdEEK/Or8/l3KP5n/HZwZtfHC/R/Mr3oM5cUFrT2H
jTmfcRxsbOe2xlTE+Ywu8OzDl1IncL5j5gFYbUBxXe/RnM94E140503nJlr3
9b/Xu518c9okzmfsdBzth2tFagFGnM9oBIfOfPnogpDzGZ1htcz4bfp09V5Y
YV2RZ/UIzudMhL03/jyqT4tewg1j59pXjOV8TuUTaF+7ufeeNY7zOUfB6b9l
86aN4XzOBfC5NlUCP34euUA4P6JP1YPJnM95DZ5t1mf4DuZ1roRzNx09qGLG
/IonpeIh44oqzS2ZXwhfMGvRHkbL5sH93nVvcJnF/P5w4iRFo8e0JB7eqXNh
qFjC/OXwl00nyjdxPmn10FP4fH/853yYx7z2cNhhc5cz85nX79S/5xfJTwo5
v9QjDrZ+cbxt4RzmLYW/HTi908ieeeVOo34TnmagR8sNgc/HLDw+gRbawq6r
L6534vs5+8BDtvosVebxoGhYWKhzQo3zYWUtsOc3qcmexcw38IxU3LxTJyp6
CfNZw569nl9pdmG+rXCbQZlmNpw/m3AJLon4fNXZgnkL4GumHuLAqcz7C+4V
9XKE3RTm7X8W9b/z/T6sdWPe2XDF6knHityZdzPcmK12daoH816AZ18/uLBp
PfM+ge3kk9QjaOF3+PP32NC/65i3bwjyxev237qZeWfC22d3LSj04fndAM9N
H+dkso35w2Cb/R2aJnI+se4jOKDI2v3ZVuZvhP9U98g092L+3ufQPjiw7dID
OmEGnJF5tyH3IPOvg2dpyW+3Ps7852Cxucq5NB4X3Yc9v3hkPDrC/F/htHcj
0pWjmF87VCreITbfbUsXTIVd2nXrGErLrYWftLP+mU8Lz8AaHwdfyE1g/hy4
qErn0HA66DMcXxKU5HqV+buH4X6knjFfs4z5TWHTYztPqZQwvxv89q1chSYt
OQn7ah067ET73g37N156nG9xKfNL4V9f7MZ0+8b83c5LxTfb/5VG0wIx3N07
Q6pKh2XAZ7qdj5ujzPnoH+EBCnuS3nXifHSN8H/zGe9YhbbjfPRJ8NJT71K2
084r4JW9JnW+3I3z0Q/DLbqeQWc1OR89Dd6g2XVqJ1pWA99s9jnoRuuqXUD7
ojl2p0SL8/EnwJ1MHphf78X56EvhDNXyytiBnI9/CK694KSSy/nx1cnwnfyh
bcfTgrdwpfKelPDunI/f+aJU/PfJ52fPdDkffyz8Junoip56nI+/GG4M8amw
GM78++FA+ZKhnpzfL3cTtomLFf7oy/yv4MlDx1QZ9WH+jhH4PVfPMXhPBxnC
vwrrXvajM53gFWnTJhzXZ/49cH9p7Cw75tG9Afc530lsOoj5X8CFo4w32PO4
b/tLUvEVt60rI3sw/0j43Q9hYQm/r2pH+NyGTts78v0Eu+FF+0aFP+B6AKKr
cB//4b8u6jD/c1i6T76siPnC2kWi/bFubdBGfr6C4XBdQfypMlpuHnzxzEXf
c7RwF9xt8Kute/sz7zNY1rxzY1+uF5wpH4X2756e5+tHMq8BHDCiYJA3rWsH
q6m+7rGXluyAH59oFO4ewXxP4Ym1SlGt6y9U/4XPPjk7YjgtGBwtFW885OL2
eBLz2cCTo03Tshcy33ZY01QvV5XfV1gU/LW31c1gXh8FRfCKToMW3Gk9vy3w
+ZvSnSlDmE8/Riq2TBs57RyvP2cr+NbabxEWresteMNxdiZhybweMiNi/pUP
sXKnlzFvPmxxqmRK7FLm/QmXvzL5rcjjkn6xUvHPjBNHddfw/M6Cn182eqbE
9SoSNsGjFZaPmebF/OFwzKqP6sc8mP8xbNvX67bjWuZvhk+fOeg1fx3z94lD
e+dCG1+LbcxvAUdrVx7+wPWVC7zgzTE7O3XcyvxhcPuL8cp9+ffCh3C7GJ0M
GV/f+RusddDE9Jol8+tcloofzQu685DOnA6H+gX+9ZrB/J7wAiNFSxcb5g+B
FZKNhCdmMf89OEKrt9caCfN/gYPfl23qwPUxEnpeQfk8Z8qMVB6vngLfW75h
wkS+n8AD/vTAYY69mPlPw1vaqvkcm8v82XC7bQ9y1tBh9bD+HB1/DVvm14pH
+8r2vc2hacxvCl9v9klMp4Vr4EPx+n/XTmX+E3D//RP6jOXvLbMW7r13cO/3
reVZ1wSpeJvIdHU+yxtdEVw5vz7ksArzroInG9ka7XjA8voonPV48rxxeSyv
b/87PvX6tBFPWF5/gC27fntnksPyWv0qyp+9Y+Z8b62fTIRrTqhuCeX93GM5
3H+Rzc5A3s/DguHanMnJm9ryfpUKJ9yYuedNBeujNVf/zbfoeMv2Gevf469J
xXn+nZLvlrP+vQRW/JSi3LeM9e+DcFGhrpreH9a/b137Nz5b/dtiBd6f3sBm
L1NmKfP9JCrXUZ+ujI46KM+8Y2CVokVpX1SYdxF8wN8sKO8v69/74DJ31dBc
1pcFSXAbxbUdt0pZ/66GF+quKzteyfp3hxtSsYlkx631Kax/j4Y/q5UvVbrJ
+vdC+EJzHy1vtk/k9sD+DncNmqNY/74OZyXHrBNfYv4qOL16R3DHDOZXSpSK
TxWUhXe7y/wj4FgH06L3XB9eNh+e2UH9/kv+vW4A3LldZzNlvr8kAX6+TG1U
0Fa2PyrgsdO3BDxZyPaHQpJUvKZLxqY9zsw/DJ7yo/hMhg3zO8Bfi+c4jrFl
/p2wf8OA281zmP8yHFSvfGAg198vaHNTKo5aVxVUy/ajnAGcetNY3WAu886F
TT58qf7E13P2hRV+Le4k5esFxcB5O1xeO1kwbwl8xzVn8ClL5v0DXwrz76zI
9UV0B92Simd4Xte5wOevkjmwZfsRI7Vb29vb4NNrTkUvaW1vR8LuRx/omnE/
hOpCeOnTTUsncrye4Df8c4reKG3uRyAakIz2aq8hIS+5/4OHBD4mm9WuUxGf
N2yB7TXenFHk/JaCi/Bvs461bpwfI5cP7xjk1OYxLfwBDx3uon0/kc8b9FKk
4o+Dx775w+fVQZbwupIZKguy+LxhIxwo6CPdlMfnDefh2PsT5gzheEDdPFgp
5eYgL1rSBD81mjbPg5/HVzcV5eneqf5vOR4wwRy+FhSXtp3jBavXw6G1TmGB
rfOHQuHdOhLl463zhx7AnysVBj7l83aPBthj0Zu/H8OZv1ca2s89Nvc5G8T8
0+DKfemND2g5T9gy4YjXPM6PEp6F99Xf6N6Xds6FDbzNdnXg+MAgGezwK/Pe
UDqzRzq+b2nR5CjuLyIzg0cpuq7d5cX87nBY/bRhi3lccgoeuCm9dCbtmwWv
nvRoyqMNzF8HSy8XqntuYX7N22g/6kwbcZ4WmMDNifPcYmiRK2yp1ebgMtrj
OLy16cyur3RYJjzC3M0lgS74BDv+6LZVnvuXyHXNwP3DR61JfyfzT4Y3Xcj/
dap1/ONK2PSX5Gw3OugIfDIxeaUhnZkOv/Hq8/4I/1/2Hg6X7zasdhfzd8nE
/b286cXG3cxvDOe5KarP3sr8y+CgwFux3bYxfxCcv8m8dA2PC97Bdz9GpN7g
64tU76B+tGWP20OOfwxzgYu2dJBFrmK+A7Ds2t+MJcwrdwuelzBjSspG5nsN
FxafTjruwHyd7uL7iiw8f4gOMoKHLxygfXU+8znDvpuGm8rNZr69sOUeK98o
jo/UTYR9HG3/rONxyUv4uOq+4j4cT+mrnIX2upK4Yuk45huV9a9/+/1KVT5/
rF4AZ2UkFM+lBYFwu4/Rn305flJ0Dd4fZCnI53hJj0q4fXD+kQhl5lfMRv3H
9kWsF10ghPedeZO1l89D5ebDlxY1CXPYfyb0hxd4lY9Zzv4153j4za2NVtrs
Pwsqh4c2jQ+pY3+XbGgOfo8tw01FX9kfaA8fD1n21ayO/SN+sEfymsqfVewf
iYM7OHts9X3B/pFS2Di9JPM953NXy+Xienqruk+F/YWCIXD2oin909i/KLKF
e2WabrpKe/jAV9KjdzQf5fPiaLhntOSmPuerFRTD3uqus8ex/1Xuz7/jEwyd
7vN5vnDgPZyfrveHyPF5u7M1LN3ZPLdfa//IVniqvOXV3jyeeQn+syBeqs35
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
vr4Z5uiklwwcTJ+vn4R7dm9Zbkifvwuewhu6n6fH6lL/N7jPisXnO4ZRv8Ec
bB+Hk3oE9Hm2xgz4m14fDRGZvQH+9MZgwghl6k+Er52bOCGxk85HH8OFUdWr
dlOPpBX22pV8b10NnY8O5ko5voo27r/p826WExxTNX5TN5m3Hj4zbWXH8m/U
/x8se8u0tIhe/7YW+K1KW/YSc+rVmSvl7M9gq6dNo14OXLljnU0+vb6CdTBH
XXHBcnLaMXjbrrUTx9hT78O/js6xFk+gPi0PHH+H7L6oN5nGczVccZO3ZgZ9
3i+Jg9dPsXltQ5bJgq0kggf3F9B4NsAfBo9e1debPi8fMA/nCwXsKwpk4WS4
scRsfwuXrhesgL+YXzzwm9x2GP4lCvrGmUt99+GMTl3LJx7UVwuXfrhb03ch
Pf9lnlJOybyLty/603hFw7MWp259H0I9d+C8MfI/poXTeH2E2XyF7jGHqcd6
vpRTs9Ny9aN46uHB6nOfFej+Rz0H4LzKodqtJ6gnAz49yrjq7HHq+QCnqtka
BCdRT18v9A5/N2HFGeoZD897f9x5/nnqWQzbzQxWCP53/WsfvDf9ao+DmMbr
Blw/Qc/qFTntHRw2pOLCpxrqVViA48F77FVhn6iXBdvPEcsfqKfehfCVfRNN
iiXUGwmLNucJJ7yl8bwGjxiXVHuNLCmDu01sjsiTZeS8cX4Woe75hq7XscbA
lpJ4hfP0+3gLYBWNAsE6ur8wHL5SNUf/Tz71p8K6Cj9PBa6j/lJ4TPCD4xWr
qV/GB883V9M3ehn1W8CmowceS15L/Z5w48XuD30F1L8L5jum809FUP9FuHlz
zOHpB6m/GLa248wyFlJ/L+w75UIqh8w3X4jzM/nYkSZx1D8XXr2jds1JGl/J
dtgllNfhdpb6z8MzPA2MuuXo+qcEjl1WOvurPF3//AW3R6XVlJOFpouknIS3
m9K1Fej652xY8dhnbVt1uv4bAu8Z9V1fN5iu/56Bjwp/rFcOo+u/L+H+58sH
R4fT9d9OeMecwEciut6cNswX53tHuzUT4un670x4eW3ckQ9H6frvFpi/L0ey
4jhd/xXBlXvHBnJO0vXfZ/Cp485X/FLo+u93+OqLfqeLRXT913CxlDOspMjG
Oo2u/7rC+SkhslGXqX8TrHA1edOva9SfDE/J/vSqkK6vC/PhQOfx39KvU/9X
+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
nrjI
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.955824*^9}, {0, 0.07985452574715149}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.955824*^9}, {0, 0.07985452574715149}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.952950248343712*^9, 3.95306482568782*^9, 
  3.953064963527657*^9, 3.953064999149098*^9, 3.953065201948196*^9, 
  3.9530653549354362`*^9, 3.953065470584772*^9, 3.9531263063877563`*^9, 
  3.953126768437801*^9, 3.953126960242302*^9, 3.9531271188095093`*^9, 
  3.953127190425571*^9, 3.953127521340255*^9, 3.953127571537415*^9, 
  3.953127619589445*^9, 3.953127669707562*^9, 3.953136713558751*^9, 
  3.953136833473392*^9, 3.953136978984818*^9, 3.953137168290571*^9, 
  3.953137361486867*^9, 3.9531374107048407`*^9, 3.953137486629575*^9, 
  3.953137585306974*^9, 3.953285304381791*^9, 3.9532853634246693`*^9, 
  3.9532854623528023`*^9, 3.9534102386067257`*^9, 3.9542733200893717`*^9, 
  3.954446367970045*^9, 3.955140039326226*^9, 3.9554830307067757`*^9, 
  3.9554839228882*^9, 3.9554846000124283`*^9, 3.955632382118561*^9, 
  3.955788808104279*^9, 3.955911149016573*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"69e55427-818e-455d-8f4a-937ac6c705b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2133, 1747},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2909, 79, 233, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->True],
Cell[4078, 120, 1438, 24, 42, "Output",ExpressionUUID->"3e6d7160-32a1-44a9-8b53-11a14229d3d6"]
}, Open  ]],
Cell[5531, 147, 6074, 126, 560, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->True],
Cell[11608, 275, 2528, 62, 274, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->True],
Cell[CellGroupData[{
Cell[14161, 341, 47226, 959, 6422, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->True],
Cell[61390, 1302, 17216, 344, 5765, "Output",ExpressionUUID->"39b76e85-97a3-46ba-8f44-9160ec808b61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78643, 1651, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[78989, 1661, 3921, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->True],
Cell[82913, 1751, 208245, 3564, 825, "Output",ExpressionUUID->"69e55427-818e-455d-8f4a-937ac6c705b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

