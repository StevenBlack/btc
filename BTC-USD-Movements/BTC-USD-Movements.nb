(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    327412,       6060]
NotebookOptionsPosition[    325501,       6016]
NotebookOutlinePosition[    325899,       6032]
CellTagsIndexPosition[    325856,       6029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[697]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.952950242158903*^9, 3.9530648211300364`*^9, 3.953064958622326*^9, 
   3.953064994240164*^9, 3.953065349950439*^9, 3.953065465573783*^9, 
   3.953126301207666*^9, 3.953126763140174*^9, 3.95312695500004*^9, 
   3.953127117979952*^9, 3.9531271852779837`*^9, 3.953127515891465*^9, 
   3.953127565970191*^9, 3.953127614148252*^9, 3.953127664280751*^9, 
   3.953136707707389*^9, 3.9531368280231953`*^9, 3.953136973229302*^9, 
   3.953137162354211*^9, 3.953137357043047*^9, 3.953137409894322*^9, 
   3.953137478783972*^9, 3.953137580524066*^9, 3.953285299268303*^9, 
   3.9532853579233027`*^9, 3.953285456811905*^9, 3.9534102329466753`*^9, 
   3.9542733120956717`*^9, 3.95444635802569*^9, 3.9551400263429003`*^9, 
   3.95548301709028*^9, 3.955483914695512*^9, 3.955484592070867*^9, 
   3.9556323769979563`*^9, 3.955788802405212*^9, 3.9559111390723*^9, {
   3.955911408801759*^9, 3.955911408886239*^9}, 3.956325663929028*^9, 
   3.9565835736747913`*^9, 3.9566950342389593`*^9, 3.957003217109652*^9, 
   3.95738834267148*^9, 3.957668020911253*^9, 3.958544604531591*^9, 
   3.958766187928995*^9, 3.958902507986314*^9, 3.9593733764582148`*^9, 
   3.959890916533517*^9, 3.959890953630354*^9},
 CellLabel->
  "Out[700]=",ExpressionUUID->"59d11dd1-d1b1-4f0b-a64a-a86d80413679"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[701]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[706]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Automatic", "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.005", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.010", "]"}]}], "\[IndentingNewLine]",
               "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}, {3.9554843906883707`*^9, 
   3.9554844202100267`*^9}, 3.9554844683149023`*^9, {3.955484509072035*^9, 
   3.955484573338862*^9}, 3.955484816424817*^9, 3.955484990240109*^9, {
   3.955485048330737*^9, 3.9554850666151657`*^9}, {3.955485212388727*^9, 
   3.955485238935068*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4937, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4937}, {
      4937 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2809.626497793699, 2815.358431387449}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4937}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4937}, {
         4937 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2877.440673208738, 2883.172606802488}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.958902508481619*^9, 3.9593733771302643`*^9, 
  3.959890917210628*^9, 3.959890954301783*^9},
 CellLabel->
  "Out[709]=",ExpressionUUID->"0c8bfac2-0489-40f1-8d1c-ddcbd2ca38aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Month", $CellContext`since$$ =
     4931, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4931}, {
      4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2810.518350052736, 2816.250283646486}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4931}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4931}, {
         4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2878.332525467775, 2884.064459061525}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Input",
 CellChangeTimes->{{3.9587697352554283`*^9, 3.9587697353930683`*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"eb3b9e1f-c8fe-4fa1-9732-289ee8e574ed"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Month", $CellContext`since$$ =
     4931, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Month"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4931}, {
      4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2810.518350052736, 2816.250283646486}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Month", $CellContext`since$$ = 
        4931}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Month"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4931}, {
         4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2878.332525467775, 2884.064459061525}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.958902511129973*^9, 3.959373383780568*^9, 
  3.959890931153763*^9, 3.95989097716555*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"aabacc5d-68fe-404e-8ed1-7b198fde3eee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[711]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
NEknszfBucMD48KtqT8Njsk52yGeLLoDS7IGG95wov7P8NHy8e3PyAqjJzh+
2JyztBJQvzP8NKjQYTiZux5Oy15RfWgO9R/5O73n0HXNNF1SDjd91/u5jiz/
CP8n1Tg8MJj6DaqV/LaoXdL5ZM50+MGRPjbT11B/MMzdXjXx8jLqT4F5pob/
uftT/004Y3CqzhFy/Qc4PuGC2yw/6td7quQ/14qreOJD/Q6woy5nowNZtAZO
Dmw5X+hN/Unwtw/d9qyfT/3F8ICajYnR86j/PdxYXjI0lMwd8Ozv+1tbEkYW
8uERZxssufR4ySr4z+5Oo2RkeQL83bLDinGe1H8NZm+a72oxifqVcPLMUcu+
jaP+vjU4Hi2vzW0zpf4psGeP3etCaf2RLYenHZ31o4TW3/r9NX/3V71jPtD2
yL4KP8lN2ldK2w/vNcw2SOW02lJ/r1olvyT4FufoGOqfBC8MfjLfkNYPhR88
Ukczt6cN9Utq/x6fujoUT6T+y/DcEXZ5/Wm68BXsejxrlJp6JDp1GC/Nbpzi
Y0n9E+CXv3x+rNSn/mWw/YMrLoa0PXL2wlv2uZa/GEj9+bBAi3fzgx71N/z1
sJGmn//Q/r/7cyW/98ftJ3e30v5/LNzrSWJ8lYr2/0J4RtyZ9p5baP+/B/aY
bbHr8gYa/+TB476/jBD2o/HPczjmZcLelW00/uv6AuPlcvW9mC40/hkDf1Vf
eud3m8Z/Xn+nm2YbuN2k8V8UvOhUiOwJjScl52AL1blzAVwa/9XAn+peirNG
0PhPs17JN1qUUKg7lMZ/XHhHh+erpxjS+G8hfP9423s3fRr/7YT3d0p4v1eb
xn9n4C491q882IPGf9Xwz9mlHZ20aPyn0YC/33XK3iM6NP41g9/Iw/M/d6Xx
7zy4XP/8Sd3ONP7dDo/L9Dn8jK53K07Bvq+2Hnf9d/37Mfx67Lmr9ul0/sdq
xHjHxdP7ayyd/42Ee67S69S4gc7/5sD/eaXPPsOn878w2NPXRdvKjs7/suGH
/u93x02m878HcEHRoaWBNnT+9wvelVt+MYAsNnmp5J/rtufmp4l0/ucGLzJr
0yuaQOd/ofCI1fdzVo6j87/j8PugAdeCyTzF3+lvx+7eTBZ9h9fuS2rfMJjO
f4e9wvEpPnLTcw6d/86GVz3XXj3AkM5/N8MTV0zvulGf+jPg/VrG5/qRhRXw
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
oUW/T7+PP9+v4+4+9zzP9/l+n+86H+ASl0rnDgipEXc+rn7+cznPfxt46NPx
G32KmX8rbDVV3vZpa/4w+FJu2B1vPR7/HLj60JDmpwN5/H/CmmnpKVd4Psr0
LuN8KTzw9udmHn9r+PKTuZpPebwlm+BjhxPGzWri8Q+B9f/MOWjP8eJx2bD9
xIyLfemKRthYuyroLS3oE1ojzreOPVLL/xdZwfN+rDPZyvHi7l6wwZsB5ds5
njY4CP6bpWBsw/kOuU/gZpF12FWOL5L7Dqdf2tbrjhbH//QOQ3lZpZ5ZRDtO
hed8rOyX1Tr+xwPuf+u3jcFgjv+5AN+N9plbwfkZskz4ZeZXOTuOp9T9Cq8T
F9aczuTx73mlRjw3JrgpguMTfSzgq5UbDsdxfGKcG6wdPGZCS0/mP3vl3/j5
BZmvaUEGnGP39qUix2OK6mCPLbu+b6TdtcJRnxnfbmiZkOe/KXxvo9fWpIm8
/l1ga6vHGzVYXsmdDv83v6i0NnYur//78FO7d8peC3j918DK+6Z32b+Mx79r
BOrPHz/o5vB6TpsEJx8dXtCe5YdsFaxT6xLSkdY9Aas93J9+cD2P/z34fYZ8
7B8v5v8IZ5hc3mm1kfm7ROJ+PbWodjxdYQyXeMuVXN7B/Cvg3TOauw+nRQGw
XUHfX060+1248/O3A73o4A+wiUHXotbzL1ctCt83t3lf9i7mHw9b3jnmWkcL
neHZa0OurWrd/+QIvKIq/kPoQea/A6v8XPdB+wrzv4Nt35YcNKRlqtE4X6ac
9cvn+CzdMXD0b7NUFY7HkiyBlyn7Ngx/yvwH4ezNJh/m03Hx8FIrtXA/zo+p
eAN3Vj97/C/HJwrax+B+Mdl/Wc8PzD8aDvqcNMeHdl8Md2yffOIy58cE+8E9
bt9yy+P1kXsDThp7z3ToOZ7/5fDjJaP+Dq3m+a98FeV7bfX0ebTjCHiIw47k
YNp/AVytmqlwvCfnf++FlUrV7xQM4PzvWDi7ZNf+5/qc/10Kq0d26ikz4fxv
hWs4fyw+fbtrzPnfw+BF8YJl3Sw4/28urGIvlFZw/nrFLvitSYvS1db571fh
DcL3bwYu4vy/Ytis14bHa9Zz/l+bWFy/Iw8s0KSDh8DXTLfIH6Bz7eGSdPuI
rM2c/+4DLzScePYjLYyCk5vW7KiiHQtj/83XP6u0dyvnv7fAk4bMq2zjzfwD
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
v8w/D267qnjALP693B54WlHkmI+08Bq8Jkh9YiB/P8eX8KRumyO+c/8of/l+
OB59ntp0LGR+A/iqQ9Ui/dbjPxt+m+VyMTyX+XfCxeVjfm6hJdHwPrFv2kra
5wUcv2TemdV03F943tNcNQ2+X8Wg/qg/9wozdqYFdnCf6pYbrRbtgLMM1VtU
+P3cI+AB6aYjl+fw+OfDy/v7NP9pPf5/4N023+zFfF1OfwDaO2W5o2NpoQ1c
/9zQqy2vJ8et8Guz2XO68v/9w2C5M5tEbtwvKy0HVnP+IymmZT/hye4r5Ys1
OP61n75UfG3y3N7+XTn+1xruqWg1YY2A7d9NsPq2gj5Bndn+DYFP/ao4H6HO
9m82fNC7dkI9LWiC06MqI4tpUZ+BuN9eMa6v4Oe5W8GD1sfFPqCDveDZN85P
kadzg2DX7l3naGny+D+Fk74usdHm/mbC7/DO55nh3WnH3oPQXkjtqdeb+6X5
T4UVS7Tj6vsxvwecOMa/7QpadgHW9d/1SoV5dR/BAfOLlxe15v/67//PhC/Q
5uf79ByM+3XnKxrOPZjfAo5f0P99Qmt+N1g4cvK2M/x/wTl4hI2HTg0tyoBv
3w6W+06718F7Xp/vnteN+bWGoD5xVDc8ic41hYuuzj/RbgLzr4VXXpq/QJsW
nobPzYwJ+enB/PfhI8/XNKw9zvw18On8Xwqbgpi/qwHqezPXDN56mfknwTpj
PGJO0rqrYZtZh5t/hDH/CdhloFvzulDmvwcv6xFfWEDHfYSnzs52D+PfV3QZ
ivPjbGrXuHDmnwiXZ8V3eBLB/CvgNWMPXXhDuwfA5qODC0zo4Lvwt/fiQjc6
9wOsEv04peg68wuG/WsfB86LooXj4SZbrc+CW8zvDN9XUi/PucO8d+A2NkPO
DeX4e9k7WM7Tf9cnWrfjcLSvblwd2PcB846BT21s1BpygHmXwO9eNtwzp+MO
wpc/jk3TOMQ87YVS8cghd7/etWOe0XDkMcchE8yYZzF8q6DQOZnzJ3L9YIuO
PvqNQ5jnJrzKsHqAogHzlMNvr2Xf1+D921F5BK6XzxOU37TO5xgBe802CRj/
kuXZAthlyvpLlrRsL7zXq8zeIZTlWRws25VU4cH9iSSl8JcPfe8vPsbyTGEk
2re/Flk+O8jybBgcdX9m/+10xVw47qHTjd9eLM92w58abUxtaNFV+Ny0cx93
cT8d92L4aH2fl8V8nhTcZhTap8Ny/nymc4fAxUF/n9+dyfJsNuwTa/ohahrL
Mx/49Liv0iDut+MYBQ950bi1B/fX8S+ERw3pGtaRTmuBN7SJSVUYzfwDR+P3
P2QauJrrTevOgneujXz1aiLzbx/97/67XK69CfOHw8djU0o3cz6YSGIoFee7
DGpZ94X10y3w8Iehn1ZyffDgULjpb4bAg859Dk8smTBxhJT105/w5rAz2zW4
PrRQzwjfr4PN5Bo+v3KcAc/Y1GfDSq6H7r8RjhWszQ+LYvvkEiw95Fi/muvD
y7LgTpvfmChxPXndRvh8tEHYdz6vkuiOwf2/Xbz+zzC2Tyzhyeee/SoNZftk
Pbyr/8gM7RDWzy/Cf/SunZSjBU/gpm3WCWeusn5eD7vtWDSvme/v3mssjn/s
+F1t+P7BU+C3tunpPzh/KncdHPq2w/zz3G9B7gJ886ez8kNP5s+Eo4+2XfWU
dpTBL3KKnh44xvw9xqF8mOXsosL5o2nmcNt3U7Q6cj6XzBVW2HksvJn7L+ie
hed4qA17RkvS4dPLo0q7cv8Gn1rYU//wlWP7mV9zPO4/fzQ1P/D9KsTw8YtL
HnVsnZ/mAmedqKzvxtdFp+BV0uZhCbR7GlxoEX5rJN8v+DN8YHmP8ZcPMb/G
BLS3lp4zWs/vLzcJVuja75I4gPlXwcqbsnLy+PzQ8Tj8KfbDnxy+7p8Cv9lV
cLBX6/4U1fDV8BOSKv4+ss7GUrFV1NxcD1rXGN7eZrGyxQnmXw63ddp3/gbt
4w/HXFawyW3dnyAJ1rw1ctMfuuI9rJL+U/M3LVCbKBU7CvVOnON+B6JxcEiv
EY4efN3dCTbfnjPNbQ/zH4b/jFvRZh1/j9zbsGDs7octtNw7WDnwdpElLVQ1
QXmpqKBlTTsawV3MSko3tB5/Rzjj+nRBGZ12AO6bMW94JfPIbsEXRHMD/5xh
/jdwQdfpkqXcj0GiMgn1480ZpV14vvqMgnu8ap7qxuslbhFctGqju2/r/gz7
4J7jE2tnBjP/DVinYbeTOc9nURl8rs6w7Tm+7q4kQnn40P1npi/zC2HDpEmZ
7enc+XCXD2ZeV/i8V24vvGiJT6MZzx9hLOza5+rc1a35S+BpPXtar/Rn/rZi
qXjj8TO/43k+yObAtZuGPHLi5+vugvf0zI/q2Xq9x8CLzSblPeLv4VMEf1wf
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
4JubBN/59xXNcMTo+6m7acFAN6k4cIOegcpL5reFc+9mj5V/w/zbYNX7k/SG
ljP/FViq4XzFqZT5c+GcwsVl+fx7ud9wd9luqzeVzN/fXSqe7PIn7DrtOBMu
ca7v8p15/TfDY+uWmx/leJ20y/DDzBMrEwbw+n8Gf9gyvf64Jq//H/C6vXPE
h7g+o6TvOty/5v/IHtaN1/90+GHxC0Uflp9xG+AOT3oPDdPg9R8M73nTJf0a
yytBFrz74QOVPSxPRA2wbfFNrzEsb9x1PHD9as254tGd1/802EfD3foqPz/X
E17YZJHxjZa7CIef7jlkcl+Wd4/hDTGHygO4XqTjN/jLeqtxS7lfhb+2p1S8
qGfsyjw6bTI8w2xR6DuOB5O5w1nemTXyrff38/CvtPax7ZYx/0P4WMPNp/u9
mP8LrKRu8NbEl/m7r8f9RPYuYgDHC1aYweU91P1nsH4qcIWjFmW47GX9TnQG
ts56ZD+vhPkfwDWLnsZ25HplwVK4a1ZqTe12Pl/r5oXfd+rAMznerL+L4X3n
fwzczfEgwjVw4o+AN3ZcP8vxJDz16Fab/pWsv6fCkeV5s41rWH//BN86fTJw
WOv+5+obUN6Vdjl9q3X/TxN4YZBpXX/uNy1ZCfeodazN4HgPn2PwVfWYaYXc
bzMuGXbL3/KpgP0PFVVw74u/Og7h/paCzhul4n7zhZ1DxrP9MgH+uea205Sp
bL8sg1d3Shl3ay7bL0fhnIVBqvUr2X5JhP3WSfeW7md/yft/73djXfioA+wv
6bRJKr43Yb/o/Fn2l4yFH+VtV3kbyP6SpbCn+3o1m0vsLzkE59weVHz+GvtL
EuDV0xwOn49hf8lbWGtU1pJrtKTDZrTn931Nq+T4Bh9DWN/TQbQqg/kdYEn+
eb/l7I+v2A8fH7XtRM++bL/egjN9/UL1BrL9+hpO8Sg1NBSy/dpui1RcGNi/
sJn9YcEj4RejzVJ+s/2YuxDOX2575dYItl/3wStX5xi/o4XX4YKy5aYBg9h+
fQWHicQ1mhPZflXcKhV3vmE75N14tl+Hwwvaux7WFrP9Og/erff+8a3JbL/u
gWuCHjhk8vtJrsHOgXP2OTiy/foSPpg0MmIynzfEyW9DfeznWc/1reO/DWCV
XjErB7M/VTAHXtsiN+V6FPPvhH0l6hY9TzJ/NKwj7Obrf5P5X8Cro/r3iOL4
8ty/cPoZQdLlSuYfvB33q4izmqF83im0g6uVlV6mKPL51Q549ie5PCM+z/GP
gPv96B4ua2L+fLjAoWjAQD4vlP2BJePvGT/k80Rd/R1ScZcFbRPTWp9f2sAp
rsNKL/LzfbbCvgbevebRcWHwAY/yr+PfMn8O3OS/OqriM8//X7DVU/eLJgt5
/vfzRvtz+0aBlSfPf2u4i9T58kUPnv+b4D7pKSuvLOb5/gw+sXL3+6WuPN+b
4B9H/abO4H7pjn18pOK2N5R/TG3d790KDu0V/mAz189L84KXK9/29eX+9rIg
WGXHJDkN7v+q+xTu5tFpbr06z/fvsP/Yt+uErfvd9t6J9mni8rRF3A83bip8
s6ehcAxd4QH3nfzXWIfvLwiE7wjNPo/i+HjRIzhm9wTrlfw896/w+H1rfW3Z
vxjccxfuf4ltXwW07ndvAUu6rDx1MJPlnTt8y8bZ4WYiy7tzsLP3IgW7JJZ3
GXC3RSVjRSks7+rgiqKxKi/pNK3dUrFh1rkUS/b3yUxhx/gR8VXsX9RdC0+8
e1J/J/sLJafhyxWaXcLYP+FzH86p3eZ95iifV9TAi9RG75nN/pmKrntQHnSz
MFZhf5xABK8sPtWzMy1aDd+cvmucNstv9xNw9785DZVcbzT4Huz3d0ZiSOt+
7x/hTnP2uEezP1JOfa9U/Pm++tJGjh8UToRtP75dP4T9kY4r4EmF5xLkOJ7Q
PwBeF2gXmsH7Q9pd2OdEj7OZD5j/A+ytfyryIK0r8MX3Ten9IIXzEyTj4bLD
i2fd4/MfH2f4ef/PZ1LouCNwl3ojr6Evmf8OPOaebuTZG8zbcR+O39v3w6fw
+ZD7GHiX6d8npcnMuwTuPCykyy3en3IPwrWdy2Yf4vwJuQTYd5V61ckG5q2A
+42T7HORMW97P6k4uvmB4S3ez/xHwx0DXW1TWu9vi+Hfz9qZD+P5JPOD04el
OX9n/5TuTTgwO669DZ8/ScrhMfMCa2dyf20f5f1SceUL3XGe/H5xI+DuiR6J
vT8z7wJYx1j1my3vlwJf+Fudy9Q3vH5EcbDk1bbFx7k/tHspPLT9o4Kuhry+
FQ7gfK5atq1+LO9vw2Dt5QZa/W14vc+DD/ftZTTektf7bnheQPNChThe71fh
rhfqDYI53iatzUGcL7m/bqzh+BzZELjLPJsr92nd2XCkvLtjfz6/lPjAF6Tb
X4t5f/CJgv8MWHl4WOt6loWwmd3Q1YpTWJ61wH7Nyb5hU1meDzqE+qJ1/fNk
CcvzWbBC1MSAMbYsz7fDw8Mjy0Zz/cvgcPj1m+V9d/L+kZv3z14rNxnQcn/g
OSZfwjfSwgGHcXzdvD+En+X9TAJPbppZV871C/23wAvuDJ4rYP9RWii8odfH
IlVa9hz23d1hwrQa5v8JLwx5WrGG9wuJ3hH83l3/jr3fgf0RM2DN39e3bqLj
NsLyhhPKPrI/p+ISvCW7i80y9i8IsmGTSXO3S3qxP6IRPr835Pp6HfZH6B6V
ip8tOPttB+dXBVvCQk2zhVbj2R+xHjbYtWfecVouCH4xNDrsioj9MU/gWQWP
89u19r/Vw+tv7UuwcmJ/TC9/qVjNUCE+cTn7Y6bAsg3F3vqevJ+tgz01LK9v
3sz+mAvw9XveZhp72R+TCY84tfWT+Wnml8F+6XXHu19g/h4BcNS1RlnrfDZz
OPxizN5DfF3gBifrj7S15fw10VlYa/mFT3OimT8dHnTdTrkhivlr4ZInrxfb
RTK/5jFcL/XqfoXxzG8KX/B6c2BVAvO7wCXj3wbWcP1Fx1OwaKDQSYd/758G
v2nvJd59h/k/w24Jvk4uicyvcRzXb02/Hito3UnwrIUJSx0zmH8VfPpper1X
JvMfh8csbOfp9Ij5U+AL961eBtMV1bC6W02t71Pm73ICv2fIioXvcpnfGL6i
/nlnm8/MvxzepaPs2f4T8/vDw8arngihc5Pgt5cO7VH5xfwf4PsRGy8//sn8
aidRXlzW2n/MmPMZx8ET5riuNRNxPqMTPPPYlbsTON8x7TDceUBBrc5ozme8
DS+dVdmpkdZ99+/97iXenmLC+Yyqp9CevZHf2deI8xmN4KDpb7IuCzmf0RHu
nBa7XZ+uOAC39cz3qBjB+Zzx8NaNv07o06I3cP3Y2XNLx3I+p8pptK9d3XSs
x3E+5yj43h/Z/CljOJ9zEXyxTblgF7+PnB/8PKxP+ZNJnM95A55p3mf4TuZ1
LIMzN5040tGc+ZXO4PoZl19mOYP5hXCIebP2MFo2H+73oXu9kzXz74XjTZSM
ntGSWHh378tDxRLmL4G/bjpdsonzSSuGnsX3a9k76+N85p0LBx+zdDq/gHl3
nf33/CLxeR7nl7rHwLavT7XNm8W8RfD3w+d2G81lXrlzqN+EJBvo0XJD4EtR
i09NoIX2sMua0PUO/DxHb3jINu9lKnzdP/Lcv/lYvU935nxYWTPs8V1qun8p
8w08j/rg7t4Rkc7MZwt79Hp1rcmJ+bbB8oPSzO04fzbuClwY9uW6oxXz5sI3
zNzFfpOZ9zfcK+LNiDkWzNv/Av7/Ur+P61yZdyZcssbkZL4b826Gv2d0vj7Z
nXkvw5KbRxY3rmfe5/Ac+QT1MFr4A5b9iA7668m8fQNRHsXq9t+2mXmnw94z
u+bmefP4boBnp4xzMN3O/MHwrEPtGydyPrFuFuybb+v2chvzN8B/K3qkWXox
v85FtA8Ob7/yhI6bBqemPajPPML8nrC1lvwO21PMfxE2tex4MZmvix7Dnl/d
U7OOM/83OPnDiBSVCObXDpKKd4ot99nTuZNhJ8VuHYJouXXwc0XbXzm08Dys
8Wnw5cw45n8IF5T3Pjqc9v8CxxX6J7hcZ/7uwbj+1FMXaBYzvxlsdnL32Y6F
zO8Kv38vV6pJS87APlpHjznQPg/gsWXjfAqKmF8K//o6Z0y378zf7ZJUfLvd
X2kkLRDD3bemStXo4FT4fLdLMbNUOB/9E6yvsD/hgyrno2uESMXH4u/bBCly
ProJ7Hz2Q9IO2nElvKqXSaer3Tgf/Rjcouvhf0GT89GT4Q2aXSer0rIq+HaT
9xFXWrfzZalYryl6t0SL8/EnwO1Nn1je7MX56MvgVLWSsuiBnI9/FJZeduiY
yfnxFYnw/ZyhbcfTgvdwmcr+pJDunI/fKRTny/MvL1/qcj7+WPh9womVPfU4
H38p3BjoXWo1nPkPwX7yhUM9OL9f7jZsFxMt/NmX+d/Ck4aOKTfqw/wdwnA9
V8wyqKb9DeHfebVv+tFpDvDK5CkTTukz/364vzTaeg7z6N6C+1xSFZsNYv7X
cP4o4w1z+bpPuytS8TXXbavCezD/SPjDT2FeIX+vioXwxQ2qOzrw8wT7YMeD
o0KecD0A0XVYd+/w36G9mf8VXHtQvjif+YIVw9H+8Fznv5HfL3c4XJsbe7aY
lpsPh54P9blIC/fA3Qa/3XagP/O+hL827d7Yl+sFp8lHoP27v+elupHMawD7
jsgdtJXWnQML1N71OEBLdsLPTjcI941gvhfwxBrliNb1Fyr+wheeXxgxnBYM
jpSKNx51cn1mwnx28KRIs+SMxcy3A+5mppepxt8rOAKu17G5HcDzIzcfXqU6
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
w/qtSsgYQONfBvt05S+MH0jj/x9s9O39FLe+/Uy/sZGE4zHie+oNGRp/D9jK
PGqQuTSN/xrYM/ixZwvd3/AIzPIaOf0oPZ/nE1jdy9w6WJ76f8BhGRYfZf/1
DzOWcMqvBloEK1O/G/z4untCDm2fejQ8vXv64wHUyz4EH3v/9uRbFep/DJ9R
fzzdl7Zf+BVmJ4ft+2lJ/frDJZypz1O258ymfhd4q0HMY39P6l8FWzp93/PL
i/qz4O1JP7N3zaH9/wFc+11N6ivdv1PXBPO7aWGKppDG2wn+ltWr+YvsuRJm
Z5dFWJ2h3gNw/mC3BEk29d6Ddx3cFX/4OPW2w5pf0sIcU6lXewSO93pWkwTx
1Lcc3qP6w6qVT3374C+WBl9OHaG+u7BAcOa43zHqa4V7vfR6XcksTVOcf82+
kTT9MPVNgXlPL6eNyKG+JXBYd9BFDlmUDn9Uz9R8kE+9t+DGSPlT7jR/GbbA
hX4ectxC6h1oJuGseGW0PY3mL/5kmJ3eJKtcRL1hsKTJYaARzV8Nu+BJHveH
n/k3v92Em9f8WMqn+YfdBPMC96j59af3t+pI9Cbsj7yoTu/vSXCVnDfnixK9
vxfB1X1LZziRpVJhW8fGaxPIrGvw7W0Ter4Y0vv7HXzzwTTJPmN6fw8Yhdc7
R10rQY/e31bw8S1dT1aQO4PgxAiV1haafwy3w2wts4hNCjS/FcBXFKaq7/hD
/W/hdYLJyVYXqb+/Oa4/LykVbSU3WMKObFnOpALqXwC31g9a63iL+rfCy4+4
5ObR6827BEdc3j4o4yaN/2v4gsq7V2dofMTyoyWc9/Krh4+ZT+PPgqudymts
Qmn858Mly9q25y6m8U+C+SmNdUVkwQU4ml2cEp5C418Nl857qhOUTOMvMwbz
YcaiUafJhmNhd/bNTUk7aPznwbGZCd+XJlF/IjyYo/gsfgP1n4VTAytqX22i
/irYYbaluRFZXWos3m+XjJOXr6B+c/jT4bCxzUuo3xsOmFfrYrKM+jfCb+6b
/nmyiPpPwyVp697cJUtVwpvaG+Lqo6n/Nzz31rmVAfR+4ZqNw/GUK6j/lUn9
c+DTGe+Srm+j/nVwcsO81JEHqP8EPP/Q6RZhFvWL4ZVVmYJR16j/Jzz+9o+o
RReo38QC+8PkKzM6jlL/LHjSjwcThYeoPw5uHee89WUY9R+DRdHj/eeGUP8z
2P2o25zfdDuvG+5aMuzQO7pdaMSScNI9iqySaXzFM+D+FQoTE2ZS/xrYc6lE
dtMs6hfC6ru7Xzc6UH8pvLi/smggzXeC73D1sWfPViRSv8F4nL+YzPw8/N/5
nCucf2XRqUR6PxuuhuNbfGyvkz1z4PXFz55nkvmP4DOBPgZPaX7I+wIv6j9p
0No31K9niePdFufimI/U7wx3GLprbPtK/Tx4zIrEF0VkXia800/WT54sLIbn
dqa9+kXnr+LP8ILYBrkxdP4qpTtBwhm27eqRSTSfsabBKgfaxPm51L9iwt/9
g6XeRdsr2A8/WfvoSPFa5vglKoI/HpPzuevGuLMNjpJRObG3NoPp15qI84Gc
yoPJJYw92fBV2yL9+SmM+cvgFVPLOm9tYZy3F67dNtPxVQbjhjvwO9WVtrcf
M1b/BK+z/h5tKGHM1rDC9YF/9u0DzYx5DnCCwWzlrBbGwnB4YHvGsiYXZvvE
u+HlqnnDOa6MpW7B++JVbg6ewZj1Abb3jhPb0+0CO2uc31ebWB8fS72hcKfU
TWEmuTMNfhJb8cfRgY7nN2C7vq47H7iMPd/D8dyK5jlkvoqNhJNjkG75KZxx
ng18jP/Bqo3cEAz/0ffzbl7MWH0n3N0iVfOJx5h9FfaTiy7dHceY1wBXr7W2
eZLJWKg0Ccf/1J/Gj8jiiXBRUKYKl0+9QXDbzV757ETqTYEDdqcq+W5hzL0M
FzbbyUUKqf8NfGiRRpsMWdTPVsLRV/odef4S9Y+Hzz+r1nAuof5AWGnYmiGa
ddSfDN/PmNRoW0X9eXD+mbXrZR5Qfy388tYE45IC6pezw/N7jjUSX6d+C5hr
lhetRLez/eFR6Tutyu9T/2ZY/Egv5M4d6j8PD/ZiLVSk28Wv/v69NdHrv/pT
75jJmH/W+6R3krm+8Hqv8Puf4qmXD9vJRF6f8683F+ZY//cgbTv1voDjWGOX
Op2k3j7YQbmg6Ae9Hp6j7HG8sJnbq3+ReufC2c6OTd/OUu8G2HXWvRhWFvWe
gj+5tYSOPES9FfBCm0DWpQTq/QU7PrR+dXgn9Zo64Hp39oahn7ZSrye8y2RE
a8Uy6l0LS79MD5ixiMb7BFxxXJPTRfsXqxz2upgWv7qQ+nvg+s9Cg+Qb1D98
Cq7nNP0/2ZNFM+EtplO+OdJ4dMbC7fbVDzbQ7YZHYZ65Y+L519T/FLbw+Zpe
S+PP74IzD5WJ/V5Qv+FUCUe+Z+js9Gbqd4edTv3npvGR+mPgntDI2ItPqf8w
HJubrhP6jPpL4BO+eUFmT6j/G7z7zgKWVBn1D2VjfmlZphFTSv2ucKqxjpWQ
zIpi/31/VU2eQvsfNxs2WRquW36L+h/CMg6JahE0nqJOWMHTLrb8KvUP4WA8
pw3IUqLXz3A63J295YkM2TMSnnjAlp2QTP0HYdVYA/b0HdR/H7427ZzSZLK6
jqOEY6iV5ha7h3od4YtTfi9csIt6I2C3SsWhPLIwA5YEJc87QvuPWPT3/mN2
t4qOUG8bLMh7+Cr+KPUOnobX7479iLJt1DsVtlH0YPXRfCJYCvdrzZpYRe9/
0R540w0Pgz5y5214rpP/nkCy4Uc4p/8T1YXrqHeQE8abo+pfTPMv3x6uuauY
uug9zeeL4X5uGTOlNWi8BXBS03hj6SHUXwhbb3DNWDmM+pvh/la9u8fR7Ty1
6Ti+tHyY4a9P/bbw0MtHXkboUH8IrC/v6paiR/1p8KTWzP+8jan/OpxV7DJS
cTT1N8IKfzyjCtnUr+yM67Odnr9q6fggsoZPOutzlgRQPxe+t9+Bc2oB9e+A
R9Y0D50UTP1XYPsvNXHqYTTe9XBdW0/K9xU03oou2P6PR3g7V1L/BDhKZYdb
Gpm9DZ4SrHHpJc0/wjrY36suqu4d9Sm44ni+7/ci/2rqGw/r3tQd0U1mBcAn
nVTG7nhDfVtgixWJHQK6nhRchA18N5e7kEU18Pan+pNZdH3aKeuG62OZoNsZ
ZMNx8JxNnbddNOh8xQ/u8OIfnkHmb4IdVu+/56FI5yvnYNWzgvsFw+l85SWs
MVDfe54Jna9Iu+P1lUgH5JPZo2Fd5+Nad83ofMUHLjwb6PBoPJ2vJMD2rws9
Vf5dj56BXZosnrx1o/OVF7Bjy0IlfTLrj/vf71dmLzdbSr1eM/D6l1kZ1DnR
9cl6mKNbOc40mq5PTsJ9S2xG6G2h65FeWEOj0Hc5fX7MH+Eh4UybaJ3bNYA+
X54N5w63WVKqSZ8vx8OxW8z9TLXo8/XjcN6uEq9W+jyaXQZfnV8275E5fb7+
H2ylP0M3eyp9vmo8E9cH+3JC2wPp81UP2H/+uL3DyVKx8IaJPnsGTKfPV4/A
vyb1l9FqpeuxJ3Cqk33ZQfq8VPADvid6WaT8hXqHzcL19e8/lzK/U68bnOr9
+vI3Pfp8PRrmaOe/GDSEPl8/BP/avCbEgD5/5z+GV/U+yd+tQ/1fYemwBSe7
jKhffzaOH7uyf/Hp82x1F/iLrrS6kMxeBb9/qT9hpCL1Z8EXTkyakNVN16MP
4LKUhvDN1CPugH035txY3kjXo0M8JZxABWuPP/R5N8sJTq23XN1L5q6Ej01b
3BXylfoPwDJXTKoq6PXvbIdfKXXeCTKjXu05Es7WArZa3jTq5cB165dbP6LX
l78c5qgpzAsh5+2D125cNmmsPfXe/evUIivRBOrT9JJwPsdtPq07mcZzCVx7
mbvUhT7vF6fDK6dYP7cmS92GrcT8Wzfn0Xi2wG+HjAnv70eflw+ci/OhEvY5
ebJgMvzxhem2dk/6viAM7jA7vf0PuXMX/FMY+ZUzh/puwpe7dcY99KK+Jrjq
7fXG/vNp+xd5Szgv5p6+ejqUxisVnrngbOybOOq5Bj8YK/djWiKN1zuYzZPv
HbuLeqx8JJzGDeOW3MugHi6sNqe0ROcA9WyHi+uGaXUcpJ4C+Oho4/rj+6nn
LXxWxUY/Jpt6+vuid8TrCWHHqMcS9n6z39nnJPUsgO1mxMjH/Pv+ayucnH/+
l4OIxusS/GGC7sRyct5rmD+09tT7RuqVn4fzwRvs8IT31Mua9/f6WSS3/QP1
zofPbZ00vFJMvUmwMLpYMOEVjecFeOT47KYLZHE13Dvceo8cWUrWT8IJ3qTm
/ZK+r2ONhceJM+RP0t/jzoOV1Ev4y+n+gkT4XP1svb5H1H8W1pH/78iK5dRf
BY+NubW/dgn1S/lj/ruvEZi6iPrNYZMxg/blLKN+b/jj6d63/fnUvxHmOebz
jmyi/tNwW3Taruk7qL8StrblzDQWUP9vOHDKqbMcMs9sPq7P5HaPGp5O/XPg
Jeublh6i8RWvg13iuV3ux6n/5F976xv2ytL3n2J496KqWV/k6PvPn/D3lLzG
GrLAJADnf69W52vJ0/efs2CFfZ+0bNTo+984eMvo73o6MfT97zF4r+DHSsUE
+v73Gax6smZIaiJ9/9sNr5+94p6Qvm/OMwrE+O/t1cjMoO9/Z8AhTel73u6l
73/XwLytReKw/fT9rxCuS7ZYwTlE3/+Wwkf2O59beJi+//0OX3g64GilkL7/
NVgg4Ri9qLC2yqPvf93gx4fjZFJyqX81LH8+Z/XPC9SfA0+58768jL5fFzyC
Vzhbfs2/SP1f4EaL2SXqldSvt1DCabq5eOuUfsx6AUNn+HDnqnN71Rh78uCZ
xqckR8n8TLjedc3K+eS8Yrg80zmOQ274DL98dnRsYX/G6rpBON/IOLC+g8ye
BrPXhzo7qTPmrYB1VZwjf36l/v1wZdBP53tN1F8E556cvHnKR+pvh8Mqlk+u
aKZ+LS7O16ozbboUaf0DG87YZ/imeQCtf1gGP2tlyYYa0fq0vfCgUTsidejx
nXf+Pv78iPaRH2j8P8E3Zc+/kntL468RjOPDlCK11Doafwf4wfpO65xqGv9w
WKat9+zyVzT+u2Hhlq9ysr00/rdgpVDrkMf0/OwP8PGFl/sbGVO/+iLMl38E
9x/K0vo8OzjDXCsqQJnW54XCHedbUlo0aX3eLtiqqSF0hzWtz7sBn5EVhF61
of738KrlSVccZ1K/Sgjef1vldoTZU78NfDZBeGYdPb4zGC422xT4Hz3ecCds
bPg6INuKxv8qnHbfYVb7RBr/Brgfr/pKDN2epxQq4SxfPskkz4HGfyLss+db
wFnqUw+ClRfWll3ro/0/Ba6feHfdiG7a/y/DxWc4cmUK1P8m9O/6m9WL5Wl7
O+UWSzgTQhKPNY2k7bOAlQNC3Az/bZ8/XHDdyjf03/Zths97rrucPY+27zw8
/fwxizof2r5XcMIzh666WbR9MuESzubegDm2c2l8xsCdZSkLNi6k8fGFEzRD
ZL4spvHIhQ+u5a+6OJ/GowoeqrnaexGZ1Qc/9VMee8SfxmPUElwv9Zk+Dwqn
8ZgL152bmbR1FY3HBthM+vjFYVHUewp2TRh7+L9I6q2Aj7ldWu2dQL2/4Fm1
Ce7T+NRrulTCuWXvdX3FDur1hM/8KDl7+QD1roUvN3v0njlCvSfgTpc5Sgan
qLccVl+Re2JGLvX2wJNdD/vcOUPjMXwZ9r+7tVHJdLtUHJw0pTzn81rqewoP
i1xyRIW2T9AFL16jt6Q3mvoMl2N/0E8YpU3udIdlpm4dOIZeb8MYeAlvydMN
ZM/DcJpmnUI+jR+/BF48rFgp+t94foOnJz5plKLXu2FoBK6vfi6O9QumPlf4
S/CV8W+XU18UzJ4qjl0aQX3Z8Dm2nss2svAhfOmojh2XR+PbCdspnlrw7gb1
6q3A61W6nreggsZ3Ohy8w7Su8C71R8I67Sb8PXup/yD89dmsuC0B1H8fNrdM
OS96TP0SWNiSvrV4NK0301mJ96O66Zu942m9mSPMrgoceayP+iPg0nfb9aZ0
U38GrKDuMe3gF+oX/bX9pukd36m/Da58OGNLGq0X5k2NxP43cZup6WBaX7YU
HhKr3XqX1geL98BrWi8/efcf9d6BV85KWzvkN/V+hAcW9iWUfKPeQTwJp9X/
QWt4JfXaw3G+MbJcsmgxLBlr+dG1gXoF8LCJBpGa7TTehbDmohldV5tpvJvh
JxZuKRtfUq/aKhy/5jpOLjpNfSGwvO6GMc3HqS8NLu4bHjSUzL4Ob1oj7v/M
jca3EX585WCKoTuNp3UU5qe+73Oux1NfMByqtV1Ogd5frB1wpIvZuI1k7hU4
8bTvp8OrqUdxtYTDmim/vXkp9UyAPWQW5W1aQT0L4XDLgrqBND94boOPTNFh
X6H3Oz8fLtDdee1WMo1fHcy+t3+k2UbqU4jG+YejtJxHLPWNh89Zm7MDaf5h
B8AZY+U9mmOobwscu3BN/LB1tP9ehPd0/hkh82//rYH7e43ccZH2bym5GAnn
0YiWAWE0/7HGwQevPA+LJnP94MYePadxLjSem+DR0nuylGk+FZ2DhWqaPmvp
+NP5EmbvC4utGkT90msknPQR1y71DqH+0fAgzaHeWf/mYx+4YUpyP2tb6k+A
nefeujuf3HAG3iV5kBJqSf0vYJuZ+U1D6PHsP3C9S6PtCxb1j4yVcPYbmSe4
kIVesDArayrbjPrXw1kLP71fTZY6BduF2rb/vQL+2/8ctr5j/E6li86XeuG3
frtiLNvofGlEnIQz417hxnl0fiSaDbvpJG3kldL5Qjy8eXBjuyPZ8Dh8Muvt
1dliOl8ogwO8qrI16e/x/4OjFbKLpD7R+YJxPOZzU+G1bnKDBxxVWLqjP51v
qMfCi7d8fbe+no6XR2CdMbklhg10vHwC75b579xoOv8Q/oD1Is3z55fT+dKw
tTj+rDTIVN5M50vusIFNWr+rfDpfiob3fZg5JpjMPQSL1iw4uI4seAwPvqWV
vIrOf0VfYWOt1AufIqhffx2uv/zktp+m9ZSGLrBU1EuLNWuofxV8VKlamBVO
/Vmw9Give4vJeQ9gQXt1YTb9vYYO2H/myWGVZPUh63F8WzMwaedq6neC9YY6
uNQup/6V8KNYDX0FWr8pPACXxB486E3rM8X3YK9kJbWARdQvgbWiG2YsDaF+
7Q0SzhvjjdzRi6mfAwccns1WDKb+5fDKV0ndd+nxon3wpLF61rWh1H8XXpI+
3U42jHo1N0o4h1y3dGXS9vOnwLtMQ9fo0vPlLYEthh5xWk5uSIevH9+RM8eP
em/D4T4Jn/gLqLcF9qi49iDIh3oHJmD+L+ltODiHeifDPCkFhQ66XRwG73jw
Lf/0CuoVwFWV/klvyKybcL7XLvkj/tTbBL9epaaymixQ5eP+ZsOHppFFk+BX
tgt6o+j17lwE5w8Z+SeU+gxT4aDExT1Z6dR/Db6badIc5Z019X9dkIzN
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJws3XtcS38cx/GREMrc00Vzq1yqldwibUqSaJXc0+jmlpZrRE2oKD9LUkms
C4UwikQyReUSK7eoqChsZAm5+72dj98/v8fzcc7WXju37zk7m8HLgtz9OrJY
rHe9WKy//8d/ovJwJT+W1W/hoJXn7WDpRzjKofDrsGWMFQZiJZ/Pu7do6ULG
rOnw3P797771ZMwNhjvlKXuoyMIU+KlzVpzRPMaSm/CsqaW9DcjyD/Ad7h7R
08mM1QO3Y/rziZW+tow5DrBTSOKwWWTBGvjrLZHDKrI4CVYIdCySybJiWPgj
rfd8G8b17+BfiXGLjD6e+2v2gAgl32COy/ItrYx5fPhH9eLYEjVj0Sr4mNXb
5odkaQK8eURM8mIlY8U1uJdb3tXcJsYsJfxZddkp4QVjbt8dSr63zob1KfWM
hVNgI5+WE+ZkyXI4UNY0shdZvh+WLCi+evklY3UhHO5b89G/gTHnNdx+RX13
y03Ggl47lXy56YWjt24wFk+C18/w/O9tNmOZH5wxy7vA4zDj+n1wWOTutUnJ
1H8ZrjY0/nqEzHsFTzeou7KdLNLZpeQvcx+4OjGe+ifABRPKtKftpf5lcOTb
DMecGOrfC98a+qsqaRf158NjtbuwfMKpvwFecuBL3doTZ5n+7pFK/oAlmU57
yPKxsP3B+i9mRxirveFBxq1rexxgzNkDP7Zc2RDQeobpz4NzJg12X6tkLH4O
79VLfT21hbGsa5SSv2BN4JU5LxnXW8FHQz5uq9yXw/R7wdvvLbBaFMGYFwWn
l5yo3idgLDoH7x6h1fXGNMbSGnjQDMElc0fGCs1oJb8kR9zVZDJjFheuOuvp
bWnFmLsQHl40cpazMWPhTti+tduPMzdOMf1nYL39G9bMKmEsr4Z3ejvc3lzA
WN1xt5LPWZ39aEYeY44ZPC3rS8+6Y4wF8+BmjR6SarJ4O+wTvlmmIMtOwYFN
cd19yPWP4BeJp5M3kdmsPUr+y+7CRQY+J5n+kbBbgmPTXn/GojnwEqNEF+GX
E0x/GHw12CghlKzIhk8Pa3H2C2PMegDvMAw6LtnCmPsLFiX88AvexFhoEqPk
p6xb6rNuNWOJG5zxeIzOlRGM5aHwHyer0loOY/Ux+EXw/rgVj7KZfgXcJchl
a/98xoLv8IYYtuELsnhYrJL/Pnf614CzjGWzYXdLy86jsxnXh8D5p5a2tB5n
zM6AJ3jzxse5MOZVwHUhrb87T2Ysaod/3G2M1ejEWDp4r5I/80dW0dlfWUz/
TLhxe82JNT8ZszbCwedP/2dB07lSWJK8oLyNpgtvw8v2uk/qXc1Y8gmO2Hpl
iSdZPug/7D8H+oWzFIzVTnDpwn63ltxhzFn311tTU91uMxakwpXjRQeMrjIW
l8Fh1ep5d64wlrXC+/Relo4oYFyvv0/Jt5y7e+ESMtsRTlvkYLGDzBPBy8d9
SN91jrHoEBy2YP7xBrL0BuzX8t5yQxz1t8BBVitbvEZQ/0CJkp+17cB/V4ZQ
vz182eGKp6ku9QfCZYa+514PoP5EuKrfe41X/aj/Olyys5vX177Ur4Ltsn6Z
RpA5/eOUfJPnw0787EP9PPhPw279fxavhD8esjR63YP6D8CeK47bJn47zvQX
wUG++ZruLxiz38J9Xh5/9LOYMa/PfhwfGoYY9ixhLLKFO38cs2VVPmNpAHyw
+qDprdOMFXFwxp7dTqaWjFmF8AfXPnbpGoy5zXB0rP8K7dJjTD87XsnXL3Dr
q1nCWGIDLw607FuWwFjuC59/6np+tCdj9X+wy9Vd7yQejDkFsEVrEG+5LWPB
S5jj/a31N4+xWPuAku8atsajfhxj2Xj4v9zjaw5+zmT6l8J6/IuSqx2Y6exY
+OSelmFjI5jpvItwl8WrPo7swlhUD0/KXWzSlJvB9HdLwP5fvvZp5H+MFdZw
wNuaL/cPMGZ5w+MCQuf+IHN3w480Wkfw9jIW5sJLf++xTSZL6uAdtxN99CIZ
y7scVPKtLgyw7TGCsdoS/tLUPCB5GGPOYjj5rFfIxMh0pj8S7sw20LV1ZiyW
wXpfRnyQz2EsewZbaDzkfZnGuL5TopJ/rr2/VfkAxmwLeMW7/QV/NBnzFsAL
ruY6aHVmLNoBx84/bnbwYxrTfxq2S7Ho07GeseIJLN39uPpBE2NWxyQlf06l
2eqUt4y5o+FfYWH3vcjCubDXujv1IhVjiRjWPC533UqWn4S/GxXHsl4yVj+E
M95LB+k1Mub8gU2zDF0udqH+EclY/p3mBzesYaaLPeDnVxbdC/FlLNsGP1l1
YIGzF+P6LLhwYZ7n7fmM2VWw8sxq70p7xryfsH7/oyYreIxFxoeU/O5aAz6Z
k6UCmM+qif02mfq3wMfS5+6opOmsY/ChSdNsPzySMv334dg9LmVDbzIWfoOX
6T1s2VPKWDI0Betb/O9oQ7J8FizfISnv+IyxehOcMNYl+noNY046HOTybIN1
HWPBXXhi6sKkCAVj8Rc4xVbPuRfNL+McVvI3Xnl6htOL+p3hX2P7fa/oTv0b
4F5jfxVkknlH4eqKn7eG9KX+W/BD3oRbHw2pvw0ObRk2qoqsMExV8isS0t7Y
WFC/E/zAYpfhUQEt/7Xww6/C2P4LaPkfhoeNsb1XNIOWfykceKOPeAZZroZ7
lD1uc3ai5a93BNvvgLt8MS0fzjT4Ar9DjbE7Y0EQPDHl91ive7T8k+Erd7OH
GxTR8i+B/TcY2Jz6Qf3vYfU+Uz8NFq3/ukeVfA1WtzKOOa3/U+HtriFbwmbT
+r8aflMy3X2lkLH0INxm4bzPbi5jhRx2uPmgWjuKMUsF98tZ0DyHzO0nxfLL
dhluShbawWdWdmh6tJOxZAU8QGN31NM9jOXx8EPvQ72/ZzFWX4UL+h3KyKli
zHkDn8trvFBpzOwPBL3TMD57MK+D7nDG4snw9ax+nqdGM5b5p/3d3x2UG5kx
rpfAWfIh0yPiGbOvwKebE7rMoP0brwmWh49pqFtO+7+e6Vh/omQni7bR/n8i
3OPyyv7fgmj85wNPubpyo7vgNNP/H+xsktr5zzXG3Euw2/lDW3zkjIWNsGOz
3+nmWcx4VNIjA+cfFwKSL/ozlo+Dfz590//ZFBr/CuE/p/ZZBWXQ+DcG9nFv
tr97mrHgAlz9MsFefYmx+AVc2+a0KqSEsUwrE+uL69WtzcWM68fAD8xmft1Z
w5i9BM7/vs8wrIkxLxr20shr6fOBseg83LreIXv4J8bSWrjMaI7O6d+MFZ2P
/d0e9C+mdZAx/ZZw5Vhh5HgNxtxFsPRaYH5uJ8bCXfCC5igH6XjGkrN/H+9w
8PBNB8byp3CPfU2bOrgxVmscx/E2YozWieWMOebwtS/x02avYCyYD++1jX8c
sYqxOAIeX/rZXjOQsSwHfmnf12A6uf4x7DXZXxVOZnfIwvE1rYPHryDGvFFw
cNKpygCyyBOWhbqbxpOl4XCf+Z/zrMmKE3CUt4GPYAv1P4Qvzt0cMYPM/Q27
B2ckJYdSv2k29l91deV9tlK/OyyL3Fv0hqbLt8K+Op88mmi6+jh8qdO+JY/I
nEp49PA4ow1kwQ94WeF7h21k8fATSj7rvIuf4zbqd4WtDx5Rbwyj/s3w/ILz
kjAyO/PvdG5gxRAy7x5skLZqweFw6v8Kd/HRm32WLB1y8u/6Yj4nTEz9LrDp
4Pk35kZQ/yY4LmdBkgeZmwb7rNT66kYW3oHjC+52DImk/s9wRc/8pilkudEp
nH8pHF6viqL+GXC7vZ9xIJmzHp7rEqzqGk39R+CV2xPtC+KovxxuypujoyTL
PsI+MeXHvqZSv0HO3/OxmrgfZPZ02Fhbz8rwCPUHw6/LJtrsIotSYMfqPscL
pNR/E96ftL7CJp36P8A/HT+Y25FZeqcxPl6y0tvyEPU7wBqrJaK+ZOEaONBx
HMsvmfqT4BS3051tkqi/GO5hVdbbO4H638FPM3VlJmTOgDPY34e8iGonC/jw
K5ctjqfI4lXwsDa/rOYD1J8Auym4KRKaXn8NNsxri/em6Wwl/NA3Y/02ms7r
e1bJF/ptDVlN749oCvxIMJX/gCxdDl/TX7GvgqzYD3/6nNlvfwb1X4Xfl6+y
2JVJ/a/hfjVxno1F1N9LhvGY4TVxy1XqnwRLto/ZevkN9fvBUfezfZPJ6n3w
+uAsn+wv1H8Zbq2s+fPuM/W/gs2ydvgcIot1zuHvHxlxd34Puv4xAc6dIiwe
Sq5fBo9+u0w6RJuuf+yFh3Z+KpqlRdc/8uFefe4u7tONrn80wPfs7NwDu9P1
j+7ncXyt9LY/T8+nGAsbdXuVNkiDrn8IYXPZqklj6fm4e+DOe802SzrT9Y88
+M/PuqMKTbr+8xzu7m912J4eL++ai/Pt3k69HDrS9R8ruEK7WOfWH+r3gmME
3IA8siAKtkx7xmsmi8/BWudbF/4gy2rg1vEvg16yqF8zD9tHz0EtW+jvsbmw
3kDLt//MWwj7HAwJ3ksW7YTnTKvNvE2vR3oGXjbuQN11sqIa/qH/edUzMkvj
gpJ/1dC7xqqdlr8ZfDRh41IbWn7CeXC9RNXtzSda/tvhc6NuyIvJ8lPw+kyj
BUqy+hHs6JDJmv9v+bMu4ngyWXflWbJgJBzdqbfDCbJ4DtyhJMr4M60PsjB4
ZXLcxK40vT4b3vHEfPcVMvsBvECuvJ1D8/N+wX/GjrKbThaZ5ON4t5A32LGV
1n83OHN010URalr/Q2HT1S8dTtL6yjoOJ4S6J1a9oH4FvPJyQli/kdT/HQ4Z
03G0ZjVd/xp2CcfjSxHmTWT5bHjt7pQVBU/o+B8CJ9cdM3tB5mTAraZvGvvR
/IIKeEz7mfQwsrgdLlN7OM+i47tscIGSv1MrPncSPb5+JtwwplEv7zEd/zfC
6l0x+inP6PgvhT/Ny90SQRbdhvsJOhmnVtHx/xOsSDsS3ktBx/9BlzG+jxFs
3nSfMWsGnCwc4e1Gr4e7Dh428Oaf/fT3hKkw7yy7eRC9HkkZPM+7MGHMv/5W
eFIh+ynvKfXrX8H+MHO5wVB6PRxHmDd3VWofskAEJ/0cbK6oo/5DcM6Rd5f3
PKf+G/AsaZN1HLm+BVZ79gr0baD+gYU439662KgHmWcP7+ApAn7WU38gPLtL
5qM2sjQRbhRmfO9G8yuuw65r9N3Wv6T+d7D1SWuj/o3U3/+qki9+t3jjY5pf
yIOTPl6RhpAlK+H41sQrfen55QfgOO3Bc7TJ6iJ4dJeC87UvqP8tHDO6q56K
egR9ipT8x2WpxkG11G8LT9Q2WpBBlgXA7v1Ehlnk+jg4uvrjje9kdiE8oE+T
8giZ1wybOOiNuD+a1n/2NSX/6+7btz9NofXfBg4Z9G5Gqx2t/77wpv1GI87T
dNY+uPRPw+ddZG4BnCa4xbMmC1/CWSPubD48gbZ/bbmSX6VldNSPLB8P13If
xkbS+FC9FB5feX68HZkTC/t6aw+Tj6Pt/yI87NfsOe40XVwPbwgZsC2ALOt2
XcnvpjNIY4wNbf/W8DrXVfO3TKbt3xtWlG53sKPXx9sNp7eUWRhNpf5c+HTh
3F73ZlB/Hbzi1c2BC8iKLsVKPrupk+kQAfVbwYMvBnmsp/ErdzEsaw3RGjeP
+iPhcs2R/K6LqV8GJ7bXiWyWUP8zWP/AgS+daX51pxKMf0ddHrBpPvVbwAu1
Qs40zKX+BbBylH2YO00X74A/PZH3Tl1I/afhmtSXy7iLqP8J/DXXVXchmd3x
hpIfaewUaknz80bDuzofbDUmi+bCd9Q/vE4JqV984+/+YZznXj/qPwlXbTww
9dJq6n8EH/pvQo/BIdT/B65YzGrruo/6R9zE+62boz2ELPGAb079WFFA4xH5
NjhVN7X9PxoPqbNu/h1ft5dwaLzEqYLjbOUSo2PU/xN2O3vZwjSb+o1Lcf4l
fv2mkiwTwCLnW+Wxp6h/S+nf8eucDZ9zqf8YrG/pGpHPp+PffXiZ4cyqydF0
/PsGF3W/4/EkgY5/Q8twPHxR/z3tCh3/ZsFvJ+esC6LPY1ghcPD8TTMTSun4
nw57JHapn3mLjv934U9ZHd6sJEu+wCEFnrsLH9Pxn1Ou5G/hfvQ2rKbjvzOc
PXzLQ/5T+vxnA7zu1LQxZfR5k+AofFOcbLO1mT7/uQX/3j1Icr47ff7VBn8z
ix1l2Yc+/zK8hfGG5XmPUWS2Exx++sG6jQMY89bCYbckrrNNGIsOw0NvCsJC
Aunzv1K4c2jCtJn76fM/NXx7sU5BcDp9/qd/W8kf1MHqx+U8+vxvGpzK6pFW
f5k+/wuC85fueTb+Ln3+lwwPHfbmVBZZXgKbDQ7lysjq93BO49cNjffp8z/d
O9h+IpZ6XSALpsIf71UuHsLOZfpXw/EHCgKdejGWHYTvTJre8YI/43o5fPIL
75MqnzFb9de6xi5rbjPm9buL98dxVWPmHcYiO/i+55eGcLJ0BZwbJ9354x5j
RTxcvX+WXEVmFcHDN/q3PbzPmPsGtj4bs/XrE8bC3hUY7w/VmmT2jLFkMmy4
9N61CLLcH54ctry7D1ktgaekNFoKyJwrcPs8ly8hZEET7Pq2iP+ULO55T8nv
esaTK66h/onw0tfLj2wk1/vAvZTdxEfJ7P/g0o/nrkxspP5L8KZRHS7/bqD+
RviUloavbsc8pr/HfexvzGdvXa3BWDEOfm3cVuJDZi2FC37PefCazI2Be0Xf
umqlyVh4AX78n4akuRtjyQt4d1PPDh17MJZrKTB/TLpwU3fG6jHwtk+jwz3J
nCVwzPNODqHajAXRsCSxOWeXDmPxeXhNbNDOafR8slr467hPtSY0f33nSiV/
Y5Fb9wQy2xL+nG+wtYjMWwQ3T9SraaLXJ9oFh3et+ZqpRf1n4aF7alccpOdX
PIVPaBbpSsmsTlU43kz3/3OUzDWHFeEdR77uR/3z4cjAqR/8B1B/BGxx12lw
Xl/qz4H3CcxGfu1D/Y9hqxN9m36SOR0eKPnT3TRnG/Wm/lHwnOba2ape1O8J
Xx08ZcYNNvWHw3Xrry94Ta4/AX+teh7uSI9nP4STHRx2xdPz837DI50vLb9m
QP2mD7G+HytuGjGI+t3hdS+6bhAbUv9WWO3852V/MisLXnLwg2EhmVsJT409
5N5qRP0/4DtFeQGs4dQ//JGSfzHVfGlHc+p3hXd1n7fPxIT6N8Mmj7u/6z+K
+jNh3652M4eQBffgP2uPrEkbSf1f4aO3KsdfJ8uGPMb4Z7D8ZDcr6neBU6Z+
NEknszfBucMD48KtqT8Njsk52yGeLLoDS7IGG95wov7P8NHy8e3PyAqjJzh+
2JyztBJQvzP8NKjQYTiZux5Oy15RfWgO9R/5O73n0HXNNF1SDjd91/u5jiz/
CP8n1Tg8MJj6DaqV/LaoXdL5ZM50+MGRPjbT11B/MMzdXjXx8jLqT4F5pob/
uftT/004Y3CqzhFy/Qc4PuGC2yw/6td7quQ/14qreOJD/Q6woy5nowNZtAZO
Dmw5X+hN/Unwtw/d9qyfT/3F8ICajYnR86j/PdxYXjI0lMwd8Ozv+1tbEkYW
8uERZxssufR4ySr4z+5Oo2RkeQL83bLDinGe1H8NZm+a72oxifqVcPLMUcu+
jaP+vjU4Hi2vzW0zpf4psGeP3etCaf2RLYenHZ31o4TW3/r9NX/3V71jPtD2
yL4KP8lN2ldK2w/vNcw2SOW02lJ/r1olvyT4FufoGOqfBC8MfjLfkNYPhR88
Ukczt6cN9Utq/x6fujoUT6T+y/DcEXZ5/Wm68BXsejxrlJp6JDp1GC/Nbpzi
Y0n9E+CXv3x+rNSn/mWw/YMrLoa0PXL2wlv2uZa/GEj9+bBAi3fzgx71N/z1
sJGmn//Q/r/7cyW/98ftJ3e30v5/LNzrSWJ8lYr2/0J4RtyZ9p5baP+/B/aY
bbHr8gYa/+TB476/jBD2o/HPczjmZcLelW00/uv6AuPlcvW9mC40/hkDf1Vf
eud3m8Z/Xn+nm2YbuN2k8V8UvOhUiOwJjScl52AL1blzAVwa/9XAn+peirNG
0PhPs17JN1qUUKg7lMZ/XHhHh+erpxjS+G8hfP9423s3fRr/7YT3d0p4v1eb
xn9n4C491q882IPGf9Xwz9mlHZ20aPyn0YC/33XK3iM6NP41g9/Iw/M/d6Xx
7zy4XP/8Sd3ONP7dDo/L9Dn8jK53K07Bvq+2Hnf9d/37Mfx67Lmr9ul0/sdq
xHjHxdP7ayyd/42Ee67S69S4gc7/5sD/eaXPPsOn878w2NPXRdvKjs7/suGH
/u93x02m878HcEHRoaWBNnT+9wvelVt+MYAsNnmp5J/rtufmp4l0/ucGLzJr
0yuaQOd/ofCI1fdzVo6j87/j8PugAdeCyTzF3+lvx+7eTBZ9h9fuS2rfMJjO
f4e9wvEpPnLTcw6d/86GVz3XXj3AkM5/N8MTV0zvulGf+jPg/VrG5/qRhRXw
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
oUW/T7+PP9+v4+4+9zzP9/l+n+86H+ASl0rnDgipEXc+rn7+cznPfxt46NPx
G32KmX8rbDVV3vZpa/4w+FJu2B1vPR7/HLj60JDmpwN5/H/CmmnpKVd4Psr0
LuN8KTzw9udmHn9r+PKTuZpPebwlm+BjhxPGzWri8Q+B9f/MOWjP8eJx2bD9
xIyLfemKRthYuyroLS3oE1ojzreOPVLL/xdZwfN+rDPZyvHi7l6wwZsB5ds5
njY4CP6bpWBsw/kOuU/gZpF12FWOL5L7Dqdf2tbrjhbH//QOQ3lZpZ5ZRDtO
hed8rOyX1Tr+xwPuf+u3jcFgjv+5AN+N9plbwfkZskz4ZeZXOTuOp9T9Cq8T
F9aczuTx73mlRjw3JrgpguMTfSzgq5UbDsdxfGKcG6wdPGZCS0/mP3vl3/j5
BZmvaUEGnGP39qUix2OK6mCPLbu+b6TdtcJRnxnfbmiZkOe/KXxvo9fWpIm8
/l1ga6vHGzVYXsmdDv83v6i0NnYur//78FO7d8peC3j918DK+6Z32b+Mx79r
BOrPHz/o5vB6TpsEJx8dXtCe5YdsFaxT6xLSkdY9Aas93J9+cD2P/z34fYZ8
7B8v5v8IZ5hc3mm1kfm7ROJ+PbWodjxdYQyXeMuVXN7B/Cvg3TOauw+nRQGw
XUHfX060+1248/O3A73o4A+wiUHXotbzL1ctCt83t3lf9i7mHw9b3jnmWkcL
neHZa0OurWrd/+QIvKIq/kPoQea/A6v8XPdB+wrzv4Nt35YcNKRlqtE4X6ac
9cvn+CzdMXD0b7NUFY7HkiyBlyn7Ngx/yvwH4ezNJh/m03Hx8FIrtXA/zo+p
eAN3Vj97/C/HJwrax+B+Mdl/Wc8PzD8aDvqcNMeHdl8Md2yffOIy58cE+8E9
bt9yy+P1kXsDThp7z3ToOZ7/5fDjJaP+Dq3m+a98FeV7bfX0ebTjCHiIw47k
YNp/AVytmqlwvCfnf++FlUrV7xQM4PzvWDi7ZNf+5/qc/10Kq0d26ikz4fxv
hWs4fyw+fbtrzPnfw+BF8YJl3Sw4/28urGIvlFZw/nrFLvitSYvS1db571fh
DcL3bwYu4vy/Ytis14bHa9Zz/l+bWFy/Iw8s0KSDh8DXTLfIH6Bz7eGSdPuI
rM2c/+4DLzScePYjLYyCk5vW7KiiHQtj/83XP6u0dyvnv7fAk4bMq2zjzfwD
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
v8w/D267qnjALP693B54WlHkmI+08Bq8Jkh9YiB/P8eX8KRumyO+c/8of/l+
OB59ntp0LGR+A/iqQ9Ui/dbjPxt+m+VyMTyX+XfCxeVjfm6hJdHwPrFv2kra
5wUcv2TemdV03F943tNcNQ2+X8Wg/qg/9wozdqYFdnCf6pYbrRbtgLMM1VtU
+P3cI+AB6aYjl+fw+OfDy/v7NP9pPf5/4N023+zFfF1OfwDaO2W5o2NpoQ1c
/9zQqy2vJ8et8Guz2XO68v/9w2C5M5tEbtwvKy0HVnP+IymmZT/hye4r5Ys1
OP61n75UfG3y3N7+XTn+1xruqWg1YY2A7d9NsPq2gj5Bndn+DYFP/ao4H6HO
9m82fNC7dkI9LWiC06MqI4tpUZ+BuN9eMa6v4Oe5W8GD1sfFPqCDveDZN85P
kadzg2DX7l3naGny+D+Fk74usdHm/mbC7/DO55nh3WnH3oPQXkjtqdeb+6X5
T4UVS7Tj6vsxvwecOMa/7QpadgHW9d/1SoV5dR/BAfOLlxe15v/67//PhC/Q
5uf79ByM+3XnKxrOPZjfAo5f0P99Qmt+N1g4cvK2M/x/wTl4hI2HTg0tyoBv
3w6W+06718F7Xp/vnteN+bWGoD5xVDc8ic41hYuuzj/RbgLzr4VXXpq/QJsW
nobPzYwJ+enB/PfhI8/XNKw9zvw18On8Xwqbgpi/qwHqezPXDN56mfknwTpj
PGJO0rqrYZtZh5t/hDH/CdhloFvzulDmvwcv6xFfWEDHfYSnzs52D+PfV3QZ
ivPjbGrXuHDmnwiXZ8V3eBLB/CvgNWMPXXhDuwfA5qODC0zo4Lvwt/fiQjc6
9wOsEv04peg68wuG/WsfB86LooXj4SZbrc+CW8zvDN9XUi/PucO8d+A2NkPO
DeX4e9k7WM7Tf9cnWrfjcLSvblwd2PcB846BT21s1BpygHmXwO9eNtwzp+MO
wpc/jk3TOMQ87YVS8cghd7/etWOe0XDkMcchE8yYZzF8q6DQOZnzJ3L9YIuO
PvqNQ5jnJrzKsHqAogHzlMNvr2Xf1+D921F5BK6XzxOU37TO5xgBe802CRj/
kuXZAthlyvpLlrRsL7zXq8zeIZTlWRws25VU4cH9iSSl8JcPfe8vPsbyTGEk
2re/Flk+O8jybBgcdX9m/+10xVw47qHTjd9eLM92w58abUxtaNFV+Ny0cx93
cT8d92L4aH2fl8V8nhTcZhTap8Ny/nymc4fAxUF/n9+dyfJsNuwTa/ohahrL
Mx/49Liv0iDut+MYBQ950bi1B/fX8S+ERw3pGtaRTmuBN7SJSVUYzfwDR+P3
P2QauJrrTevOgneujXz1aiLzbx/97/67XK69CfOHw8djU0o3cz6YSGIoFee7
DGpZ94X10y3w8Iehn1ZyffDgULjpb4bAg859Dk8smTBxhJT105/w5rAz2zW4
PrRQzwjfr4PN5Bo+v3KcAc/Y1GfDSq6H7r8RjhWszQ+LYvvkEiw95Fi/muvD
y7LgTpvfmChxPXndRvh8tEHYdz6vkuiOwf2/Xbz+zzC2Tyzhyeee/SoNZftk
Pbyr/8gM7RDWzy/Cf/SunZSjBU/gpm3WCWeusn5eD7vtWDSvme/v3mssjn/s
+F1t+P7BU+C3tunpPzh/KncdHPq2w/zz3G9B7gJ886ez8kNP5s+Eo4+2XfWU
dpTBL3KKnh44xvw9xqF8mOXsosL5o2nmcNt3U7Q6cj6XzBVW2HksvJn7L+ie
hed4qA17RkvS4dPLo0q7cv8Gn1rYU//wlWP7mV9zPO4/fzQ1P/D9KsTw8YtL
HnVsnZ/mAmedqKzvxtdFp+BV0uZhCbR7GlxoEX5rJN8v+DN8YHmP8ZcPMb/G
BLS3lp4zWs/vLzcJVuja75I4gPlXwcqbsnLy+PzQ8Tj8KfbDnxy+7p8Cv9lV
cLBX6/4U1fDV8BOSKv4+ss7GUrFV1NxcD1rXGN7eZrGyxQnmXw63ddp3/gbt
4w/HXFawyW3dnyAJ1rw1ctMfuuI9rJL+U/M3LVCbKBU7CvVOnON+B6JxcEiv
EY4efN3dCTbfnjPNbQ/zH4b/jFvRZh1/j9zbsGDs7octtNw7WDnwdpElLVQ1
QXmpqKBlTTsawV3MSko3tB5/Rzjj+nRBGZ12AO6bMW94JfPIbsEXRHMD/5xh
/jdwQdfpkqXcj0GiMgn1480ZpV14vvqMgnu8ap7qxuslbhFctGqju2/r/gz7
4J7jE2tnBjP/DVinYbeTOc9nURl8rs6w7Tm+7q4kQnn40P1npi/zC2HDpEmZ
7enc+XCXD2ZeV/i8V24vvGiJT6MZzx9hLOza5+rc1a35S+BpPXtar/Rn/rZi
qXjj8TO/43k+yObAtZuGPHLi5+vugvf0zI/q2Xq9x8CLzSblPeLv4VMEf1wf
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
4JubBN/59xXNcMTo+6m7acFAN6k4cIOegcpL5reFc+9mj5V/w/zbYNX7k/SG
ljP/FViq4XzFqZT5c+GcwsVl+fx7ud9wd9luqzeVzN/fXSqe7PIn7DrtOBMu
ca7v8p15/TfDY+uWmx/leJ20y/DDzBMrEwbw+n8Gf9gyvf64Jq//H/C6vXPE
h7g+o6TvOty/5v/IHtaN1/90+GHxC0Uflp9xG+AOT3oPDdPg9R8M73nTJf0a
yytBFrz74QOVPSxPRA2wbfFNrzEsb9x1PHD9as254tGd1/802EfD3foqPz/X
E17YZJHxjZa7CIef7jlkcl+Wd4/hDTGHygO4XqTjN/jLeqtxS7lfhb+2p1S8
qGfsyjw6bTI8w2xR6DuOB5O5w1nemTXyrff38/CvtPax7ZYx/0P4WMPNp/u9
mP8LrKRu8NbEl/m7r8f9RPYuYgDHC1aYweU91P1nsH4qcIWjFmW47GX9TnQG
ts56ZD+vhPkfwDWLnsZ25HplwVK4a1ZqTe12Pl/r5oXfd+rAMznerL+L4X3n
fwzczfEgwjVw4o+AN3ZcP8vxJDz16Fab/pWsv6fCkeV5s41rWH//BN86fTJw
WOv+5+obUN6Vdjl9q3X/TxN4YZBpXX/uNy1ZCfeodazN4HgPn2PwVfWYaYXc
bzMuGXbL3/KpgP0PFVVw74u/Og7h/paCzhul4n7zhZ1DxrP9MgH+uea205Sp
bL8sg1d3Shl3ay7bL0fhnIVBqvUr2X5JhP3WSfeW7md/yft/73djXfioA+wv
6bRJKr43Yb/o/Fn2l4yFH+VtV3kbyP6SpbCn+3o1m0vsLzkE59weVHz+GvtL
EuDV0xwOn49hf8lbWGtU1pJrtKTDZrTn931Nq+T4Bh9DWN/TQbQqg/kdYEn+
eb/l7I+v2A8fH7XtRM++bL/egjN9/UL1BrL9+hpO8Sg1NBSy/dpui1RcGNi/
sJn9YcEj4RejzVJ+s/2YuxDOX2575dYItl/3wStX5xi/o4XX4YKy5aYBg9h+
fQWHicQ1mhPZflXcKhV3vmE75N14tl+Hwwvaux7WFrP9Og/erff+8a3JbL/u
gWuCHjhk8vtJrsHOgXP2OTiy/foSPpg0MmIynzfEyW9DfeznWc/1reO/DWCV
XjErB7M/VTAHXtsiN+V6FPPvhH0l6hY9TzJ/NKwj7Obrf5P5X8Cro/r3iOL4
8ty/cPoZQdLlSuYfvB33q4izmqF83im0g6uVlV6mKPL51Q549ie5PCM+z/GP
gPv96B4ua2L+fLjAoWjAQD4vlP2BJePvGT/k80Rd/R1ScZcFbRPTWp9f2sAp
rsNKL/LzfbbCvgbevebRcWHwAY/yr+PfMn8O3OS/OqriM8//X7DVU/eLJgt5
/vfzRvtz+0aBlSfPf2u4i9T58kUPnv+b4D7pKSuvLOb5/gw+sXL3+6WuPN+b
4B9H/abO4H7pjn18pOK2N5R/TG3d790KDu0V/mAz189L84KXK9/29eX+9rIg
WGXHJDkN7v+q+xTu5tFpbr06z/fvsP/Yt+uErfvd9t6J9mni8rRF3A83bip8
s6ehcAxd4QH3nfzXWIfvLwiE7wjNPo/i+HjRIzhm9wTrlfw896/w+H1rfW3Z
vxjccxfuf4ltXwW07ndvAUu6rDx1MJPlnTt8y8bZ4WYiy7tzsLP3IgW7JJZ3
GXC3RSVjRSks7+rgiqKxKi/pNK3dUrFh1rkUS/b3yUxhx/gR8VXsX9RdC0+8
e1J/J/sLJafhyxWaXcLYP+FzH86p3eZ95iifV9TAi9RG75nN/pmKrntQHnSz
MFZhf5xABK8sPtWzMy1aDd+cvmucNstv9xNw9785DZVcbzT4Huz3d0ZiSOt+
7x/hTnP2uEezP1JOfa9U/Pm++tJGjh8UToRtP75dP4T9kY4r4EmF5xLkOJ7Q
PwBeF2gXmsH7Q9pd2OdEj7OZD5j/A+ytfyryIK0r8MX3Ten9IIXzEyTj4bLD
i2fd4/MfH2f4ef/PZ1LouCNwl3ojr6Evmf8OPOaebuTZG8zbcR+O39v3w6fw
+ZD7GHiX6d8npcnMuwTuPCykyy3en3IPwrWdy2Yf4vwJuQTYd5V61ckG5q2A
+42T7HORMW97P6k4uvmB4S3ez/xHwx0DXW1TWu9vi+Hfz9qZD+P5JPOD04el
OX9n/5TuTTgwO669DZ8/ScrhMfMCa2dyf20f5f1SceUL3XGe/H5xI+DuiR6J
vT8z7wJYx1j1my3vlwJf+Fudy9Q3vH5EcbDk1bbFx7k/tHspPLT9o4Kuhry+
FQ7gfK5atq1+LO9vw2Dt5QZa/W14vc+DD/ftZTTektf7bnheQPNChThe71fh
rhfqDYI53iatzUGcL7m/bqzh+BzZELjLPJsr92nd2XCkvLtjfz6/lPjAF6Tb
X4t5f/CJgv8MWHl4WOt6loWwmd3Q1YpTWJ61wH7Nyb5hU1meDzqE+qJ1/fNk
CcvzWbBC1MSAMbYsz7fDw8Mjy0Zz/cvgcPj1m+V9d/L+kZv3z14rNxnQcn/g
OSZfwjfSwgGHcXzdvD+En+X9TAJPbppZV871C/23wAvuDJ4rYP9RWii8odfH
IlVa9hz23d1hwrQa5v8JLwx5WrGG9wuJ3hH83l3/jr3fgf0RM2DN39e3bqLj
NsLyhhPKPrI/p+ISvCW7i80y9i8IsmGTSXO3S3qxP6IRPr835Pp6HfZH6B6V
ip8tOPttB+dXBVvCQk2zhVbj2R+xHjbYtWfecVouCH4xNDrsioj9MU/gWQWP
89u19r/Vw+tv7UuwcmJ/TC9/qVjNUCE+cTn7Y6bAsg3F3vqevJ+tgz01LK9v
3sz+mAvw9XveZhp72R+TCY84tfWT+Wnml8F+6XXHu19g/h4BcNS1RlnrfDZz
OPxizN5DfF3gBifrj7S15fw10VlYa/mFT3OimT8dHnTdTrkhivlr4ZInrxfb
RTK/5jFcL/XqfoXxzG8KX/B6c2BVAvO7wCXj3wbWcP1Fx1OwaKDQSYd/758G
v2nvJd59h/k/w24Jvk4uicyvcRzXb02/Hito3UnwrIUJSx0zmH8VfPpper1X
JvMfh8csbOfp9Ij5U+AL961eBtMV1bC6W02t71Pm73ICv2fIioXvcpnfGL6i
/nlnm8/MvxzepaPs2f4T8/vDw8arngihc5Pgt5cO7VH5xfwf4PsRGy8//sn8
aidRXlzW2n/MmPMZx8ET5riuNRNxPqMTPPPYlbsTON8x7TDceUBBrc5ozme8
DS+dVdmpkdZ99+/97iXenmLC+Yyqp9CevZHf2deI8xmN4KDpb7IuCzmf0RHu
nBa7XZ+uOAC39cz3qBjB+Zzx8NaNv07o06I3cP3Y2XNLx3I+p8pptK9d3XSs
x3E+5yj43h/Z/CljOJ9zEXyxTblgF7+PnB/8PKxP+ZNJnM95A55p3mf4TuZ1
LIMzN5040tGc+ZXO4PoZl19mOYP5hXCIebP2MFo2H+73oXu9kzXz74XjTZSM
ntGSWHh378tDxRLmL4G/bjpdsonzSSuGnsX3a9k76+N85p0LBx+zdDq/gHl3
nf33/CLxeR7nl7rHwLavT7XNm8W8RfD3w+d2G81lXrlzqN+EJBvo0XJD4EtR
i09NoIX2sMua0PUO/DxHb3jINu9lKnzdP/Lcv/lYvU935nxYWTPs8V1qun8p
8w08j/rg7t4Rkc7MZwt79Hp1rcmJ+bbB8oPSzO04fzbuClwY9uW6oxXz5sI3
zNzFfpOZ9zfcK+LNiDkWzNv/Av7/Ur+P61yZdyZcssbkZL4b826Gv2d0vj7Z
nXkvw5KbRxY3rmfe5/Ac+QT1MFr4A5b9iA7668m8fQNRHsXq9t+2mXmnw94z
u+bmefP4boBnp4xzMN3O/MHwrEPtGydyPrFuFuybb+v2chvzN8B/K3qkWXox
v85FtA8Ob7/yhI6bBqemPajPPML8nrC1lvwO21PMfxE2tex4MZmvix7Dnl/d
U7OOM/83OPnDiBSVCObXDpKKd4ot99nTuZNhJ8VuHYJouXXwc0XbXzm08Dys
8Wnw5cw45n8IF5T3Pjqc9v8CxxX6J7hcZ/7uwbj+1FMXaBYzvxlsdnL32Y6F
zO8Kv38vV6pJS87APlpHjznQPg/gsWXjfAqKmF8K//o6Z0y378zf7ZJUfLvd
X2kkLRDD3bemStXo4FT4fLdLMbNUOB/9E6yvsD/hgyrno2uESMXH4u/bBCly
ProJ7Hz2Q9IO2nElvKqXSaer3Tgf/Rjcouvhf0GT89GT4Q2aXSer0rIq+HaT
9xFXWrfzZalYryl6t0SL8/EnwO1Nn1je7MX56MvgVLWSsuiBnI9/FJZeduiY
yfnxFYnw/ZyhbcfTgvdwmcr+pJDunI/fKRTny/MvL1/qcj7+WPh9womVPfU4
H38p3BjoXWo1nPkPwX7yhUM9OL9f7jZsFxMt/NmX+d/Ck4aOKTfqw/wdwnA9
V8wyqKb9DeHfebVv+tFpDvDK5CkTTukz/364vzTaeg7z6N6C+1xSFZsNYv7X
cP4o4w1z+bpPuytS8TXXbavCezD/SPjDT2FeIX+vioXwxQ2qOzrw8wT7YMeD
o0KecD0A0XVYd+/w36G9mf8VXHtQvjif+YIVw9H+8Fznv5HfL3c4XJsbe7aY
lpsPh54P9blIC/fA3Qa/3XagP/O+hL827d7Yl+sFp8lHoP27v+elupHMawD7
jsgdtJXWnQML1N71OEBLdsLPTjcI941gvhfwxBrliNb1Fyr+wheeXxgxnBYM
jpSKNx51cn1mwnx28KRIs+SMxcy3A+5mppepxt8rOAKu17G5HcDzIzcfXqU6
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
w/qtSsgYQONfBvt05S+MH0jj/x9s9O39FLe+/Uy/sZGE4zHie+oNGRp/D9jK
PGqQuTSN/xrYM/ixZwvd3/AIzPIaOf0oPZ/nE1jdy9w6WJ76f8BhGRYfZf/1
DzOWcMqvBloEK1O/G/z4untCDm2fejQ8vXv64wHUyz4EH3v/9uRbFep/DJ9R
fzzdl7Zf+BVmJ4ft+2lJ/frDJZypz1O258ymfhd4q0HMY39P6l8FWzp93/PL
i/qz4O1JP7N3zaH9/wFc+11N6ivdv1PXBPO7aWGKppDG2wn+ltWr+YvsuRJm
Z5dFWJ2h3gNw/mC3BEk29d6Ddx3cFX/4OPW2w5pf0sIcU6lXewSO93pWkwTx
1Lcc3qP6w6qVT3374C+WBl9OHaG+u7BAcOa43zHqa4V7vfR6XcksTVOcf82+
kTT9MPVNgXlPL6eNyKG+JXBYd9BFDlmUDn9Uz9R8kE+9t+DGSPlT7jR/GbbA
hX4ectxC6h1oJuGseGW0PY3mL/5kmJ3eJKtcRL1hsKTJYaARzV8Nu+BJHveH
n/k3v92Em9f8WMqn+YfdBPMC96j59af3t+pI9Cbsj7yoTu/vSXCVnDfnixK9
vxfB1X1LZziRpVJhW8fGaxPIrGvw7W0Ter4Y0vv7HXzzwTTJPmN6fw8Yhdc7
R10rQY/e31bw8S1dT1aQO4PgxAiV1haafwy3w2wts4hNCjS/FcBXFKaq7/hD
/W/hdYLJyVYXqb+/Oa4/LykVbSU3WMKObFnOpALqXwC31g9a63iL+rfCy4+4
5ObR6827BEdc3j4o4yaN/2v4gsq7V2dofMTyoyWc9/Krh4+ZT+PPgqudymts
Qmn858Mly9q25y6m8U+C+SmNdUVkwQU4ml2cEp5C418Nl857qhOUTOMvMwbz
YcaiUafJhmNhd/bNTUk7aPznwbGZCd+XJlF/IjyYo/gsfgP1n4VTAytqX22i
/irYYbaluRFZXWos3m+XjJOXr6B+c/jT4bCxzUuo3xsOmFfrYrKM+jfCb+6b
/nmyiPpPwyVp697cJUtVwpvaG+Lqo6n/Nzz31rmVAfR+4ZqNw/GUK6j/lUn9
c+DTGe+Srm+j/nVwcsO81JEHqP8EPP/Q6RZhFvWL4ZVVmYJR16j/Jzz+9o+o
RReo38QC+8PkKzM6jlL/LHjSjwcThYeoPw5uHee89WUY9R+DRdHj/eeGUP8z
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
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9597984*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9597984*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJws3XtcS38cx/GREMrc00Vzq1yqldwibUqSaJXc0+jmlpZrRE2oKD9LUkms
C4UwikQyReUSK7eoqChsZAm5+72dj98/v8fzcc7WXju37zk7m8HLgtz9OrJY
rHe9WKy//8d/ovJwJT+W1W/hoJXn7WDpRzjKofDrsGWMFQZiJZ/Pu7do6ULG
rOnw3P797771ZMwNhjvlKXuoyMIU+KlzVpzRPMaSm/CsqaW9DcjyD/Ad7h7R
08mM1QO3Y/rziZW+tow5DrBTSOKwWWTBGvjrLZHDKrI4CVYIdCySybJiWPgj
rfd8G8b17+BfiXGLjD6e+2v2gAgl32COy/ItrYx5fPhH9eLYEjVj0Sr4mNXb
5odkaQK8eURM8mIlY8U1uJdb3tXcJsYsJfxZddkp4QVjbt8dSr63zob1KfWM
hVNgI5+WE+ZkyXI4UNY0shdZvh+WLCi+evklY3UhHO5b89G/gTHnNdx+RX13
y03Ggl47lXy56YWjt24wFk+C18/w/O9tNmOZH5wxy7vA4zDj+n1wWOTutUnJ
1H8ZrjY0/nqEzHsFTzeou7KdLNLZpeQvcx+4OjGe+ifABRPKtKftpf5lcOTb
DMecGOrfC98a+qsqaRf158NjtbuwfMKpvwFecuBL3doTZ5n+7pFK/oAlmU57
yPKxsP3B+i9mRxirveFBxq1rexxgzNkDP7Zc2RDQeobpz4NzJg12X6tkLH4O
79VLfT21hbGsa5SSv2BN4JU5LxnXW8FHQz5uq9yXw/R7wdvvLbBaFMGYFwWn
l5yo3idgLDoH7x6h1fXGNMbSGnjQDMElc0fGCs1oJb8kR9zVZDJjFheuOuvp
bWnFmLsQHl40cpazMWPhTti+tduPMzdOMf1nYL39G9bMKmEsr4Z3ejvc3lzA
WN1xt5LPWZ39aEYeY44ZPC3rS8+6Y4wF8+BmjR6SarJ4O+wTvlmmIMtOwYFN
cd19yPWP4BeJp5M3kdmsPUr+y+7CRQY+J5n+kbBbgmPTXn/GojnwEqNEF+GX
E0x/GHw12CghlKzIhk8Pa3H2C2PMegDvMAw6LtnCmPsLFiX88AvexFhoEqPk
p6xb6rNuNWOJG5zxeIzOlRGM5aHwHyer0loOY/Ux+EXw/rgVj7KZfgXcJchl
a/98xoLv8IYYtuELsnhYrJL/Pnf614CzjGWzYXdLy86jsxnXh8D5p5a2tB5n
zM6AJ3jzxse5MOZVwHUhrb87T2Ysaod/3G2M1ejEWDp4r5I/80dW0dlfWUz/
TLhxe82JNT8ZszbCwedP/2dB07lSWJK8oLyNpgtvw8v2uk/qXc1Y8gmO2Hpl
iSdZPug/7D8H+oWzFIzVTnDpwn63ltxhzFn311tTU91uMxakwpXjRQeMrjIW
l8Fh1ep5d64wlrXC+/Relo4oYFyvv0/Jt5y7e+ESMtsRTlvkYLGDzBPBy8d9
SN91jrHoEBy2YP7xBrL0BuzX8t5yQxz1t8BBVitbvEZQ/0CJkp+17cB/V4ZQ
vz182eGKp6ku9QfCZYa+514PoP5EuKrfe41X/aj/Olyys5vX177Ur4Ltsn6Z
RpA5/eOUfJPnw0787EP9PPhPw279fxavhD8esjR63YP6D8CeK47bJn47zvQX
wUG++ZruLxiz38J9Xh5/9LOYMa/PfhwfGoYY9ixhLLKFO38cs2VVPmNpAHyw
+qDprdOMFXFwxp7dTqaWjFmF8AfXPnbpGoy5zXB0rP8K7dJjTD87XsnXL3Dr
q1nCWGIDLw607FuWwFjuC59/6np+tCdj9X+wy9Vd7yQejDkFsEVrEG+5LWPB
S5jj/a31N4+xWPuAku8atsajfhxj2Xj4v9zjaw5+zmT6l8J6/IuSqx2Y6exY
+OSelmFjI5jpvItwl8WrPo7swlhUD0/KXWzSlJvB9HdLwP5fvvZp5H+MFdZw
wNuaL/cPMGZ5w+MCQuf+IHN3w480Wkfw9jIW5sJLf++xTSZL6uAdtxN99CIZ
y7scVPKtLgyw7TGCsdoS/tLUPCB5GGPOYjj5rFfIxMh0pj8S7sw20LV1ZiyW
wXpfRnyQz2EsewZbaDzkfZnGuL5TopJ/rr2/VfkAxmwLeMW7/QV/NBnzFsAL
ruY6aHVmLNoBx84/bnbwYxrTfxq2S7Ho07GeseIJLN39uPpBE2NWxyQlf06l
2eqUt4y5o+FfYWH3vcjCubDXujv1IhVjiRjWPC533UqWn4S/GxXHsl4yVj+E
M95LB+k1Mub8gU2zDF0udqH+EclY/p3mBzesYaaLPeDnVxbdC/FlLNsGP1l1
YIGzF+P6LLhwYZ7n7fmM2VWw8sxq70p7xryfsH7/oyYreIxFxoeU/O5aAz6Z
k6UCmM+qif02mfq3wMfS5+6opOmsY/ChSdNsPzySMv334dg9LmVDbzIWfoOX
6T1s2VPKWDI0Betb/O9oQ7J8FizfISnv+IyxehOcMNYl+noNY046HOTybIN1
HWPBXXhi6sKkCAVj8Rc4xVbPuRfNL+McVvI3Xnl6htOL+p3hX2P7fa/oTv0b
4F5jfxVkknlH4eqKn7eG9KX+W/BD3oRbHw2pvw0ObRk2qoqsMExV8isS0t7Y
WFC/E/zAYpfhUQEt/7Xww6/C2P4LaPkfhoeNsb1XNIOWfykceKOPeAZZroZ7
lD1uc3ai5a93BNvvgLt8MS0fzjT4Ar9DjbE7Y0EQPDHl91ive7T8k+Erd7OH
GxTR8i+B/TcY2Jz6Qf3vYfU+Uz8NFq3/ukeVfA1WtzKOOa3/U+HtriFbwmbT
+r8aflMy3X2lkLH0INxm4bzPbi5jhRx2uPmgWjuKMUsF98tZ0DyHzO0nxfLL
dhluShbawWdWdmh6tJOxZAU8QGN31NM9jOXx8EPvQ72/ZzFWX4UL+h3KyKli
zHkDn8trvFBpzOwPBL3TMD57MK+D7nDG4snw9ax+nqdGM5b5p/3d3x2UG5kx
rpfAWfIh0yPiGbOvwKebE7rMoP0brwmWh49pqFtO+7+e6Vh/omQni7bR/n8i
3OPyyv7fgmj85wNPubpyo7vgNNP/H+xsktr5zzXG3Euw2/lDW3zkjIWNsGOz
3+nmWcx4VNIjA+cfFwKSL/ozlo+Dfz590//ZFBr/CuE/p/ZZBWXQ+DcG9nFv
tr97mrHgAlz9MsFefYmx+AVc2+a0KqSEsUwrE+uL69WtzcWM68fAD8xmft1Z
w5i9BM7/vs8wrIkxLxr20shr6fOBseg83LreIXv4J8bSWrjMaI7O6d+MFZ2P
/d0e9C+mdZAx/ZZw5Vhh5HgNxtxFsPRaYH5uJ8bCXfCC5igH6XjGkrN/H+9w
8PBNB8byp3CPfU2bOrgxVmscx/E2YozWieWMOebwtS/x02avYCyYD++1jX8c
sYqxOAIeX/rZXjOQsSwHfmnf12A6uf4x7DXZXxVOZnfIwvE1rYPHryDGvFFw
cNKpygCyyBOWhbqbxpOl4XCf+Z/zrMmKE3CUt4GPYAv1P4Qvzt0cMYPM/Q27
B2ckJYdSv2k29l91deV9tlK/OyyL3Fv0hqbLt8K+Op88mmi6+jh8qdO+JY/I
nEp49PA4ow1kwQ94WeF7h21k8fATSj7rvIuf4zbqd4WtDx5Rbwyj/s3w/ILz
kjAyO/PvdG5gxRAy7x5skLZqweFw6v8Kd/HRm32WLB1y8u/6Yj4nTEz9LrDp
4Pk35kZQ/yY4LmdBkgeZmwb7rNT66kYW3oHjC+52DImk/s9wRc/8pilkudEp
nH8pHF6viqL+GXC7vZ9xIJmzHp7rEqzqGk39R+CV2xPtC+KovxxuypujoyTL
PsI+MeXHvqZSv0HO3/OxmrgfZPZ02Fhbz8rwCPUHw6/LJtrsIotSYMfqPscL
pNR/E96ftL7CJp36P8A/HT+Y25FZeqcxPl6y0tvyEPU7wBqrJaK+ZOEaONBx
HMsvmfqT4BS3051tkqi/GO5hVdbbO4H638FPM3VlJmTOgDPY34e8iGonC/jw
K5ctjqfI4lXwsDa/rOYD1J8Auym4KRKaXn8NNsxri/em6Wwl/NA3Y/02ms7r
e1bJF/ptDVlN749oCvxIMJX/gCxdDl/TX7GvgqzYD3/6nNlvfwb1X4Xfl6+y
2JVJ/a/hfjVxno1F1N9LhvGY4TVxy1XqnwRLto/ZevkN9fvBUfezfZPJ6n3w
+uAsn+wv1H8Zbq2s+fPuM/W/gs2ydvgcIot1zuHvHxlxd34Puv4xAc6dIiwe
Sq5fBo9+u0w6RJuuf+yFh3Z+KpqlRdc/8uFefe4u7tONrn80wPfs7NwDu9P1
j+7ncXyt9LY/T8+nGAsbdXuVNkiDrn8IYXPZqklj6fm4e+DOe802SzrT9Y88
+M/PuqMKTbr+8xzu7m912J4eL++ai/Pt3k69HDrS9R8ruEK7WOfWH+r3gmME
3IA8siAKtkx7xmsmi8/BWudbF/4gy2rg1vEvg16yqF8zD9tHz0EtW+jvsbmw
3kDLt//MWwj7HAwJ3ksW7YTnTKvNvE2vR3oGXjbuQN11sqIa/qH/edUzMkvj
gpJ/1dC7xqqdlr8ZfDRh41IbWn7CeXC9RNXtzSda/tvhc6NuyIvJ8lPw+kyj
BUqy+hHs6JDJmv9v+bMu4ngyWXflWbJgJBzdqbfDCbJ4DtyhJMr4M60PsjB4
ZXLcxK40vT4b3vHEfPcVMvsBvECuvJ1D8/N+wX/GjrKbThaZ5ON4t5A32LGV
1n83OHN010URalr/Q2HT1S8dTtL6yjoOJ4S6J1a9oH4FvPJyQli/kdT/HQ4Z
03G0ZjVd/xp2CcfjSxHmTWT5bHjt7pQVBU/o+B8CJ9cdM3tB5mTAraZvGvvR
/IIKeEz7mfQwsrgdLlN7OM+i47tscIGSv1MrPncSPb5+JtwwplEv7zEd/zfC
6l0x+inP6PgvhT/Ny90SQRbdhvsJOhmnVtHx/xOsSDsS3ktBx/9BlzG+jxFs
3nSfMWsGnCwc4e1Gr4e7Dh428Oaf/fT3hKkw7yy7eRC9HkkZPM+7MGHMv/5W
eFIh+ynvKfXrX8H+MHO5wVB6PRxHmDd3VWofskAEJ/0cbK6oo/5DcM6Rd5f3
PKf+G/AsaZN1HLm+BVZ79gr0baD+gYU439662KgHmWcP7+ApAn7WU38gPLtL
5qM2sjQRbhRmfO9G8yuuw65r9N3Wv6T+d7D1SWuj/o3U3/+qki9+t3jjY5pf
yIOTPl6RhpAlK+H41sQrfen55QfgOO3Bc7TJ6iJ4dJeC87UvqP8tHDO6q56K
egR9ipT8x2WpxkG11G8LT9Q2WpBBlgXA7v1Ehlnk+jg4uvrjje9kdiE8oE+T
8giZ1wybOOiNuD+a1n/2NSX/6+7btz9NofXfBg4Z9G5Gqx2t/77wpv1GI87T
dNY+uPRPw+ddZG4BnCa4xbMmC1/CWSPubD48gbZ/bbmSX6VldNSPLB8P13If
xkbS+FC9FB5feX68HZkTC/t6aw+Tj6Pt/yI87NfsOe40XVwPbwgZsC2ALOt2
XcnvpjNIY4wNbf/W8DrXVfO3TKbt3xtWlG53sKPXx9sNp7eUWRhNpf5c+HTh
3F73ZlB/Hbzi1c2BC8iKLsVKPrupk+kQAfVbwYMvBnmsp/ErdzEsaw3RGjeP
+iPhcs2R/K6LqV8GJ7bXiWyWUP8zWP/AgS+daX51pxKMf0ddHrBpPvVbwAu1
Qs40zKX+BbBylH2YO00X74A/PZH3Tl1I/afhmtSXy7iLqP8J/DXXVXchmd3x
hpIfaewUaknz80bDuzofbDUmi+bCd9Q/vE4JqV984+/+YZznXj/qPwlXbTww
9dJq6n8EH/pvQo/BIdT/B65YzGrruo/6R9zE+62boz2ELPGAb079WFFA4xH5
NjhVN7X9PxoPqbNu/h1ft5dwaLzEqYLjbOUSo2PU/xN2O3vZwjSb+o1Lcf4l
fv2mkiwTwCLnW+Wxp6h/S+nf8eucDZ9zqf8YrG/pGpHPp+PffXiZ4cyqydF0
/PsGF3W/4/EkgY5/Q8twPHxR/z3tCh3/ZsFvJ+esC6LPY1ghcPD8TTMTSun4
nw57JHapn3mLjv934U9ZHd6sJEu+wCEFnrsLH9Pxn1Ou5G/hfvQ2rKbjvzOc
PXzLQ/5T+vxnA7zu1LQxZfR5k+AofFOcbLO1mT7/uQX/3j1Icr47ff7VBn8z
ix1l2Yc+/zK8hfGG5XmPUWS2Exx++sG6jQMY89bCYbckrrNNGIsOw0NvCsJC
Aunzv1K4c2jCtJn76fM/NXx7sU5BcDp9/qd/W8kf1MHqx+U8+vxvGpzK6pFW
f5k+/wuC85fueTb+Ln3+lwwPHfbmVBZZXgKbDQ7lysjq93BO49cNjffp8z/d
O9h+IpZ6XSALpsIf71UuHsLOZfpXw/EHCgKdejGWHYTvTJre8YI/43o5fPIL
75MqnzFb9de6xi5rbjPm9buL98dxVWPmHcYiO/i+55eGcLJ0BZwbJ9354x5j
RTxcvX+WXEVmFcHDN/q3PbzPmPsGtj4bs/XrE8bC3hUY7w/VmmT2jLFkMmy4
9N61CLLcH54ctry7D1ktgaekNFoKyJwrcPs8ly8hZEET7Pq2iP+ULO55T8nv
esaTK66h/onw0tfLj2wk1/vAvZTdxEfJ7P/g0o/nrkxspP5L8KZRHS7/bqD+
RviUloavbsc8pr/HfexvzGdvXa3BWDEOfm3cVuJDZi2FC37PefCazI2Be0Xf
umqlyVh4AX78n4akuRtjyQt4d1PPDh17MJZrKTB/TLpwU3fG6jHwtk+jwz3J
nCVwzPNODqHajAXRsCSxOWeXDmPxeXhNbNDOafR8slr467hPtSY0f33nSiV/
Y5Fb9wQy2xL+nG+wtYjMWwQ3T9SraaLXJ9oFh3et+ZqpRf1n4aF7alccpOdX
PIVPaBbpSsmsTlU43kz3/3OUzDWHFeEdR77uR/3z4cjAqR/8B1B/BGxx12lw
Xl/qz4H3CcxGfu1D/Y9hqxN9m36SOR0eKPnT3TRnG/Wm/lHwnOba2ape1O8J
Xx08ZcYNNvWHw3Xrry94Ta4/AX+teh7uSI9nP4STHRx2xdPz837DI50vLb9m
QP2mD7G+HytuGjGI+t3hdS+6bhAbUv9WWO3852V/MisLXnLwg2EhmVsJT409
5N5qRP0/4DtFeQGs4dQ//JGSfzHVfGlHc+p3hXd1n7fPxIT6N8Mmj7u/6z+K
+jNh3652M4eQBffgP2uPrEkbSf1f4aO3KsdfJ8uGPMb4Z7D8ZDcr6neBU6Z+
NEknszfBucMD48KtqT8Njsk52yGeLLoDS7IGG95wov7P8NHy8e3PyAqjJzh+
2JyztBJQvzP8NKjQYTiZux5Oy15RfWgO9R/5O73n0HXNNF1SDjd91/u5jiz/
CP8n1Tg8MJj6DaqV/LaoXdL5ZM50+MGRPjbT11B/MMzdXjXx8jLqT4F5pob/
uftT/004Y3CqzhFy/Qc4PuGC2yw/6td7quQ/14qreOJD/Q6woy5nowNZtAZO
Dmw5X+hN/Unwtw/d9qyfT/3F8ICajYnR86j/PdxYXjI0lMwd8Ozv+1tbEkYW
8uERZxssufR4ySr4z+5Oo2RkeQL83bLDinGe1H8NZm+a72oxifqVcPLMUcu+
jaP+vjU4Hi2vzW0zpf4psGeP3etCaf2RLYenHZ31o4TW3/r9NX/3V71jPtD2
yL4KP8lN2ldK2w/vNcw2SOW02lJ/r1olvyT4FufoGOqfBC8MfjLfkNYPhR88
Ukczt6cN9Utq/x6fujoUT6T+y/DcEXZ5/Wm68BXsejxrlJp6JDp1GC/Nbpzi
Y0n9E+CXv3x+rNSn/mWw/YMrLoa0PXL2wlv2uZa/GEj9+bBAi3fzgx71N/z1
sJGmn//Q/r/7cyW/98ftJ3e30v5/LNzrSWJ8lYr2/0J4RtyZ9p5baP+/B/aY
bbHr8gYa/+TB476/jBD2o/HPczjmZcLelW00/uv6AuPlcvW9mC40/hkDf1Vf
eud3m8Z/Xn+nm2YbuN2k8V8UvOhUiOwJjScl52AL1blzAVwa/9XAn+peirNG
0PhPs17JN1qUUKg7lMZ/XHhHh+erpxjS+G8hfP9423s3fRr/7YT3d0p4v1eb
xn9n4C491q882IPGf9Xwz9mlHZ20aPyn0YC/33XK3iM6NP41g9/Iw/M/d6Xx
7zy4XP/8Sd3ONP7dDo/L9Dn8jK53K07Bvq+2Hnf9d/37Mfx67Lmr9ul0/sdq
xHjHxdP7ayyd/42Ee67S69S4gc7/5sD/eaXPPsOn878w2NPXRdvKjs7/suGH
/u93x02m878HcEHRoaWBNnT+9wvelVt+MYAsNnmp5J/rtufmp4l0/ucGLzJr
0yuaQOd/ofCI1fdzVo6j87/j8PugAdeCyTzF3+lvx+7eTBZ9h9fuS2rfMJjO
f4e9wvEpPnLTcw6d/86GVz3XXj3AkM5/N8MTV0zvulGf+jPg/VrG5/qRhRXw
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
oUW/T7+PP9+v4+4+9zzP9/l+n+86H+ASl0rnDgipEXc+rn7+cznPfxt46NPx
G32KmX8rbDVV3vZpa/4w+FJu2B1vPR7/HLj60JDmpwN5/H/CmmnpKVd4Psr0
LuN8KTzw9udmHn9r+PKTuZpPebwlm+BjhxPGzWri8Q+B9f/MOWjP8eJx2bD9
xIyLfemKRthYuyroLS3oE1ojzreOPVLL/xdZwfN+rDPZyvHi7l6wwZsB5ds5
njY4CP6bpWBsw/kOuU/gZpF12FWOL5L7Dqdf2tbrjhbH//QOQ3lZpZ5ZRDtO
hed8rOyX1Tr+xwPuf+u3jcFgjv+5AN+N9plbwfkZskz4ZeZXOTuOp9T9Cq8T
F9aczuTx73mlRjw3JrgpguMTfSzgq5UbDsdxfGKcG6wdPGZCS0/mP3vl3/j5
BZmvaUEGnGP39qUix2OK6mCPLbu+b6TdtcJRnxnfbmiZkOe/KXxvo9fWpIm8
/l1ga6vHGzVYXsmdDv83v6i0NnYur//78FO7d8peC3j918DK+6Z32b+Mx79r
BOrPHz/o5vB6TpsEJx8dXtCe5YdsFaxT6xLSkdY9Aas93J9+cD2P/z34fYZ8
7B8v5v8IZ5hc3mm1kfm7ROJ+PbWodjxdYQyXeMuVXN7B/Cvg3TOauw+nRQGw
XUHfX060+1248/O3A73o4A+wiUHXotbzL1ctCt83t3lf9i7mHw9b3jnmWkcL
neHZa0OurWrd/+QIvKIq/kPoQea/A6v8XPdB+wrzv4Nt35YcNKRlqtE4X6ac
9cvn+CzdMXD0b7NUFY7HkiyBlyn7Ngx/yvwH4ezNJh/m03Hx8FIrtXA/zo+p
eAN3Vj97/C/HJwrax+B+Mdl/Wc8PzD8aDvqcNMeHdl8Md2yffOIy58cE+8E9
bt9yy+P1kXsDThp7z3ToOZ7/5fDjJaP+Dq3m+a98FeV7bfX0ebTjCHiIw47k
YNp/AVytmqlwvCfnf++FlUrV7xQM4PzvWDi7ZNf+5/qc/10Kq0d26ikz4fxv
hWs4fyw+fbtrzPnfw+BF8YJl3Sw4/28urGIvlFZw/nrFLvitSYvS1db571fh
DcL3bwYu4vy/Ytis14bHa9Zz/l+bWFy/Iw8s0KSDh8DXTLfIH6Bz7eGSdPuI
rM2c/+4DLzScePYjLYyCk5vW7KiiHQtj/83XP6u0dyvnv7fAk4bMq2zjzfwD
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
v8w/D267qnjALP693B54WlHkmI+08Bq8Jkh9YiB/P8eX8KRumyO+c/8of/l+
OB59ntp0LGR+A/iqQ9Ui/dbjPxt+m+VyMTyX+XfCxeVjfm6hJdHwPrFv2kra
5wUcv2TemdV03F943tNcNQ2+X8Wg/qg/9wozdqYFdnCf6pYbrRbtgLMM1VtU
+P3cI+AB6aYjl+fw+OfDy/v7NP9pPf5/4N023+zFfF1OfwDaO2W5o2NpoQ1c
/9zQqy2vJ8et8Guz2XO68v/9w2C5M5tEbtwvKy0HVnP+IymmZT/hye4r5Ys1
OP61n75UfG3y3N7+XTn+1xruqWg1YY2A7d9NsPq2gj5Bndn+DYFP/ao4H6HO
9m82fNC7dkI9LWiC06MqI4tpUZ+BuN9eMa6v4Oe5W8GD1sfFPqCDveDZN85P
kadzg2DX7l3naGny+D+Fk74usdHm/mbC7/DO55nh3WnH3oPQXkjtqdeb+6X5
T4UVS7Tj6vsxvwecOMa/7QpadgHW9d/1SoV5dR/BAfOLlxe15v/67//PhC/Q
5uf79ByM+3XnKxrOPZjfAo5f0P99Qmt+N1g4cvK2M/x/wTl4hI2HTg0tyoBv
3w6W+06718F7Xp/vnteN+bWGoD5xVDc8ic41hYuuzj/RbgLzr4VXXpq/QJsW
nobPzYwJ+enB/PfhI8/XNKw9zvw18On8Xwqbgpi/qwHqezPXDN56mfknwTpj
PGJO0rqrYZtZh5t/hDH/CdhloFvzulDmvwcv6xFfWEDHfYSnzs52D+PfV3QZ
ivPjbGrXuHDmnwiXZ8V3eBLB/CvgNWMPXXhDuwfA5qODC0zo4Lvwt/fiQjc6
9wOsEv04peg68wuG/WsfB86LooXj4SZbrc+CW8zvDN9XUi/PucO8d+A2NkPO
DeX4e9k7WM7Tf9cnWrfjcLSvblwd2PcB846BT21s1BpygHmXwO9eNtwzp+MO
wpc/jk3TOMQ87YVS8cghd7/etWOe0XDkMcchE8yYZzF8q6DQOZnzJ3L9YIuO
PvqNQ5jnJrzKsHqAogHzlMNvr2Xf1+D921F5BK6XzxOU37TO5xgBe802CRj/
kuXZAthlyvpLlrRsL7zXq8zeIZTlWRws25VU4cH9iSSl8JcPfe8vPsbyTGEk
2re/Flk+O8jybBgcdX9m/+10xVw47qHTjd9eLM92w58abUxtaNFV+Ny0cx93
cT8d92L4aH2fl8V8nhTcZhTap8Ny/nymc4fAxUF/n9+dyfJsNuwTa/ohahrL
Mx/49Liv0iDut+MYBQ950bi1B/fX8S+ERw3pGtaRTmuBN7SJSVUYzfwDR+P3
P2QauJrrTevOgneujXz1aiLzbx/97/67XK69CfOHw8djU0o3cz6YSGIoFee7
DGpZ94X10y3w8Iehn1ZyffDgULjpb4bAg859Dk8smTBxhJT105/w5rAz2zW4
PrRQzwjfr4PN5Bo+v3KcAc/Y1GfDSq6H7r8RjhWszQ+LYvvkEiw95Fi/muvD
y7LgTpvfmChxPXndRvh8tEHYdz6vkuiOwf2/Xbz+zzC2Tyzhyeee/SoNZftk
Pbyr/8gM7RDWzy/Cf/SunZSjBU/gpm3WCWeusn5eD7vtWDSvme/v3mssjn/s
+F1t+P7BU+C3tunpPzh/KncdHPq2w/zz3G9B7gJ886ez8kNP5s+Eo4+2XfWU
dpTBL3KKnh44xvw9xqF8mOXsosL5o2nmcNt3U7Q6cj6XzBVW2HksvJn7L+ie
hed4qA17RkvS4dPLo0q7cv8Gn1rYU//wlWP7mV9zPO4/fzQ1P/D9KsTw8YtL
HnVsnZ/mAmedqKzvxtdFp+BV0uZhCbR7GlxoEX5rJN8v+DN8YHmP8ZcPMb/G
BLS3lp4zWs/vLzcJVuja75I4gPlXwcqbsnLy+PzQ8Tj8KfbDnxy+7p8Cv9lV
cLBX6/4U1fDV8BOSKv4+ss7GUrFV1NxcD1rXGN7eZrGyxQnmXw63ddp3/gbt
4w/HXFawyW3dnyAJ1rw1ctMfuuI9rJL+U/M3LVCbKBU7CvVOnON+B6JxcEiv
EY4efN3dCTbfnjPNbQ/zH4b/jFvRZh1/j9zbsGDs7octtNw7WDnwdpElLVQ1
QXmpqKBlTTsawV3MSko3tB5/Rzjj+nRBGZ12AO6bMW94JfPIbsEXRHMD/5xh
/jdwQdfpkqXcj0GiMgn1480ZpV14vvqMgnu8ap7qxuslbhFctGqju2/r/gz7
4J7jE2tnBjP/DVinYbeTOc9nURl8rs6w7Tm+7q4kQnn40P1npi/zC2HDpEmZ
7enc+XCXD2ZeV/i8V24vvGiJT6MZzx9hLOza5+rc1a35S+BpPXtar/Rn/rZi
qXjj8TO/43k+yObAtZuGPHLi5+vugvf0zI/q2Xq9x8CLzSblPeLv4VMEf1wf
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
4JubBN/59xXNcMTo+6m7acFAN6k4cIOegcpL5reFc+9mj5V/w/zbYNX7k/SG
ljP/FViq4XzFqZT5c+GcwsVl+fx7ud9wd9luqzeVzN/fXSqe7PIn7DrtOBMu
ca7v8p15/TfDY+uWmx/leJ20y/DDzBMrEwbw+n8Gf9gyvf64Jq//H/C6vXPE
h7g+o6TvOty/5v/IHtaN1/90+GHxC0Uflp9xG+AOT3oPDdPg9R8M73nTJf0a
yytBFrz74QOVPSxPRA2wbfFNrzEsb9x1PHD9as254tGd1/802EfD3foqPz/X
E17YZJHxjZa7CIef7jlkcl+Wd4/hDTGHygO4XqTjN/jLeqtxS7lfhb+2p1S8
qGfsyjw6bTI8w2xR6DuOB5O5w1nemTXyrff38/CvtPax7ZYx/0P4WMPNp/u9
mP8LrKRu8NbEl/m7r8f9RPYuYgDHC1aYweU91P1nsH4qcIWjFmW47GX9TnQG
ts56ZD+vhPkfwDWLnsZ25HplwVK4a1ZqTe12Pl/r5oXfd+rAMznerL+L4X3n
fwzczfEgwjVw4o+AN3ZcP8vxJDz16Fab/pWsv6fCkeV5s41rWH//BN86fTJw
WOv+5+obUN6Vdjl9q3X/TxN4YZBpXX/uNy1ZCfeodazN4HgPn2PwVfWYaYXc
bzMuGXbL3/KpgP0PFVVw74u/Og7h/paCzhul4n7zhZ1DxrP9MgH+uea205Sp
bL8sg1d3Shl3ay7bL0fhnIVBqvUr2X5JhP3WSfeW7md/yft/73djXfioA+wv
6bRJKr43Yb/o/Fn2l4yFH+VtV3kbyP6SpbCn+3o1m0vsLzkE59weVHz+GvtL
EuDV0xwOn49hf8lbWGtU1pJrtKTDZrTn931Nq+T4Bh9DWN/TQbQqg/kdYEn+
eb/l7I+v2A8fH7XtRM++bL/egjN9/UL1BrL9+hpO8Sg1NBSy/dpui1RcGNi/
sJn9YcEj4RejzVJ+s/2YuxDOX2575dYItl/3wStX5xi/o4XX4YKy5aYBg9h+
fQWHicQ1mhPZflXcKhV3vmE75N14tl+Hwwvaux7WFrP9Og/erff+8a3JbL/u
gWuCHjhk8vtJrsHOgXP2OTiy/foSPpg0MmIynzfEyW9DfeznWc/1reO/DWCV
XjErB7M/VTAHXtsiN+V6FPPvhH0l6hY9TzJ/NKwj7Obrf5P5X8Cro/r3iOL4
8ty/cPoZQdLlSuYfvB33q4izmqF83im0g6uVlV6mKPL51Q549ie5PCM+z/GP
gPv96B4ua2L+fLjAoWjAQD4vlP2BJePvGT/k80Rd/R1ScZcFbRPTWp9f2sAp
rsNKL/LzfbbCvgbevebRcWHwAY/yr+PfMn8O3OS/OqriM8//X7DVU/eLJgt5
/vfzRvtz+0aBlSfPf2u4i9T58kUPnv+b4D7pKSuvLOb5/gw+sXL3+6WuPN+b
4B9H/abO4H7pjn18pOK2N5R/TG3d790KDu0V/mAz189L84KXK9/29eX+9rIg
WGXHJDkN7v+q+xTu5tFpbr06z/fvsP/Yt+uErfvd9t6J9mni8rRF3A83bip8
s6ehcAxd4QH3nfzXWIfvLwiE7wjNPo/i+HjRIzhm9wTrlfw896/w+H1rfW3Z
vxjccxfuf4ltXwW07ndvAUu6rDx1MJPlnTt8y8bZ4WYiy7tzsLP3IgW7JJZ3
GXC3RSVjRSks7+rgiqKxKi/pNK3dUrFh1rkUS/b3yUxhx/gR8VXsX9RdC0+8
e1J/J/sLJafhyxWaXcLYP+FzH86p3eZ95iifV9TAi9RG75nN/pmKrntQHnSz
MFZhf5xABK8sPtWzMy1aDd+cvmucNstv9xNw9785DZVcbzT4Huz3d0ZiSOt+
7x/hTnP2uEezP1JOfa9U/Pm++tJGjh8UToRtP75dP4T9kY4r4EmF5xLkOJ7Q
PwBeF2gXmsH7Q9pd2OdEj7OZD5j/A+ytfyryIK0r8MX3Ten9IIXzEyTj4bLD
i2fd4/MfH2f4ef/PZ1LouCNwl3ojr6Evmf8OPOaebuTZG8zbcR+O39v3w6fw
+ZD7GHiX6d8npcnMuwTuPCykyy3en3IPwrWdy2Yf4vwJuQTYd5V61ckG5q2A
+42T7HORMW97P6k4uvmB4S3ez/xHwx0DXW1TWu9vi+Hfz9qZD+P5JPOD04el
OX9n/5TuTTgwO669DZ8/ScrhMfMCa2dyf20f5f1SceUL3XGe/H5xI+DuiR6J
vT8z7wJYx1j1my3vlwJf+Fudy9Q3vH5EcbDk1bbFx7k/tHspPLT9o4Kuhry+
FQ7gfK5atq1+LO9vw2Dt5QZa/W14vc+DD/ftZTTektf7bnheQPNChThe71fh
rhfqDYI53iatzUGcL7m/bqzh+BzZELjLPJsr92nd2XCkvLtjfz6/lPjAF6Tb
X4t5f/CJgv8MWHl4WOt6loWwmd3Q1YpTWJ61wH7Nyb5hU1meDzqE+qJ1/fNk
CcvzWbBC1MSAMbYsz7fDw8Mjy0Zz/cvgcPj1m+V9d/L+kZv3z14rNxnQcn/g
OSZfwjfSwgGHcXzdvD+En+X9TAJPbppZV871C/23wAvuDJ4rYP9RWii8odfH
IlVa9hz23d1hwrQa5v8JLwx5WrGG9wuJ3hH83l3/jr3fgf0RM2DN39e3bqLj
NsLyhhPKPrI/p+ISvCW7i80y9i8IsmGTSXO3S3qxP6IRPr835Pp6HfZH6B6V
ip8tOPttB+dXBVvCQk2zhVbj2R+xHjbYtWfecVouCH4xNDrsioj9MU/gWQWP
89u19r/Vw+tv7UuwcmJ/TC9/qVjNUCE+cTn7Y6bAsg3F3vqevJ+tgz01LK9v
3sz+mAvw9XveZhp72R+TCY84tfWT+Wnml8F+6XXHu19g/h4BcNS1RlnrfDZz
OPxizN5DfF3gBifrj7S15fw10VlYa/mFT3OimT8dHnTdTrkhivlr4ZInrxfb
RTK/5jFcL/XqfoXxzG8KX/B6c2BVAvO7wCXj3wbWcP1Fx1OwaKDQSYd/758G
v2nvJd59h/k/w24Jvk4uicyvcRzXb02/Hito3UnwrIUJSx0zmH8VfPpper1X
JvMfh8csbOfp9Ij5U+AL961eBtMV1bC6W02t71Pm73ICv2fIioXvcpnfGL6i
/nlnm8/MvxzepaPs2f4T8/vDw8arngihc5Pgt5cO7VH5xfwf4PsRGy8//sn8
aidRXlzW2n/MmPMZx8ET5riuNRNxPqMTPPPYlbsTON8x7TDceUBBrc5ozme8
DS+dVdmpkdZ99+/97iXenmLC+Yyqp9CevZHf2deI8xmN4KDpb7IuCzmf0RHu
nBa7XZ+uOAC39cz3qBjB+Zzx8NaNv07o06I3cP3Y2XNLx3I+p8pptK9d3XSs
x3E+5yj43h/Z/CljOJ9zEXyxTblgF7+PnB/8PKxP+ZNJnM95A55p3mf4TuZ1
LIMzN5040tGc+ZXO4PoZl19mOYP5hXCIebP2MFo2H+73oXu9kzXz74XjTZSM
ntGSWHh378tDxRLmL4G/bjpdsonzSSuGnsX3a9k76+N85p0LBx+zdDq/gHl3
nf33/CLxeR7nl7rHwLavT7XNm8W8RfD3w+d2G81lXrlzqN+EJBvo0XJD4EtR
i09NoIX2sMua0PUO/DxHb3jINu9lKnzdP/Lcv/lYvU935nxYWTPs8V1qun8p
8w08j/rg7t4Rkc7MZwt79Hp1rcmJ+bbB8oPSzO04fzbuClwY9uW6oxXz5sI3
zNzFfpOZ9zfcK+LNiDkWzNv/Av7/Ur+P61yZdyZcssbkZL4b826Gv2d0vj7Z
nXkvw5KbRxY3rmfe5/Ac+QT1MFr4A5b9iA7668m8fQNRHsXq9t+2mXmnw94z
u+bmefP4boBnp4xzMN3O/MHwrEPtGydyPrFuFuybb+v2chvzN8B/K3qkWXox
v85FtA8Ob7/yhI6bBqemPajPPML8nrC1lvwO21PMfxE2tex4MZmvix7Dnl/d
U7OOM/83OPnDiBSVCObXDpKKd4ot99nTuZNhJ8VuHYJouXXwc0XbXzm08Dys
8Wnw5cw45n8IF5T3Pjqc9v8CxxX6J7hcZ/7uwbj+1FMXaBYzvxlsdnL32Y6F
zO8Kv38vV6pJS87APlpHjznQPg/gsWXjfAqKmF8K//o6Z0y378zf7ZJUfLvd
X2kkLRDD3bemStXo4FT4fLdLMbNUOB/9E6yvsD/hgyrno2uESMXH4u/bBCly
ProJ7Hz2Q9IO2nElvKqXSaer3Tgf/Rjcouvhf0GT89GT4Q2aXSer0rIq+HaT
9xFXWrfzZalYryl6t0SL8/EnwO1Nn1je7MX56MvgVLWSsuiBnI9/FJZeduiY
yfnxFYnw/ZyhbcfTgvdwmcr+pJDunI/fKRTny/MvL1/qcj7+WPh9womVPfU4
H38p3BjoXWo1nPkPwX7yhUM9OL9f7jZsFxMt/NmX+d/Ck4aOKTfqw/wdwnA9
V8wyqKb9DeHfebVv+tFpDvDK5CkTTukz/364vzTaeg7z6N6C+1xSFZsNYv7X
cP4o4w1z+bpPuytS8TXXbavCezD/SPjDT2FeIX+vioXwxQ2qOzrw8wT7YMeD
o0KecD0A0XVYd+/w36G9mf8VXHtQvjif+YIVw9H+8Fznv5HfL3c4XJsbe7aY
lpsPh54P9blIC/fA3Qa/3XagP/O+hL827d7Yl+sFp8lHoP27v+elupHMawD7
jsgdtJXWnQML1N71OEBLdsLPTjcI941gvhfwxBrliNb1Fyr+wheeXxgxnBYM
jpSKNx51cn1mwnx28KRIs+SMxcy3A+5mppepxt8rOAKu17G5HcDzIzcfXqU6
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
w/qtSsgYQONfBvt05S+MH0jj/x9s9O39FLe+/Uy/sZGE4zHie+oNGRp/D9jK
PGqQuTSN/xrYM/ixZwvd3/AIzPIaOf0oPZ/nE1jdy9w6WJ76f8BhGRYfZf/1
DzOWcMqvBloEK1O/G/z4untCDm2fejQ8vXv64wHUyz4EH3v/9uRbFep/DJ9R
fzzdl7Zf+BVmJ4ft+2lJ/frDJZypz1O258ymfhd4q0HMY39P6l8FWzp93/PL
i/qz4O1JP7N3zaH9/wFc+11N6ivdv1PXBPO7aWGKppDG2wn+ltWr+YvsuRJm
Z5dFWJ2h3gNw/mC3BEk29d6Ddx3cFX/4OPW2w5pf0sIcU6lXewSO93pWkwTx
1Lcc3qP6w6qVT3374C+WBl9OHaG+u7BAcOa43zHqa4V7vfR6XcksTVOcf82+
kTT9MPVNgXlPL6eNyKG+JXBYd9BFDlmUDn9Uz9R8kE+9t+DGSPlT7jR/GbbA
hX4ectxC6h1oJuGseGW0PY3mL/5kmJ3eJKtcRL1hsKTJYaARzV8Nu+BJHveH
n/k3v92Em9f8WMqn+YfdBPMC96j59af3t+pI9Cbsj7yoTu/vSXCVnDfnixK9
vxfB1X1LZziRpVJhW8fGaxPIrGvw7W0Ter4Y0vv7HXzzwTTJPmN6fw8Yhdc7
R10rQY/e31bw8S1dT1aQO4PgxAiV1haafwy3w2wts4hNCjS/FcBXFKaq7/hD
/W/hdYLJyVYXqb+/Oa4/LykVbSU3WMKObFnOpALqXwC31g9a63iL+rfCy4+4
5ObR6827BEdc3j4o4yaN/2v4gsq7V2dofMTyoyWc9/Krh4+ZT+PPgqudymts
Qmn858Mly9q25y6m8U+C+SmNdUVkwQU4ml2cEp5C418Nl857qhOUTOMvMwbz
YcaiUafJhmNhd/bNTUk7aPznwbGZCd+XJlF/IjyYo/gsfgP1n4VTAytqX22i
/irYYbaluRFZXWos3m+XjJOXr6B+c/jT4bCxzUuo3xsOmFfrYrKM+jfCb+6b
/nmyiPpPwyVp697cJUtVwpvaG+Lqo6n/Nzz31rmVAfR+4ZqNw/GUK6j/lUn9
c+DTGe+Srm+j/nVwcsO81JEHqP8EPP/Q6RZhFvWL4ZVVmYJR16j/Jzz+9o+o
RReo38QC+8PkKzM6jlL/LHjSjwcThYeoPw5uHee89WUY9R+DRdHj/eeGUP8z
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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9597984*^9}, {0, 0.0798545257471515}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9597984*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBOIN/7lqlxe/dZzPZJZ/H0hPfFTQAKIzjz5pAdHzw+3m
gWiJ97EbQXTJtkv7QXRDhk/JXyBdzsS3DkR/OMB+DEQ3PL95E0S7zzv7CETH
Pdbi+QekG40KhUD0njtFEiA6csk2ORDt9dCwk6nkrSO7mv4MEL2wOX4ViI7x
4TwEorOm6N8C0Xx9YQ9AdJXqlZcgevclzW8gepE5j7g3kH4yLVcORGt4ndYC
0T5Zl8U7gLTSHaZW3bK3jnO4/jM3Aemiglc7rpS/dXwx95pRTQVQPidmEYi+
kMrwHUQ7nD4sfxRIO4YxNwpWvnU80r7A1hdIt7+dsUS86q1jPZva5KlAuldi
9//TQLrl6aSqpOq3jlec4trlaoDucXQTXw6kS5I9ZILr3joeFvjqvx9I/zBR
vsdY/9bx0RnHk8+BdKXelronDW8d012KW0A0ABnRzAw=
  "],
 CellLabel->
  "Out[714]=",ExpressionUUID->"f3a076aa-b629-4294-8f29-205967a5427a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.956583594880019*^9, 3.956583597703912*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1438.5, 878.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2910, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4079, 120, 1723, 28, 42, "Output",ExpressionUUID->"59d11dd1-d1b1-4f0b-a64a-a86d80413679"]
}, Open  ]],
Cell[5817, 151, 6075, 126, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11895, 279, 2529, 62, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[14449, 345, 47227, 959, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[61679, 1306, 16604, 335, 5777, "Output",ExpressionUUID->"0c8bfac2-0489-40f1-8d1c-ddcbd2ca38aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78320, 1646, 16562, 334, 5775, "Input",ExpressionUUID->"eb3b9e1f-c8fe-4fa1-9732-289ee8e574ed"],
Cell[94885, 1982, 16609, 335, 5779, "Output",ExpressionUUID->"aabacc5d-68fe-404e-8ed1-7b198fde3eee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111531, 2322, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[111877, 2332, 3922, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[115802, 2422, 209481, 3584, 806, "Output",ExpressionUUID->"f3a076aa-b629-4294-8f29-205967a5427a"]
}, Open  ]],
Cell[325298, 6009, 175, 3, 29, "Input",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92"]
}, Open  ]]
}, Open  ]]
}
]
*)

