(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    289026,       5293]
NotebookOptionsPosition[    287451,       5254]
NotebookOutlinePosition[    287848,       5270]
CellTagsIndexPosition[    287805,       5267]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[1160]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.952950242158903*^9, 3.9530648211300364`*^9, 
  3.953064958622326*^9, 3.953064994240164*^9, 3.953065349950439*^9, 
  3.953065465573783*^9, 3.953126301207666*^9, 3.953126763140174*^9, 
  3.95312695500004*^9, 3.953127117979952*^9, 3.9531271852779837`*^9, 
  3.953127515891465*^9, 3.953127565970191*^9, 3.953127614148252*^9, 
  3.953127664280751*^9, 3.953136707707389*^9, 3.9531368280231953`*^9, 
  3.953136973229302*^9, 3.953137162354211*^9, 3.953137357043047*^9, 
  3.953137409894322*^9, 3.953137478783972*^9, 3.953137580524066*^9, 
  3.953285299268303*^9, 3.9532853579233027`*^9, 3.953285456811905*^9, 
  3.9534102329466753`*^9, 3.9542733120956717`*^9},
 CellLabel->
  "Out[1163]=",ExpressionUUID->"0a4f6afe-e6e8-4ff2-a86b-14c16a11f6c5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[1164]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[1169]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Scaled", "[", "0.005", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}},
 CellLabel->
  "In[1172]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4880, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4880}, {
      4880 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2803.5584039726446`, 2809.2903375663946`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4880}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             Scaled[0.005]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4880}, {
         4880 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2871.372579387684, 2877.104512981434}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953127185868351*^9, 3.953127399371324*^9, 
  3.953127516744842*^9, 3.953127566636895*^9, 3.953127614757175*^9, 
  3.9531276649479303`*^9, 3.953136708325881*^9, 3.953136828734364*^9, 
  3.9531369738923807`*^9, 3.953137163086714*^9, 3.953137361194911*^9, 
  3.9531374105258427`*^9, 3.9531374818910313`*^9, 3.953137581144923*^9, 
  3.9532852998972692`*^9, 3.953285358708744*^9, 3.953285457535769*^9, 
  3.9534102338402042`*^9, 3.954273313316141*^9},
 CellLabel->
  "Out[1172]=",ExpressionUUID->"79409ee4-4648-49b3-bad6-e77954ae467d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[1173]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
IPnJrpbU7wSnTv9kmkFmb4YLhq2NC7Oi/nQ4Oi9fI54sugPHZQ8yuuFA/V/g
o+UT2p6TFcZPcfywPmNhKaD+WfCzgCK7YWRuEJyes7Lq0FzqP/J3eY8hG5po
uaQcbmrX/7mBLP8E75NqHh4QSP2GVRjfInZLF5A5M+GHR3pbz1xH/YEwd0fl
pMvLqD8V5psZ7Xfzo/6bcMagNN0j5LqP8IHE865zllO//jMl/4V23L2nPtRv
B8/Q42yyI4vWwSlrm88WeVN/CvzjY9eooAXUXwL3r96UHDmf+j/ADeXXh2wj
c/s/x/x6WM31ULKQDw/Pr7fg0vMlq+E/ezuOlJHliXC7hcbK8R7UfxVmb17g
Yj6Z+pVwyuyRy76Pp/4+1TgeragpaDWj/qnw3O57N2yj7Ue2Ap5xdM6P67T9
1h2o/jte9Yr+SPsj+z+4qiAltpT2H94buIdhGqfFhvp71ij51wNvcY6Opf7J
8KLApwuMaPtQLIdH6WoV9LCmfknN3+NTF7uSSdR/GV4wfNq5frRc+Bp2Pp49
Uk09Et1a7H/ODVN9LKh/Ivzql8+PVQbUvwy2fXjFyYj2R84+eGusS/nLAdRf
CAu0eTc/6lN/Pew8dITZlz80/nd7gfH3046Te1to/B8H93yaHF+povFfCDvG
nW7rsZXG/yjY3dl89+WNNP85B49vfxUu7Evznxdw1KvEfataaf7X5SW2r3L1
/ejONP8ZC7epL75ffpvmf15wplmOoetNmv9FwJ65wbKnNJ+UnIHNVWfO+HNp
/lcNf659Jc4eTvM/rTrMJzwTi/SG0PyPC+/UeLFmqhHN/xbBD463fnA1oPnf
LvhAx8QP+3Ro/nca7tw9aFVSd5r/VcE/nUs7OGjT/E+zHvtPl6n7jujS/Hc0
/FYeVvilC81/58O3DM6e1OtE898d8Pgsn8PP6Xq3Ihf2fb39uMu/699P/j5/
3Jn/bDPo/I/VoOSfd/Lw/hZD538jYPZq/Y4NG+n8by58wCvD+TSfzv9C4Xm+
TjqW0+j8Lwd+7Pdhb9wUOv97CF8oPrR0rTWd//2CdxeUX/Ani01f4Xyja9TN
z5Po/M8V9hzdql88kc7/tsEmax7krRpP53/H4Q8B/a8GknkKeMS7cXu3kEXt
cFBsStvGQXT+O/Q1jk/xeza/4ND5rzO86oXOmv5GdP67BbZeObPLJgPqz4QP
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
L2sO3GdFh7iv1MvdDOf3mJjf6d/+nw47PWTt0qD9XXIHHpMS1fUEPV7+BfZv
e+4Q/q/f2PzvePZp9kPq48yCdbgFdjPe0PoPgqNN4hvqyOIj8IqM+1UHXlB/
OWyeN/yky2vq/wSzHvVaPKyF+o24OH898nyJ7Av1z4TtO/y53UR/TxQIv/iv
JF3rLfWnwrkWi3uMICtuwo92lZnV0/vNUsMNc57OMafXz9W3UPFfNv45FUvr
S2gHO7R69tKkXsk6eFfpdcP7/8a/FNgs5NTPDd2ovwQ+/kPnM4/M+QDfWtzx
tx1Z0N8S73+eq6Nag9Y/Hx5ZtC/gO1m2Go6Y6d3ZgMbLukR4ic/1Cf/eb7Yc
Nn/dFP+iI43/SvjsfX+Hjlo0/vcZi/3Zb9rCOlounQo3qhdvyaDlihVw/+fl
vpvo77HiYdui6NzjtJz7HyxbeS+9+7/t/w2cOy46Yeu/7b+nlYpvkPnCgUM9
8smw7oC1un3/9S+HQ1oMgzr+65fAj7fumX2H3i/BZfiomVt8SHfqfw1P03xY
Z0vLZbrjcD5c8/131L/tfyL8+9al+jYab9g+8I7NXu/sabzm7YMrf4U+fkTj
tagQzvp1ZdBTsrQerrL/+OroaVr/3cZjPJDu3ngxh9b/eJj/pnnHrkwa/4Sw
IHb87slkYRR8O+SO91r6fqPkHGwyKWNqUjyNfy/gCYdW1/6zussE9LRYZnel
70dyxsKfzKed2R5J278XLN379r7Pbtr+I+CtbeZLE7bT9n8GnrwyZLzXEuqv
hmfN0NOuou9HsztNxPZ4SF8z2YH6ubC1w4knz2dS/yJ4Qjin16CJ1L8L/nHy
68QsC+o/Dc9q9+65icx6BrdpzDDfR+ZqTsL5ou9h99ph1D8aPhO2K+igMfXP
h8/NWdgkNqL+HfBoW1fxlkHUnwvvYkVWbONQ/xM4VU9tdsyU+lnW2H7yebv8
Tah/BHyuS7F013DqnwufqnfZo6TH14XC1henB76h5ewT8Pbs4tsvR1D/Q7jF
xkDcqwf1/4JVfk3zvvajftPJOB91HZxt15f6XWHLijb2ggHUvx12fvDA33Eg
9R+H8xZdv6Xxr18Bd2TPiG6gPkk73NgjtbdkNPUPnaLiD04TKi+Pp35nWPX6
e+pRP+rfAuc43eJKD1J/Jrzw4RP5pkPUfw9eMeyztSqV+tvgmQEhDqoj1D/I
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
4EUqfoxO2PSWU4zZc+D1qY90WccZ8zbD4Z3WRd/Pov50WE/304roo9R/B76d
yT9feIT6v8CLysq1NmdQP8dTxd/wwvTgeSn1z4LTsk/JeqdSfxC8KowliU+g
/iNw6832vPg06i+Hh68/uaoTPV79Cdb8aHnkzyHqN1qM5/e+lqVJywUz4Ume
Tz76J1F/IKz/69jA6WRZKiyu+rRMM5n6b8IRye5/PtBythq2bH0c+J7M0/dS
8c1V7CyDf/128M+n6p29jlH/OniMy5u182m5IgWeen6Ax316/1jX4UCjfU27
6fHcD7Dmf7M8LcnC/kuwPxWqL1bQ8yV8mD3nZ8UCen/lq+EgMc/8wUXqT4QP
z1oR/HAKbf9y2Px+86JCO9r+lXDpoPc3TJ1p++/jjfF+aj1fRvuDbCr8eHfS
cm/aH+pWwKvvLuzoNoO2/3h4+IN7Wv/GE95/sH1ez3MSGi9Eb+CSMer3okTa
/3sK8fgnwlCfFNr/J8O7PeSHJKm0//vBW8ak+K0jcyXw1bajHxvo8cLLMO9K
SkdvsuQ1/HTv6X5tZLnuUpy/xKd7+NJ4rZ4Ib6sxOapH4znHB7ZP+r1y/r/x
fx/cy7xqViUtFxfCwUNchkyh44WsHpalJBi99KPxv9syzHf89k0x96Xxfzw8
QGu280wyTwg/qIpb2RxE438UPOSc7vyv3en4fw72O91+3H4DHf9fwLzdz04V
iGj+o+2D40tQk94Smj9wx8I/wuoVZ57S/McL7lkrOPeC5lOSCLgvVxm1pjtj
+Rk4TzDz/II/NP+phluCSjfYajLLOZ188XqLjLSeGjAWcGHdwMmXW9mMxYvg
mZEXp47QZyzbBRc6+ZXE8xjXnYb1Bmz90M2eMfsZ7NZjzrNYB8Y8zeUqftij
kNn9rWn+Nxre9sjJPSyS5n/zYa4k/TXrGGPFDjh2ldti8UXGrDx4WHz+h4jL
jLlP4CCr0z3+HGQsZPlhe96l3M7PpP4R8J73efvGx1L/XPjKiqgOFasYq0Ph
4ZOmqr2XUv8JeNSJ5zq13tT/EB53abBTqwv1/4I3JbG6nCbLTP1V/M4Xu933
cqZ+V/hIvzvZJ2k5ezu8Pnyi6U4y7zjcnfPsxqT51K+AR2dPObmDLG2HU5bM
ir9JVgxdoeJ/FxdWD7Kjfhc4eduIfQvI3C1/bXe4oJMt9WfCrxcbV02YTv33
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
PWXTyIo2mLNovoUdmTU4EeebIZUmXmSuE3zhoU8nLZq/CzfB69t2S+pouUQK
6+8erC/5N/+/DQcs8Ti2hl6v+jO8YbLp7d1kjnESxq8ZTTnjyAJHuF1uw71A
5yviDfAK6yPDbtH5niwN/mkW+WQp/f5+XRl8qEE44fRv6v8ET9QclmRjQNc/
DJNV/ObJE13eG9P1D3v4fkFUkY0ZXf8QwaEGuqfnj6XrH4fg9mNLnDZZ0fWP
m/Cnh12zd9B/D4D7Ebb/6V2/eQZd/xiQouLfGfKoTw399wcktrDMUdE/1p+u
f6yF75mUaf2zOhm+e9O1WbGDrn+UwLV2uyICw+n6x3tYYXW4zX0vXf/od1DF
/xwp4X6JoesfPHhnipXJthy6/rMKNm+Zeakuna7/JMJDLVOel5J5V+FCk82i
zmeo/x3sMbvnj4rz1N/7kIr/206gNb+S+m3gfY4v+EPov8/AWgH3/U91erIm
3f9xAP4zfX3RNrq/SFgEizwUnA1WdP9HE3zZ57VAbU73f7BTsb2Ulc76YE+f
/1vDnGGP1g+j+7M4y+GKQ4Gnh6+kz/9jYU39Ae+uraDP/y/BDnvWOjv60+f/
r1L/3k/3WqO3E33+r3NYxbfrsz1N5UWf/0+Eb9n17avjS5//L4Mzf7KrPdbR
5/8xcCvf3qssgD7/vwCf2OKdvp6sqIPf5RXX/A6k+1+6pWH78k/ULVxP/ePg
+Zus3zjS/WxCb3hFXaNKwqf+vbAoxD2lO91PIC+Ab+hpPymi+9XUtbA8PHWQ
I5nT5YiKfzOdtW8F9Qks4dQbAx6Wb6P+xTAn/9C3z//uf9sDNwwNs/q5n/pl
8H8qYeS//x4BuxpO8Nu8MOvf/W9aR//e31zq8NqQ+s3hiO4Bomt0f5l0IXzu
u2j96e+0/nfC47U/9npF/70Q1mlYovEjw7SNtv8qeO7qQakh9N8PEXaQYr4x
xX1Gl1ba/kfBebcmT76tpu1/HlyT3czRaKbtXwwntezf9eInbf+5cIG9k2Ye
/X3BY3h7y+HW0R9p+/8D39owZsHBz7T9D0/H/pS4RvCLHl/nDo/tPfdIUEfq
D4UzfXYluNF/z4SXAyct1l5+7wFt/5Vwwuh9NmNraPv/CafGrZFdJStMMjAf
je+dqqyl7f9/lu47LsY/gAP4CSWkS1EIETLCGWUldw2jxElRVpEtlcgqSkRW
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
bRZ+599XNv07PvrO7Z20cKDrv/5DXX3l58xvDeel5oxVeMX8XnDHO5N0h1Yw
/0VYprH0olMZ8+fBuUWLygv494LfcDf5TstXb5m/vxvai85/Iq7QjjPh0qV1
nb8zb+AWeEztcrNDHK+TcR7Oyjq6MmkAf/9P4Kqt0+uOaPL3/wN295srOcD1
GaV91+H+Ne9HzrCu/P1Ph++XPGvrw/IzYSPc/lGvoREa/P2HwTtfdb53meWV
MPuf799V3sXyRFwPW5dc8xjD8sattzt+v1pzL7p34+9/Guyj4TbjEt8/bz28
oNE88xstCIEjT/QYMrkvy7uH8Ma4AxVBXC/S8Rtcu8Fy3BLuVxGovR6v3yN+
ZT6dMRm2Ml144Q3Hg8nd4GzvrBqFlvv7GfhXRvv4dsuY/z58uP7a470ezP8F
VlLXf228m/m7bcD9RP4magDHC1aawhXd1QOtWD8VusAxCzOd/Vi/E5+EZ2Y/
sLUvZf67cM3Cx/EqXK8sTAZ3yb5d83kbn6919cDvferAk7nerL9L4D1nfgzc
yfEgojVw8o+gVzZcP8vxGDz1kOes/m9Zf78NR1fkzzGqYf39I3z9xLHgYS37
n6tvRHunrPOJ6y37fxrDC0JNavtzv2npSrj7Z8fPmRzv4XMYvqQeN62I+20m
pMFuBVs/FrL/obIa7hXyS2UI97cUqm2SSXTnidTCx7P9MgH+seaG05SpbL8s
g1d3Sh933Y7tl0Nw7oLQjnUr2X5Jhveuk/mV7WV/yTu439V1kaP2sb+k02aZ
5NaEveIzp9hfMhbOyt+m/DqY/SVLYHe3DaqzzrG/5ACcd2NQyZnL7C9JgldP
czh4Jo79Ja9hzVHZiy/T0g5b0J7f8zXjLcc3+BjAA9Y7iFdlMr8DLC0447+c
/fGVe+Gjo7yO9ujL9ut1+P5u/wu6A9l+fQmnuZcZGIjYfm23Fd9/cP+iJvaH
hY3859Gm6b/ZfsxbABcut754fQTbr3vgFatzjd7Qoiv/jpcvNwkaxPbrC/iC
WFKjOZHt17aeMonaVeshb8az/Tocntfe5aC2hO1Xe3in7ruH1yez/boLrgm9
65DFzye9DDsFz93j4Mj263N4f8rIqMl83pCg4IX6489T6ze0jP/Wh5V7xq0c
zP5U4Vx4bbNgypUY5t8B75aqm/c4xvyxcG9R192B15j/Gbwqpn/3GI4vz/sL
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
evSRjhn3Q6jMh5c927xsIsfrCf/Av8x1R2lzPwLxgGS0V3sOCX7F/R/cpPBx
+Yy2HQv4vGErbKfx9owi57fkXYD/mHWoceH8GEEuvGOQQ6sntOgnPHS4k/bD
RD5v0E3B/W7w2LfNfF4daAWvL5qmsvAenzdsgv2FfWSbc/i84Rwc+3DC7CEc
D6iTAyul3BjkQUsb4GeGU+a58fP46KSiPN032e8dxwMmWMBXA+PStnO8YOUG
OKTGIcy/Zf5QKLynl1T5eMv8oUfwl/I2A5/xebtbHey6+O3fj+HM3zNNJnne
fUufs4HMPwV+sT+9/hEtcIetEo54zOP8KNFZeH/t9W59accsWN/TbFd7jg8M
lMP2vzMeDKUzuqfLJMdkBZOiuL+I3Awepei8bpcH87vCYbVThi3hcekpeNDm
9OLptM89eI1xtnn2Rub/DMsu5au7b2V+zVtoP/aaMuIcLTSBGxPnucTQYmfY
SqtVwHLa7Tjs1XBm1zc6LAMeaeHilEDnfYIX/OzqpcD9SwRdbuP+4a3WoLeT
+SfBm8/n/j7VMv5xFWz6W3q2Kx14BD6ZmLzKgM5Ih9969Hl/hP8vfw+HK3Qd
VrOL+TtnyCSWpQ0vN+1hfiM420VRfaYX8y+HA/1vxnbdxvyBcO5mi+K1PC6s
gu9+jEi9ztcXq95B/WjrXpfHHP8Y5gQXbG0vj1zNfAdh+dW/t5cyr+AmPC9h
mnnKJuZ7c+ffeJzTScftma/jXZlkW2T+uUN0oCEsWjRA+8p85nOEfTYPNxXM
ZL59sNXeWT5RHB+pkwh7L7BtXs/j0lfwcdX9hX04ntJH+R7a60qSsmXjmG/U
vX/92+9XqfL5Y+VC+N7thMI5tNAfVvwY/cWH4yfFV+EDgVbCXI6XdCuHlYNy
j0QoM79iJuo/ti9jPeg8Ebz/zNt7+/g8VDAfjljcILrP/jORH7zQo3TMCvav
OcbDb29umqXN/rPAUnhow/jgz+zvkg+9j99j03BT8Tf2B9rBx4OXfzP7zP4R
X9gteW35rwr2j8TB7R3dvHxesn+kGDZKL8p4z/nclYIsXE/vVPersL9QOATO
XGzeP439i2JbuGeG6eYrtJs3fDk9ekfjUT4vjoZ7REtv6HG+Wl4h7KnuPHMc
+18Fzf+OTzBweMjn+aKBD3B+ujwcIuDzdkdrWLazcU6/lv4RL3iygtWV3jye
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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
IPnJrpbU7wSnTv9kmkFmb4YLhq2NC7Oi/nQ4Oi9fI54sugPHZQ8yuuFA/V/g
o+UT2p6TFcZPcfywPmNhKaD+WfCzgCK7YWRuEJyes7Lq0FzqP/J3eY8hG5po
uaQcbmrX/7mBLP8E75NqHh4QSP2GVRjfInZLF5A5M+GHR3pbz1xH/YEwd0fl
pMvLqD8V5psZ7Xfzo/6bcMagNN0j5LqP8IHE865zllO//jMl/4V23L2nPtRv
B8/Q42yyI4vWwSlrm88WeVN/CvzjY9eooAXUXwL3r96UHDmf+j/ADeXXh2wj
c/s/x/x6WM31ULKQDw/Pr7fg0vMlq+E/ezuOlJHliXC7hcbK8R7UfxVmb17g
Yj6Z+pVwyuyRy76Pp/4+1TgeragpaDWj/qnw3O57N2yj7Ue2Ap5xdM6P67T9
1h2o/jte9Yr+SPsj+z+4qiAltpT2H94buIdhGqfFhvp71ij51wNvcY6Opf7J
8KLApwuMaPtQLIdH6WoV9LCmfknN3+NTF7uSSdR/GV4wfNq5frRc+Bp2Pp49
Uk09Et1a7H/ODVN9LKh/Ivzql8+PVQbUvwy2fXjFyYj2R84+eGusS/nLAdRf
CAu0eTc/6lN/Pew8dITZlz80/nd7gfH3046Te1to/B8H93yaHF+povFfCDvG
nW7rsZXG/yjY3dl89+WNNP85B49vfxUu7Evznxdw1KvEfataaf7X5SW2r3L1
/ejONP8ZC7epL75ffpvmf15wplmOoetNmv9FwJ65wbKnNJ+UnIHNVWfO+HNp
/lcNf659Jc4eTvM/rTrMJzwTi/SG0PyPC+/UeLFmqhHN/xbBD463fnA1oPnf
LvhAx8QP+3Ro/nca7tw9aFVSd5r/VcE/nUs7OGjT/E+zHvtPl6n7jujS/Hc0
/FYeVvilC81/58O3DM6e1OtE898d8Pgsn8PP6Xq3Ihf2fb39uMu/699P/j5/
3Jn/bDPo/I/VoOSfd/Lw/hZD538jYPZq/Y4NG+n8by58wCvD+TSfzv9C4Xm+
TjqW0+j8Lwd+7Pdhb9wUOv97CF8oPrR0rTWd//2CdxeUX/Ani01f4Xyja9TN
z5Po/M8V9hzdql88kc7/tsEmax7krRpP53/H4Q8B/a8GknkKeMS7cXu3kEXt
cFBsStvGQXT+O/Q1jk/xeza/4ND5rzO86oXOmv5GdP67BbZeObPLJgPqz4QP
aJuc6UsW3oMfpKy0rh1N/W2wc4WrG2sM9Q9qxPri/xR2nEz9s+HravmJbDJn
E/z8sfdiM+oRSGFj+ydXp9pT/214juvBhJtk2WfYy+/ioZ8zqX9gE9bHOavo
jBnU7wg77mX1ekqP522AbROfeoydR/1p8LDWJ2FCd+ovgxNKz3R3Jyta4IYx
R+faLqR+wzeYDy63mvzdlfrt4bczaqdWL6B+Ecw+tMShmCw5BGvY1V/hLKL+
G/A8g59DRLRc3Qzz7lZ2u0ivlzPgLeZr0sJaD3q9Als4YkueqQu9f+K18OaA
oMxGLvUnw74Zp/SV9Pi6a7Dlj+4luQ7U/x5OK16/oYDM6/cO84UHXvNDyCIe
XMBZpX5Alq6CgwofRd+aRf0J8BZT7ZrbZNZV2Onjr8Aqejz3HXz1s4N8lCP1
91bifLX6XS8JvR6JDSyYeEcvmCz3h9uW5xaWk9VxcNDzOPtx9HxOEdyk5bXH
YDb1N8GFe2dXWDtRP1ul5L8+NnHATmfqt4aPHe530HgO9fvC94K2fg20of5Y
OOrLk1eraPvgXYI3DZkvTSCLXsHZfXZOc6T9T6rzXsm3V0+RGtL+pZgAT/qg
Ib/bkfqXwfpBKZcsNKk/Br7bYcPAHceZz/eEF+AeiqWFS7Pp8786uLnlN/dS
BH3+1/WDkj890/rY0EjGait4vKS9/hiZ4w37Bp0dGD2X7n/bCy+aWhS2gSwu
gMPbc0/edKP732rhsLvFsnvudP9b52ZsHxZyznBazraEs228chqcGfMWw2EJ
s3oGODEW7YEVnX3H65OlMjg84PjUYBvGiufwwWW7JPFkltZHJX/cdnFx6BTG
XHO4cen0/rlk4UI4JPZtSTRZshPmRjmtyp1G/adgladNpSNZ/RQ24J3MO0Tm
dFAr+cHlh8wqyYJRcJWo+fDsqdQ/D+4qffZIPJH6xbDyos/o3rS87iS8c8nc
jv5k9mO4SZv1rT/9Pd4fmF04Ieg8LRcNb1Hyt4cMv76LLHWHr0/Knu5GVoTA
Dx5NKx5Hz2flwCc9R3JbaTm3Erb73uvuE7LwJ3yieMTsYLLE5BPO191m72ix
pn4BvNKi4v7eSdS/Fd7TaZ52I71fnGOwUd7qG2J6vwUPYM//Lgwq4VP/d3jb
9olbbD2of0grjqdVvCLNedQ/B27U/9x770LqD4bte1qley2j/gz4XJcVr/1X
Uf9dWHU1dN7StdT/FfZ87vtJEEj9nM8YvwZml6WLqH82vGF6q/Nxej53I1zH
M6xOWUf9R+Hm1essDpElt+Dy1U9L7pHlrbDHEcOzWWuo3+gL3q8FZwZyyRwH
eNyp0Ck96fNywXr4R3hiczey+DCcbxwRq+9P/aXw7IYPnfPJdWp4eprw22l6
PNvgK8arTXeK6pZT/ww4fk+N2UWyKACey1k6JYaeLz0Im2dEbBvoTf3XYfbQ
iR5GZFYz/JDd/HjDfOrXa8P5w2332d5k4XQ4MauXVS6tD8kauJTr2eM77b/y
JPizc6ShLq0/tRxu7My29xdQvwr+mPHT8YsL9ff9hv0h793M3rRcPA0ucDyT
ZUH7s2wl7DMik9tOrouHmx7EzBnjSv3FsCJ4m0WpF/W/ha9bTgiaFkD9vb7j
+HPtnlpA61c6Bc6/Jz7359/694MDdVbwtddTfxwcvCW+xD6a+q/AE9tyrEdL
qL8RjiqOD5+WQP092pX8tc8yQ9Rk+SR4YcshE51E6veBB+f3TFucQf37YXmk
Rpo/WXARzuvUL9uFxlNxA1xlkWMck0P93X8o+bLFswcb51L/eNgoYudQPQvq
Xwo3rWx/XKpH/dHwhZph849xqP88vGXusH0OptT/Ei41dV7iSlZo/1TyTycJ
Kw6aU78VPDPbYIfckvqXwC/3eb08RxZGwq/anYPyyJKzsOEbi9C3NF7Ja+CJ
Q7A10P6u7vRLya+vK3nZl8YHjgW89XBrjc5k6veEg+ecCksZT/274eaDc2bd
oD5ZPjx/s02Hh6Op/9nfv6f5tvHLEOrv+BuvbwTL06QX9Y+BazZF3thBFi2A
j86I2jdRg/rDYd3iI04J3ag/D3bOOhM29yfd//IU3jriRMa8L3T/i8YfnB+q
h/KvqOn+l5HwxIjA3SUqxhIPOGn1xQLL54zlYXDDlrRy63rG6hPwo34LHQ/U
MuY8greLbq8OoMcLfsMGp+7PyH/BWGzGUvFXz4tbEUWWucGOz78cH0Cu2w6n
fNhZE1LDmJ0NH5m2qKnmHmNeBVyZvrL6bAlj0Q9Y07afy5wzjKXDNFT8Cdlc
LZN4xgoX+Mr7XxF+XtS/FTbo5rM1jMzNgm/NSwxpdaf++/C30/oDNUOp/9vf
50cFVw/dRv2DO6j47MNLLDoupX4n2LuxxWWdkPo3w29q3vg6+FB/Otyl9LbB
y4XUfwe+XZn1NJRP/V/gj5sqtls/pfu/jTVVfN4on8f5PLr/exb8tW7Up8N9
GfOCYK9JpwZez6D7v4/A/10q0r8ZwVhaDj/UsB2wZwdjxSf47cVxXUtCGLOM
Oqr4C/wtRgeHMubOhNtCv25hCRgLA+HD40569nFgLEmFEzb0e5s8lbH8Jmxx
ZsLyXj0Zqz/Cxw5xR7WzGXP0tVT8gJfuO95eZu4PF9jBizdKr/unMhavgysH
pZ7pf5ixLAW2XBamPSaKcV0JPG1Wn+Bmf8bsD3+XG7weEH6a7v/u30nFv6Qf
POypK93/zYcNt9quihhA93+vhi0vsnfGVNL9z4nwISOtMrfzdP+zHE7ZIovs
Hk33Pyvh/U/thn+Novuf+3RW8YsLIo+Z03LJVLjk93pf3wi6/3kFPCtue0bK
frr/+QD8/UXrNYvHzP1nnP/gulIfTetnjAVv4P0D/AO3PaD7f3t2Qd9y7XVf
9jL3r8kmw8EuG5efd6f7f5fDZhdZ7P6LGbMlcJetCZ0mLqD7fy/DLte23g93
pPvfXsP9W8rSDs1iLNXVVvHXpA7RL6Pliomw4c+x32uGMGb5wHqeTxNUAxlz
98EPUiLeBhszFhbCOnz282QjxpJ6eMXz/9Yf5zCWd+uq4m8zq9roPoixehy8
/nnrgAWGjDlCeOGQe6GvJjAWRMGbF/8scBUwFp+DL0bq/TSkXtkLuMudvF+l
ltTfpZuKn5h8epsXPZ89Fr66xdfz+j26/88LrmsI3t5SylgUAa+9aJRX/oTu
fz4Db87a0f9sJd3/XA07H7i8OO0m3f/cqTu211s5eia61M+F3X/vunfiBN3/
vQj+8Iy/0lbIrD/JLniHoOlqgSdj+Wl4aaSg5OESxuoqOJSve3zsalr/mjro
2evVSbKO1v9oOFTWqL90JWPxfDh+4R6dqzsYy3bAZStCxbE76f73XNhTdjz2
N5n9BO5U2F6SnEj3v7N0VXzO/lfad+Lo/vcRcOXcmKqB2XT/41y42op/dXg+
3f8eCq8x3hPHfkv3v5+Azys9Ox58Q/e/P4Szbiduc1AyFv6CVQs8X0WSJaY9
MD5kvu8mVlG/Kzz2/th03Q/Uvw1+2H/Z7GFkznH4w7juF+KbqV8Bh93W29Hn
E/W3w4Frg6+Uk2VD2Sr+mJZjKZO+UL8zHG3bmND33/3/W+AnJ8+mW1RTfybs
3Gz0c9dz6r8Hb3G58WYbWdoGJ5bZL/QiKwb1RO8h5/V9/vU7wWc4G+YcaKX+
TfCEMtM3AfR6hVJ4S/29UiH1SG7Da+uf2Nx7R/2fYfMdJ9f50vuhHtgLjxc/
msYncxzh5BZRcnAL9W+AuS539l0ro/40+PeWpyuNy6m/DG7nzTrTUkz9LbC7
/a4p/8w27I33V1j5du926reH25p5aw6TRSJ4iNvKzx/WUP8h2GZz8BbdtdR/
A54f3GqhXkb9H2Hr+31+bqPtkzugD44vxV1zv66nfluYo1s7ce1H+v7DWni8
416/JWR5MvzEIqYhhKy+Bn8u2uMdpqbvP7yHsyZ0vT7xNX3/oV9fFb/b0tPP
bZQ0/vFgE9t5S1Lf0PcfVsHCj+L2W+S6BDjEq3Tu/Lf0/YercPj9SZdS6fm8
d3DdrDvOxe8Yi3r3w/v9e+hcV7LUBo52akkYT1b4w/vSB+R70/NZB2Bl1JT+
gp7UXwQHGvcrvcym/ib46qshU9p70fpn91fxmxQSTysdWv/WcGqX49126dL6
9+3/93ggj1tL5sTCW3bHOK0fTOv/Ety4a3mzYACt/1dw+AunnV/JMh09FX/U
7LTq7+S6CXDG9wYXnWDqXwYf/O627WIg9cfADatLKi+up/4L8MiSl+FmQuqv
g28Pc3+wg6zoOgDbh1mrv/NC6h8HpxyvDGi0Zsz1hs+7aUS3TaDxby88aL/2
JbOJtP4LYPU9UX9PK1r/tfCBu2mzZ5PVnfVVfJmHcVsjfZ+FYwkrN+f9sSIL
FsMz3QYrs+jvi/fAUtlLh6FJNP7L4CqWVf22f+P/c3iUDfv3Gx6N/1oGeH8v
7mYNt6Pjnzns4PpJ85ceHf8Wws9u9BoZXUHj/044/6rppnkPafw/BX/kT7y5
7waN/1WwvGrxV1M5ff+lgyGOxyvWZNoW0vdfRsGzTbqaZNByyTz4T7FJ+Gmy
XAzf7ZAzeDdZfRK2fnJXveMaff/lMZz0KDO/9Srd//4H/r0rq8OrM3T/+3Aj
zA8nbbOfX0T3v7vDhTpDIn1z6P73EHhHZqeYMcfo/vcceLJXwwOvU3T8q4T3
OMqePM6n499P2LZ2TLKSlktNBqr4ne9N99pIyxUC2Hfsw+kuudS/DQ4aM3BY
Apl7DF4uXH9iF1n4AM4y6rd/yGnq/w5X1/UenU9/Xz7EWMXvtV2/+gRZPQe+
eTbAd/BJ6g+GK/M8tx44Qf0Z8P03Xzs/y6D+u3DLycvWFzKp/yu85VZobg65
jsPBeDh+fnkCPZ49G449f2tsFJm3EV6imT86niw6Cl+TxL03oedLb8GRjZ9+
dSUrWuHo87JFO8isgYNU/BvTO3zrHUb9DnC7tW9bBlm4Hp7nddD0qh/1H4ab
Dr+IuU6Wl8K6Ft+frPKnfjU8cM26DAt76jcYjPObtzeFM+yofwbc/+Lrsku2
1B8Aez98UX5sOvUfhK3VkwYdJtddh3PzSw7HcKi/GX679MJ96SDq1xuC48+f
J2dchlD/dJiTHG41oR/1r4Enr8seM7Mv9SfBWWu7xq/Sof5r8IhI/xTLLtSv
gt9KeN89OlN/36EYf3/1983Upv5psHLd8rEWXal/JTxO38Y9lZar4+GNgZXf
XpA5xfCtsc/dumhS/1t4+LpO58430Pe/eg3D6+kc/8Sqhr7/NQW2mjHLt/kp
ff/LD470uiBZ9JK+/xIHrw2ecL+dzLsCa3vKRnarpu+/NMKWF56+aCBLe5io
+OXeVjmJz+j7L5PgPTHCo5Fkli8898nYRUJ6PHc/nP7R2sHuOX3/5SLMOn/f
exc9XtIAVySu4UTT65N3N1Xxd/qfEK5+TN9/GQ/vqbHpdJDMWQp7fisYXviA
vv8VDbdIlMdfV1D/efjPCauuP59Q/0tYV3vdA90S6tc2w3zE/8KqA2S2FRzV
fu7DVTn1L4FZHJP+nrRcFAk3L1C9WVZG/WfhhpMXSzLKqb/m7+OnaWd2uEf9
nYer+NubMupnk7kWcNc3hsHGZKEnnJz7365xtdS/G77yyFtZUUf9+fCNinsB
Z99R/zM491rBLv+v1N9xBI4PcwO+1X6j/jGw8kzTpDnfqX8B7HctOO7rH+oP
hxWse+tCWLT958FXUqoNLtNy9lM4drFjdgcyT2Okil/kM355PFk0Er6YG75/
H1nqAa8pmp4dQFaEjfy7fyZ3EZFZJ+E7a5fde0rbK/cRbL4vs1tKJ9r+f8ON
RRM2n6D9QWI2Cvvv/lD392S5GzygR6PrZ7J6O/xoVX31A9qfONmwZtIb+2dk
QQUsv/Z93fsOtP//gDv6vtfJ+0n9w0bjeHtXMDKY3p86F/jw4/HjK+n9Y2+F
b14sKbSn5bwsWLPvl2lpZNF9+JTi7ViNdur/Blf7Rwe7kxWDx2D8dTpX1Yde
L2sO3GdFh7iv1MvdDOf3mJjf6d/+nw47PWTt0qD9XXIHHpMS1fUEPV7+BfZv
e+4Q/q/f2PzvePZp9kPq48yCdbgFdjPe0PoPgqNN4hvqyOIj8IqM+1UHXlB/
OWyeN/yky2vq/wSzHvVaPKyF+o24OH898nyJ7Av1z4TtO/y53UR/TxQIv/iv
JF3rLfWnwrkWi3uMICtuwo92lZnV0/vNUsMNc57OMafXz9W3UPFfNv45FUvr
S2gHO7R69tKkXsk6eFfpdcP7/8a/FNgs5NTPDd2ovwQ+/kPnM4/M+QDfWtzx
tx1Z0N8S73+eq6Nag9Y/Hx5ZtC/gO1m2Go6Y6d3ZgMbLukR4ic/1Cf/eb7Yc
Nn/dFP+iI43/SvjsfX+Hjlo0/vcZi/3Zb9rCOlounQo3qhdvyaDlihVw/+fl
vpvo77HiYdui6NzjtJz7HyxbeS+9+7/t/w2cOy46Yeu/7b+nlYpvkPnCgUM9
8smw7oC1un3/9S+HQ1oMgzr+65fAj7fumX2H3i/BZfiomVt8SHfqfw1P03xY
Z0vLZbrjcD5c8/131L/tfyL8+9al+jYab9g+8I7NXu/sabzm7YMrf4U+fkTj
tagQzvp1ZdBTsrQerrL/+OroaVr/3cZjPJDu3ngxh9b/eJj/pnnHrkwa/4Sw
IHb87slkYRR8O+SO91r6fqPkHGwyKWNqUjyNfy/gCYdW1/6zussE9LRYZnel
70dyxsKfzKed2R5J278XLN379r7Pbtr+I+CtbeZLE7bT9n8GnrwyZLzXEuqv
hmfN0NOuou9HsztNxPZ4SF8z2YH6ubC1w4knz2dS/yJ4Qjin16CJ1L8L/nHy
68QsC+o/Dc9q9+65icx6BrdpzDDfR+ZqTsL5ou9h99ph1D8aPhO2K+igMfXP
h8/NWdgkNqL+HfBoW1fxlkHUnwvvYkVWbONQ/xM4VU9tdsyU+lnW2H7yebv8
Tah/BHyuS7F013DqnwufqnfZo6TH14XC1henB76h5ewT8Pbs4tsvR1D/Q7jF
xkDcqwf1/4JVfk3zvvajftPJOB91HZxt15f6XWHLijb2ggHUvx12fvDA33Eg
9R+H8xZdv6Xxr18Bd2TPiG6gPkk73NgjtbdkNPUPnaLiD04TKi+Pp35nWPX6
e+pRP+rfAuc43eJKD1J/Jrzw4RP5pkPUfw9eMeyztSqV+tvgmQEhDqoj1D/I
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
4EUqfoxO2PSWU4zZc+D1qY90WccZ8zbD4Z3WRd/Pov50WE/304roo9R/B76d
yT9feIT6v8CLysq1NmdQP8dTxd/wwvTgeSn1z4LTsk/JeqdSfxC8KowliU+g
/iNw6832vPg06i+Hh68/uaoTPV79Cdb8aHnkzyHqN1qM5/e+lqVJywUz4Ume
Tz76J1F/IKz/69jA6WRZKiyu+rRMM5n6b8IRye5/PtBythq2bH0c+J7M0/dS
8c1V7CyDf/128M+n6p29jlH/OniMy5u182m5IgWeen6Ax316/1jX4UCjfU27
6fHcD7Dmf7M8LcnC/kuwPxWqL1bQ8yV8mD3nZ8UCen/lq+EgMc/8wUXqT4QP
z1oR/HAKbf9y2Px+86JCO9r+lXDpoPc3TJ1p++/jjfF+aj1fRvuDbCr8eHfS
cm/aH+pWwKvvLuzoNoO2/3h4+IN7Wv/GE95/sH1ez3MSGi9Eb+CSMer3okTa
/3sK8fgnwlCfFNr/J8O7PeSHJKm0//vBW8ak+K0jcyXw1bajHxvo8cLLMO9K
SkdvsuQ1/HTv6X5tZLnuUpy/xKd7+NJ4rZ4Ib6sxOapH4znHB7ZP+r1y/r/x
fx/cy7xqViUtFxfCwUNchkyh44WsHpalJBi99KPxv9syzHf89k0x96Xxfzw8
QGu280wyTwg/qIpb2RxE438UPOSc7vyv3en4fw72O91+3H4DHf9fwLzdz04V
iGj+o+2D40tQk94Smj9wx8I/wuoVZ57S/McL7lkrOPeC5lOSCLgvVxm1pjtj
+Rk4TzDz/II/NP+phluCSjfYajLLOZ188XqLjLSeGjAWcGHdwMmXW9mMxYvg
mZEXp47QZyzbBRc6+ZXE8xjXnYb1Bmz90M2eMfsZ7NZjzrNYB8Y8zeUqftij
kNn9rWn+Nxre9sjJPSyS5n/zYa4k/TXrGGPFDjh2ldti8UXGrDx4WHz+h4jL
jLlP4CCr0z3+HGQsZPlhe96l3M7PpP4R8J73efvGx1L/XPjKiqgOFasYq0Ph
4ZOmqr2XUv8JeNSJ5zq13tT/EB53abBTqwv1/4I3JbG6nCbLTP1V/M4Xu933
cqZ+V/hIvzvZJ2k5ezu8Pnyi6U4y7zjcnfPsxqT51K+AR2dPObmDLG2HU5bM
ir9JVgxdoeJ/FxdWD7Kjfhc4eduIfQvI3C1/bXe4oJMt9WfCrxcbV02YTv33
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
PWXTyIo2mLNovoUdmTU4EeebIZUmXmSuE3zhoU8nLZq/CzfB69t2S+pouUQK
6+8erC/5N/+/DQcs8Ti2hl6v+jO8YbLp7d1kjnESxq8ZTTnjyAJHuF1uw71A
5yviDfAK6yPDbtH5niwN/mkW+WQp/f5+XRl8qEE44fRv6v8ET9QclmRjQNc/
DJNV/ObJE13eG9P1D3v4fkFUkY0ZXf8QwaEGuqfnj6XrH4fg9mNLnDZZ0fWP
m/Cnh12zd9B/D4D7Ebb/6V2/eQZd/xiQouLfGfKoTw399wcktrDMUdE/1p+u
f6yF75mUaf2zOhm+e9O1WbGDrn+UwLV2uyICw+n6x3tYYXW4zX0vXf/od1DF
/xwp4X6JoesfPHhnipXJthy6/rMKNm+Zeakuna7/JMJDLVOel5J5V+FCk82i
zmeo/x3sMbvnj4rz1N/7kIr/206gNb+S+m3gfY4v+EPov8/AWgH3/U91erIm
3f9xAP4zfX3RNrq/SFgEizwUnA1WdP9HE3zZ57VAbU73f7BTsb2Ulc76YE+f
/1vDnGGP1g+j+7M4y+GKQ4Gnh6+kz/9jYU39Ae+uraDP/y/BDnvWOjv60+f/
r1L/3k/3WqO3E33+r3NYxbfrsz1N5UWf/0+Eb9n17avjS5//L4Mzf7KrPdbR
5/8xcCvf3qssgD7/vwCf2OKdvp6sqIPf5RXX/A6k+1+6pWH78k/ULVxP/ePg
+Zus3zjS/WxCb3hFXaNKwqf+vbAoxD2lO91PIC+Ab+hpPymi+9XUtbA8PHWQ
I5nT5YiKfzOdtW8F9Qks4dQbAx6Wb6P+xTAn/9C3z//uf9sDNwwNs/q5n/pl
8H8qYeS//x4BuxpO8Nu8MOvf/W9aR//e31zq8NqQ+s3hiO4Bomt0f5l0IXzu
u2j96e+0/nfC47U/9npF/70Q1mlYovEjw7SNtv8qeO7qQakh9N8PEXaQYr4x
xX1Gl1ba/kfBebcmT76tpu1/HlyT3czRaKbtXwwntezf9eInbf+5cIG9k2Ye
/X3BY3h7y+HW0R9p+/8D39owZsHBz7T9D0/H/pS4RvCLHl/nDo/tPfdIUEfq
D4UzfXYluNF/z4SXAyct1l5+7wFt/5Vwwuh9NmNraPv/CafGrZFdJStMMjAf
je+dqqyl7f9/lu47LsY/gAP4CSWkS1EIETLCGWUldw2jxElRVpEtlcgqSkRW
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
bRZ+599XNv07PvrO7Z20cKDrv/5DXX3l58xvDeel5oxVeMX8XnDHO5N0h1Yw
/0VYprH0olMZ8+fBuUWLygv494LfcDf5TstXb5m/vxvai85/Iq7QjjPh0qV1
nb8zb+AWeEztcrNDHK+TcR7Oyjq6MmkAf/9P4Kqt0+uOaPL3/wN295srOcD1
GaV91+H+Ne9HzrCu/P1Ph++XPGvrw/IzYSPc/lGvoREa/P2HwTtfdb53meWV
MPuf799V3sXyRFwPW5dc8xjD8sattzt+v1pzL7p34+9/Guyj4TbjEt8/bz28
oNE88xstCIEjT/QYMrkvy7uH8Ma4AxVBXC/S8Rtcu8Fy3BLuVxGovR6v3yN+
ZT6dMRm2Ml144Q3Hg8nd4GzvrBqFlvv7GfhXRvv4dsuY/z58uP7a470ezP8F
VlLXf228m/m7bcD9RP4magDHC1aawhXd1QOtWD8VusAxCzOd/Vi/E5+EZ2Y/
sLUvZf67cM3Cx/EqXK8sTAZ3yb5d83kbn6919cDvferAk7nerL9L4D1nfgzc
yfEgojVw8o+gVzZcP8vxGDz1kOes/m9Zf78NR1fkzzGqYf39I3z9xLHgYS37
n6tvRHunrPOJ6y37fxrDC0JNavtzv2npSrj7Z8fPmRzv4XMYvqQeN62I+20m
pMFuBVs/FrL/obIa7hXyS2UI97cUqm2SSXTnidTCx7P9MgH+seaG05SpbL8s
g1d3Sh933Y7tl0Nw7oLQjnUr2X5Jhveuk/mV7WV/yTu439V1kaP2sb+k02aZ
5NaEveIzp9hfMhbOyt+m/DqY/SVLYHe3DaqzzrG/5ACcd2NQyZnL7C9JgldP
czh4Jo79Ja9hzVHZiy/T0g5b0J7f8zXjLcc3+BjAA9Y7iFdlMr8DLC0447+c
/fGVe+Gjo7yO9ujL9ut1+P5u/wu6A9l+fQmnuZcZGIjYfm23Fd9/cP+iJvaH
hY3859Gm6b/ZfsxbABcut754fQTbr3vgFatzjd7Qoiv/jpcvNwkaxPbrC/iC
WFKjOZHt17aeMonaVeshb8az/Tocntfe5aC2hO1Xe3in7ruH1yez/boLrgm9
65DFzye9DDsFz93j4Mj263N4f8rIqMl83pCg4IX6489T6ze0jP/Wh5V7xq0c
zP5U4Vx4bbNgypUY5t8B75aqm/c4xvyxcG9R192B15j/Gbwqpn/3GI4vz/sL
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
evSRjhn3Q6jMh5c927xsIsfrCf/Av8x1R2lzPwLxgGS0V3sOCX7F/R/cpPBx
+Yy2HQv4vGErbKfx9owi57fkXYD/mHWoceH8GEEuvGOQQ6sntOgnPHS4k/bD
RD5v0E3B/W7w2LfNfF4daAWvL5qmsvAenzdsgv2FfWSbc/i84Rwc+3DC7CEc
D6iTAyul3BjkQUsb4GeGU+a58fP46KSiPN032e8dxwMmWMBXA+PStnO8YOUG
OKTGIcy/Zf5QKLynl1T5eMv8oUfwl/I2A5/xebtbHey6+O3fj+HM3zNNJnne
fUufs4HMPwV+sT+9/hEtcIetEo54zOP8KNFZeH/t9W59accsWN/TbFd7jg8M
lMP2vzMeDKUzuqfLJMdkBZOiuL+I3Awepei8bpcH87vCYbVThi3hcekpeNDm
9OLptM89eI1xtnn2Rub/DMsu5au7b2V+zVtoP/aaMuIcLTSBGxPnucTQYmfY
SqtVwHLa7Tjs1XBm1zc6LAMeaeHilEDnfYIX/OzqpcD9SwRdbuP+4a3WoLeT
+SfBm8/n/j7VMv5xFWz6W3q2Kx14BD6ZmLzKgM5Ih9969Hl/hP8vfw+HK3Qd
VrOL+TtnyCSWpQ0vN+1hfiM420VRfaYX8y+HA/1vxnbdxvyBcO5mi+K1PC6s
gu9+jEi9ztcXq95B/WjrXpfHHP8Y5gQXbG0vj1zNfAdh+dW/t5cyr+AmPC9h
mnnKJuZ7c+ffeJzTScftma/jXZlkW2T+uUN0oCEsWjRA+8p85nOEfTYPNxXM
ZL59sNXeWT5RHB+pkwh7L7BtXs/j0lfwcdX9hX04ntJH+R7a60qSsmXjmG/U
vX/92+9XqfL5Y+VC+N7thMI5tNAfVvwY/cWH4yfFV+EDgVbCXI6XdCuHlYNy
j0QoM79iJuo/ti9jPeg8Ebz/zNt7+/g8VDAfjljcILrP/jORH7zQo3TMCvav
OcbDb29umqXN/rPAUnhow/jgz+zvkg+9j99j03BT8Tf2B9rBx4OXfzP7zP4R
X9gteW35rwr2j8TB7R3dvHxesn+kGDZKL8p4z/nclYIsXE/vVPersL9QOATO
XGzeP439i2JbuGeG6eYrtJs3fDk9ekfjUT4vjoZ7REtv6HG+Wl4h7KnuPHMc
+18Fzf+OTzBweMjn+aKBD3B+ujwcIuDzdkdrWLazcU6/lv4RL3iygtWV3jye
cRFuXhgv0+b8CnkevLDm1TIfzofR+Q0HaARJy1vmm/R/KJPE7a77ZsX5Tj4z
4TS/je9b9pdK2AKHLHsXNLhlvsl5uCz4w8YM/r/wKRz0yzsrlvM9xD/gE9vP
yH6eYH9B30coL+X1BVrsrwmbDn953GFMFzpvI/x57IKVx7h/m+Ac7HdwbUaQ
EvNnwz0NE/ddUGb+ejhhwFvFZ+2Zv/djmUQQGFjrzffPmAZ3KDC+/KFlvtF6
2GhalFMdj+uEwHN31+4Rtsw3egjPeGnrn8z+IJ9vsNnpoBfRV5hfO1smGehR
/OkZXTkZbp8fP2oa+0OE6+Dd9gvjp99j/jNw6qvY9ZdSmf8+/EJ+13Y/HfYF
nhSz1/Mz+7/yuuX8G584IEzO/haBGdzWRX/3W/ZviFzgTJewlx85HyvwLuwn
dvNK4XyvDBm8p0k06zb3K5N3fSKTOIrFLhbLmVcCK2/tZd5vCfOugd8f7xNX
tph5jz35N74+981eOuE2fEuhxtia6zdVfoQLrj5buNWeeTWeyiSFfu2kJQ7M
awz7DsqJtnFi3pVw+PQuQTFzmPcw/GaB51mPecybBktj7Fy7cD9JwXu43m9p
VDXfT6SWi/vp1ODokdzf0XECnKG2r3tbHg9cBge7FAcX8vNmHII9/Y8dtOTf
y5Nhq8nZ50bw8+q8gw0vdjYbxutL2ikP5UNMSEk496v0GQtfOLFV9TadsAS+
Pe6IecAa5j8Az1z+Iz1xGvPfgJc5u//X0p3HQ9XFcRyXNbIVWSJZilZNZUmo
uZKQapJEKSrtZCqKNrSraKj0ZKlpX7RItIlGlKiYSJYUiQgTbSTU8+3++vP9
mmHmc8+9596ZOcYa3znU/x7Ofl1XJ0/fb8Xv9xLzSUrd0sop1OsLu0duNxPT
94lIHYCnbr6/9TN9PwknHZYssD8wkP7fot87WF6pvjCTLOhb8vf7KoxUPvyg
9S7j4alRL6bupu+3aveBnzUsVzWh77Mx3AcPccu9nED/n5F3E/YyPpl0mxzx
Br4bdWGd2Tta7yJXiu11cvSCrDe03mUsbDVSsdHm3/ddLYCV1861n0Hrkbm7
Yaf1XXt//VuvfR2WHzp+yxX6vihhBax1b9tb6yJa7yP9CvPP4lH1bbT+mTMf
Dh3x+WIIrZ/2i4QvTXx6bSpZkALXBP7JFdH/TxWVwTm9CscSye1/4KfNO1TP
pFPvyDKM54O7/sX0fT08D/iGQZn9QPr+qYgdcB/Tm6v73KfeS/DuwQ0x3Xeo
twROqtS+8pEeX70Xrp2sbc+lx+Oavcb55+jO+K5//991Dnz7RFGiB/28cCs8
9Y45L5QsPg9/dOqQFaTR+iYxnBJfVJdH5vyCLWUmOJ6n+/sNLcf2GFoToEo9
glmw1P3d8y7T/UWhcEDtnj7D6PEjjCpamXG8e7t/ZFHPDDhdBvNCDvWEwE9n
T0/ROkY9Qri/noveZfq+G24hXL/41M47tH343+EHOV1lQ2m8hAaVeL0dL0wL
pPEVO8P+e3YJ3Wj/ktoIZ80Pm/KMvi+Hkwwr9HctTaT1T4IvsPWhUq3h5PZp
Va1M2CDtEeebaLz4sNtBc6Pz9H0+vARY1FjsOuXf95HlwXNlGry1c6nvM7w1
T0poL6I+nTetjPnNHRM/0Xp79anwqklBNa20Pp0bCHtFJlrJ0P/n5R+HTaM5
7Rn09wDCHDjf0EnKjNa7i1vgmgWPsvQSqU+rupWRcbBbpUp/L8Dhwly/2vOH
aL273xp40N55e9f6UO9ReIHT/uVvyKJs+MaQC5m9S6i/CU59buZcRDbUeNvK
xO2oy9pJ9+fZw+ueL5s0Zjz1r4QvTq0r3ExOjYVfR735xSPXZsL3Y1UTXcdQ
/0c4UePddQUz6ld/h/1j1VidloHUPwkelPHn3GQN6veHK+Te7N1K65/FMbBV
8soHh8lS92Bz60n71en7wTgfYJnUcrVttN7QT6UGr38T08SGZIE1XLDbY8Ui
ur9oCbxK4cnZ0e20HvMgPLBLI/Hhe1qPeRu2StoxxIzWZ/Jq4e2FVXf/vKT1
mEq1rczl9GnDl5XQekwLONI04shxWp9Zuxi+tuFp3w66XT0KzhKszhxGP8+9
BTMf3BsG5dF6zLfwxGyeTh2tZxUqvG9lTMw7hpbepfWY4+CSDLd7NndoPaYP
PHLy8UkaZL9UWObWbum3tJ5WUAXL99M85XGTemXrcD6Q+HeqZlCvOeyoWrBT
kWzoDRto39UU0e/j7YJF3z/UG+VTXzn8WXeVbNW/9dZ9PuB8NDR/nsK/71sb
DSvEFFfu/0p9nvCK5SaeW8j8CPj894OmhbS9hVfgossvwn1pfMSv4DrPtD5H
/623/gPL7pTu6P1C4zuivpXp2PqhK4rWl/rN/evJv4wVaL2rYDs8L7mzKpzG
S3QRtjYz++H5b73tS9gnsfWmG93fsAeedCnv95BX1GvagPOhZOiaScU0vjxY
N7rdqLaI+rfAgUV3/etpPXLtOTj+PifuSAL1F8PVbpG3npC5XbCnyeeAVjLf
5CPGS9/hXtQm6p8JZ0gv+e5CFm+GfWxGP3AIof4z8PmTT9bHbqD+53Cyc817
fT71d8D6XSHvMjSp37Dx7/tD09vnDaB+V/iCwf3f28jtwbBRoOH+FDnqPwVP
6HtYZxGZVwAHa4+LrPh1iu3/Bnv0Knq8IqcObsL17aoflzw6WNdOh+18lthU
drNW3wBrP3lzcmcda25S09/vY1neV/sza/4TOKVkb1/NLtbCdninXfS+719Y
iwd9wv5UWv2ioJm11DQ4/uGMFxNbWHOCYGFr7M2WVtZ+J+D1mVXe0z+xFuTC
e0bdOzsyl7VIAles0jrx7Qnrdu1mXA8suDnp3h3Whg5weMysK0NvseYFwOPT
yp5PJ0fEw8cMDdbVpFG/CJb7KTu23znqb4YtdgVwN/lQ/8CWVmZpgfJ8Ppk7
Bd7lYNjwmcxfDWeFLtCYShYegbUGDHg5cAH1Z8HmropWKmTOgFYcP3c92q+S
/ezg80Xc78nzqXcFLElfPs/ZnHoF8G7LpQd3m1HvfXiESle/phHU2wA/dt4k
3TaYetUkrcydkK/ZD3Wp1wa22CfVPHoh9S6Dr4hrmwd6UW80PO7ahLayJOq9
C6eLg3R8k6m3Dh4f4NYYSeYrf8brXe3LbnYnqdcKXrYkr0Y6kXr94JeRP36v
P0zjfRC+sm1UkuJ/1J8BlxTGbolvoP4amLdvicKCedSv2Ibt0ziwRe/FSbZ/
AqxyJ8O5/DHr9kXwJtdT0rfyWRvuh+ucF7Y8vcialwaLf1gn6J9nHVENP5j0
ZjI3jnWqfHsrM+y6ROvLMda1HLhyu9iac5S1+kL4uN58K6UjrLl7YMWG1oEn
BKz5N9r/rm+b2q1/jrWwEj4kUVayOcFaLPPl7/cLxkfdod8vZQ5r3k7Yums4
a44XnL4h/tgVA9Z+O+HQzneD8gxZC67CLm1xsy2/JLP9r+F5H2W5Pa2s26W+
Yv87XeT26ytrw1HwXSvn712NrHnz4I9BW8bol7OOCP97u8YvR99K1qmX4V49
qZXJdaxrS+GK7d36MZ9Zc4d/a2W89ZpuZ2pTrzvcmNTzvec3e7twG9xP7dHW
HHo88QXY9lr6wtgW1lIv4f6Wiw0rxaw53XBM8oz0be9Z+w37jvtrOfcLqmIt
mA3/dLRN/4+ejygMLo0viHx5m3rPwhGXlozT8KPeIpgbf7hply/1/oRTejYa
TKPbI4x/YPwWXn32dDz1usEVaz4E1ahQ7yaYbzW9895g1uqnYRsN3c4+/an/
GewR+mpZhxRr/g94+eWpB5a0J7H9QzpwPNz8yK9uYy12gfVqwi3lyVLBsPJF
XemKz6w5J2HD4bt2xzaz9nsK2/Q0W0y4zlrwFbZsOd2UQBbpd+L1VKG+h34N
9TvBabuab9aMpf19PTxfocCjbTvt74lwzoWFjnbRtL8/hq8ba/t45tD+3gZf
0jn0MP0Z7e+6P3E991nGR0hWd/z59/sTdCOkyfz/YFlzb5n+DbR/P4LP7LZ3
+VNE+3crvFZ+88qVr2j/1u7C/KFtpheQR/s3A09Q6/RSJfuthc9USG0teEr7
9zFYxRQvUOj4FT2EfSN+XFfKpuP7E9wet6tEjWyo+auVaTtodCmZzJsMz19c
mRuaRr2rYOmuF4GvblJvHDw2q6Iwl1z7AH7d10JtOt1fvRHuX5B6qyqVju/+
3difgsKunyLzbeEi15Lpy2Kpfzm8YZ/B3RSy+DA87XZmRipZ6j68pKNXXvsC
9dfDNyXTjs6kx/NT7cH5YEZoq/Vx6p8Ie7k+ct5A84NoKZx1bsvGFTHUfwhe
r3P1waO91H8HPhm74pXjbup/D/9q2uD78t949+vF+X/k++WzDlK/Jfwha3TY
MZq/an3hxdWL3njTz6sfgA8uO5h6ZSv1p8OFL4V147dR/zv4m5LpTnl36u/7
G89/8BCj0LnUPx7eF62Z3EaWWgRfmaWZl3WN+vfBtnuigu+R/W7CQ29d0Rpy
lfrfwHPeGl3cTvOzSO4Pri/ti0bvSqT+sfChfN68OenUvwDuM/NEgA+ZtxtO
jNh+348ccR2+863tu8Id6q+AdU6fX8PNoH5pKQkzMU41uE8S9Y+Bl78JqntE
2587H17SWfhp6BXqj4SHGmbb3N9P/SnwGostpp1Tqb8MVhztvjdyPvVL9ZEw
DfyvL1fT9uKMhJNn3Ob60vbx84CFflHnrzhT/w54QNuyy0WzqP8SPGZk1TRn
F+ovgRPSq97O4FJ/LzzWua241Jr6zaQlTHRhLa9hJPXPgftpFYsM9aj3PDxD
qTd4ojz1iuGKoV1LnpG5v+DFyev3KehS71AZCZPRObfMQZV6Z8EPs9MiJf3p
+XfCqh1de16Np+c7Q1bCPA6b/XYS3b89BL4+aoTTuo80PwthrSYTU41/56NC
+HC4Qc1ims8ivsN2wyUplXI0XgZyeP69gwOMlen5O8Mrdc98cW2n+XkjHCj7
NL7gNc3PyXCV9MiUpa9ofs6HNz2RM/X+QOenL3DLrKjr4wrp/KQnL2GSwnSU
S/Lo/OQEtymHZK7OofMTH5Z9kh1RyaP5OQFWmiYe0OVA83MevCl2XNiv3kS2
/zNcMUHuyqYe1u06ChLG3/uW55EvrA2nwgbfG5ya97PmBcIKK+I+3tvHOuI4
fLpPyJYLXaxTc+Bd31L2333NurYFvqAwyagyi7W6Vl8Joy7MfB7ziDWXC+dH
lsb5X2PNXwPrpdYUaqSxFh6Fs63DYpQzWIuz4c8nNRKOXWUt9Qk2sOAH6J5l
zdFQxP19/OQdBaz97OEuI8sN39azFqyENapMF/vwqT8W3nCpV9l+A/Vnwq/u
B6W60v0NP8LyFz1ff1lN/epKEsY9Xf2lDDliEqwcf+KWvyf1+8N1rolOL5yo
Pwb+URBvUWJD/ffgyVtW+zwlcz/Ac1e77nMcTv0q/STMJK91K4uGUL81vM6y
eO4nLepfAq83Gf78jDb1H4JznJ2+lNH9Obfh3GvDWwbQ7X61sNHHhHdGStSv
pCxhbn3deKqBLLKAZYe/vZbemsD2L4anf/NLX1bC2jAKDve9our5nDXvFvz2
lG7jiEesI97Cm0y7tE3IqQoqEuZ9ANe2+jbr2nFwZlC4ol4qa3UfeEzzzHjj
k6y5e/86+WJ18FHW/FQ4dLt7zf7xrIVVcOokk4tzyGJZVQnTKyqc+X4ca6mx
8CgzfovxWNYcb5hXvEw2lsPabxdsV5wsKTdnLbgGl5neH1w+irWoHH7U/GZk
Ibm9j5qEmRU2Mb9Mm/pHw+fd9dT8NKjfEx7mnd0RSY6IgFMSR7+cP5j6r8Ai
mbDkL8rU/wr21p9WL/PrBNv/By5rUDOrbGTNHaEuYQ7uD63n1rPmz4UXzSrc
4PmetXA7bB+UENJSwVp8EU4dlrh1QiVrqRLYZW5Pf04Va04P/PPboDjpFtZ+
pv0ljMDybSPPgfp5cLjPTZkGR+rfAg90qHZSaWDv334OHvEk/Ug1Pb5hMWzV
J+19Ty1rXhf8tMTJI5qeb4TJAMyfKg9G3vjIOnUmHGao67mOfl/tZvj4wONb
4j5Q/xl4xqz8znQx9T+HW3JUJ43Jpv4O+Jf89uldfWj8DTUwvydNHpemRuPv
ClumdaUNU6HxD4H/uHDkklVp/E/9vf8SM+ZlXxr/AviSfc5qgTT1f4MDyrqd
DbrYxxMN1pQw++xiew3aqX86XLUmtSGsifo3wLs1bLtNqIeXBN+qvr7UopD6
n8B1uVMuuDyl/nbYUwWX/KbUP2ighJESDv5ROpb6p8GBymMzzzDUHwQrzlxs
cX0S9Z+AF4zQ4Jb0/Mf258JPtVQ6mttYiyXwQNGH2TES1lI6WhJmoePJkOP1
rDkOcKjNXrv7n1n7BcDTd5hLD/rIWhAPj6hyMjydy1okgn+ruW1TLmTd3gwf
Kj47/dlT1oYDtbF9+EaJVx6z5k2Bp3YzKzoesY5YDVeozF75QMQ69QjszFk3
7NRD1rVZsIHJ8URLMneADubTWbk3K+n38+3gfaLxY/oVUO8KeLGFVtK4fOoV
wD6lbcY7nlFvJuyxfK5R4EvqbYBtn4zV2VRMvWq6EibPZ92oc3nUawOXPC/1
2viEepfBlU3DP3Kopz0aDn6RPmrALeq9CwvPVH+7fo9662DVPz3rk8kRyoNw
/i29e+0V9aRawU3pz+f++NfrBxfxtvvNp+2hfhDuHRdqfJrMzYDLtHs+N2ZT
fw3s2vbQTrWK+hX1cP4VeMrvqqb+CbDxptWfgiqofzE8LHlnVguZsx92XtQv
36uW+tPgXTu9jM0/UH813OTg/lyOLJLXx+/7NqLtwh/q58DSS2OlBKtof18I
77+fcd50Le3ve+BQfwVt42W0v9+Ac92CFa1n0/5eCbssLLF9NYf2d5nBEmZe
x1ljeXfa383htprOfsvodq4XXPjOYSF/Fu3vO+FfD/JqZ7nRfHcVHqD5tnQB
WfwavvHVW3PSVJrv+hhIGL6CaH+wA813o2BNT+OQt3Y0382D87WDZHUsWQvC
YRmPlzk2ZNFluOdS0chJo+h4L4WzPc7IDPtB4/8bdrGePbbgG43/8CESRm3N
qvBTujT+7nCT71zNXwNo/LfBGrpfV2oMpPG/APeUjk/Q0qTxfwk3X136n50W
jX83rNK85ON8NRr/YYYS5ppTv5ZvsjT+s+GC+Efpb8jiMHivktGiFzI0/udg
f4X14fH9aPyLYI+OtMVh/Wn8f8JG3z5MdvlznO03NpIwbsO+R9+TpvF3gy1G
bhgwsg+N/yaYt+Qpr5Hub3gaHus+fNoZejzeM1jdfaTVEjnq/wGviB/bJPOv
f4ixhCm+7TN2iTL1u8BP77qGJ9PzUw+GHTunPe1HvdyT8NkP7y68U6H+p/Bl
9afTPOn5C7/C3L3Lj/0aT/36Jrheehl1IHk29U+H9xmEPPXmUf96eJzj9yM9
7tSfCEft/pV0eA7t/4/hqu9qUl/p/u26Q2HTzChNIY23I/wtsVuzh8xbB3OT
igIsL1Pvf/CtgS7hkiTqfQQfPnE47NQ56m2FNb/ELHeIpl7tYZi/9SwnCsKo
by18RPWHZXME9R2Dv4w3+HLxNPU9hA8LLp/zOkt9zXC3u163M5mjaSphdsy+
t3vaKeqbDPOf34oZlkx9q+Dlnb43GLIoDm5ST9B8nEa9D+C6ILmLrjR/GTbC
D7zcZP0yqbe/Gc5H5UYHYmj+irCFmbh6GeUc6l0Ot9Xb9zei+av2MDzRLdfk
8r/57T7csOnH6giaf7j1MN/niJpXXzq+VYdLmPbw40E31On4ngiXyXowX5To
+F4KV/xZPcORLBUN2zjU3ZlA5tyBs/ZP6PpiSMf3e/je46mSY8Z0fPcbgeur
ZHWtcD06vi3hc3s6ngWS233hyACV5kaafwwPwIyWWcBOeZrf0uEM+SnqB39T
/zt4m8B2r+UN6u87EvPzTaWcfeTa8bADV4aZmE79i+DmmgFbHB5Q/z444PT0
K6m0vfk3//rWgQHx92n838DXVd6XX6bxEcuNkjAf5DaajF5A48+BKxyLK639
afwXwAVrWg5cWUHjvxuOjKqrziELrsPB3LyolVE0/hVw4fznOr57afylR0uY
J/FLR1wiG46BXbn3d+4+SOM/H96cEP599W7qj4QHMoovwrZTfwoc7VNSVb6T
+svgybPHjzQiq0uNkTAHbhrvXRtI/SPhT6eWj2lYRf0e8ML5VdOHrqH+HXB1
runvZ0up/xJcELP17UOyVCm8s7U2tCaY+nvhuQ+urltIx4ufmTmuV/wENT0J
1D8HvhT/fvfd/dS/Fd5TOz96+H/Ufx5ecPJSozCR+sXwurIEwYg71P8LHp/1
Y8PS69Q/dCz2B9uMGW1nqH8WbP3jsYXwJPWHws3mTvteL6f+s/DD4HHec5dR
/wvY9YzLnF66nd8Jd6wacvI93S404kiYOLccy700vuIZcN8SeYvwmdS/Ceat
lsjsnEX9Qlg9tvNNnT31F8Ir+iqL+tN8J/gOV5598SIwkvoNxuH6ZejMzyb/
ruec4VsZSy9G0vFsuBEOa5xnc5fMS4a35b14mUCOyIcv+8wzeE7zQ+oXeGnf
iQO2vKV+vfGY7/Y45YU0Ub8T3GboqrH/K/Xz4dGBka9yyPwE+JCXjJccWZgH
z22PKe+h61fxZ9hnc63saLp+ldKdIGGG7L99eiLNZ5ypsMp/LeK0K9QfOOHv
/sFR76DnKzgOP9uSfzpvC3v+EuXAjWdl5z10Yd3eAm+UVjl/tCqe7deywPVA
cumJvQWseVw4wyZHf0EU64g1cMCUovYHe1inHoWr9s90KI9nXZsNv1ddZ5P1
lLX6J3ir1fdgQwlrroYltrd3UtZ/Daz59nCEwWzlxEbWwpVw/9b4NfXT2ecn
joXXqqaaMM6spR7AR8NU7g+cwZrzEbbzCBXb0e2CSVa4HqsYanVuDPX6w1+k
7gsTyO0x8LPNJb8d7Ol8fg+2+dOR/dGPNe8DHOZX0jCHHKFiLWGSDeLGf1rJ
OtUaPhPx0bKFXLsE/q3v5dGwgrX6IbizUaryE5819zbsLRtcGBvKml8LV2yx
sn6WwFqoNFHCTIv+ZZxPFlvAIt8EFb8I6vWFm+93yyVFUm8UvDA2WslzD2u/
W3BmwyTZICH1v4WTl2q0SJNFCjYSRk+pN+jaTeofB19/UaHhVED9PrDSkE2D
NKupfy+cGz+xzqaM+lPhtMtbtkk/pv4quPzBBOOCdOqXnYTH540xEt+l/rGw
n1lqsBLdzvWGR8QdsizOpf5dsDhfb1l2NvVfgwe6cxYr0u3i8r+/b1Pwtq/e
1DvaFvPPtnlx7WQ/T3ir+8rcT2HUGwFPkg66O+df7xWYsfr5OOYA9b6CN3PG
rHa8QL1/YFvl9JwftD14I+yw/1nP7da/Qb1z4SQnh/pvKdS7HXae9SiEk0i9
F+Eml0b/4SeptwReZO3DuRlOvT2wwxOr8lOHqNfUXsLMn7198Kd91MuDDw8d
1lyyhnq3wNKv4xbOWErjfR4uOafJdND+xSmG59yICduYSf1dcM1nocHee9Rv
MlnCPNb0/mRHFs2E95hO/uZA49G+GZbYVTzeTrcbnoGDRjpEXntD/c/hsfO+
xlXR+Ed0wAkni8Rer6jfcIqEkesaPDuugfpdYceLP100mqg/BO7yD9p84zn1
n4I3X4nT8X9B/QXwec9UX7Nn1P8Njs1exJEqov7BXAlzu3GNRkgh9TvD0cY6
lkIyZwPcq19mO5n2P78keOjqlbrFD6j/CSxtH6kWQOMpaofleZM2F9+m/kEM
xnNqv0Ql2n6G0+DOpD3PpMm8INjyPxtu+F7qPwGrbjbgTjtI/bnwnalXlWzJ
6joOEsZQK8Zl8xHqdYBvTO5dvOgw9QbALqWKg/lkYTws8d07/zTtP2IRnDo6
tll0mnpbYEHqk/KwM9Q7cCq2X7bdsKL91DsFtlZ04/yh+USwGu7bnGhRRse/
6Ai8856bwR9yexY819H7iA/ZsAlO7vtMdfFW6h3giPFmVL3zaP6NsIMrHypG
L/1A8/kKWMElfmYfDRpvAbyrfpxxn0HUnwlbbXeOXzeE+hv+3t+yO9acbuer
TcP5pfHjDG996reBB986/TpAh/qXwfpyzi5RetQfA9s0J/z0MKb+u3BC3vTh
iqOovw6W+83bkMmlfmUnjNchXk8VnR9EVvBFJ31m1ULq94MfHbdnLi6i/oPw
8MqGwROXUH8GbPelMlR9OY13DfympSvqeyCNt+J0XJ81neYfWkf9E+D1Kgdd
Ysjc/fDkJRo3X9P8I6yGvdyrN1S/pz55Z+y/x3qXeldQ3zhY977usE4yZyF8
wVFlzMG31LcHNg+MbBPQ60nBDdjAc1fxdLKoEj7wXN+WQ69P22VcJIyytG9W
PNnQHHbf2Z41XYOuV7zgL+4Rp2aQI3bC9huPP3JTpOuVq7BKiiA33YSuV17D
/fvre8wfStcrfVyxfSV9FqaRuaNgXadzWg/N6HplHnwvxcc+fxxdr4TDtm8y
eSr/Xo9ehqfXj332zoWuV17BDo2LlfTJnN/w5tjZa81WU6/7DFzvFlkaVDvS
65NtMKNbam4aTK9PLsB/VlkP09tDr0e6YQ2NTM+19P5xxDA3CTPVwupKRz96
f3k2fMXEelWhJr2/HAZv3jPSy1SL3l8/B6ceLnBvpvejuUXw7QVF8/NH0vvr
P2Er/Rm6SVPo/VXjmXh9cCzZv9WH3l91g70XmB81IUtthrdbzDvSbxq9v3oa
7p7YV1qrmV6PPYOjHe2KTtD7pYIf8CPR6xzlL9Q7ZBZeX/f+vpnwnXpd4GiP
N7e+6dH768Ewo532asAgen/9JNyza9MyA3r/PeIpvL77WVqsDvV/hfssX3Sh
w4j69Wfj/HE4qSeC3s9Wnw5/1e2jLiRz18MfXutPGK5I/Ynw9fMTJyR20uvR
x3BRVO3KXdQjboM9dyTfW1tHr0cH8XB9Km/l9pve7+Y4wjE14zd2k/3WwWen
ruhY9pX6/4OlM4aWldD2b2+Fy5Xas33NqFd7joTZn85VS51KvQxcvW2tVT5t
34i1MKMmP38ZOfUYvGXHmolj7Kj34V9H51iKJlCfpjuuv0N3XdK1pfFcBVfd
8ls9nd7vF8fB6yZbvbQiS2XBFuKIB/fn03g2wjWDRq/s60Xvl/efK2FuFnCv
ypEFtnDjK9P9rTz6vGA5/Nns0oHf5PbD8C9h0FdmDvXdh9M7dcyfuFNfPVz2
7m5d3wX0/Jd6SJhXcy/dvuRP4xUNz1yUsvltKPXcgfPGyP6YGknj9R7m8uW6
xxymHst5EqZuu/mqR/HU4werzyks0PmPeg7AedVDtNpOUE86fGaUcc2549Tz
Dk5RsdYPSaKevp64Xh/2ZsLys9QzHp779rjTvAvUswieNCNELuTf51/74L1p
13rsRTReN+GPE3Qtismpb+DwwVUXP9RRr9x8CVN8j7sy/AP1cmD72SLZAx+p
dwF8dd9Ek1Ix9e6GhcF5ggnlNJ7X4RHjkuqvk8UVcI+J1RFZspSMl4RZslPN
4zV9XscZA5uL4+Uu0O/zmw8rqRdErKX7CyLhqzWz9f7kU38KrCP383TgWuov
g8eEPDhetYr6pbxxPsnV8IleSv0j4WGjBxxLXkP9HnDTpe53fSOofwe83iGN
f3on9V+Cm4NjDk87SP2lsKUNM9NYQP298KLJF1MYMt9sAV6fycaOMImj/jnw
qm31q0/S+Iq3ws5hfh2u56j/AjzdQ9+wW4Y+/xTDsUvLZn2Rpc8/f8Hfo1Lr
KsmCoQtx/i3fmKYlR59/zoLlj33Sslajz39D4T2jvuvphNDnv2fho4If6xTD
6fPfF7DqhcpB0ZH0+W8nvG124CMhfd6cauQjYSKPdmskxNPnvzPgZfVxR94d
pc9/N8H8fTni5cfp818hXL13bCBzkj7/LYRPH3e6uvgUff77Hb7+vN+ZUiF9
/muwSMKYvCqxskylz39d4KenQqWjrlD/RljuWvLGX9epPxm2z/5QXESfrwvy
4UCn8V/TblD/F/jD2NkF6qXUr7dYwtTfX7FvsgK7XsDQCRa2r796VI01jw/P
Mr4oOUOOSIBrnDetW0BOzYOLE5xCGXLtZ/j1izNjMvuyVtf1lTAb4v/b1kbm
ToW52/ydHNVZ8wNhbRWnoF9fqf84XOr7y+lRPfXnwCkXbHdNbqL+Vnh5yVrb
kgbq1/KTMIoVCdYdirT+gQvHHzN829CP1j+sgYuaOTL+RrQ+7Sg8YMTBIB36
+fZsWOHasNbhH2n8P8GZMtfKZd/R+GsswfXQ5By16Goaf3v48bZ2q+QKGv+V
sHRLd8rachr/WFi456usTDeN/wO4n7/Vsqf0+NyP8LnFt/oaGVO/+lLMj78F
uU9kaH3eJDh+pNaGhcq0Ps8fbrvWGNWoSevzDsMW9bX+B61ofd49+LKMwP+2
NfV/gNev3Z3hMJP6VZbh/L9P9uByO+q3hlPChZe30s+3L4FzzXb6/KSfNzwE
Gxu+WZhkSeN/G47JtZ/VakHjXwsr8CsyQuj2VCV/CbN27cShqfY0/hawx5Fv
C1OoT90XVl5cVXTnD+3/UXCtxcOtwzpp/78F511mZIvkqf8trNm0cYUcPV+x
wnIc71/7lplMo/7xcNvsMOVAW+r3gZOcz7c6uVD/Xlj/VnX2MbIgFRZHW5uF
kEVV8KmuARt20PNrl12B8fYZ9GQjh/rHwociHzTsoMfnecOOo+o9C+jxInbB
okgbs8DF1H8NLq2sz8/wof5y+GuR2snaedQvvRLH346CymELaPxHw+4RAbKT
l9P4e8Kf8j/F7gyk/gg44Fu0ubE/9V+BN2ek7ThMPy9VBr8d2DPPlsz5A490
cZsW4U39I1ZJmKzXpxRLV1D/XLig3fJyKZ/6t8OLsuTyV6+n/otw/yxR+4wg
6i+BX33UeuW2g/p7YK+7ptkTwqnfdDWu3yfXdRoeoH4e3Ha0N3HscerfAm90
WJYjOUX952GXd+/8Hc5TfzGcM2Hk/kWXqL8LdpXobCi5SP0mayRM8HlN5gjd
LhUKe0qVPhKHUd9z+ImtyL58O/V1wOXptbXNG6nPcC3mm7NrhmiS213h7PBR
4bnu1BcCB+zmH1OfS32n4H4PH9SOmk99BbCakzXT5kl932AF9YZ8Pm3f2sEB
EqZVJSPzoh/1OcPnestsvq+hvg2wY9yzlZFrqS8Jbo9sWpNAFj6BUw9FPPWh
7S1uh10HTkvwukO9eoF4vNqfUu7FNL7TYGWhtpF8FvUHwSe3Jqdcj6P+E3Co
/W3JbdofRLmw9gDp2rLH1C+BvUacfVNjSuvbdNZJmOfGMT+Pjqb1bQ7w980/
qo51U38APCVa9MnnG/XHw/Jr3hQVSahfBOfuSKjs/4X6W2DfPbfqxinSerYp
QXh9UypKOKVO69lWw1r11muSeqj3CNw25NyIj9+pNxu2cC74qthFvU3wtXGL
mptoPbLfAP7f9/dbfo4WU68d3Hm022IYWbQCji2p0HtWTb0CWNaiZ6hfE413
5t/bx3X8Mamj8W6Av3XO2GNbSr1q6yXM74kxRYsvUN8y+GbK1T5JZ6gvBnba
fX5HxWka37vwsQ3b7rjSfMKvg6vUs1ecJIutNuB6weTEKrtQ6lsCm/6Oz8uh
45tzEP5lUp48cR31ZcBT7+XOdNpAPYobJcxBn31lD1dRzwR4Sn763BkB1LMY
3jJvYnwvzQ+8/fAegX7hcTreI9LgVK14y97dNH7Vf29XtDsbu4365INxPVQh
1a8yhPrGwcEHzFLXLqK+hXDF2Pe+O4Kpbw9sJvwpPEnHn/AG7GuyXekBPX9x
JZx5YaHKNtq/pWRDcHyeFGdd86Bec3imI6f5AdnPC35lO+F2rhON5064Z9/o
or50fhFdhU1f73DSHEj9r+GlnIfymzSov88mCRNyULpxo17SlP8BscU8xg==

              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9541824*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9541824*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
IPnJrpbU7wSnTv9kmkFmb4YLhq2NC7Oi/nQ4Oi9fI54sugPHZQ8yuuFA/V/g
o+UT2p6TFcZPcfywPmNhKaD+WfCzgCK7YWRuEJyes7Lq0FzqP/J3eY8hG5po
uaQcbmrX/7mBLP8E75NqHh4QSP2GVRjfInZLF5A5M+GHR3pbz1xH/YEwd0fl
pMvLqD8V5psZ7Xfzo/6bcMagNN0j5LqP8IHE865zllO//jMl/4V23L2nPtRv
B8/Q42yyI4vWwSlrm88WeVN/CvzjY9eooAXUXwL3r96UHDmf+j/ADeXXh2wj
c/s/x/x6WM31ULKQDw/Pr7fg0vMlq+E/ezuOlJHliXC7hcbK8R7UfxVmb17g
Yj6Z+pVwyuyRy76Pp/4+1TgeragpaDWj/qnw3O57N2yj7Ue2Ap5xdM6P67T9
1h2o/jte9Yr+SPsj+z+4qiAltpT2H94buIdhGqfFhvp71ij51wNvcY6Opf7J
8KLApwuMaPtQLIdH6WoV9LCmfknN3+NTF7uSSdR/GV4wfNq5frRc+Bp2Pp49
Uk09Et1a7H/ODVN9LKh/Ivzql8+PVQbUvwy2fXjFyYj2R84+eGusS/nLAdRf
CAu0eTc/6lN/Pew8dITZlz80/nd7gfH3046Te1to/B8H93yaHF+povFfCDvG
nW7rsZXG/yjY3dl89+WNNP85B49vfxUu7Evznxdw1KvEfataaf7X5SW2r3L1
/ejONP8ZC7epL75ffpvmf15wplmOoetNmv9FwJ65wbKnNJ+UnIHNVWfO+HNp
/lcNf659Jc4eTvM/rTrMJzwTi/SG0PyPC+/UeLFmqhHN/xbBD463fnA1oPnf
LvhAx8QP+3Ro/nca7tw9aFVSd5r/VcE/nUs7OGjT/E+zHvtPl6n7jujS/Hc0
/FYeVvilC81/58O3DM6e1OtE898d8Pgsn8PP6Xq3Ihf2fb39uMu/699P/j5/
3Jn/bDPo/I/VoOSfd/Lw/hZD538jYPZq/Y4NG+n8by58wCvD+TSfzv9C4Xm+
TjqW0+j8Lwd+7Pdhb9wUOv97CF8oPrR0rTWd//2CdxeUX/Ani01f4Xyja9TN
z5Po/M8V9hzdql88kc7/tsEmax7krRpP53/H4Q8B/a8GknkKeMS7cXu3kEXt
cFBsStvGQXT+O/Q1jk/xeza/4ND5rzO86oXOmv5GdP67BbZeObPLJgPqz4QP
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
L2sO3GdFh7iv1MvdDOf3mJjf6d/+nw47PWTt0qD9XXIHHpMS1fUEPV7+BfZv
e+4Q/q/f2PzvePZp9kPq48yCdbgFdjPe0PoPgqNN4hvqyOIj8IqM+1UHXlB/
OWyeN/yky2vq/wSzHvVaPKyF+o24OH898nyJ7Av1z4TtO/y53UR/TxQIv/iv
JF3rLfWnwrkWi3uMICtuwo92lZnV0/vNUsMNc57OMafXz9W3UPFfNv45FUvr
S2gHO7R69tKkXsk6eFfpdcP7/8a/FNgs5NTPDd2ovwQ+/kPnM4/M+QDfWtzx
tx1Z0N8S73+eq6Nag9Y/Hx5ZtC/gO1m2Go6Y6d3ZgMbLukR4ic/1Cf/eb7Yc
Nn/dFP+iI43/SvjsfX+Hjlo0/vcZi/3Zb9rCOlounQo3qhdvyaDlihVw/+fl
vpvo77HiYdui6NzjtJz7HyxbeS+9+7/t/w2cOy46Yeu/7b+nlYpvkPnCgUM9
8smw7oC1un3/9S+HQ1oMgzr+65fAj7fumX2H3i/BZfiomVt8SHfqfw1P03xY
Z0vLZbrjcD5c8/131L/tfyL8+9al+jYab9g+8I7NXu/sabzm7YMrf4U+fkTj
tagQzvp1ZdBTsrQerrL/+OroaVr/3cZjPJDu3ngxh9b/eJj/pnnHrkwa/4Sw
IHb87slkYRR8O+SO91r6fqPkHGwyKWNqUjyNfy/gCYdW1/6zussE9LRYZnel
70dyxsKfzKed2R5J278XLN379r7Pbtr+I+CtbeZLE7bT9n8GnrwyZLzXEuqv
hmfN0NOuou9HsztNxPZ4SF8z2YH6ubC1w4knz2dS/yJ4Qjin16CJ1L8L/nHy
68QsC+o/Dc9q9+65icx6BrdpzDDfR+ZqTsL5ou9h99ph1D8aPhO2K+igMfXP
h8/NWdgkNqL+HfBoW1fxlkHUnwvvYkVWbONQ/xM4VU9tdsyU+lnW2H7yebv8
Tah/BHyuS7F013DqnwufqnfZo6TH14XC1henB76h5ewT8Pbs4tsvR1D/Q7jF
xkDcqwf1/4JVfk3zvvajftPJOB91HZxt15f6XWHLijb2ggHUvx12fvDA33Eg
9R+H8xZdv6Xxr18Bd2TPiG6gPkk73NgjtbdkNPUPnaLiD04TKi+Pp35nWPX6
e+pRP+rfAuc43eJKD1J/Jrzw4RP5pkPUfw9eMeyztSqV+tvgmQEhDqoj1D/I
Buujpru+nMx2gvkxa+Qh6dS/CV5c4Cu6QxZJ4Qse+uPmNlP/bVjslJ8bQ/NB
xWfYI3X3+mlTaP83nqriv5++segjjY9cR/jxuGbzADqeCzfA46t6N65rov40
uNuo64PO03xNXgZnNDWZ9KH9Td0CF/0XeGYCmWM47e/1xRvHl9D4LrCH1Yev
+XmRxSJ4RPdd5etpfiQ7BMe+VL76cZ/6b8DLtHqNqiOzP8Izx8x4vPEG9Q/g
qfjDHtuM/E3zHZEtrBMmKJXReCFdC3OuPX75lV6vIhn+0uXAj+9kVgncZ573
vZH11P8evmbzeOcXOv4I+/FV/NKg0l8OH6ifB8/1Dqs+QZavgp/Oudh0hqxO
gE8Edcy+QuZchQ+HPPy98Tf1v4Ozk3tVP/9F/b2nq/jvXr9Ms6flMhvYsEgg
Gk2u84frqwNLlDT+sg/AlvMPjBn6b/5TBD8rT7u8hc4HRE3wzqUdmn3NaPxn
26r46wVTztWZ0vq3hqvyCgrH0nLWclh+ttLZypLG/1g4t0f+NtOxNP5fglc8
SNHIoedLXsGf2h48jqXfd5Dr2P29vmhT2sGQxv8JsOWnjhGW9Ho4y+C+w245
9jCm8T8Gttj4hH1nAI3/F+Ck/OTAIjaN/3Vw/blDVnp96PjXdYaKX2yxdIob
HS/Y42Cj1l28Ugs6/nnDV81/jetO3x8X7YVH7fRdvo6+Xy4tgFdr25iX0ffP
FbVwVA/LPcdoOauLvYrf6UWZ4DaZawnnSt+kyQZT/2JYt+7MQiX1SPbAaT8H
5/4gy2Uw/1inA9k0v1I/h1t3sjKldH7A0Zqp4p9+PnablL4PLzCHIxr0JiXT
8Uu8EH46qm/+5X/z/51w3kyXp98f0vo/BVv23Hn2Bp0vsKvggyPDbQqLaf13
cMD2U9MwI+8Kbf+jYNEeCavXNdr+58EFnYd2/LiYtn8xfDvmmoN5Z/r9g1x4
ePghU0NL+v2Hx3Bvm8D69Rb0+w9/YEOHT0YNw+j3H4Y74u9XcCf86E+//+AO
W3z5HPF1Kv3+Qwhs1LB3o5kN/f5Dzl87llSvGke//1AJrx99/f0esvgnvLq2
g9psEv3+g8ksFX9G9guXABPGdQL4TC/BM13699nb4M/a8gNsTca8YzB/5PIL
7O9Hmf4HsGqI1uBRLMbS77CR6zFL4bsjTP+Q2fj7eR/GLnnFmOUMP4iP1jnf
wJgbDD+Ln7WvYz1jYcbf5cJzfa1eM5bche3c+ppO+s1Y/hW+nxD8Zt43xmqO
E+a/rtM7b25hzJkNh2SF9Fv6nrFgI2whH1oZQ/+++Cic8cg0t1stY9kt+Ea/
B+9anzOua4WHJRj5WdUwZg+cg+N7ycYHS8k8B9h4yEDBzGrGovWwoujRi57X
GEsPw/LzaytqVlN/KbzNXS9l3qc0pr8FTn//e0RjO2OugbOK76Lcxh3xjrFw
BpycOrzp8nPGkgDnv9drV0zy+MhYfhBO6DFDpFHHWH0dXulmO3UkmdMMx+Us
zh70irFAzwXH++Vfh6louXg67Jf+5nMpWbYGflBUoXr9mnFdEvx+RrvTSDL7
GtzLOMDm9jPGPBXsXPNLKyGHsaivQMXvMrT+y/GTjKXT4CWZowuKchkrVsLa
fQsLgnZRf8Lf5X4jWWN3U38xXOenE7dxK/W/hTutnWc9Wkz9vVwxfvuWjqzd
Qf1T4L4/etVvoeVqP3h8SXSvfmROHLz5zdNnG9ZR/xX4Gkfh93sV9TfCZk0N
apcA6u/hhvnSp6TJE9dQ/yS4z7Pt5eN9qN8X1p0e4WxH5u2HZ5TZ/JewlPov
wjcOtb/LElJ/Ayz08a9pp8crurur+B3CPvyc03CY6Z8Ar3c+22BB5i6FlRWB
JlNqGQuj4WNHfVf6kSXnYePpbccaKhjLX8IbWTvf7yWrtedif2a3DZq1jzHH
CraUfmDdiGEsWAL31NnarUzCWBwJ58j7fVhKlp2FT/VbeWYGua4GHhoXVBGy
mTG7swe274xX2hPWM+ZZwMZetWYmAYxFnrD1yq7xWmTpbnirlv+ptysZK/Lh
/ZGpd3VXUf9zmN25mP+NlnM7zsN8qigs4DJZOAYWHnDa3okeL1kAnw4V6qTT
cnk4HBFzsnm/B/XnwbP8Txi6kjlPYb7xopEBs6hfYz7Or1/GcPo5Uv9IeObJ
uR8Oz6R+D7iXd4dZ1/WoPwzeorWus5M29Z+EWReNXjxnUf8jWOE+KjO3PZXp
/w2rBh32u6BmLDVboOLXVLobj2plrHCDnf1LPn75zJgVAo9fPFCi28aYmw3/
Mlt9VlHPWFgBO3atvepFlvyAbWVeH/s3MpYPW6jivzq3IPwjLVe7wJldDZP8
qxlztsItr8Uj5z5nLMj6+/gFIfxnxYzF92HXlKbxIVcZy77BH68/6qx5g3Hd
4EUqfoxO2PSWU4zZc+D1qY90WccZ8zbD4Z3WRd/Pov50WE/304roo9R/B76d
yT9feIT6v8CLysq1NmdQP8dTxd/wwvTgeSn1z4LTsk/JeqdSfxC8KowliU+g
/iNw6832vPg06i+Hh68/uaoTPV79Cdb8aHnkzyHqN1qM5/e+lqVJywUz4Ume
Tz76J1F/IKz/69jA6WRZKiyu+rRMM5n6b8IRye5/PtBythq2bH0c+J7M0/dS
8c1V7CyDf/128M+n6p29jlH/OniMy5u182m5IgWeen6Ax316/1jX4UCjfU27
6fHcD7Dmf7M8LcnC/kuwPxWqL1bQ8yV8mD3nZ8UCen/lq+EgMc/8wUXqT4QP
z1oR/HAKbf9y2Px+86JCO9r+lXDpoPc3TJ1p++/jjfF+aj1fRvuDbCr8eHfS
cm/aH+pWwKvvLuzoNoO2/3h4+IN7Wv/GE95/sH1ez3MSGi9Eb+CSMer3okTa
/3sK8fgnwlCfFNr/J8O7PeSHJKm0//vBW8ak+K0jcyXw1bajHxvo8cLLMO9K
SkdvsuQ1/HTv6X5tZLnuUpy/xKd7+NJ4rZ4Ib6sxOapH4znHB7ZP+r1y/r/x
fx/cy7xqViUtFxfCwUNchkyh44WsHpalJBi99KPxv9syzHf89k0x96Xxfzw8
QGu280wyTwg/qIpb2RxE438UPOSc7vyv3en4fw72O91+3H4DHf9fwLzdz04V
iGj+o+2D40tQk94Smj9wx8I/wuoVZ57S/McL7lkrOPeC5lOSCLgvVxm1pjtj
+Rk4TzDz/II/NP+phluCSjfYajLLOZ188XqLjLSeGjAWcGHdwMmXW9mMxYvg
mZEXp47QZyzbBRc6+ZXE8xjXnYb1Bmz90M2eMfsZ7NZjzrNYB8Y8zeUqftij
kNn9rWn+Nxre9sjJPSyS5n/zYa4k/TXrGGPFDjh2ldti8UXGrDx4WHz+h4jL
jLlP4CCr0z3+HGQsZPlhe96l3M7PpP4R8J73efvGx1L/XPjKiqgOFasYq0Ph
4ZOmqr2XUv8JeNSJ5zq13tT/EB53abBTqwv1/4I3JbG6nCbLTP1V/M4Xu933
cqZ+V/hIvzvZJ2k5ezu8Pnyi6U4y7zjcnfPsxqT51K+AR2dPObmDLG2HU5bM
ir9JVgxdoeJ/FxdWD7Kjfhc4eduIfQvI3C1/bXe4oJMt9WfCrxcbV02YTv33
4KTxXZO9+NTf9vfxZjduHrKh/kErMd65VxlqzKF+J9h+/IKIUHo/BJtgjSNf
PVfJaf4vhSMSFMVOE+j3z27DBxrGvFVY0++ffYY714z26EO/X8c2XoXx97q2
jdE0+v03R7iD3haLIBv6/bcN8C+f7weWkKVpcIFHqthmNP3+WxnMLc+PMh5D
5z+fYNlLSWIGmWu4GtvPrzzb5aPo99/s4aXdf8/3JUtE8MXx6dIuFvT7b4fg
HM9Roq5k9Q1YVvzOaQ2Xfv/tI3yyx7Unu+n35gQD1uB4dDvaI5IstoW1dRQN
3vrUvxbWqNxse+AXnf8kw9winfyrn+j8pwTWezzt7HAy7z3cL+nQ0IAWxqJ+
a1V8qf0Zp41qxlIevMpnVKTfA8aKVXDm7Y8fp19nzEqELz1ZciT/Bp3/XYX5
wQ8fxJGF7+BR/B4fsmh9SXqvU/ETD/a9215M53828OmK+XbhV+n8zx/OsSpZ
a0nmHID3tLlr7KDHC4rgtgXLHiXQ7weKm2Cl6XSLSvr3ZOwA9EwJL9ctoX5r
OFvrkdYV+nvs5XCEmUngOvp7vFh40DC/GYdouegSPF/LYFg0WfoKPmD0c0K3
IurXEWH7nd6QNJv+Pmsi7HN8mejdNepfBitPDR+zgJ4vjIE9tOfMPH6J+i/A
TrEN/RRkeR08reny2AtkdddAFT+q99Tm2WTOOPibU8173YvU7w1f6TkmzpEs
3guvqou1FhdSfwGsvj5hWRk9v64WjuxSeMaeHs/usl7F/5LRZeAkejzPEt7S
/ja7P1m0GN5RnrFswQXq3wPrDZr3yoqWK2Twwl8HXmSRWdWww7Rb/CR6PFdr
g4pvwDpY+u4s9ZvDc2wGiyPIkoXw7KXZN33J8p3wpF8ni26T1afgZxLdTnfJ
nCq4flZ53wayoEMQxtc/uyoLyeJRsDGr0Pc8WTYPvs15ULs5j/rFMNc1J2R2
LvXnwjpuF62FZN7jv4/PqHy/iyz6A0f6JxvckVH/8I04nljJs5rICne4Knml
RhWZFQpv7F384yiZmwOXa4mWVuZTfyVsMC9zw0Oy5Cccd3PLpeST1G+yCed3
5kYxbjnUL4B1Uk+rraXUvw1eXVQ5ZcMR6j8Gz904L+BGKvU/gDt7sn5cOkr9
32GNjvXrnNKof8hmvJ89dnfef5j6neFFPzdH/yLzgmGtTVv+KFKoPwNeF+g0
NpUsvQv3mhbwJDSB+r/Ca/wm+XRIpP5BwTj/vPbSuDWO+mfDc749H9y+l/o3
wofsKj6ydlD/Ufjb1ue9WJup/xasY1ZbudyL+lthx96dLapGUv/ALdg/fvx2
NSELHOC+T1+8kI2g/vVw0U7/sqGDqP8wXPJ6wBhfQ+ovhVmvzlf17Uf9LfCX
lOndQvtSv8FWFd/lbuuMKi86/s2Ac9p/PD/1heY/AbCV6cuB59Jo/nMQHqIK
avBKpfnPDXja0Jopyw/S/KcZ7t5Q9r0gkeY/ettUfP/Ht1zvRNH1n+nw6m6c
R2sj6frPGjhj5YCLeRE0/0mCu47s3iQMoes/1+DbCy+ZF4XS9R8VXCg3djgh
pus/fber+B8K/qu/EEbXf6bBZXd+Z0yk5XUr4UtfBzdZ0vPZCfDtO1VPMzbT
9Z9ieHiOfc2xqXT95y3cXRS7KdyG+nuFqPidtOXu0inUPwWe15Y+IoBL/f7w
5HchKzOHU38crLPp25kiPeq/AqcaZplXkiWNsGn6/vD7ZHmPUDyeFexkakj9
k+DsA+Z6p9Q0//WFb80J0nhJ14sE++HH/Hn1I8jii7D7iUtRA8myBlg7sDVp
332a/3YPw/ilyXGxJLMnwHMGH/j1ejPNf5fCb7QkqRrLaf4bDZtxR693IEvP
w8fOchTdab6seAlrlZcFzLOj6z9dxSr+3ZH2b37b0PUfK7hhecdGral0/WcJ
3PPFizj3yXT9JxI28EupcZtC13/OwvuXHFxbYknz/xpYf4vn7EQ+9XfeoeJ/
upNd3pGu9wgs4NBlI2rK/83/PeHBRe9W+vpT/274RQ/23RxyXT5sr23cnNiD
+p/DZz7f71E/hPo7hqv4x59q/VEOpf4xsPHmBfdaBlP/AjjSevRFOVkRDvso
eymtrKj/FJx+vczuKJn7FO6hd+zpiYnUr7ET8+Olqa9H76X+kTD36oXw3dNo
/XvAC/MazK/S9Uh1GDx/6VLPDDLnJPyt6UjI0GLa/h/Bfaxt702+Stv/b5jX
nfvC9DZt/2a7VPxlfsmGvnNp/usGF598KxYtpvlvCJx15sNkHx+a/2bDJ2LV
oo8LaP+vgAeZ9N8RTJb+gEOLBtQV1VL/sN0YX+xjH5b1pO1fAA9pX/ilqh9t
/1vhH09lFZIBtP1nwZ5X1q7p3p+2//uwg+mpgNEltP6/wV3ud+s9pojW/+A9
Kn6FOGuneRSt/zkwe3ar7phYWv+bYZGf70rHCFr/6Xv+3k+8elj9Hlr/d+DT
VdffHSLXfYEVC7zvHSOzORGY395cm55D53u8WXA625Q7fSOt/6CIv993qWyb
Rf++9Ah8rWNweSw9X1EOn517c8BrWp+sVrh765oAFj2eaxSJ7derUO9OOK3/
mXDI7z1frtH2KgmEY8qj1twgy1Mj/x6/HzucWEv9N/8u/1DbvIjMUcMa+i49
7c5Qv/5e7H9KK15JAfXbwa+tV5otPE/96+BxOaPmt1yg/hQ44tRuwyAy+zr8
9VTd6KRC6v8AuxjcPv/pOPX3j1Lxu1WMEP7Mon4+3CfzyEDLTOpfDQ8JTx43
PpX6k+C3Byc3XSFz5fBmkcZ1q8PUr4QVvi5nbp+m/j7R2D637wkqJ8unwnss
PJ90ukH9K+Asv+Xz1tH1Z048XFz0NCn+HPX/B5+0Sj3veJn638Btr+/XTqIe
Wc8YFX/ko9W5p65T/2R4/Va2+81b1O8HW2ZfdRPSeMiTwMXKdF/PB9R/Gf40
/Y6H+0Pqfw17+k+dOKSU+nX3qfi9dSamZhRT/yQ4svRcw9t71O8Dp0oMjpjQ
9QPhPnjcsnvDqvrQ9l8Id3R9ETbFgfb/evhXi+Xj4Sto/++2X8W/LO8+NmkL
7f/j4dJbzWyjINr/hbD36cOWA8niKPjD17DsUrLsHGxT92rhmlN0/HsBv2ex
p0+g6wVs7Vgcv/KCs++k0f4/Fh7Qx9ZrRgnt/17w5Pq784RkaQTceaPmEbfP
dP57Bl76e1P6EgOa/9TAp79mTNtO5naS/L2f9/vxMlea/3DhtPBHO3rPpfnP
IrjN7lJ4JFm+C561+eDogm00/zkNj97VoquzleY/z+CYrhs6x5EFmnE4v7rj
ErMnmOY/o+Fur6Y9+RJK85/5cCnnmHnHMJr/7IDPrwjXNSCz8+DMOZu+SWi+
xnsCd34ymPNaQvM/1gEcDz7Uvx5Ly6UjYIOUYtsymn8q5sK/gkvHtpJZYfDQ
xyVRP8jcE7B08AO9LLLw4d/H73k1NY0s+QVvCT4Xk0XzVblpPN6v7cEfyshq
V3hvrX25ayb1b4fT+pltmUMWHIf7b5Qbm2dRvwJeNsNwjpKWy9rh20bv+iyh
5XVDE3C+5r/R4EQ69bvAmp16b+pF5m2BXb8/8lNmUH8mrDKx2fbv8dJ78CaT
PWXTyIo2mLNovoUdmTU4EeebIZUmXmSuE3zhoU8nLZq/CzfB69t2S+pouUQK
6+8erC/5N/+/DQcs8Ti2hl6v+jO8YbLp7d1kjnESxq8ZTTnjyAJHuF1uw71A
5yviDfAK6yPDbtH5niwN/mkW+WQp/f5+XRl8qEE44fRv6v8ET9QclmRjQNc/
DJNV/ObJE13eG9P1D3v4fkFUkY0ZXf8QwaEGuqfnj6XrH4fg9mNLnDZZ0fWP
m/Cnh12zd9B/D4D7Ebb/6V2/eQZd/xiQouLfGfKoTw399wcktrDMUdE/1p+u
f6yF75mUaf2zOhm+e9O1WbGDrn+UwLV2uyICw+n6x3tYYXW4zX0vXf/od1DF
/xwp4X6JoesfPHhnipXJthy6/rMKNm+Zeakuna7/JMJDLVOel5J5V+FCk82i
zmeo/x3sMbvnj4rz1N/7kIr/206gNb+S+m3gfY4v+EPov8/AWgH3/U91erIm
3f9xAP4zfX3RNrq/SFgEizwUnA1WdP9HE3zZ57VAbU73f7BTsb2Ulc76YE+f
/1vDnGGP1g+j+7M4y+GKQ4Gnh6+kz/9jYU39Ae+uraDP/y/BDnvWOjv60+f/
r1L/3k/3WqO3E33+r3NYxbfrsz1N5UWf/0+Eb9n17avjS5//L4Mzf7KrPdbR
5/8xcCvf3qssgD7/vwCf2OKdvp6sqIPf5RXX/A6k+1+6pWH78k/ULVxP/ePg
+Zus3zjS/WxCb3hFXaNKwqf+vbAoxD2lO91PIC+Ab+hpPymi+9XUtbA8PHWQ
I5nT5YiKfzOdtW8F9Qks4dQbAx6Wb6P+xTAn/9C3z//uf9sDNwwNs/q5n/pl
8H8qYeS//x4BuxpO8Nu8MOvf/W9aR//e31zq8NqQ+s3hiO4Bomt0f5l0IXzu
u2j96e+0/nfC47U/9npF/70Q1mlYovEjw7SNtv8qeO7qQakh9N8PEXaQYr4x
xX1Gl1ba/kfBebcmT76tpu1/HlyT3czRaKbtXwwntezf9eInbf+5cIG9k2Ye
/X3BY3h7y+HW0R9p+/8D39owZsHBz7T9D0/H/pS4RvCLHl/nDo/tPfdIUEfq
D4UzfXYluNF/z4SXAyct1l5+7wFt/5Vwwuh9NmNraPv/CafGrZFdJStMMjAf
je+dqqyl7f9/lu47LsY/gAP4CSWkS1EIETLCGWUldw2jxElRVpEtlcgqSkRW
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
bRZ+599XNv07PvrO7Z20cKDrv/5DXX3l58xvDeel5oxVeMX8XnDHO5N0h1Yw
/0VYprH0olMZ8+fBuUWLygv494LfcDf5TstXb5m/vxvai85/Iq7QjjPh0qV1
nb8zb+AWeEztcrNDHK+TcR7Oyjq6MmkAf/9P4Kqt0+uOaPL3/wN295srOcD1
GaV91+H+Ne9HzrCu/P1Ph++XPGvrw/IzYSPc/lGvoREa/P2HwTtfdb53meWV
MPuf799V3sXyRFwPW5dc8xjD8sattzt+v1pzL7p34+9/Guyj4TbjEt8/bz28
oNE88xstCIEjT/QYMrkvy7uH8Ma4AxVBXC/S8Rtcu8Fy3BLuVxGovR6v3yN+
ZT6dMRm2Ml144Q3Hg8nd4GzvrBqFlvv7GfhXRvv4dsuY/z58uP7a470ezP8F
VlLXf228m/m7bcD9RP4magDHC1aawhXd1QOtWD8VusAxCzOd/Vi/E5+EZ2Y/
sLUvZf67cM3Cx/EqXK8sTAZ3yb5d83kbn6919cDvferAk7nerL9L4D1nfgzc
yfEgojVw8o+gVzZcP8vxGDz1kOes/m9Zf78NR1fkzzGqYf39I3z9xLHgYS37
n6tvRHunrPOJ6y37fxrDC0JNavtzv2npSrj7Z8fPmRzv4XMYvqQeN62I+20m
pMFuBVs/FrL/obIa7hXyS2UI97cUqm2SSXTnidTCx7P9MgH+seaG05SpbL8s
g1d3Sh933Y7tl0Nw7oLQjnUr2X5Jhveuk/mV7WV/yTu439V1kaP2sb+k02aZ
5NaEveIzp9hfMhbOyt+m/DqY/SVLYHe3DaqzzrG/5ACcd2NQyZnL7C9JgldP
czh4Jo79Ja9hzVHZiy/T0g5b0J7f8zXjLcc3+BjAA9Y7iFdlMr8DLC0447+c
/fGVe+Gjo7yO9ujL9ut1+P5u/wu6A9l+fQmnuZcZGIjYfm23Fd9/cP+iJvaH
hY3859Gm6b/ZfsxbABcut754fQTbr3vgFatzjd7Qoiv/jpcvNwkaxPbrC/iC
WFKjOZHt17aeMonaVeshb8az/Tocntfe5aC2hO1Xe3in7ruH1yez/boLrgm9
65DFzye9DDsFz93j4Mj263N4f8rIqMl83pCg4IX6489T6ze0jP/Wh5V7xq0c
zP5U4Vx4bbNgypUY5t8B75aqm/c4xvyxcG9R192B15j/Gbwqpn/3GI4vz/sL
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
evSRjhn3Q6jMh5c927xsIsfrCf/Av8x1R2lzPwLxgGS0V3sOCX7F/R/cpPBx
+Yy2HQv4vGErbKfx9owi57fkXYD/mHWoceH8GEEuvGOQQ6sntOgnPHS4k/bD
RD5v0E3B/W7w2LfNfF4daAWvL5qmsvAenzdsgv2FfWSbc/i84Rwc+3DC7CEc
D6iTAyul3BjkQUsb4GeGU+a58fP46KSiPN032e8dxwMmWMBXA+PStnO8YOUG
OKTGIcy/Zf5QKLynl1T5eMv8oUfwl/I2A5/xebtbHey6+O3fj+HM3zNNJnne
fUufs4HMPwV+sT+9/hEtcIetEo54zOP8KNFZeH/t9W59accsWN/TbFd7jg8M
lMP2vzMeDKUzuqfLJMdkBZOiuL+I3Awepei8bpcH87vCYbVThi3hcekpeNDm
9OLptM89eI1xtnn2Rub/DMsu5au7b2V+zVtoP/aaMuIcLTSBGxPnucTQYmfY
SqtVwHLa7Tjs1XBm1zc6LAMeaeHilEDnfYIX/OzqpcD9SwRdbuP+4a3WoLeT
+SfBm8/n/j7VMv5xFWz6W3q2Kx14BD6ZmLzKgM5Ih9969Hl/hP8vfw+HK3Qd
VrOL+TtnyCSWpQ0vN+1hfiM420VRfaYX8y+HA/1vxnbdxvyBcO5mi+K1PC6s
gu9+jEi9ztcXq95B/WjrXpfHHP8Y5gQXbG0vj1zNfAdh+dW/t5cyr+AmPC9h
mnnKJuZ7c+ffeJzTScftma/jXZlkW2T+uUN0oCEsWjRA+8p85nOEfTYPNxXM
ZL59sNXeWT5RHB+pkwh7L7BtXs/j0lfwcdX9hX04ntJH+R7a60qSsmXjmG/U
vX/92+9XqfL5Y+VC+N7thMI5tNAfVvwY/cWH4yfFV+EDgVbCXI6XdCuHlYNy
j0QoM79iJuo/ti9jPeg8Ebz/zNt7+/g8VDAfjljcILrP/jORH7zQo3TMCvav
OcbDb29umqXN/rPAUnhow/jgz+zvkg+9j99j03BT8Tf2B9rBx4OXfzP7zP4R
X9gteW35rwr2j8TB7R3dvHxesn+kGDZKL8p4z/nclYIsXE/vVPersL9QOATO
XGzeP439i2JbuGeG6eYrtJs3fDk9ekfjUT4vjoZ7REtv6HG+Wl4h7KnuPHMc
+18Fzf+OTzBweMjn+aKBD3B+ujwcIuDzdkdrWLazcU6/lv4RL3iygtWV3jye
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

          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9541824*^9}, {0, 0.0798545257471515}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9541824*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.952950248343712*^9, 3.95306482568782*^9, 
  3.953064963527657*^9, 3.953064999149098*^9, 3.953065201948196*^9, 
  3.9530653549354362`*^9, 3.953065470584772*^9, 3.9531263063877563`*^9, 
  3.953126768437801*^9, 3.953126960242302*^9, 3.9531271188095093`*^9, 
  3.953127190425571*^9, 3.953127521340255*^9, 3.953127571537415*^9, 
  3.953127619589445*^9, 3.953127669707562*^9, 3.953136713558751*^9, 
  3.953136833473392*^9, 3.953136978984818*^9, 3.953137168290571*^9, 
  3.953137361486867*^9, 3.9531374107048407`*^9, 3.953137486629575*^9, 
  3.953137585306974*^9, 3.953285304381791*^9, 3.9532853634246693`*^9, 
  3.9532854623528023`*^9, 3.9534102386067257`*^9, 3.9542733200893717`*^9},
 CellLabel->
  "Out[1176]=",ExpressionUUID->"f416fe75-4de6-49d0-b153-9e4bb8fb3764"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2911, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4080, 120, 1193, 20, 56, "Output",ExpressionUUID->"0a4f6afe-e6e8-4ff2-a86b-14c16a11f6c5"]
}, Open  ]],
Cell[5288, 143, 6076, 126, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11367, 271, 2530, 62, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[13922, 337, 45272, 925, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[59197, 1264, 16602, 332, 5779, "Output",ExpressionUUID->"79409ee4-4648-49b3-bad6-e77954ae467d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75836, 1601, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[76182, 1611, 3923, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[80108, 1701, 207303, 3548, 838, "Output",ExpressionUUID->"f416fe75-4de6-49d0-b153-9e4bb8fb3764"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

