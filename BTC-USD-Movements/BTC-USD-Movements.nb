(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    283115,       5186]
NotebookOptionsPosition[    281541,       5147]
NotebookOutlinePosition[    281938,       5163]
CellTagsIndexPosition[    281895,       5160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.952950242158903*^9, 3.9530648211300364`*^9, 
  3.953064958622326*^9, 3.953064994240164*^9, 3.953065349950439*^9, 
  3.953065465573783*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"c85f27bd-9792-4344-9c54-3d037ac156cd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "earliest", " ", "date", " ", "for", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"origindate", "=", "\"\<Sep. 14, 2011\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ly", "[", "str_", "]"}], ":=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
      ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
      ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Default", " ", "properties", " ", "for", " ", "generated", " ", "plots"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"labelstyle", "=", 
     RowBox[{"Directive", "[", "14", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"titlestyle", "=", 
     RowBox[{"{", 
      RowBox[{"20", ",", "Red"}], "}"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"imagemargins", "=", "20"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"plotbackground", "=", 
     RowBox[{"Lighter", "[", 
      RowBox[{"LightGray", ",", "0.75"}], "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Quantity", "[", 
          RowBox[{
           RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], ",", 
         "StandardForm"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", "origindate"}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9},
 CellLabel->
  "In[344]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",",
           " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DateRange", "[", 
              RowBox[{
               RowBox[{"{", "2011", "}"}], ",", 
               RowBox[{"{", "2030", "}"}], ",", "\"\<Year\>\""}], "]"}], ",", 
             
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "ticks2"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Scaled", "[", "0.005", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"Ticks", "->", 
             RowBox[{"{", 
              RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4866, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4866}, {
      4866 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2818.062138340643, 2823.794071934393}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4866}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, GridLines -> Automatic, 
           Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             DateRange[{2011}, {2030}, "Year"], 
             Range[-1, 1, 1/10]}, Ticks -> {Automatic, $CellContext`ticks2}, 
           FrameTicks -> All, Joined -> False, PlotMarkers -> {Automatic, 
             Scaled[0.005]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, 
            Ticks -> {$CellContext`ticks2, Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4866}, {
         4866 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2885.876313755682, 2891.608247349432}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9529502431467743`*^9, 3.9530648219214897`*^9, 
  3.953064959341703*^9, 3.9530649949085493`*^9, 3.953065350710956*^9, 
  3.95306546631015*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"8fe2379e-2dc9-40e0-9fa5-df0ab8ca7763"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
aMQRPj+PkzPF+Tf3zcMdWcw7GPZot2y6Dp+3C+zh9HGmzyNokTfc3zNtZJ8s
lt+RsLG/5+DN03n/KoDzxirbrrHh/asZ1hePrM6i5QaaScVjvnSbN2wp71+2
8JM3n4a7ruT9eBucM8lrkvwK1keuwNoJcT5zc3n/7W+O68eto9/717z/zoRt
9Z8r7qzm/Xcz3BBT9mzdN95/L8PaeS6Km+iKZ/DxNqdHr6YFP+BUuZi3g1vn
m/W1QH0jeavLr/bsb5oOx45V3ni/HfuXguG/lU1bTvRkf1IDvF626NgXC/Yn
6UyWiu0XOsVqSdifNA2+8+5X29V5rF94woO/3uxzoTXPY7go/NvPJfx8yTe4
zdIBvptoH+0pUnEH85FVv1rnz02GjTc8PbLxD/O4w451N6ItfzPPedhsounQ
b5wfJ3oIV4VXjO7/l/WNL7BbhKK8ijz7z7pPRf1sUPwubWXmM4O/nzBsV9U6
f84Vnu9mofKev4fwDDxB0W/FCf694wP4glq/sFTaXwrrNB3O/KDK/rNu09Ce
qrkwO5TvJxNN+1c/s2nZq87+szVwyt1MhRv8PSUn4e11xY90aZ9UWLJUa5GF
FuePfYLlLKfLFDTZf6huifqRk3pmMz9fYALPuJz0zJTHS7TS8l9/wFL5vcY8
nsfgWvvFz3wmMn8yPDc72TOQzq2Cv6i9u6lDy3W2Qvm6rN37M7RwAqxY1XFh
b9pxGRx9qoPO8FHMfxQeYHnVIZL7aaYlwnedpLpH+PeySrhu+LzIWabM32k6
zveBL8p8zZl/LDyif8NZlyPMvxR2Ozkl5+F+5j8EN+i1jPp+kPkT4K8F7dqM
N2P+t7Cd8+uMe9bM32GGVDz9upnPOf5e7obw4quZjf26Mb8DrLrd+/W07sy/
H27sopqr14X5b8G9441id/J8E76GVz64Z2DO+Y+O7axxvJ1uWX1nfdh/JDy2
j92Nkfd5vi+EO32bc1OdlvnC2ROf7ktJ4vl/HV6zYNnmWax/S17BQ5IeqFje
5vmvOBPXr1/Hrrvu8fwfDg8s3VK9+wrP/3lwUd6fFFtasAde4r1cfz4tugb3
d/u8zZB2fwnPColYIb7A8kpegvKt7tDU2NMsrwzgzV99qvufYXk1B3atbH6s
RQt3wmO+1mfP3sH80fDb1wWKRu7M/wKW19400oJO+/vv/Sxf/gxge0s2yEYq
dlgg2Jrjxvx28ICFMQq+tGQHHLC16fejdcwfAa+8Y7roCMvDuHx47DCvjbns
D674A0/8vLHUieWpQN8W9f2Uj89bLbKBD8hvvfvQnvm3wnF/9l0+w/ZHcBgc
89VbPo37c+fmwJUX+8zws2b+X7BYOHn2HJbvwn6zUN56xNsmcP62ozX8oiR7
iir3H/ffBKsW19w7x/1d00Lg9OaEg8nDmT8bPiSck71+GPM3wQqZzoL9Q5m/
j51UfNHr2N0FbC/7WMGGQ349GsXnRXFe8N7eGnvz+Ty0IgheVfTti6U92xtP
4d67P+3tb836+Xf4SnLX9zta98/pbS8Vu3eYbT2A9ffgqfDrLStG5fdie8MD
ztfqUL6Z+yPJBcK6zi3BzdyvRfgI1ulhttaRdvwKz52tMrAf93/x7zkb7enY
4cFtuZ9LmgUccrTFc+Md3q/dYPP5cgkv43m/Pgd7dDzXtpj9y5IMeP7jjj+u
tO4fVQd7rYmbFsP6TpzWHByv69b6RVyvoMIU1gwarLrFmvfrtbAo5lEH83G8
X5+GpVGpa9uyP9b9Piw0eqd/nf2RwTVwcKLhweUX2X/QdS6Oz6u4wZ/ZHyQn
guc6l7xxC2T/wWq4Q3JJch1fdzwB27U3M065wP6De3A7hwXjlY+z/+AjvFo/
bVHGKfYfdZknFb9cXCXWZn+t7kTYaYZmQSP7cyUr4O8jDpT3TWD/QQAcolDY
SXKH/UUfYHl/zWOD2N8pEMxH+T/txsJf7E8WjYfNfe/clmP/qbszfPpLSIaQ
/cvBR2B7F7MqJebPvQOvth4xZ0kW81bCW4e4OyTeZN6OC6RiZ2WR6Tn2JzuO
gZck9DYrZv+Z/xJ4judVndGRzHsQnjY3oGUf+5tl8fCECpXnJZeZtwL2Mblo
KAtm3vYLcX0OmOuwPoR5R8PbhnkO8ebvFbcY9lBVCZvlyfx+8MOPlucWb2L+
m/DfeT2Mlm9l/nJYqz4jVWs78ysvQv30/nql7G3MuwA+OSj6rhvfT84XVtzi
MGzzYuaN++fpc6NqaMdSuCpeRbfBkXkVFuP+UBaiqcfX04bB76q/XEvi67K5
sH+i2fu1rf3Du2GdQapt1a2Y9yp8MeiInpD2KYZnbHfZNJeOa+MgFWtEd+h/
nf3BFUPgrML8uu3sPxbMhm+/mxQbZM+8PvDxZ53FefOZNwo+rR+VHL2Ix7sQ
7vXjfFM0X89tgdOXLqwSzGP+QY5S8SAnq6Ofuf6VcBbsWjN4ylfacTvc8/fI
jQlzmD8c3m5kEfKFTsuD0/STLx9if63sNzzR4GG5Ib+f7oAlUnGfF5t+HXNg
fgkc3u3++Ue0zxY4r+DLiuvsP694Dq9sl7T6JscfCH7C35VnfNbk+lsivaW4
/u6Hbizg7+s+A+4dI3/p8Vrm3QiXf8j96UHnXoK3L7ZQk3Nh3mxYrabddHO+
LmyEH7qOF87i+zvqOknFLjHGqa+4Xrm/JXym4MbxKex/T1sPe6x5u+VmJ+a9
CHcsjJAECpj3CVxmXPHDqDPz1sODor4cmtKFeXs54368sWR5ohqP9xR4mFFJ
7DK6Yh288XBfg8W04AJcnv25mwE/T5QJS95rNqjR7jLYb+KYqBV0cI9lUvHa
R5nVKXSuOTz9zYhBKu2Y3w2efaH+5bQOzH8WLjpilPujLfPWwseOLw0p5v5Z
aZrLcX9RcXX3omViuGrA4OeXlJjXBXbM7V7irMi8p+BeDw5PntSGedP+/f+Y
Ni11csz7Gd4X17DrB1+v0FghFbf3m3jLkJ8vmATrHzw/s0dv5l0Fh+00sD5G
ux+H55tbWV/ow7wpsEKCapSoievfVcNKu3cM3EXLdVmJ39upqLc/198WGsOL
jUZ0vX2a4x+Ww65+n4Y9PcbxD/5wtnKWwRSuH52WBK8tSp41gJa9h6ve3Tse
cpzjH9RW4f4/eM0YD/6/ZBwc1CfC/yrXo/Zxgl89TBI+o+MOwxWNkvmudMVt
2L+8Xf8XXF9b8A7WTfv1NI7rcYtUV6O8GFlpN4zf390IvvZHUfv6La7/5win
HxH1lnG9vtwD8JD8zA6FtFw8rJrx4Ic330/4BrZ3+uutxs9zVFmD9n96aYUG
1yf0HwWbCJ/sKAxj/kXwvhUZP4+0rv+3D74wfut9Md9P9wb8tt34DQe5fr6k
DHbaWH7IiOvN+yi5SMWmTgtfBKYwvxDOtNQdc/Mu88+H53w5X9ad67ML9sJv
4mUzunM9SVEsbHSkd7TGcuYvgUt84hvHuTF/27U4HrHCxs1rmX8oXHR/ac77
Z8w/Fz4wI6/xNC3cBd+RmYtispg/Bp7gVC2nzdf9i+BRq63igiqYX84V5ftF
lyFZr5h/MHxC40qftUXMbw83R/ZVOlXM/N7w3tDSko0lzB8JRw1zGGlHxxXA
g29uEnzn31c0wxGj76fupgUD3aTiwA16Biovmd8Wzr2bPVb+DfNvg1XvT9Ib
Ws78V2CphvMVp1Lmz4VzCheX5fPv5X7D3WW7rd5UMn9/d6l4ssufsOu040y4
xLm+y3fm9d8Mj61bbn6U43XSLsMPM0+sTBjA6/8Z/GHL9Prjmrz+f8Dr9s4R
H+L6jJK+63D/mv8je1g3Xv/T4YfFLxR9WH7GbYA7POk9NEyD138wvOdNl/Rr
LK8EWfDuhw9U9rA8ETXAtsU3vcawvHHX8cD1qzXnikd3Xv/TYB8Nd+ur/Pxc
T3hhk0XGN1ruIhx+uueQyX1Z3j2GN8QcKg/gepGO3+Av663GLeV+Ff7anlLx
op6xK/PotMnwDLNFoe84HkzmDmd5Z9bIt97fz8O/0trHtlvG/A/hYw03n+73
Yv4vsJK6wVsTX+bvvh73E9m7iAEcL1hhBpf3UPefwfqpwBWOWpThspf1O9EZ
2Drrkf28EuZ/ANcsehrbkeuVBUvhrlmpNbXb+Xytmxd+36kDz+R4s/4uhved
/zFwN8eDCNfAiT8C3thx/SzHk/DUo1tt+ley/p4KR5bnzTauYf39E3zr9MnA
Ya37n6tvQHlX2uX0rdb9P03ghUGmdf2537RkJdyj1rE2g+M9fI7BV9VjphVy
v824ZNgtf8unAvY/VFTBvS/+6jiE+1sKOm+UivvNF3YOGc/2ywT455rbTlOm
sv2yDF7dKWXcrblsvxyFcxYGqdavZPslEfZbJ91bup/9Je//vd+NdeGjDrC/
pNMmqfjehP2i82fZXzIWfpS3XeVtIPtLlsKe7uvVbC6xv+QQnHN7UPH5a+wv
SYBXT3M4fD6G/SVvYa1RWUuu0ZIOm9Ge3/c1rZLjG3wMYX1PB9GqDOZ3gCX5
5/2Wsz++Yj98fNS2Ez37sv16C8709QvVG8j262s4xaPU0FDI9mu7LVJxYWD/
wmb2hwWPhF+MNkv5zfZj7kI4f7ntlVsj2H7dB69cnWP8jhZehwvKlpsGDGL7
9RUcJhLXaE5k+1Vxq1Tc+YbtkHfj2X4dDi9o73pYW8z26zx4t977x7cms/26
B64JeuCQye8nuQY7B87Z5+DI9utL+GDSyIjJfN4QJ78N9bGfZz3Xt47/NoBV
esWsHMz+VMEceG2L3JTrUcy/E/aVqFv0PMn80bCOsJuv/03mfwGvjurfI4rj
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
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
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9529728*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9529728*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
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
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9529728*^9}, {0, 0.0798545257471515}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9529728*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.952950248343712*^9, 3.95306482568782*^9, 
  3.953064963527657*^9, 3.953064999149098*^9, 3.953065201948196*^9, 
  3.9530653549354362`*^9, 3.953065470584772*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"b1b0060c-8aab-48b0-8eb9-98f7f4e4c563"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2910, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4079, 120, 678, 13, 42, "Output",ExpressionUUID->"c85f27bd-9792-4344-9c54-3d037ac156cd"]
}, Open  ]],
Cell[4772, 136, 6879, 155, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11654, 293, 2436, 60, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[14115, 357, 41314, 842, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[55432, 1201, 15566, 307, 5794, "Output",ExpressionUUID->"8fe2379e-2dc9-40e0-9fa5-df0ab8ca7763"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71035, 1513, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[71381, 1523, 3922, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[75306, 1613, 206195, 3529, 825, "Output",ExpressionUUID->"b1b0060c-8aab-48b0-8eb9-98f7f4e4c563"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

