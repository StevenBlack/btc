(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    280142,       5106]
NotebookOptionsPosition[    278566,       5067]
NotebookOutlinePosition[    278963,       5083]
CellTagsIndexPosition[    278920,       5080]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-\
6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.950135316239951*^9, 3.95013535909172*^9, 
  3.950135403595419*^9, 3.950136523368136*^9, 3.950136771541115*^9, 
  3.950137056395257*^9, 3.9503704444969463`*^9, 3.950472574479944*^9, 
  3.9504730251366663`*^9, 3.9504741687778273`*^9, 3.950474801465765*^9, 
  3.950475310923668*^9, 3.950475940801543*^9, 3.950476399146553*^9, 
  3.950476928562928*^9, 3.950479411816936*^9, 3.950479648619277*^9, 
  3.950480413136079*^9, 3.9504805212899113`*^9, 3.950480729855413*^9, 
  3.950481613916606*^9, 3.950481704052061*^9, 3.950482067621278*^9, 
  3.95054918644352*^9, 3.95055260426542*^9, 3.9506462780634947`*^9, 
  3.9507343922375174`*^9, 3.950734987183947*^9},
 CellLabel->
  "Out[2096]=",ExpressionUUID->"5aee62b5-ed37-4466-8040-0939b310cd3e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "earliest", " ", "date", " ", "for", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"origindate", "=", "\"\<Sep. 14, 2011\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ly", "[", "str_", "]"}], ":=", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
      ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
      ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Default", " ", "properties", " ", "for", " ", "generated", " ", "plots"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagesize", "=", "1250"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelstyle", "=", 
   RowBox[{"Directive", "[", "14", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"titlestyle", "=", 
   RowBox[{"{", 
    RowBox[{"20", ",", "Red"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imagemargins", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotbackground", "=", 
   RowBox[{"Lighter", "[", 
    RowBox[{"LightGray", ",", "0.75"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Quantity", "[", 
          RowBox[{
           RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], ",", 
         "StandardForm"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}},ExpressionUUID->"7ba4890e-baff-4440-b611-\
c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", "origindate"}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9},
 CellLabel->
  "In[2108]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 "titlestyle"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", "20"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",",
           " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", "labelstyle"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", "imagemargins"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", "plotbackground"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              "titlestyle"}], "\[IndentingNewLine]", "]"}], 
            "\[IndentingNewLine]", ",", "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", "titlestyle"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DateRange", "[", 
              RowBox[{
               RowBox[{"{", "2011", "}"}], ",", 
               RowBox[{"{", "2030", "}"}], ",", "\"\<Year\>\""}], "]"}], ",", 
             
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "ticks2"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Scaled", "[", "0.005", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", "plotbackground"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", "labelstyle"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", "imagemargins"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              "titlestyle"}], "\[IndentingNewLine]", "]"}], 
            "\[IndentingNewLine]", ",", "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 "titlestyle"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", "labelstyle"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", "imagemargins"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", "plotbackground"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 "titlestyle"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", "labelstyle"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", "imagemargins"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", "plotbackground"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   "titlestyle"}], "\[IndentingNewLine]", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", "labelstyle"}], "\[IndentingNewLine]",
             ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", "imagemargins"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"Ticks", "->", 
             RowBox[{"{", 
              RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", "plotbackground"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}},
 CellLabel->
  "In[2111]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4842, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4842}, {
      4842 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1339.1, {2894.4257054453883`, 2900.1576390391383`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4842}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], \
$CellContext`titlestyle], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], ImageSize -> $CellContext`imagesize, 
           ImageMargins -> 20, PlotRange -> Full, FrameTicks -> All, 
           GridLines -> Automatic, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, LabelStyle -> $CellContext`labelstyle, 
           ImageMargins -> $CellContext`imagemargins, 
           Background -> $CellContext`plotbackground, Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], $CellContext`titlestyle], $CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Changes", $CellContext`intervally], \
$CellContext`titlestyle], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             DateRange[{2011}, {2030}, "Year"], 
             Range[-1, 1, 1/10]}, Ticks -> {Automatic, $CellContext`ticks2}, 
           FrameTicks -> All, Joined -> False, PlotMarkers -> {Automatic, 
             Scaled[0.005]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`plotbackground, 
           ImageSize -> $CellContext`imagesize, 
           LabelStyle -> $CellContext`labelstyle, 
           ImageMargins -> $CellContext`imagemargins, Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], \
$CellContext`titlestyle], $CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], $CellContext`titlestyle], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], LabelStyle -> $CellContext`labelstyle, 
           PlotRange -> Full, ImageSize -> $CellContext`imagesize, 
           ImageMargins -> $CellContext`imagemargins, GridLines -> Automatic, 
           Ticks -> {$CellContext`ticks2, Automatic}, FrameTicks -> All, 
           ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`plotbackground, Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], $CellContext`titlestyle], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], LabelStyle -> $CellContext`labelstyle, 
           PlotRange -> Full, ImageSize -> $CellContext`imagesize, 
           ImageMargins -> $CellContext`imagemargins, GridLines -> Automatic, 
           Ticks -> {$CellContext`ticks2, Automatic}, FrameTicks -> All, 
           ChartStyle -> Red, LabelingFunction -> Above, LabelingFunction -> 
           Above, Background -> $CellContext`plotbackground, Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], \
$CellContext`titlestyle], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], LabelStyle -> $CellContext`labelstyle, 
            PlotRange -> Full, ImageSize -> $CellContext`imagesize, 
            ImageMargins -> $CellContext`imagemargins, GridLines -> {
              Range[-1, 1, 1/10], Automatic}, 
            Ticks -> {$CellContext`ticks2, Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`plotbackground, Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4842}, {
         4842 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1388.1999999999998`, {2962.2398808604275`, 2967.9718144541775`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVyU0ogwEcx/FHmVBiI3lLeSdF4iFv45HkpRh5SyxWa5L3lMhhmTXUQkJk
JG/hIBqzKIexcNDIwUEZJ2wP4yAR8/8dvn0O3zBZR4XchWGYDGogOSS9RMFz
P3XOEpgkuR4vJWvuFmdgxrFpQ01miZYHapt5ri7nIvSbtDh3En7ID/1NAQwu
lpdCLauTwj5XhwKWbcd3wrMlj/u4Fp6rPjVW+7fxnGxIM2InN2xeJljVL6jh
yS2BVArH1eE9cF9er4GGfN06vB2c9Cpqp29UzcLu3/lduLA6egC1DuU1bDRH
3MEG+9vVIbkZa9/mSTErfoLJa6m9r2S0h1AJrV8n0/DSUmSGcbaHG2gzfAne
yLLnvUp4lPmnheXPhmP44pJggVPek27vZCETI4ILkvhIuNLVxEJ1g0EF5/tz
J2Cr+68O/qUNb8E1423gBxmUGBIFrcKxCjj3KRT5dvCcj6cmAKZk601+pOT8
UZlHOthETRs5HDp4Bf8Bvkn7GA==
  "],
 CellLabel->
  "Out[2111]=",ExpressionUUID->"7a86eb3e-b24c-4013-a670-2dfb07e84daa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", "imagesize"}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", "20"}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", "imagemargins"}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", "plotbackground"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", "labelstyle"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->True,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}},
 CellLabel->
  "In[2112]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1:eJws3XtcS38cx/GREMrc00Vzq1yqldwibUqSaJXc0+jmlpZrRE2o3H6WpJJY
FwphFIlkisolVi5FRReFjSwhd7+38/H75/d4Ps7Z2mvn9j1nZzN4WZC7X0cW
i7W/F4v19//4T1QaruTvY/VbOGjlRTtY+hGOcsj/OmwZY4WBWMnn8x4sWrqQ
MWs6PLd///tvPRlzg+FOOcoeKrIwCX7mnBFjNI+x5DY8a2pxbwOy/AN8j7tH
9GwyY/XA7Zj+YmK5ry1jjgPsFBI/bBZZsAb+ekfksIosToAVAh2LRLKsEBb+
SOk934Zx3Tv4V3zMIqOPF/6aPSBCyTeY47J8SytjHh/+UbV4X5GasWgVfMLq
bfNjsjQO3jxib+JiJWPFDbiXW8717CbGLCX8WXXVKe4lY27fHUq+t86G9Ul1
jIVTYCOfllPmZMlyOFDWNLIXWX4QliwovH61kbE6Hw73rf7oX8+Y8xpuv6a+
v+U2Y0GvnUq+3PTS8Tu3GIsnwetneP73NpOxzA9Om+Wd53GUcd0BOCxy99qE
ROq/ClcZGn89Rua9gqcb1F7bThbp7FLyl7kPXB0fS/0T4LwJJdrT9lP/Mjjy
bZpj1l7q3w/fGfqrImEX9efCY7W7sHzCqb8eXnLoS+3aU+eZ/u6RSv6AJelO
e8jysbD94bovZscYq73hQcata3scYszZAz+1XFkf0HqO6c+BsyYNdl+rZCx+
Ae/XS349tYWxrGuUkr9gTeC1OY2M66zg4yEft5UfyGL6veDtDxZYLYpgzIuC
U4tOVR0QMBZdgHeP0Op6axpjaTU8aIbgirkjY4VmtJJflCXuajKZMYsLV5z3
9La0YsxdCA8vGDnL2ZixcCds39rtx7lbZ5j+c7DewQ1rZhUxllfBO70d7m7O
Y6zuuFvJ56zOfDIjhzHHDJ6W8aVn7QnGgnlws0YPSRVZvB32Cd8sU5BlZ+DA
ppjuPuS6J/DL+LOJm8hs1h4lv7G7cJGBz2mmfyTsFufYtN+fsWgOvMQo3kX4
5RTTHwZfDzaKCyUrMuGzw1qc/cIYsx7BOwyDTkq2MOb+gkVxP/yCNzEWmuxV
8pPWLfVZt5qxxA1OezpG59oIxvJQ+I+TVXENh7H6BPwy+GDMiieZTL8C7hLk
srV/LmPBd3jDXrbhS7J42D4l/3329K8B5xnLZsPulpadR2cyrguBc88sbWk9
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
l7H/bj+3XoeSpe1wfInjAi+yYnAvFf/Skdlr+/7rd4EvcNbNOthG/RvhcSUm
r4Po9Qql8Kb6smIh9Ujuwqvrn9qWvaX+T7D59tNrfOn9UA/qreJvFj+245M5
M+CEVlF8SCv1r4MtXe/tv1lC/cnwr82VK4xKqb8E/s5zvtBaQP2tsLvjzsn/
zDbog/2lsOLN7q3U7wi3t/BWHyWLRPBQ9xWf3q+m/iPw5E0hm3UCqf8WPDek
zVK9jPo/wDYP+v4MpfWTO7Avnq+g25kva6nfHubo1E4I/EDffwiEx83Y7b+E
LI+Hn1rua9hGVt+E2/IjvcPV9P2Hd3D6+G5FE17R9x/691Pxuy0999xWSfs/
Hjzcfu6SpNf0/YeV8NIP4u93yHWH4G1exXPmvaHvP9yAIx5MzEuix/PewnXO
92YXvGUs6tMf7/fvYXPcyFJbeK9L66FxZEUAvD9l4HlvejzrIKzcM3mAoBf1
58Mio/7FV9nU3wwXNA6d/L03LX/2ABW/WSFZZK1Ny98GTup6svtOHVr+vvCM
GHlMIJlzAN68a5/L2iG0/PPgpp1+LYKBtPwb4e0vXHZ8Icu0dVV8s5nJ1d/I
dePhlG8Nrtoh1L8MTvjmHnolmPr3wfWrCiuurKX+y/CowpcRpkLqr4PvDfd4
uJ2s6DZQxR9m2hYwewH1j4UTT1YENdkw5nrDl9077G0fT/u/3TDnP6080wm0
/LNhdZlowCJrWv618MH7yTNnktVd9FR8madRexN9n4VjBSs3Zf2xJgsWwzPc
hyjT6fnFkbBU9tJp2GHa/8vgSpZ1fei//f9z2MyW/fs1j/b/mvoq/swru1gj
HOj4ZwE7u33U+KVLx78F8LNbvUftLaf9/w74/A2TjXMf0f7/LPyBP+H2/lu0
/6+C5VWLv5jI6fsvHQ1wPF6+Os0+l77/MhqeZdzNOJWmS+bCfwqMI86R5WL4
fsfMIbvI6tOwzdP76u036fsvT+D4x2nn227Q/e9//j5+Z3rHxgt0//sIQ4zH
JoY6zsun+9894FztodG+mXT/+zZYnNZ5n/kJuv89E57k1fDQ6ywd/yrgyBmy
p0/O0/HvJ2xfax6vpOlS40E4/pRN9dpA0xUC2HfMo6muZ6g/FN5oPmj4ITL3
BOwnXHtqJ1n4ED5h2P+/oeeo/xtcU9fH7Dw9v3yokYrfZ6te9SmyehZ8+2KQ
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
26VwjBb4wE65bQ2+fmb+KHi44Z6Vq/l93Qvhdf2U7ozh9wlugYVHrcJeS7n+
48AylE/Hd53Z3cT8s+C8Nh065bM+IdwOj1rQGBJOO4bDjz5/3uv6g/nz4PTp
N+8P5/dN+w1/q5tteIWfL+tfXiNWuPDA7mc180vgfkGRRnaVzL8FVlEdt2zi
W+YPhUfen5Zwkcc37jl8U76f90O64gf8reF33zbvmV/vNerHWkHdP/H3FM14
/W8+ZI78tmLm3whvi8o0jObvH3wJ3h3e72MYnZsFD7+x665tOvM3wtPX6SXP
uMr8um9qxNM6vfrbM5X5LeE/TSHPJa31v/XwiUXCzWd9mf8iPNJBM/AXLXsM
3/YdoX9tGPPXw8NyroxPoCW9KmrEUunX3PpRzD8F9jlRkzrJivnXwSumx7j6
WDP/edhhy96Er3xdkAknTbeKMZnB/DLYd8XDmbPNmb/HW9Tvd8xPS+b6nMHm
sPL13+4mxszvChe0iRg0eArzn337rz93eK+DYuZPhyPr13VSHMP8tXBlbtr+
T7S/5jvU9xd3H2zJv08Tw/MXFl74MYn518CJ3wYvrlFk/lOwb4mLyzEV5k+D
b3ZeNHeWBvN/hmP/6HvM68H8GpUoDx/FTl+iz/wm8JhtVQfa0IJV8MId35ps
uzP/cdjq+auhmzoxfwqsntKz4aIy81fDu44Kc1/+YP2/83uUZwc6vmpf/7/l
jOETGccjp8nY/lkOv9s7zzD+K9s//vDbe3arJ9Sw/ZMEu7oHno35wvbPe3hz
efDCev69rNOHGnFKcdKM8G9s/4yDM/Xbz7Xk50mc4CnV7sdHNbD9cxhONSlW
OVjH9s9tOPD1vioRXfEWthg4aK4O31+gWoX6zvL68cV8f5ER3HB4X2jr57k7
wnlF76ZFSdn+OQC3q3LdGk3n3oIfxItnen9m/jewX+niMt0q5leprhE/DHG7
tOIF84+Cf9lFvvhA+y+Ck63Cb7q+Z/59cFX88cNGH5j/+r//H7ttdm4585fB
o0UeRebvmF/pY434q1x33/p85hfCc6RVs80LmH8+LPP2+e6cx/x7Pv6rHyvF
u9KCWDj7rJW6Av9eVALfbZsZ9jqZ+dt+Qn2jXnnXV7Yng4fCxcaDbsV2ZP45
sNWXhtK26sy/CzabtU95Ji2MgQ8NG2V2sYrt/yI4uOxlg/8btv/lPteIrSfU
j9B5z/b/YDigLEGzbwHb/3awSKs44Hs+2//e8MgPfmecs9n+j/zn3qMuvX7K
9n8BHLZL4r05ie3/ZljzY11Rz3ts/+vXoL3ZKbbvmwi2/23hjQoZC1/Qom3w
g7VD7CJo9yuwQHP8VrPLbP/nwuv+Svo70rm/4KXdu544Rsv1l+J6fLl0YHUI
n3/MhK/aFo98Ecz8m+HP6Yr6sUHMfxkOjjRPGEKnPYPdAlzND19k/ibYaIHL
pWVnmb9vLb5/WVVVDz6PkUyHD3o37Gy8xPwb4NsPLz0cSscFw1p19wZYrWH+
p3Ds5ciNQ/h8RdAAmxW/zXq1ivl16mrE9tuWl9jweYv7NHj4GZFv+Qrm94T1
9va7I1zG/IHw+xdfFQfRco/h3XoNjZudmP8bPNp02oI985lf+wvu96NVlm2m
/SfDfc1v20roNHf42iOF4vZ8PiU7B+uufFU4xYr5H8LvR929lGDB/F/gmvCo
hTp8nuTTXYbzcfm2QTZi5jeDR1SezFTj6xVr4ULHDx4aQuY/A/d457pPhxY9
gEuaNq8JGMD8Uvigv1qPKb2Zv9vXGvGV2Xt+n+HztVwRPH+M867l3Zh/Ddyr
6zFdDQ3mPwlbvmzb1Zx2TIXfOkiLwpWZ/xP8qa9z6Ew+z0tT/4b2wpXOtYEt
fP43Ef7Qa+1+y0Y+/1sJnzi978SsCj7/PAY3FEx+8L2Uzz+TYduowgyth3z+
WQUXeCRvvv6Uzz8F9SgfrZa42dKCCXBVYYn+mBA+/1wGR+mFTT15mM8/j8Jd
dL9/ecH1moMT4cNPPz3/XcPnn5Vw5bXvz5fIM3+n76ivqx0eMZL5hGP/Oa9f
Z7PW/EvhmgMn79rxeaT/IVig/TDa3JL5E+BV6VoKj2bw+FfAZx7nvBXydd0O
DTXiBc6pO9ZM4PE3hL/17H/LxZnH3wG+da/d3YU8/+L2w0tcLqbUePD434Sf
dGqb0LiJx//1P1vFT77K803UrhF5tTRsjHk9uI+ELc/vKEvg+R28EB5nbO9X
xueZub7wijOxf2dtZ/7r8L5CVQ3FPsz/Cu7XpWfyql18/qvYVCM2jY/MMaD9
h8Njar3WRbny+e882GST/V1LNx7/3fCIBbFP14/l8b8Gj344du1oEY//S1g0
qlYjbBKPv/wP1N+C+qV3pOMM4E1a3d/vMODxnw2//9XR58FgHv+dsNjh5aMn
o3n8o+EbFVszGmj3F/CXmBbjKTY8/n/hLTMvNyZZ8vgP+lkjbjndfKH3VD7/
toMV23z2GtyTz793wC6eg8f8VGf+CFi17ZNVG3WYP/+fD5ddmkKn/YGtIzND
3nB9ZNmAXzXioeaa0/YrML8NPOdYS6NLC9d/3QrfS+w801Ge+cPg+p6rNwdl
cv3XHDikbPbs4WFc//UnvGy4iWZdCNf/7fcb9e+Ra3712cH1f63hyh2j/6Zu
4fq/m2CZx9D1iXRwCFz1qenj2Tlc/zcbXvawU8dDs7n+bxPsFHOmtNaS69/2
+VMjvn/nVHaNIde/tYKnB+7e+cqe/R9e8Jak9YtqZrL/IwjOW5Nf56zN/E/+
vT5b6d1WTa5/+x3+cVivw9+ezN+7GefTDmfRZi2ufzsVDozU+9Szdf1bD7jT
q83za86z/+cCHPG6qdu8c+z/eQSP+6o2KJivi77CR7T3PX1/kf0/PVtwfcmv
vhXjzv4fC7g63sSo7TT2/7jBY58JTilyPVq5c/CRYfO2K9DCDHhYpeucB/rs
/6mD0z++PLK7P/u/tP7ifLXcp+dLp5nCxi/TPm/VY/+XC6w4ROWWQR/2f52G
Z6VXzJrVg/1f9+GBnbSftali/2cNLCddpXHrPfs/u8pJxWWdBiZUR7L/cxKs
dHXKr2W0YDXsLMs4N+QS+z9PwPniT/t2LWf/7z04Sz9qRt0Hjn/5CKvJGlTE
V9j/36WNVHxI3PXYT65XKzcRbqcUf9syiP3/K2CH8Quedg5g/38AfOrY+VUf
/dn/fxeeO7fz92W7OP7lA/w0bv/IqFkc/6ImLxVnNFqa9LXi+j/j4UHq8u+7
cP0diTM8X+XInzOt698dgQdmDXl/v3X9uztwssylzffvHP/wDi76eaPbCI5v
EHRsKxUPzy07pc71KUVjYIWpOyY0ZHP8wxJ4bkefDdG3OP7hIDz/a+je4liO
/4iHFTPcA7O5PqdcBdxp4FzRFq4/JWyvIBWPS43ZbkE7joblj8Tlmt3k+I/F
sGzCBXmtOI7/8INr+g44N47ry8luwCZRleO0Ajn+oxy29zzRY9QFjv9QVpSK
++ZFnQg/xfEfI2C1j1+7dgzi+I8FsH5CQ9gAumIvfHTfnpykw8wfB285nr35
KsfziUph5eTMMSUcb+euoCQV17UM1X1IBw+DjbRDtUO4flzuXHhgk+ZNm9b1
33bD6sO6vhJwPJfwKnw3LPb0D66/5lgMl/Zps3MXx7f5t1GWikVocYi/cvzb
EPhNu4T2PWiZPey1ra/Sufcc/+YDvwjtMM6Z488kUXBC1/WFa/I4/q0QXpBj
eObNE45/a4Fnv7nZ/JWuGNhOKt6YFbD+/SOO/5wFLx3/+qVuBse/bYdPxLtX
x9/l+Ldw2ODOucVBdHAenBWwyNghkePffsOLx3sGNsZy/NsAFan4+euRB8bF
cfybBP4U8iVorDvHv22BSx4obTBczfyhcGJDb8fSVcz/HO40qceKNX+Z/wdc
nH/6fsUv5tdrLxUL8w486snfTzIDnnVaK9I+m/k3wnNG6Iba0nGX4P29e/zZ
9Iz5s2DHk4aT13P8mKAR3vKz0caAFul2wO9nve7TsQfMbwkvne/3cUIu86+H
60Z/kQzn+MDci7CvhZ9y8zrmfwIXpSs09FrP/PWwn0GbtcYbmL+XqlT86EhT
dwcP5p8CK4zsvTVhDfOvg6+WD37myN9Hdh4OnaNV4OnE/Jmw5ZnefdKXMr8M
bqN37OKKqczfo6NUnB6dNbpsGvOb//OgwMTBM5jfFV673urRpenMfxaubbk3
VM6E+dPhyg6bZ6zWYv5aOCtr0hpTVebX7CQV/1GYOW6CAvOL4Y22g53KGjn+
2wXWvac25d1Pjv8+Bd821H65m3ZMg+eFuuTf/8Hx359h998zep/k+6VpqEnF
mx9GO0saOP7bBF422SzmCq27Cj5hq2O24TvHfx+Ht/aoHNq+nuO/U2D5iiUL
8vn3cdVw3fbFdnm/OP67swDfx+OvntVfjv82hh2c6vf9sWP+5fB6s1fFH8XM
7w///fTo7aS9zJ8Ee0hfJD7Zw/zv4UOC2LwFfjz+ap2l4pCdSmf7H+HxHwdP
br/nqGYYj78TvHGlRsjfIB7/w7CGU49Kzc/MfxsuUu9xqnMtj/9b2OhDecGi
ah5/1S44Xxte98hvPf+NYEm9seOXKh5/R3jHRfMOO17w+B+Ax6qXfz1MV9yC
NeXvHsrh+FvBG9i1IrHImeNTRSrqKL90soPk+Lr7KFjewslgML9P8CL4r0OM
t56U+ffB7abbC3M4flfuBjz09w1hNMfjCsvgC/Mdrt9heeaopCEVu5za56TU
keW/EJbvYzMliuON0+bDq7OvzkzhepKyPXCMy6S/a7RY/sfC7/L8Fm7h+E1J
CSy4Yt72Be3TtqtUPOCpWfTOviz/h8KbyrsMzDRg+T8HDi/8dGAByxPBLjiv
rcEzuxbmj4FHf3l2dwV/D/ciOPjC7Bw5jncOlusmFad6Xvj6uDX/YPjeo6vV
mR+Y3x5OHr7j/l4eT6E3PKCj/C4d/n6OkfAxz4z7O3k8/Qvgtyt87L63Hv9m
OGDZdzkDjp+X6Wvi/nw2KiCgA/Pbwm0bqh5c5/h7yTa4LHVRoyXtcwUW9fjZ
/z2/T1wunNhcLt+uM/P/gkt/nPJp2cL7X38tqbjpmUfnsBje/2bCq+1iXrpE
8v63Gb5n/9LInuMpgy/Dc4oyHPK5PmTuM9hi9jR1tye8//2A99Q7bLSu5/2v
b3eUv9rhW/W43qDjdPit4ZKqPbT/BnjInmTFtp1Y/wmGB51wfOypxvrPU1iz
1511O7l+oG4D/MNwQeELrs8u0emB8uDuedQRWf+ZBtvkJZXsF7L+4wlbt7+x
v8KI6x8Gwk/ahTwSTOD6h49hr47vijU3cP3Db3CiyzyZiR/HP2v3lIp3dx7o
ltxa/5sM639Sl/iWsP7nDidedXC585b1v/NwO9xwRr9j/e8h/N7JoMqqkvm/
wN2T0zZE83X/7toov4on+vnw/dPM4OsHtP8eqGP+tfChXDexL8eL6p6Br5x2
ujconfkfwOIBTwSb7jG/FG7nmhQk434Jcd164fXjHc+b8fUKETz4xD1rMS1Y
A3+v1focRItOwtunpGh8eML8qfBHxYND6lm/Df4Eq/XzUvvM/Rdy1Xvj+BQp
z4t8wPwm8M9VMbnbaOFK2DhBta/yY+Y/Bn8MunRGO5v5k+Hvbkf6mHI/ibQq
WGtbuVDzOfMLdKTiDTo26ydz/wjdCXC9eeyLHXeZfxm8wGeHgi73R/A5Cp/p
+lennvsjxCXCmXZxXvdvMX8lXBd1qI0OP0/QSRflp/RjbNgL5h8LL9j6a8Yo
2n0prOtX0mdM6/5Hh+DU7xHzyvn9chNgsfKoFBOeD3Jv4Sf993e4Qws79EH9
7EDVL3EV8xvCwx3f9Ivj+eLvADdfbe6wgOdH2n546OeLrsdp2U140WiVmZ8q
mP81PP5HyYh8WtKuL8rXDZtjdjUw/0jYprB20sevzL8QTp600D/oC/P7wgem
1syeK2P+67D3xRsRpXJs/7yCT9zapfNFnu0fRT2peMKf2W62fD14OCzp1GQd
/Zf558FtVxUPmMW/l9sDTyuKHPORFl6D1wSpTwzk7+f4Ep7UbXPEd+4f5S/f
D8ejz1ObjoXMbwBfdahapN96/GfDb7NcLobnMv9OuLh8zM8ttCQa3if2TVtJ
+7yA45fMO7OajvsLz3uaq6bB96sY1B/1515hxs60wA7uU91yo9WiHXCWoXqL
Cr+fewQ8IN105PIcHv98eHl/n+Y/rcf/D7zb5pu9mK/L6Q9Ae6csd3QsLbSB
658berXl9eS4FX5tNntOV/6/fxgsd2aTyI37ZaXlwGrOfyTFtOwnPNl9pXyx
Bse/9tOXiq9NntvbvyvH/1rDPRWtJqwRsP27CVbfVtAnqDPbvyHwqV8V5yPU
2f7Nhg96106opwVNcHpUZWQxLeozEPfbK8b1Ffw8dyt40Pq42Ad0sBc8+8b5
KfJ0bhDs2r3rHC1NHv+ncNLXJTba3N9M+B3e+TwzvDvt2HsQ2gupPfV6c780
/6mwYol2XH0/5veAE8f4t11Byy7Auv67Xqkwr+4jOGB+8fKi1vxf//3/mfAF
2vx8n56Dcb/ufEXDuQfzW8DxC/q/T2jN7wYLR07edob/LzgHj7Dx0KmhRRnw
7dvBct9p9zp4z+vz3fO6Mb/WENQnjuqGJ9G5pnDR1fkn2k1g/rXwykvzF2jT
wtPwuZkxIT89mP8+fOT5moa1x5m/Bj6d/0thUxDzdzVAfW/mmsFbLzP/JFhn
jEfMSVp3NWwz63DzjzDmPwG7DHRrXhfK/PfgZT3iCwvouI/w1NnZ7mH8+4ou
Q3F+nE3tGhfO/BPh8qz4Dk8imH8FvGbsoQtvaPcA2Hx0cIEJHXwX/vZeXOhG
536AVaIfpxRdZ37BsH/t48B5UbRwPNxkq/VZcIv5neH7SurlOXeY9w7cxmbI
uaEcfy97B8t5+u/6ROt2HI721Y2rA/s+YN4x8KmNjVpDDjDvEvjdy4Z75nTc
Qfjyx7FpGoeYp71QKh455O7Xu3bMMxqOPOY4ZIIZ8yyGbxUUOidz/kSuH2zR
0Ue/cQjz3IRXGVYPUDRgnnL47bXs+xq8fzsqj8D18nmC8pvW+RwjYK/ZJgHj
X7I8WwC7TFl/yZKW7YX3epXZO4SyPIuDZbuSKjy4P5GkFP7yoe/9xcdYnimM
RPv21yLLZwdZng2Do+7P7L+drpgLxz10uvHbi+XZbvhTo42pDS26Cp+bdu7j
Lu6n414MH63v87KYz5OC24xC+3RYzp/PdO4QuDjo7/O7M1mezYZ9Yk0/RE1j
eeYDnx73VRrE/XYco+AhLxq39uD+Ov6F8KghXcM60mkt8IY2MakKo5l/4Gj8
/odMA1dzvWndWfDOtZGvXk1k/u2j/91/l8u1N2H+cPh4bErpZs4HE0kMpeJ8
l0Et676wfroFHv4w9NNKrg8eHAo3/c0QeNC5z+GJJRMmjpCyfvoT3hx2ZrsG
14cW6hnh+3WwmVzD51eOM+AZm/psWMn10P03wrGCtflhUWyfXIKlhxzrV3N9
eFkW3GnzGxMlriev2wifjzYI+87nVRLdMbj/t4vX/xnG9oklPPncs1+loWyf
rId39R+ZoR3C+vlF+I/etZNytOAJ3LTNOuHMVdbP62G3HYvmNfP93XuNxfGP
Hb+rDd8/eAr81jY9/QfnT+Wug0Pfdph/nvstyF2Ab/50Vn7oyfyZcPTRtque
0o4y+EVO0dMDx5i/xziUD7OcXVQ4fzTNHG77bopWR87nkrnCCjuPhTdz/wXd
s/AcD7Vhz2hJOnx6eVRpV+7f4FMLe+ofvnJsP/Nrjsf954+m5ge+X4UYPn5x
yaOOrfPTXOCsE5X13fi66BS8Sto8LIF2T4MLLcJvjeT7BX+GDyzvMf7yIebX
mID21tJzRuv5/eUmwQpd+10SBzD/Klh5U1ZOHp8fOh6HP8V++JPD1/1T4De7
Cg72at2fohq+Gn5CUsXfR9bZWCq2ipqb60HrGsPb2yxWtjjB/Mvhtk77zt+g
ffzhmMsKNrmt+xMkwZq3Rm76Q1e8h1XSf2r+pgVqE6ViR6HeiXPc70A0Dg7p
NcLRg6+7O8Hm23Omue1h/sPwn3Er2qzj75F7GxaM3f2whZZ7BysH3i6ypIWq
JigvFRW0rGlHI7iLWUnphtbj7whnXJ8uKKPTDsB9M+YNr2Qe2S34gmhu4J8z
zP8GLug6XbKU+zFIVCahfrw5o7QLz1efUXCPV81T3Xi9xC2Ci1ZtdPdt3Z9h
H9xzfGLtzGDmvwHrNOx2Muf5LCqDz9UZtj3H192VRCgPH7r/zPRlfiFsmDQp
sz2dOx/u8sHM6wqf98rthRct8Wk04/kjjIVd+1ydu7o1fwk8rWdP65X+zN9W
LBVvPH7mdzzPB9kcuHbTkEdO/HzdXfCenvlRPVuv9xh4sdmkvEf8PXyK4I/r
QyOO8Pl5nJwpzr+5bx7uyGLewbBHu2XTdfi8XWAPp48zfR5Bi7zh/p5pI/tk
sfyOhI39PQdvns77VwGcN1bZdo0N71/NsL54ZHUWLTfQTCoe86XbvGFLef+y
hZ+8+TTcdSXvx9vgnElek+RXsD5yBdZOiPOZm8v7b39zXD9uHf3ev+b9dyZs
q/9ccWc177+b4YaYsmfrvvH+exnWznNR3ERXPIOPtzk9ejUt+AGnysW8Hdw6
36yvBeobyVtdfrVnf9N0OHas8sb77di/FAz/rWzacqIn+5Ma4PWyRce+WLA/
SWeyVGy/0ClWS8L+pGnwnXe/2q7OY/3CEx789WafC615HsNF4d9+LuHnS77B
bZYO8N1E+2hPkYo7mI+s+tU6f24ybLzh6ZGNf5jHHXasuxFt+Zt5zsNmE02H
fuP8ONFDuCq8YnT/v6xvfIHdIhTlVeTZf9Z9Kupng+J3aSsznxn8/YRhu6rW
+XOu8Hw3C5X3/D2EZ+AJin4rTvDvHR/AF9T6haXS/lJYp+lw5gdV9p91m4b2
VM2F2aF8P5lo2r/6mU3LXnX2n62BU+5mKtzg7yk5CW+vK36kS/ukwpKlWoss
tDh/7BMsZzldpqDJ/kN1S9SPnNQzm/n5AhN4xuWkZ6Y8XqKVlv/6A5bK7zXm
8TwG19ovfuYzkfmT4bnZyZ6BdG4V/EXt3U0dWq6zFcrXZe3en6GFE2DFqo4L
e9OOy+DoUx10ho9i/qPwAMurDpHcTzMtEb7rJNU9wr+XVcJ1w+dFzjJl/k7T
cb4PfFHma878Y+ER/RvOuhxh/qWw28kpOQ/3M/8huEGvZdT3g8yfAH8taNdm
vBnzv4XtnF9n3LNm/g4zpOLp1818zvH3cjeEF1/NbOzXjfkdYNXt3q+ndWf+
/XBjF9VcvS7MfwvuHW8Uu5Pnm/A1vPLBPQNzzn90bGeN4+10y+o768P+I+Gx
fexujLzP830h3OnbnJvqtMwXzp74dF9KEs//6/CaBcs2z2L9W/IKHpL0QMXy
Ns9/xZm4fv06dt11j+f/cHhg6Zbq3Vd4/s+Di/L+pNjSgj3wEu/l+vNp0TW4
v9vnbYa0+0t4VkjECvEFllfyEpRvdYemxp5meWUAb/7qU93/DMurObBrZfNj
LVq4Ex7ztT579g7mj4bfvi5QNHJn/hewvPamkRZ02t9/72f58mcA21uyQTZS
scMCwdYcN+a3gwcsjFHwpSU74ICtTb8frWP+CHjlHdNFR1gexuXDY4d5bcxl
f3DFH3ji542lTixPBfq2qO+nfHzeapENfEB+692H9sy/FY77s+/yGbY/gsPg
mK/e8mncnzs3B6682GeGnzXz/4LFwsmz57B8F/abhfLWI942gfO3Ha3hFyXZ
U1S5/7j/Jli1uObeOe7vmhYCpzcnHEwezvzZ8CHhnOz1w5i/CVbIdBbsH8r8
feyk4otex+4uYHvZxwo2HPLr0Sg+L4rzgvf21tibz+ehFUHwqqJvXyzt2d54
Cvfe/Wlvf2vWz7/DV5K7vt/Run9Ob3up2L3DbOsBrL8HT4Vfb1kxKr8X2xse
cL5Wh/LN3B9JLhDWdW4JbuZ+LcJHsE4Ps7WOtONXeO5slYH9uP+Lf8/ZaE/H
Dg9uy/1c0izgkKMtnhvv8H7tBpvPl0t4Gc/79TnYo+O5tsXsX5ZkwPMfd/xx
pXX/qDrYa03ctBjWd+K05uB4XbfWL+J6BRWmsGbQYNUt1rxfr4VFMY86mI/j
/fo0LI1KXduW/bHu92Gh0Tv96+yPDK6BgxMNDy6/yP6DrnNxfF7FDf7M/iA5
ETzXueSNWyD7D1bDHZJLkuv4uuMJ2K69mXHKBfYf3IPbOSwYr3yc/Qcf4dX6
aYsyTrH/qMs8qfjl4iqxNvtrdSfCTjM0CxrZnytZAX8fcaC8bwL7DwLgEIXC
TpI77C/6AMv7ax4bxP5OgWA+yv9pNxb+Yn+yaDxs7nvnthz7T92d4dNfQjKE
7F8OPgLbu5hVKTF/7h14tfWIOUuymLcS3jrE3SHxJvN2XCAVOyuLTM+xP9lx
DLwkobdZMfvP/JfAczyv6oyOZN6D8LS5AS372N8si4cnVKg8L7nMvBWwj8lF
Q1kw87ZfiOtzwFyH9SHMOxreNsxziDd/r7jFsIeqStgsT+b3gx9+tDy3eBPz
34T/zuthtHwr85fDWvUZqVrbmV95Eeqn99crZW9j3gXwyUHRd934fnK+sOIW
h2GbFzNv3D9PnxtVQzuWwlXxKroNjsyrsBj3h7IQTT2+njYMflf95VoSX5fN
hf0Tzd6vbe0f3g3rDFJtq27FvFfhi0FH9IS0TzE8Y7vLprl0XBsHqVgjukP/
6+wPrhgCZxXm121n/7FgNnz73aTYIHvm9YGPP+sszpvPvFHwaf2o5OhFPN6F
cK8f55ui+XpuC5y+dGGVYB7zD3KUigc5WR39zPWvhLNg15rBU77Sjtvhnr9H
bkyYw/zh8HYji5AvdFoenKaffPkQ+2tlv+GJBg/LDfn9dAcskYr7vNj065gD
80vg8G73zz+ifbbAeQVfVlxn/3nFc3hlu6TVNzn+QPAT/q4847Mm198S6S3F
9Xc/dGMBf1/3GXDvGPlLj9cy70a4/EPuTw869xK8fbGFmpwL82bDajXtppvz
dWEj/NB1vHAW399R10kqdokxTn3F9cr9LeEzBTeOT2H/e9p62GPN2y03OzHv
RbhjYYQkUMC8T+Ay44ofRp2Ztx4eFPXl0JQuzNvLGffjjSXLE9V4vKfAw4xK
YpfRFevgjYf7GiymBRfg8uzP3Qz4eaJMWPJes0GNdpfBfhPHRK2gg3ssk4rX
PsqsTqFzzeHpb0YMUmnH/G7w7Av1L6d1YP6zcNERo9wfbZm3Fj52fGlIMffP
StNcjvuLiqu7Fy0Tw1UDBj+/pMS8LrBjbvcSZ0XmPQX3enB48qQ2zJv27//H
tGmpk2Pez/C+uIZdP/h6hcYKqbi938Rbhvx8wSRY/+D5mT16M+8qOGyngfUx
2v04PN/cyvpCH+ZNgRUSVKNETVz/rhpW2r1j4C5arstK/N5ORb39uf620Bhe
bDSi6+3THP+wHHb1+zTs6TGOf/CHs5WzDKZw/ei0JHhtUfKsAbTsPVz17t7x
kOMc/6C2Cvf/wWvGePD/JePgoD4R/le5HrWPE/zqYZLwGR13GK5olMx3pStu
w/7l7fq/4Pragnewbtqvp3Fcj1ukuhrlxchKu2H8/u5G8LU/itrXb3H9P0c4
/Yiot4zr9eUegIfkZ3YopOXiYdWMBz+8+X7CN7C9019vNX6eo8oatP/TSys0
uD6h/yjYRPhkR2EY8y+C963I+Hmkdf2/ffCF8Vvvi/l+ujfgt+3GbzjI9fMl
ZbDTxvJDRlxv3kfJRSo2dVr4IjCF+YVwpqXumJt3mX8+POfL+bLuXJ9dsBd+
Ey+b0Z3rSYpiYaMjvaM1ljN/CVziE984zo35267F8YgVNm5ey/xD4aL7S3Pe
P2P+ufCBGXmNp2nhLviOzFwUk8X8MfAEp2o5bb7uXwSPWm0VF1TB/HKuKN8v
ugzJesX8g+ETGlf6rC1ifnu4ObKv0qli5veG94aWlmwsYf5IOGqYw0g7Oq4A
Hnxzk+A7/76iGY4YfT91Ny0Y6CYVB27QM1B5yfy2cO7d7LHyb5h/G6x6f5Le
0HLmvwJLNZyvOJUyfy6cU7i4LJ9/L/cb7i7bbfWmkvn7u0vFk13+hF2nHWfC
Jc71Xb4zr/9meGzdcvOjHK+Tdhl+mHliZcIAXv/P4A9bptcf1+T1/wNet3eO
+BDXZ5T0XYf71/wf2cO68fqfDj8sfqHow/IzbgPc4UnvoWEavP6D4T1vuqRf
Y3klyIJ3P3ygsofliagBti2+6TWG5Y27jgeuX605Vzy68/qfBvtouFtf5efn
esILmywyvtFyF+Hw0z2HTO7L8u4xvCHmUHkA14t0/AZ/WW81bin3q/DX9pSK
F/WMXZlHp02GZ5gtCn3H8WAydzjLO7NGvvX+fh7+ldY+tt0y5n8IH2u4+XS/
F/N/gZXUDd6a+DJ/9/W4n8jeRQzgeMEKM7i8h7r/DNZPBa5w1KIMl72s34nO
wNZZj+znlTD/A7hm0dPYjlyvLFgKd81Krandzudr3bzw+04deCbHm/V3Mbzv
/I+BuzkeRLgGTvwR8MaO62c5noSnHt1q07+S9fdUOLI8b7ZxDevvn+Bbp08G
Dmvd/1x9A8q70i6nb7Xu/2kCLwwyrevP/aYlK+EetY61GRzv4XMMvqoeM62Q
+23GJcNu+Vs+FbD/oaIK7n3xV8ch3N9S0HmjVNxvvrBzyHi2XybAP9fcdpoy
le2XZfDqTinjbs1l++UonLMwSLV+JdsvibDfOune0v3sL3n/7/1urAsfdYD9
JZ02ScX3JuwXnT/L/pKx8KO87SpvA9lfshT2dF+vZnOJ/SWH4Jzbg4rPX2N/
SQK8eprD4fMx7C95C2uNylpyjZZ02Iz2/L6vaZUc3+BjCOt7OohWZTC/AyzJ
P++3nP3xFfvh46O2nejZl+3XW3Cmr1+o3kC2X1/DKR6lhoZCtl/bbZGKCwP7
FzazPyx4JPxitFnKb7YfcxfC+cttr9wawfbrPnjl6hzjd7TwOlxQttw0YBDb
r6/gMJG4RnMi26+KW6Xizjdsh7wbz/brcHhBe9fD2mK2X+fBu/XeP741me3X
PXBN0AOHTH4/yTXYOXDOPgdHtl9fwgeTRkZM5vOGOPltqI/9POu5vnX8twGs
0itm5WD2pwrmwGtb5KZcj2L+nbCvRN2i50nmj4Z1hN18/W8y/wt4dVT/HlEc
X577F04/I0i6XMn8g7fjfhVxVjOUzzuFdnC1stLLFEU+v9oBz/4kl2fE5zn+
EXC/H93DZU3Mnw8XOBQNGMjnhbI/sGT8PeOHfJ6oq79DKu6yoG1iWuvzSxs4
xXVY6UV+vs9W2NfAu9c8Oi4MPuBR/nX8W+bPgZv8V0dVfOb5/wu2eup+0WQh
z/9+3mh/bt8osPLk+W8Nd5E6X77owfN/E9wnPWXllcU835/BJ1bufr/Uled7
E/zjqN/UGdwv3bGPj1Tc9obyj6mt+71bwaG9wh9s5vp5aV7wcuXbvr7c314W
BKvsmCSnwf1fdZ/C3Tw6za1X5/n+HfYf+3adsHW/29470T5NXJ62iPvhxk2F
b/Y0FI6hKzzgvpP/Guvw/QWB8B2h2edRHB8vegTH7J5gvZKf5/4VHr9vra8t
+xeDe+7C/S+x7auA1v3uLWBJl5WnDmayvHOHb9k4O9xMZHl3Dnb2XqRgl8Ty
LgPutqhkrCiF5V0dXFE0VuUlnaa1Wyo2zDqXYsn+Ppkp7Bg/Ir6K/Yu6a+GJ
d0/q72R/oeQ0fLlCs0sY+yd87sM5tdu8zxzl84oaeJHa6D2z2T9T0XUPyoNu
FsYq7I8TiOCVxad6dqZFq+Gb03eN02b57X4C7v43p6GS640G34P9/s5IDGnd
7/0j3GnOHvdo9kfKqe+Vij/fV1/ayPGDwomw7ce364ewP9JxBTyp8FyCHMcT
+gfA6wLtQjN4f0i7C/uc6HE28wHzf4C99U9FHqR1Bb74vim9H6RwfoJkPFx2
ePGse3z+4+MMP+//+UwKHXcE7lJv5DX0JfPfgcfc0408e4N5O+7D8Xv7fvgU
Ph9yHwPvMv37pDSZeZfAnYeFdLnF+1PuQbi2c9nsQ5w/IZcA+65SrzrZwLwV
cL9xkn0uMuZt7ycVRzc/MLzF+5n/aLhjoKttSuv9bTH8+1k782E8n2R+cPqw
NOfv7J/SvQkHZse1t+HzJ0k5PGZeYO1M7q/to7xfKq58oTvOk98vbgTcPdEj
sfdn5l0A6xirfrPl/VLgC3+rc5n6htePKA6WvNq2+Dj3h3YvhYe2f1TQ1ZDX
t8IBnM9Vy7bVj+X9bRisvdxAq78Nr/d58OG+vYzGW/J63w3PC2heqBDH6/0q
3PVCvUEwx9uktTmI8yX31401HJ8jGwJ3mWdz5T6tOxuOlHd37M/nlxIf+IJ0
+2sx7w8+UfCfASsPD2tdz7IQNrMbulpxCsuzFtivOdk3bCrL80GHUF+0rn+e
LGF5PgtWiJoYMMaW5fl2eHh4ZNlorn8ZHA6/frO8707eP3Lz/tlr5SYDWu4P
PMfkS/hGWjjgMI6vm/eH8LO8n0ngyU0z68q5fqH/FnjBncFzBew/SguFN/T6
WKRKy57Dvrs7TJhWw/w/4YUhTyvW8H4h0TuC37vr37H3O7A/Ygas+fv61k10
3EZY3nBC2Uf251Rcgrdkd7FZxv4FQTZsMmnudkkv9kc0wuf3hlxfr8P+CN2j
UvGzBWe/7eD8qmBLWKhpttBqPPsj1sMGu/bMO07LBcEvhkaHXRGxP+YJPKvg
cX671v63enj9rX0JVk7sj+nlLxWrGSrEJy5nf8wUWLah2Fvfk/ezdbCnhuX1
zZvZH3MBvn7P20xjL/tjMuERp7Z+Mj/N/DLYL73uePcLzN8jAI661ihrnc9m
DodfjNl7iK8L3OBk/ZG2tpy/JjoLay2/8GlONPOnw4Ou2yk3RDF/LVzy5PVi
u0jm1zyG66Ve3a8wnvlN4Qtebw6sSmB+F7hk/NvAGq6/6HgKFg0UOunw7/3T
4DftvcS77zD/Z9gtwdfJJZH5NY7j+q3p12MFrTsJnrUwYaljBvOvgk8/Ta/3
ymT+4/CYhe08nR4xfwp84b7Vy2C6ohpWd6up9X3K/F1O4PcMWbHwXS7zG8NX
1D/vbPOZ+ZfDu3SUPdt/Yn5/eNh41RMhdG4S/PbSoT0qv5j/A3w/YuPlxz+Z
X+0kyovLWvuPGXM+4zh4whzXtWYizmd0gmceu3J3Auc7ph2GOw8oqNUZzfmM
t+Glsyo7NdK67/69373E21NMOJ9R9RTaszfyO/sacT6jERw0/U3WZSHnMzrC
ndNit+vTFQfgtp75HhUjOJ8zHt668dcJfVr0Bq4fO3tu6VjO51Q5jfa1q5uO
9TjO5xwF3/sjmz9lDOdzLoIvtikX7OL3kfODn4f1KX8yifM5b8AzzfsM38m8
jmVw5qYTRzqaM7/SGVw/4/LLLGcwvxAOMW/WHkbL5sP9PnSvd7Jm/r1wvImS
0TNaEgvv7n15qFjC/CXw102nSzZxPmnF0LP4fi17Z32cz7xz4eBjlk7nFzDv
rrP/nl8kPs/j/FL3GNj29am2ebOYtwj+fvjcbqO5zCt3DvWbkGQDPVpuCHwp
avGpCbTQHnZZE7regZ/n6A0P2ea9TIWv+0ee+zcfq/fpzpwPK2uGPb5LTfcv
Zb6B51Ef3N07ItKZ+Wxhj16vrjU5Md82WH5Qmrkd58/GXYELw75cd7Ri3lz4
hpm72G8y8/6Ge0W8GTHHgnn7X8D/X+r3cZ0r886ES9aYnMx3Y97N8PeMztcn
uzPvZVhy88jixvXM+xyeI5+gHkYLf8CyH9FBfz2Zt28gyqNY3f7bNjPvdNh7
ZtfcPG8e3w3w7JRxDqbbmT8YnnWofeNEzifWzYJ9823dXm5j/gb4b0WPNEsv
5te5iPbB4e1XntBx0+DUtAf1mUeY3xO21pLfYXuK+S/CppYdLybzddFj2POr
e2rWceb/Bid/GJGiEsH82kFS8U6x5T57Oncy7KTYrUMQLbcOfq5o+yuHFp6H
NT4NvpwZx/wP4YLy3keH0/5f4LhC/wSX68zfPRjXn3rqAs1i5jeDzU7uPtux
kPld4ffv5Uo1ackZ2Efr6DEH2ucBPLZsnE9BEfNL4V9f54zp9p35u12Sim+3
+yuNpAViuPvWVKkaHZwKn+92KWaWCuejf4L1FfYnfFDlfHSNEKn4WPx9myBF
zkc3gZ3PfkjaQTuuhFf1Mul0tRvnox+DW3Q9/C9ocj56MrxBs+tkVVpWBd9u
8j7iSut2viwV6zVF75ZocT7+BLi96RPLm704H30ZnKpWUhY9kPPxj8LSyw4d
Mzk/viIRvp8ztO14WvAeLlPZnxTSnfPxO4XifHn+5eVLXc7HHwu/Tzixsqce
5+MvhRsDvUuthjP/IdhPvnCoB+f3y92G7WKihT/7Mv9beNLQMeVGfZi/Qxiu
54pZBtW0vyH8O6/2TT86zQFemTxlwil95t8P95dGW89hHt1bcJ9LqmKzQcz/
Gs4fZbxhLl/3aXdFKr7mum1VeA/mHwl/+CnMK+TvVbEQvrhBdUcHfp5gH+x4
cFTIE64HILoO6+4d/ju0N/O/gmsPyhfnM1+wYjjaH57r/Dfy++UOh2tzY88W
03Lz4dDzoT4XaeEeuNvgt9sO9Gfel/DXpt0b+3K94DT5CLR/9/e8VDeSeQ1g
3xG5g7bSunNggdq7HgdoyU742ekG4b4RzPcCnlijHNG6/kLFX/jC8wsjhtOC
wZFS8cajTq7PTJjPDp4UaZacsZj5dsDdzPQy1fh7BUfA9To2twN4fuTmw6tU
By2633p8m+FLt6W7k4Ywn36UVDwjeeSUizz/HG3gO+u+h1m1rrewFY6ZYxqc
yPMhLQz2EUfLnVvOvDnw9LOFFtHLmPcXXPrW9I8SX5f0i8b1mXr6hO5aHl9r
+NVVo5fKXK8ibhM8WmHFmClezB8CR63+pH7SnfmfwbP7et1buI75m+AL5494
LfBk/j4xKA8ut/Gx2s78VnCkdtmxj1xfOdcL3hy1W7XDNuYPhtuFxqr05d8L
n8KKUb1TZXx/x++w1hFTsxszmL/3Vak4e77//ad02lQ4eJffX69pzO8BLzJS
muFkx/yBsEKikfC0NfM/gsO0dLzWSpj/KxxQXbypPdfHiOt5TSoWz7KYdpev
V1jAj1ZsmDCRnydwhz8/mTdrrpj5z8Fb2nb2Pjmb+TNgxe1PHq6lg+tg/Vm9
92rYM79WLM4P+2q7o1OY3wy+2eQdn0IL18JHY/X/rpvM/Kfh/ocm9BnL6y2t
BtY5MFinurU86xonFW8Tma3JYXmjK4LLFtQFHuvIvKvhSUb2RjufsLw+AT94
Nmn+uGyW1/f+vT755pQRz1lef4RndP3+wfQhy2v161Kx/YExs3601k8mwlWn
1bYE8X7uvgLuv8Rutx/v58EBcM3DSYmb2vJ+dReOvTV9f2Up66NV1//Nt+hw
x/4l69/jb+D626ua+KCE9W9nWOlzkkrfYta/j8D5ebqd9VpY/75z49/4bPXv
SxV4f6qEzd8kWavw8yQdb6J+WRYZcUSeecfAHfOXJH/tyLxL4CN7zf2z/7L+
fRAudlMLymR9WZAAt1Fa12GblPXvCnixrmfxqTLWv9vfwv1RsvPO+iTWv0fD
XzqXLFO+zfr3Yji0qY/WVrZP5PbDe+c9MGiKYP37JpyeGOUpvsL85XByxc6A
DqnMrxwvFZ/NLQ7p9oD5R8Ax88zyq7k+vGwBPL29+uM3/HtdX1hNsZO5Cj9f
EgeXLu88yn8b2x+l8JipW3yfL2b7QyFBKl7bJXXTfkfmHwZb/Cw4n2rH/PPg
bwWzFo6xZ/7d8N76AfeaZjH/VTigTuXwQK6/n9vmtlQc4VnuX8P2o5wBnHTb
WN1gNvPOhk0/fq34zPdz9IEVfi9VlfL9/KPg7J1O7xysmLcQfuDycPDZGczb
AocH7+2kxPVFdAfdkYqnetzsfZnPXyWz4BntRozUbm1vb4fPrT0b6dza3g6H
3U480TXnfggVefCyF5uWTeR4PcEf+JeF3iht7kcgGpAoFe/vNSTwDfd/cJfA
p2TWiqr5fN6wBZ6rUXleifNbckPhP+Ydalw5P0YuB945yKHNM1r4Ex463En7
cTyfN+glScWfBo+tbOHzav8ZsEfhtI6L0vm8YSPsJ+gj3ZTN5w2X4OjHE2YN
4XhA3WxYOen2IC9a0gi/MJoy353fx0f3LsrTA5P3vud4wDhL+IZ/TPIOjhes
WA8H1TgE+7XOHwqC/XpLVE61zh96AsvKFAa+4PN293rYbUnl308hzN8rGfXz
Hpv7XPBn/inwq4MpDU9oOQ/YOu6413zOjxJegA/W3erel3bMhA22mu9pz/GB
/jJ43u+0R0PptB4pUvEJaf6kCO4vIjOHRyq5rNvjxfxucHDdlGFL+brkLDxo
U0rRdNonHV5jkmWRtYH5a2Hp1Tx1jy3Mr3kP7cfeU0ZcogWmcGP8fNcoWuQC
T9dqc2Q57X4K3tZ4fs83OjgNHmnp6hRH536GF/7stk2e+5fIdU3F+e7duVF/
N/NPgjddzvl9tnX84yrY7LfkQjfa/zh8Nj5xlSGdlgK/9+pTfZz/L6uGL8l3
G1azh/m7pEnFViWNrzfuY35jOMtVSX3mNuZfDvv73Ynutp35/eHnmyyL1vJ1
wQf4waewu7f4/iK1+6gfbdnv+pTjH4Od4Pwt7WXhq5nvMPz1xt9UZ+aVuwPP
j5tmkbSR+d7d/zce51zCqXnMp/pAKt4ennfpKO1vBA9fPED7+gLmc4R9Ng03
k5vJfAfgGfttfCI4PlI3HvZeaN/iydclb+BTagcL+nA8pY9KOu7HyuLSZeOY
b1T6v/7t6lVqfP5YsQhOT40rmE0L/GDFT5FffDh+UnQDPuQ/Q5DD8ZLuZbBK
QM7xMBXmV8qQig3tX0d70blC+OD5yvQDfB4qtwAOW9IofMj+M+FeeJFXyZgV
7F9zjIUr72y00Wb/mX8JbNA4PrCW/V2yoQ9xPTYPNxN9Y3/gXPhU4PJv5rXs
H9kFuyeuLftVzv6RGLiDo/s2n9fsHymCjVMK06o5n7tCLhPn03u1gx3ZXygY
AmcsseifzP5FkT3cK81s03Xa3Ru+lhK5s+kEnxdHwj0jJbf1OV8ttwDequ4y
cxz7X+Va4B4TDB0e83m+cOAjHJ+uj4fI8Xm7oy0s3d00u19r/8g2eLL8jOs6
fD3tCtyyKFaqzfkVslx4Uc2bZT6cD6P7Gz6iESApa51v0v8x7ne+9d9mcL6T
z0w4ee+G6tb9peI2wxeXvQ8Y3Drf5DJcGvhxQxr/X/AcDvjlnRnN+R6iH/Dp
HeelP0+zv6DvE5SXsoZ8LfbXBE+HZU87jOlK526Aa8cuXHmS+7fJXYL3Hl6b
FqDM/FlwL6P4A6EqzN8Axw6oVHrRnvl1nqK9d9S/zpufnzYN7pBvcu1j63wj
T3jCtAiner6uexGe41u3T9A63+gxbP3a3i+R/UE+32CzcwGvIq8zv3aWVDzQ
q+jzC7piMtw+L3bUNPaHCNbB++Ytip2ezvzn4eQ30Z5X7zL/Q/iV7IH9QTr4
Czwpav/WWvZ/5XbPxvlbPSBYxv4WOXNY0dXAt5L9G0JXON01+PUnzsfyfwDv
FblvS+J8rzQp7NsstEnlfmWybs/QHhSJXC2XM68YVtnS26LfUuZdA1ef6hNT
uoR5Tz77N74+591+Oi4VvidfY2LL9ZsqPsH5N14s2jKPeTWew3vbSYodmNfk
+b/7b3aknRPzroRDpncNiJrNvMfgdwu3XvCaz7zJsCRqrltX7icpVw037HWO
qOLnCTvn4H46NTByJPd3dJwAp3U+0EORr/svgwNdiwIL+H3TjsJb/U4etuLf
yxLhGZOzLo3g99V9Dxtd6WI+jOeXpFMu6gdRF4tDuF+lz1g49PQWtVQ6bimc
Ou64xZE1zH8Inrn8R0r8NOa/DS9z8VjtYMP8b/9r6d7jWvrjOI6ne+lG6aKk
myKX5lIpxZZ0EyaJiIZyLc0lyq3lHmKF0EW5k1uSWylLkUJNF11ESSnVVC75
pfB7Ox9/Ph/b2l77nn3POTtfA2e/bmiQp9+34vd/hfnkasPS6inU6w97RW63
ENPviUgdgKduztz6mX6fhJUBSxY4HhhE/98i7x0sr9xYlEUWKpZi/2ZurPrh
O613GQdPjXo5dTf9vlWnH/y8KVDNlH7PxmgfPNQz70o8/f+M3FvwfJPTiXfJ
gjfw/aiLay3e0XoXuTJs/6dHLch+Q+tdrGBrS6Vmu3+/d7UAVlkzx3E6rUdm
74Zd1vXs/flvvfYNWN5s3JZU+r2olCpY+8G2t7bFtN5Huhzzz+KRjR20/pk1
Dw4b8flSKK2f5kXCVyY+uz6VLLwK1wX/yRPR/58qqoBFvxSOJ5A7/8CFrTvU
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
KSESzq8yUXyyRtKU/wGv6krT
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJws3XtcS38cx/GREMrc00Vzq1yqldwibUqSaJXc0+jmlpZrRE2o3H6WpJJY
FwphFIlkisolVi5FRReFjSwhd7+38/H75/d4Ps7Z2mvn9j1nZzN4WZC7X0cW
i7W/F4v19//4T1QaruTvY/VbOGjlRTtY+hGOcsj/OmwZY4WBWMnn8x4sWrqQ
MWs6PLd///tvPRlzg+FOOcoeKrIwCX7mnBFjNI+x5DY8a2pxbwOy/AN8j7tH
9GwyY/XA7Zj+YmK5ry1jjgPsFBI/bBZZsAb+ekfksIosToAVAh2LRLKsEBb+
SOk934Zx3Tv4V3zMIqOPF/6aPSBCyTeY47J8SytjHh/+UbV4X5GasWgVfMLq
bfNjsjQO3jxib+JiJWPFDbiXW8717CbGLCX8WXXVKe4lY27fHUq+t86G9Ul1
jIVTYCOfllPmZMlyOFDWNLIXWX4QliwovH61kbE6Hw73rf7oX8+Y8xpuv6a+
v+U2Y0GvnUq+3PTS8Tu3GIsnwetneP73NpOxzA9Om+Wd53GUcd0BOCxy99qE
ROq/ClcZGn89Rua9gqcb1F7bThbp7FLyl7kPXB0fS/0T4LwJJdrT9lP/Mjjy
bZpj1l7q3w/fGfqrImEX9efCY7W7sHzCqb8eXnLoS+3aU+eZ/u6RSv6AJelO
e8jysbD94bovZscYq73hQcata3scYszZAz+1XFkf0HqO6c+BsyYNdl+rZCx+
Ae/XS349tYWxrGuUkr9gTeC1OY2M66zg4yEft5UfyGL6veDtDxZYLYpgzIuC
U4tOVR0QMBZdgHeP0Op6axpjaTU8aIbgirkjY4VmtJJflCXuajKZMYsLV5z3
9La0YsxdCA8vGDnL2ZixcCds39rtx7lbZ5j+c7DewQ1rZhUxllfBO70d7m7O
Y6zuuFvJ56zOfDIjhzHHDJ6W8aVn7QnGgnlws0YPSRVZvB32Cd8sU5BlZ+DA
ppjuPuS6J/DL+LOJm8hs1h4lv7G7cJGBz2mmfyTsFufYtN+fsWgOvMQo3kX4
5RTTHwZfDzaKCyUrMuGzw1qc/cIYsx7BOwyDTkq2MOb+gkVxP/yCNzEWmuxV
8pPWLfVZt5qxxA1OezpG59oIxvJQ+I+TVXENh7H6BPwy+GDMiieZTL8C7hLk
srV/LmPBd3jDXrbhS7J42D4l/3329K8B5xnLZsPulpadR2cyrguBc88sbWk9
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
l7H/bj+3XoeSpe1wfInjAi+yYnAvFf/Skdlr+/7rd4EvcNbNOthG/RvhcSUm
r4Po9Qql8Kb6smIh9Ujuwqvrn9qWvaX+T7D59tNrfOn9UA/qreJvFj+245M5
M+CEVlF8SCv1r4MtXe/tv1lC/cnwr82VK4xKqb8E/s5zvtBaQP2tsLvjzsn/
zDbog/2lsOLN7q3U7wi3t/BWHyWLRPBQ9xWf3q+m/iPw5E0hm3UCqf8WPDek
zVK9jPo/wDYP+v4MpfWTO7Avnq+g25kva6nfHubo1E4I/EDffwiEx83Y7b+E
LI+Hn1rua9hGVt+E2/IjvcPV9P2Hd3D6+G5FE17R9x/691Pxuy0999xWSfs/
Hjzcfu6SpNf0/YeV8NIP4u93yHWH4G1exXPmvaHvP9yAIx5MzEuix/PewnXO
92YXvGUs6tMf7/fvYXPcyFJbeK9L66FxZEUAvD9l4HlvejzrIKzcM3mAoBf1
58Mio/7FV9nU3wwXNA6d/L03LX/2ABW/WSFZZK1Ny98GTup6svtOHVr+vvCM
GHlMIJlzAN68a5/L2iG0/PPgpp1+LYKBtPwb4e0vXHZ8Icu0dVV8s5nJ1d/I
dePhlG8Nrtoh1L8MTvjmHnolmPr3wfWrCiuurKX+y/CowpcRpkLqr4PvDfd4
uJ2s6DZQxR9m2hYwewH1j4UTT1YENdkw5nrDl9077G0fT/u/3TDnP6080wm0
/LNhdZlowCJrWv618MH7yTNnktVd9FR8madRexN9n4VjBSs3Zf2xJgsWwzPc
hyjT6fnFkbBU9tJp2GHa/8vgSpZ1fei//f9z2MyW/fs1j/b/mvoq/swru1gj
HOj4ZwE7u33U+KVLx78F8LNbvUftLaf9/w74/A2TjXMf0f7/LPyBP+H2/lu0
/6+C5VWLv5jI6fsvHQ1wPF6+Os0+l77/MhqeZdzNOJWmS+bCfwqMI86R5WL4
fsfMIbvI6tOwzdP76u036fsvT+D4x2nn227Q/e9//j5+Z3rHxgt0//sIQ4zH
JoY6zsun+9894FztodG+mXT/+zZYnNZ5n/kJuv89E57k1fDQ6ywd/yrgyBmy
p0/O0/HvJ2xfax6vpOlS40E4/pRN9dpA0xUC2HfMo6muZ6g/FN5oPmj4ITL3
BOwnXHtqJ1n4ED5h2P+/oeeo/xtcU9fH7Dw9v3yokYrfZ6te9SmyehZ8+2KQ
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
26VwjBb4wE65bQ2+fmb+KHi44Z6Vq/l93Qvhdf2U7ozh9wlugYVHrcJeS7n+
48AylE/Hd53Z3cT8s+C8Nh065bM+IdwOj1rQGBJOO4bDjz5/3uv6g/nz4PTp
N+8P5/dN+w1/q5tteIWfL+tfXiNWuPDA7mc180vgfkGRRnaVzL8FVlEdt2zi
W+YPhUfen5Zwkcc37jl8U76f90O64gf8reF33zbvmV/vNerHWkHdP/H3FM14
/W8+ZI78tmLm3whvi8o0jObvH3wJ3h3e72MYnZsFD7+x665tOvM3wtPX6SXP
uMr8um9qxNM6vfrbM5X5LeE/TSHPJa31v/XwiUXCzWd9mf8iPNJBM/AXLXsM
3/YdoX9tGPPXw8NyroxPoCW9KmrEUunX3PpRzD8F9jlRkzrJivnXwSumx7j6
WDP/edhhy96Er3xdkAknTbeKMZnB/DLYd8XDmbPNmb/HW9Tvd8xPS+b6nMHm
sPL13+4mxszvChe0iRg0eArzn337rz93eK+DYuZPhyPr13VSHMP8tXBlbtr+
T7S/5jvU9xd3H2zJv08Tw/MXFl74MYn518CJ3wYvrlFk/lOwb4mLyzEV5k+D
b3ZeNHeWBvN/hmP/6HvM68H8GpUoDx/FTl+iz/wm8JhtVQfa0IJV8MId35ps
uzP/cdjq+auhmzoxfwqsntKz4aIy81fDu44Kc1/+YP2/83uUZwc6vmpf/7/l
jOETGccjp8nY/lkOv9s7zzD+K9s//vDbe3arJ9Sw/ZMEu7oHno35wvbPe3hz
efDCev69rNOHGnFKcdKM8G9s/4yDM/Xbz7Xk50mc4CnV7sdHNbD9cxhONSlW
OVjH9s9tOPD1vioRXfEWthg4aK4O31+gWoX6zvL68cV8f5ER3HB4X2jr57k7
wnlF76ZFSdn+OQC3q3LdGk3n3oIfxItnen9m/jewX+niMt0q5leprhE/DHG7
tOIF84+Cf9lFvvhA+y+Ck63Cb7q+Z/59cFX88cNGH5j/+r//H7ttdm4585fB
o0UeRebvmF/pY434q1x33/p85hfCc6RVs80LmH8+LPP2+e6cx/x7Pv6rHyvF
u9KCWDj7rJW6Av9eVALfbZsZ9jqZ+dt+Qn2jXnnXV7Yng4fCxcaDbsV2ZP45
sNWXhtK26sy/CzabtU95Ji2MgQ8NG2V2sYrt/yI4uOxlg/8btv/lPteIrSfU
j9B5z/b/YDigLEGzbwHb/3awSKs44Hs+2//e8MgPfmecs9n+j/zn3qMuvX7K
9n8BHLZL4r05ie3/ZljzY11Rz3ts/+vXoL3ZKbbvmwi2/23hjQoZC1/Qom3w
g7VD7CJo9yuwQHP8VrPLbP/nwuv+Svo70rm/4KXdu544Rsv1l+J6fLl0YHUI
n3/MhK/aFo98Ecz8m+HP6Yr6sUHMfxkOjjRPGEKnPYPdAlzND19k/ibYaIHL
pWVnmb9vLb5/WVVVDz6PkUyHD3o37Gy8xPwb4NsPLz0cSscFw1p19wZYrWH+
p3Ds5ciNQ/h8RdAAmxW/zXq1ivl16mrE9tuWl9jweYv7NHj4GZFv+Qrm94T1
9va7I1zG/IHw+xdfFQfRco/h3XoNjZudmP8bPNp02oI985lf+wvu96NVlm2m
/SfDfc1v20roNHf42iOF4vZ8PiU7B+uufFU4xYr5H8LvR929lGDB/F/gmvCo
hTp8nuTTXYbzcfm2QTZi5jeDR1SezFTj6xVr4ULHDx4aQuY/A/d457pPhxY9
gEuaNq8JGMD8Uvigv1qPKb2Zv9vXGvGV2Xt+n+HztVwRPH+M867l3Zh/Ddyr
6zFdDQ3mPwlbvmzb1Zx2TIXfOkiLwpWZ/xP8qa9z6Ew+z0tT/4b2wpXOtYEt
fP43Ef7Qa+1+y0Y+/1sJnzi978SsCj7/PAY3FEx+8L2Uzz+TYduowgyth3z+
WQUXeCRvvv6Uzz8F9SgfrZa42dKCCXBVYYn+mBA+/1wGR+mFTT15mM8/j8Jd
dL9/ecH1moMT4cNPPz3/XcPnn5Vw5bXvz5fIM3+n76ivqx0eMZL5hGP/Oa9f
Z7PW/EvhmgMn79rxeaT/IVig/TDa3JL5E+BV6VoKj2bw+FfAZx7nvBXydd0O
DTXiBc6pO9ZM4PE3hL/17H/LxZnH3wG+da/d3YU8/+L2w0tcLqbUePD434Sf
dGqb0LiJx//1P1vFT77K803UrhF5tTRsjHk9uI+ELc/vKEvg+R28EB5nbO9X
xueZub7wijOxf2dtZ/7r8L5CVQ3FPsz/Cu7XpWfyql18/qvYVCM2jY/MMaD9
h8Njar3WRbny+e882GST/V1LNx7/3fCIBbFP14/l8b8Gj344du1oEY//S1g0
qlYjbBKPv/wP1N+C+qV3pOMM4E1a3d/vMODxnw2//9XR58FgHv+dsNjh5aMn
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
fD3tCtyyKFaqzfkVslx4Uc2bZT6cD6P7Gz6iESApa51v0v8x7ne+9d9mcL6T
z0w4ee+G6tb9peI2wxeXvQ8Y3Drf5DJcGvhxQxr/X/AcDvjlnRnN+R6iH/Dp
HeelP0+zv6DvE5SXsoZ8LfbXBE+HZU87jOlK526Aa8cuXHmS+7fJXYL3Hl6b
FqDM/FlwL6P4A6EqzN8Axw6oVHrRnvl1nqK9d9S/zpufnzYN7pBvcu1j63wj
T3jCtAiner6uexGe41u3T9A63+gxbP3a3i+R/UE+32CzcwGvIq8zv3aWVDzQ
q+jzC7piMtw+L3bUNPaHCNbB++Ytip2ezvzn4eQ30Z5X7zL/Q/iV7IH9QTr4
Czwpav/WWvZ/5XbPxvlbPSBYxv4WOXNY0dXAt5L9G0JXON01+PUnzsfyfwDv
FblvS+J8rzQp7NsstEnlfmWybs/QHhSJXC2XM68YVtnS26LfUuZdA1ef6hNT
uoR5Tz77N74+591+Oi4VvidfY2LL9ZsqPsH5N14s2jKPeTWew3vbSYodmNfk
+b/7b3aknRPzroRDpncNiJrNvMfgdwu3XvCaz7zJsCRqrltX7icpVw037HWO
qOLnCTvn4H46NTByJPd3dJwAp3U+0EORr/svgwNdiwIL+H3TjsJb/U4etuLf
yxLhGZOzLo3g99V9Dxtd6WI+jOeXpFMu6gdRF4tDuF+lz1g49PQWtVQ6bimc
Ou64xZE1zH8Inrn8R0r8NOa/DS9z8VjtYMP8b/9r6d7jWvrjOI6ne+lG6aKk
myKX5lIpxZZ0EyaJiIZyLc0lyq3lHmKF0EW5k1uSWylLkUJNF11ESSnVVC75
pfB7Ox9/Ph/b2l77nn3POTtfA2e/bmiQp9+34vd/hfnkasPS6inU6w97RW63
ENPviUgdgKduztz6mX6fhJUBSxY4HhhE/98i7x0sr9xYlEUWKpZi/2ZurPrh
O613GQdPjXo5dTf9vlWnH/y8KVDNlH7PxmgfPNQz70o8/f+M3FvwfJPTiXfJ
gjfw/aiLay3e0XoXuTJs/6dHLch+Q+tdrGBrS6Vmu3+/d7UAVlkzx3E6rUdm
74Zd1vXs/flvvfYNWN5s3JZU+r2olCpY+8G2t7bFtN5Huhzzz+KRjR20/pk1
Dw4b8flSKK2f5kXCVyY+uz6VLLwK1wX/yRPR/58qqoBFvxSOJ5A7/8CFrTvU
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
KSESzq8yUXyyRtKU/wGv6krT
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.95064*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1250, 1250/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.95064*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1250, 1250/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJws3XtcS38cx/GREMrc00Vzq1yqldwibUqSaJXc0+jmlpZrRE2o3H6WpJJY
FwphFIlkisolVi5FRReFjSwhd7+38/H75/d4Ps7Z2mvn9j1nZzN4WZC7X0cW
i7W/F4v19//4T1QaruTvY/VbOGjlRTtY+hGOcsj/OmwZY4WBWMnn8x4sWrqQ
MWs6PLd///tvPRlzg+FOOcoeKrIwCX7mnBFjNI+x5DY8a2pxbwOy/AN8j7tH
9GwyY/XA7Zj+YmK5ry1jjgPsFBI/bBZZsAb+ekfksIosToAVAh2LRLKsEBb+
SOk934Zx3Tv4V3zMIqOPF/6aPSBCyTeY47J8SytjHh/+UbV4X5GasWgVfMLq
bfNjsjQO3jxib+JiJWPFDbiXW8717CbGLCX8WXXVKe4lY27fHUq+t86G9Ul1
jIVTYCOfllPmZMlyOFDWNLIXWX4QliwovH61kbE6Hw73rf7oX8+Y8xpuv6a+
v+U2Y0GvnUq+3PTS8Tu3GIsnwetneP73NpOxzA9Om+Wd53GUcd0BOCxy99qE
ROq/ClcZGn89Rua9gqcb1F7bThbp7FLyl7kPXB0fS/0T4LwJJdrT9lP/Mjjy
bZpj1l7q3w/fGfqrImEX9efCY7W7sHzCqb8eXnLoS+3aU+eZ/u6RSv6AJelO
e8jysbD94bovZscYq73hQcata3scYszZAz+1XFkf0HqO6c+BsyYNdl+rZCx+
Ae/XS349tYWxrGuUkr9gTeC1OY2M66zg4yEft5UfyGL6veDtDxZYLYpgzIuC
U4tOVR0QMBZdgHeP0Op6axpjaTU8aIbgirkjY4VmtJJflCXuajKZMYsLV5z3
9La0YsxdCA8vGDnL2ZixcCds39rtx7lbZ5j+c7DewQ1rZhUxllfBO70d7m7O
Y6zuuFvJ56zOfDIjhzHHDJ6W8aVn7QnGgnlws0YPSRVZvB32Cd8sU5BlZ+DA
ppjuPuS6J/DL+LOJm8hs1h4lv7G7cJGBz2mmfyTsFufYtN+fsWgOvMQo3kX4
5RTTHwZfDzaKCyUrMuGzw1qc/cIYsx7BOwyDTkq2MOb+gkVxP/yCNzEWmuxV
8pPWLfVZt5qxxA1OezpG59oIxvJQ+I+TVXENh7H6BPwy+GDMiieZTL8C7hLk
srV/LmPBd3jDXrbhS7J42D4l/3329K8B5xnLZsPulpadR2cyrguBc88sbWk9
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
l7H/bj+3XoeSpe1wfInjAi+yYnAvFf/Skdlr+/7rd4EvcNbNOthG/RvhcSUm
r4Po9Qql8Kb6smIh9Ujuwqvrn9qWvaX+T7D59tNrfOn9UA/qreJvFj+245M5
M+CEVlF8SCv1r4MtXe/tv1lC/cnwr82VK4xKqb8E/s5zvtBaQP2tsLvjzsn/
zDbog/2lsOLN7q3U7wi3t/BWHyWLRPBQ9xWf3q+m/iPw5E0hm3UCqf8WPDek
zVK9jPo/wDYP+v4MpfWTO7Avnq+g25kva6nfHubo1E4I/EDffwiEx83Y7b+E
LI+Hn1rua9hGVt+E2/IjvcPV9P2Hd3D6+G5FE17R9x/691Pxuy0999xWSfs/
Hjzcfu6SpNf0/YeV8NIP4u93yHWH4G1exXPmvaHvP9yAIx5MzEuix/PewnXO
92YXvGUs6tMf7/fvYXPcyFJbeK9L66FxZEUAvD9l4HlvejzrIKzcM3mAoBf1
58Mio/7FV9nU3wwXNA6d/L03LX/2ABW/WSFZZK1Ny98GTup6svtOHVr+vvCM
GHlMIJlzAN68a5/L2iG0/PPgpp1+LYKBtPwb4e0vXHZ8Icu0dVV8s5nJ1d/I
dePhlG8Nrtoh1L8MTvjmHnolmPr3wfWrCiuurKX+y/CowpcRpkLqr4PvDfd4
uJ2s6DZQxR9m2hYwewH1j4UTT1YENdkw5nrDl9077G0fT/u/3TDnP6080wm0
/LNhdZlowCJrWv618MH7yTNnktVd9FR8madRexN9n4VjBSs3Zf2xJgsWwzPc
hyjT6fnFkbBU9tJp2GHa/8vgSpZ1fei//f9z2MyW/fs1j/b/mvoq/swru1gj
HOj4ZwE7u33U+KVLx78F8LNbvUftLaf9/w74/A2TjXMf0f7/LPyBP+H2/lu0
/6+C5VWLv5jI6fsvHQ1wPF6+Os0+l77/MhqeZdzNOJWmS+bCfwqMI86R5WL4
fsfMIbvI6tOwzdP76u036fsvT+D4x2nn227Q/e9//j5+Z3rHxgt0//sIQ4zH
JoY6zsun+9894FztodG+mXT/+zZYnNZ5n/kJuv89E57k1fDQ6ywd/yrgyBmy
p0/O0/HvJ2xfax6vpOlS40E4/pRN9dpA0xUC2HfMo6muZ6g/FN5oPmj4ITL3
BOwnXHtqJ1n4ED5h2P+/oeeo/xtcU9fH7Dw9v3yokYrfZ6te9SmyehZ8+2KQ
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
26VwjBb4wE65bQ2+fmb+KHi44Z6Vq/l93Qvhdf2U7ozh9wlugYVHrcJeS7n+
48AylE/Hd53Z3cT8s+C8Nh065bM+IdwOj1rQGBJOO4bDjz5/3uv6g/nz4PTp
N+8P5/dN+w1/q5tteIWfL+tfXiNWuPDA7mc180vgfkGRRnaVzL8FVlEdt2zi
W+YPhUfen5Zwkcc37jl8U76f90O64gf8reF33zbvmV/vNerHWkHdP/H3FM14
/W8+ZI78tmLm3whvi8o0jObvH3wJ3h3e72MYnZsFD7+x665tOvM3wtPX6SXP
uMr8um9qxNM6vfrbM5X5LeE/TSHPJa31v/XwiUXCzWd9mf8iPNJBM/AXLXsM
3/YdoX9tGPPXw8NyroxPoCW9KmrEUunX3PpRzD8F9jlRkzrJivnXwSumx7j6
WDP/edhhy96Er3xdkAknTbeKMZnB/DLYd8XDmbPNmb/HW9Tvd8xPS+b6nMHm
sPL13+4mxszvChe0iRg0eArzn337rz93eK+DYuZPhyPr13VSHMP8tXBlbtr+
T7S/5jvU9xd3H2zJv08Tw/MXFl74MYn518CJ3wYvrlFk/lOwb4mLyzEV5k+D
b3ZeNHeWBvN/hmP/6HvM68H8GpUoDx/FTl+iz/wm8JhtVQfa0IJV8MId35ps
uzP/cdjq+auhmzoxfwqsntKz4aIy81fDu44Kc1/+YP2/83uUZwc6vmpf/7/l
jOETGccjp8nY/lkOv9s7zzD+K9s//vDbe3arJ9Sw/ZMEu7oHno35wvbPe3hz
efDCev69rNOHGnFKcdKM8G9s/4yDM/Xbz7Xk50mc4CnV7sdHNbD9cxhONSlW
OVjH9s9tOPD1vioRXfEWthg4aK4O31+gWoX6zvL68cV8f5ER3HB4X2jr57k7
wnlF76ZFSdn+OQC3q3LdGk3n3oIfxItnen9m/jewX+niMt0q5leprhE/DHG7
tOIF84+Cf9lFvvhA+y+Ck63Cb7q+Z/59cFX88cNGH5j/+r//H7ttdm4585fB
o0UeRebvmF/pY434q1x33/p85hfCc6RVs80LmH8+LPP2+e6cx/x7Pv6rHyvF
u9KCWDj7rJW6Av9eVALfbZsZ9jqZ+dt+Qn2jXnnXV7Yng4fCxcaDbsV2ZP45
sNWXhtK26sy/CzabtU95Ji2MgQ8NG2V2sYrt/yI4uOxlg/8btv/lPteIrSfU
j9B5z/b/YDigLEGzbwHb/3awSKs44Hs+2//e8MgPfmecs9n+j/zn3qMuvX7K
9n8BHLZL4r05ie3/ZljzY11Rz3ts/+vXoL3ZKbbvmwi2/23hjQoZC1/Qom3w
g7VD7CJo9yuwQHP8VrPLbP/nwuv+Svo70rm/4KXdu544Rsv1l+J6fLl0YHUI
n3/MhK/aFo98Ecz8m+HP6Yr6sUHMfxkOjjRPGEKnPYPdAlzND19k/ibYaIHL
pWVnmb9vLb5/WVVVDz6PkUyHD3o37Gy8xPwb4NsPLz0cSscFw1p19wZYrWH+
p3Ds5ciNQ/h8RdAAmxW/zXq1ivl16mrE9tuWl9jweYv7NHj4GZFv+Qrm94T1
9va7I1zG/IHw+xdfFQfRco/h3XoNjZudmP8bPNp02oI985lf+wvu96NVlm2m
/SfDfc1v20roNHf42iOF4vZ8PiU7B+uufFU4xYr5H8LvR929lGDB/F/gmvCo
hTp8nuTTXYbzcfm2QTZi5jeDR1SezFTj6xVr4ULHDx4aQuY/A/d457pPhxY9
gEuaNq8JGMD8Uvigv1qPKb2Zv9vXGvGV2Xt+n+HztVwRPH+M867l3Zh/Ddyr
6zFdDQ3mPwlbvmzb1Zx2TIXfOkiLwpWZ/xP8qa9z6Ew+z0tT/4b2wpXOtYEt
fP43Ef7Qa+1+y0Y+/1sJnzi978SsCj7/PAY3FEx+8L2Uzz+TYduowgyth3z+
WQUXeCRvvv6Uzz8F9SgfrZa42dKCCXBVYYn+mBA+/1wGR+mFTT15mM8/j8Jd
dL9/ecH1moMT4cNPPz3/XcPnn5Vw5bXvz5fIM3+n76ivqx0eMZL5hGP/Oa9f
Z7PW/EvhmgMn79rxeaT/IVig/TDa3JL5E+BV6VoKj2bw+FfAZx7nvBXydd0O
DTXiBc6pO9ZM4PE3hL/17H/LxZnH3wG+da/d3YU8/+L2w0tcLqbUePD434Sf
dGqb0LiJx//1P1vFT77K803UrhF5tTRsjHk9uI+ELc/vKEvg+R28EB5nbO9X
xueZub7wijOxf2dtZ/7r8L5CVQ3FPsz/Cu7XpWfyql18/qvYVCM2jY/MMaD9
h8Njar3WRbny+e882GST/V1LNx7/3fCIBbFP14/l8b8Gj344du1oEY//S1g0
qlYjbBKPv/wP1N+C+qV3pOMM4E1a3d/vMODxnw2//9XR58FgHv+dsNjh5aMn
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
fD3tCtyyKFaqzfkVslx4Uc2bZT6cD6P7Gz6iESApa51v0v8x7ne+9d9mcL6T
z0w4ee+G6tb9peI2wxeXvQ8Y3Drf5DJcGvhxQxr/X/AcDvjlnRnN+R6iH/Dp
HeelP0+zv6DvE5SXsoZ8LfbXBE+HZU87jOlK526Aa8cuXHmS+7fJXYL3Hl6b
FqDM/FlwL6P4A6EqzN8Axw6oVHrRnvl1nqK9d9S/zpufnzYN7pBvcu1j63wj
T3jCtAiner6uexGe41u3T9A63+gxbP3a3i+R/UE+32CzcwGvIq8zv3aWVDzQ
q+jzC7piMtw+L3bUNPaHCNbB++Ytip2ezvzn4eQ30Z5X7zL/Q/iV7IH9QTr4
Czwpav/WWvZ/5XbPxvlbPSBYxv4WOXNY0dXAt5L9G0JXON01+PUnzsfyfwDv
FblvS+J8rzQp7NsstEnlfmWybs/QHhSJXC2XM68YVtnS26LfUuZdA1ef6hNT
uoR5Tz77N74+591+Oi4VvidfY2LL9ZsqPsH5N14s2jKPeTWew3vbSYodmNfk
+b/7b3aknRPzroRDpncNiJrNvMfgdwu3XvCaz7zJsCRqrltX7icpVw037HWO
qOLnCTvn4H46NTByJPd3dJwAp3U+0EORr/svgwNdiwIL+H3TjsJb/U4etuLf
yxLhGZOzLo3g99V9Dxtd6WI+jOeXpFMu6gdRF4tDuF+lz1g49PQWtVQ6bimc
Ou64xZE1zH8Inrn8R0r8NOa/DS9z8VjtYMP8b/9r6d7jWvrjOI6ne+lG6aKk
myKX5lIpxZZ0EyaJiIZyLc0lyq3lHmKF0EW5k1uSWylLkUJNF11ESSnVVC75
pfB7Ox9/Ph/b2l77nn3POTtfA2e/bmiQp9+34vd/hfnkasPS6inU6w97RW63
ENPviUgdgKduztz6mX6fhJUBSxY4HhhE/98i7x0sr9xYlEUWKpZi/2ZurPrh
O613GQdPjXo5dTf9vlWnH/y8KVDNlH7PxmgfPNQz70o8/f+M3FvwfJPTiXfJ
gjfw/aiLay3e0XoXuTJs/6dHLch+Q+tdrGBrS6Vmu3+/d7UAVlkzx3E6rUdm
74Zd1vXs/flvvfYNWN5s3JZU+r2olCpY+8G2t7bFtN5Huhzzz+KRjR20/pk1
Dw4b8flSKK2f5kXCVyY+uz6VLLwK1wX/yRPR/58qqoBFvxSOJ5A7/8CFrTvU
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
KSESzq8yUXyyRtKU/wGv6krT
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.95064*^9}, {0, 0.0798545257471515}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1250, 1250/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1250,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.95064*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.946475997612073*^9, 3.946476086530279*^9, {3.946476238852529*^9, 
   3.946476306722191*^9}, {3.946476343492733*^9, 3.9464763667708683`*^9}, {
   3.946476406001381*^9, 3.946476411869681*^9}, {3.9464764542961187`*^9, 
   3.946476484246538*^9}, 3.946476680918836*^9, 3.9464767353784237`*^9, 
   3.94647680861239*^9, {3.94647685029906*^9, 3.946476895682314*^9}, {
   3.946477076619547*^9, 3.946477083417083*^9}, 3.946477223468956*^9, 
   3.946589523436081*^9, 3.946589575112039*^9, 3.947021289636773*^9, 
   3.9473523150439568`*^9, 3.947354488043985*^9, 3.9479743946811533`*^9, 
   3.949507256165853*^9, 3.949945934818692*^9, 3.949946394732625*^9, 
   3.949947578492588*^9, 3.949947637219885*^9, 3.9499478113599586`*^9, 
   3.949947965195012*^9, 3.949948159594984*^9, 3.9499482232652597`*^9, 
   3.950135406962948*^9, 3.9501365264355907`*^9, 3.950136774841124*^9, 
   3.950137059742573*^9, 3.950370449805184*^9, 3.95047257797324*^9, 
   3.950473028363709*^9, 3.950474172276885*^9, 3.950474804738011*^9, 
   3.9504753142477827`*^9, 3.9504759442306004`*^9, 3.9504764026760063`*^9, 
   3.9504769322570763`*^9, 3.950479415423036*^9, 3.950479652950594*^9, 
   3.950480418223055*^9, 3.950480527818598*^9, 3.950480736874053*^9, 
   3.950481619465273*^9, 3.950481709564993*^9, 3.950482073228466*^9, 
   3.9505491934976873`*^9, 3.950552610950611*^9, 3.950646284733946*^9, 
   3.9507343991319637`*^9, 3.9507349940459414`*^9},
 CellLabel->
  "Out[2115]=",ExpressionUUID->"d6f9d433-b5e0-4238-9f84-1a0338392d2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2883, 78, 233, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->True],
Cell[4052, 119, 1191, 20, 56, "Output",ExpressionUUID->"5aee62b5-ed37-4466-8040-0939b310cd3e"]
}, Open  ]],
Cell[5258, 142, 5081, 114, 519, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->True],
Cell[10342, 258, 2436, 60, 274, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->True],
Cell[CellGroupData[{
Cell[12803, 322, 39991, 810, 5912, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->True],
Cell[52797, 1134, 15098, 296, 5960, "Output",ExpressionUUID->"7a86eb3e-b24c-4013-a670-2dfb07e84daa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67932, 1435, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[68278, 1445, 3789, 83, 507, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->True],
Cell[72070, 1530, 206456, 3532, 837, "Output",ExpressionUUID->"d6f9d433-b5e0-4238-9f84-1a0338392d2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

