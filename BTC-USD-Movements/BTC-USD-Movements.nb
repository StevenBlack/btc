(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    289108,       5287]
NotebookOptionsPosition[    287533,       5248]
NotebookOutlinePosition[    287930,       5264]
CellTagsIndexPosition[    287887,       5261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.952950242158903*^9, 3.9530648211300364`*^9, 
  3.953064958622326*^9, 3.953064994240164*^9, 3.953065349950439*^9, 
  3.953065465573783*^9, 3.953126301207666*^9, 3.953126763140174*^9, 
  3.95312695500004*^9, 3.953127117979952*^9, 3.9531271852779837`*^9, 
  3.953127515891465*^9, 3.953127565970191*^9, 3.953127614148252*^9, 
  3.953127664280751*^9, 3.953136707707389*^9, 3.9531368280231953`*^9, 
  3.953136973229302*^9, 3.953137162354211*^9, 3.953137357043047*^9, 
  3.953137409894322*^9, 3.953137478783972*^9, 3.953137580524066*^9, 
  3.953285299268303*^9, 3.9532853579233027`*^9, 3.953285456811905*^9, 
  3.9534102329466753`*^9, 3.9542733120956717`*^9, 3.95444635802569*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"572e140f-fa7e-48a8-b8af-1d44dbf1043c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Scaled", "[", "0.005", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4882, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4882}, {
      4882 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2803.5584039726446`, 2809.2903375663946`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4882}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             Scaled[0.005]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4882}, {
         4882 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2871.372579387684, 2877.104512981434}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953127185868351*^9, 3.953127399371324*^9, 
  3.953127516744842*^9, 3.953127566636895*^9, 3.953127614757175*^9, 
  3.9531276649479303`*^9, 3.953136708325881*^9, 3.953136828734364*^9, 
  3.9531369738923807`*^9, 3.953137163086714*^9, 3.953137361194911*^9, 
  3.9531374105258427`*^9, 3.9531374818910313`*^9, 3.953137581144923*^9, 
  3.9532852998972692`*^9, 3.953285358708744*^9, 3.953285457535769*^9, 
  3.9534102338402042`*^9, 3.954273313316141*^9, 3.954446359469681*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"df0fdd78-33de-4248-8500-cdf02ceed964"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
bTBn8UJzOzJrSBzON7eXG3uSuY7wlcfenTvR/F24CV7ftltSR8slUnjg7iH6
kn/z/3twwFK3k2vp9ao/wxsmj7i3m8wxisf4NaMpczxZMAtul9twr9D5ingD
vNL6+PC7dL4nS47/e/19b8Uy+v39umL4aINwwrnf1P8Jnqg5PN5mIF3/MEhQ
8T9Onuj03oiuf9jDj3Ii821M6PqHCA4dqHtu4Ti6/nEU/n5yqeMmS7r+cQdu
edwtYwf99wC4H2H7n171m2fQ9Y8BiSr+/aFP+tTQf39AMh2WzVL0j/aj6x/+
cKlxcad/VifAD+44Nyt20PWPQrjWbteewHC6/vEeVlgea3PdR9c/+h1R8T/v
lXC/RNH1Dx68M9HSOCSTrv+shs1aZl6tS6HrP3HwMIvE50Vk3g0413izqMsF
6n8Hu83p+aPsMvX3Port107QaWE59dvAB2a94A+l/z4DayXc5z/VucmadP/H
IfjPtPX5IXR/kTAfFrkpOBss6f6PJvia92uB2ozu/2AnYXspLpr9wZ4+/7eG
OcOfrB9O92dxVsCKo4HnRq6iz/+j4Y76A97dXEmf/1+FHSL8583yo8//XyX9
vZ/utUZvR/r8X+eYim/XZ1uyypM+/58I37Xr21fHhz7/Xw6n/mRXu62jz/+j
4Fa+vWdxAH3+fwU+vcUrZT1ZUQe/yy6o+R1I9790T8b25Renm7ue+sfDCzdZ
v5lF97MJveCVdY0qCZ/698Gi7a6J2nQ/gTwHvq2nVZFP96upa+Eb4UmDZ5E5
XY+r+HdSWAdWUp/AAk66PeBxSQj1L4E5549++/zv/rcIuGFYmOXPg9Qvg/NV
wr3//nsE7Gr4sO/mRen/7n/rdAKPP1Pk8NqA+s3gPdoBopt0f5l0EXzpu2j9
ue+0/nfCVlofe72i/14I6xws0fiROqKNtv8qeP6awUnb6b8fIuwgxXg/xXVG
11ba/sfA2XcnT76npu1/AVyb0czRaKbtXwzHtxzc9eInbf9ZcI69o2Y2/X3B
U3hby7FW04+0/f+B724Y637kM23/I1OwP8WtFfyix9e5wuN6zz8e1JH6Q+E0
712HXei/Z8LLhOOXaK0ofUTbfzl82PSAzbga2v5/wkkxa2U3yArjVMxHY3sn
Kf9n6b7jofwDOIBLIpWcKCpJqTRU16ClukOL1BGhFKWdkNJSkSJt2kukZBYN
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
mP8p/LYhbeReVeb/C3/bXxTlMIn5Bz3G/UtxWrM2z69sDjwlbKm1Hq27Ha76
e6jAnNeDJAoe2OuOWTOP+xbBTaJZ3T61nv/fcMUhr6Z+C5h/wBPULwr76avS
Aiu47Xy3n7VOzO8Nnx9QrXrGkfkj4BEV2zvV0WH58POSdUMmLmb+H/+OHyhf
MYWW65dfKx75Xb7wIi2cBde1XzLp8Enm3wTr7wnP1aSDwuHAaZGuKceYPw/O
Do1Zc/E08zfBKXkJ+6pDmb9PQa1Yo/DYdMVw5reAPaaZ1D6/yPxecMioA03y
rft/h8I3DMeU+15j/gdw+xn1/cddZf5vsP5LufKlPC7SKawVu8S89KzmcY/p
8IKGI3K/7jC/J6w0xdDaoor5z8LlPXbpOb5m/nvwPduWudofmP8L7P9n5NYz
H5m/ZxHK84GxXTrUMP8U+NKb2KZF75nfHX7iHWQwlH8vOwWf3bw7espb5s+G
1XK/jBG8Y/56eNXeNR968fP4ahXXioe5XN9Rkcr8JvCaTsErUmKZ3xUOUks+
fziO+U/A8c1fzt+KYv478OHInbtW8/v1qIWTjJ6Y1vH7DOtagvN9fJNPYgLz
T4Z3jAxQHcTXl1sFt/gW7esUxvxH4ZBO3dP1+ft0vg13Pfjp675TzP8Bfmg7
cFW7vczf5Wmt+Pvn5OhzB5nfGO7b43as7j7mXw43T1E4lhrI/MFw083SWTpb
mD8V7pHq2JhCJ7yDd6ifNb6yi/lVS1EfdBJ3nMj/F4yHl996o6nN46IlcKhM
61E3lkceB+ELs2Je317J/LdgDaVfqidtmP916b/n77dyL0xmfpUytM/iDVoU
xzP/GHi0TM/5CssD50Wwc4nE+0hH5t8HV5QkKi1rz/yJsN+94kfKX3n/ewnv
SY7ZO4jW7fAM7ZfKjR9dv/H+Nxq2Gnaj/UvadyHs5rdieRLvbwmBcNH8zmlX
q3n/u/bs33winb5F5bz/VcGeeX3Ppzzj/U+pvFY8+Y9Rx5zfXP9wBLxo9Onn
k39y/cP5cN6wqPPT5ZnfH1611rLQhp9PLgF+8GiV+iX+vbAC3qy4/t6Eet7/
FSpQvhf7NvWs4/1/GPzX7nCYmM60h89t033RmZ9f5gc/yb7f9kgp81+GbS+u
eOPxlPnLYLkjZRlp95m/zXP8PmaYZp39zPxDYLkhi+3Oy5jfFr5Q76dwmBb4
wi4FbQ2+fGL+GHi44a4Vq/h5PUrgtf0Ub43h5wn7AwsPWUS8kHL9x4GVKJ+O
+J3c2cz8c+DCNh07F7E+IdwGj57fFB5JO0fC9z598nf7zvyFcNbM63eG8/Nm
/oIb6ucaXuL7y/pX1Yrlz961+fGe+SVwv9BoI5s3zL8Fbt9p3NKJr5j/Ijzy
zoykczy/CU/ga/L9fHLo6u+wrPFX3zZvmV/vBerHWqHdP/L7FFm++DcfMl9+
axnzb4S3xuQaxvL7DzsP+0X2+xBBFzyChdf8Uq2zmL8JnrlWL83yMvPrvkR9
pvPzvz0zmN8c/t0c/kTSWv9bDx9dINx8KoD5z8EjnTRDftKy+/CtgBH6V4Yx
fwM8PP/S+CRa0qsa15P0S0HDKOafBu84Wpsx2YL518LLZ8a5+c5i/jOw8xb/
pC88LsiFU2ZaxE2yZH4Z7L88Z/ZcM+bv8Qr1++3zMtO4PmeYGax09ZfHJGPm
d4OftokaNHga85969a8/d3ivfWLmz4KjG9Z2bjeG+evgNwWZez7SQZqvcf9d
2H2wOf8+Uww7OJac/T6Z+VfDyV8HL6xtx/zH4YByV9fDysyfCV9XW2A/R4P5
P8FXfut7OvRgfo03teLu9+JnLtJn/knwmK01e9vQgpWw4/avzdbdmf8IbPHk
+dBNnZk/He6S3rPxnBLzv4d3HhIWPPvO+r/a21rx4r0qzzs0/G85Y/ho9pHo
GTK2f5bBr/0dDBO/sP0T9M+3bVZNqGX7JwV29wg5FfeZ7Z+38OaqMMcG/r2s
8zu0l8pSLCO/sv0zDs7V72BvzveTuMBT33scGdXI9s8B+PakMuV99Wz/3IRD
XuyuEdHVr+ApAwfZ9+brCzrV1IrDlzWML+Pri4zgxgO7L7a+n4czXFj6ekaM
lO2fvXD7GjfvWLrgBnwnUTzb5xPzv4QDKxZW6tYwv/L7WnFOuPv55U+ZfxT8
wyb66Ts6aAGcZhF53e0t8++GaxKPHDB6x/xX4dyxW+cWVDF/JTxK5Flq9pr5
FT/Uir/IdQ9oKGJ+IWwvrZlrVsz882CZj++3JYXMvwsu7a6Y6EYL4uG8Uxbq
Cvx7UTmc2jY34kUa87f9WCsWNCj5fWF7MmwoXGY86Ea8CvPbwRafGyvaqjO/
H2wyZ7fSbFoYB+8fNsr0XA3b/6VwWOWzxqCXbP/LfaoVz5rQMKL3W7b/B8NB
lUmafYvZ/reBRVplwd+K2P73gUe+Czy5JI/t/+h/1hl1/sVDtv+L4Qg/ic/m
FLb/W2DND/WlPW+z/a9fWyt+0Tm+78sotv+t4Y0K2Y5PadFW+M6aITZRtMcl
WKA53tv0Atv/BfDav5L+znTBT3hx965HD9Ny/aX4PT5bPPB9OJ9/zIYvW5eN
fBrG/JvhT1nt9ONDmf8CHBZtljSEznwMuwe7mR04x/zN8Jj5rueXnmL+vnWo
/1fW1PTg8xjJTHifT+OOpvPMvwG+mXM+ZyidEAZr1t8eYLGa+R/C8ReiNw7h
8xVBI2xa9urR85XM37se99ety8qt+LzFYwY8/KQooGo586+D9fz73RIuZf4Q
+N3TL+0G0XL3YT+9xqbNLsz/FR5tMmP+rnnMr/0Z9/vRyks300FT4T5mN60l
dKYHHH9PoawDn0/JTsO6K56XTLNg/hz43ajU80lTmP8zXBsZ49ibz5N8u8tw
PS7bOshKzPymsPDNsVxVHq9eA5c4v/PUEDL/SbjHa7fdvWnRXfhZ8+bVwQOY
XwrvD1LtMU2H+bt9Qft/7q5fJ/l8rUAEzxuzxG9ZN+ZfDffqelhXQ4P5j8Hm
z9p2NaOdM+BXTtLSSCXm/wh/7Lvk4mw+z8tU/1or3nVJrS7kD5//TYTf9Vqz
x7yJz/9WfP23fu/uo3Oq+fzzMNxUPPXutwo+/0yDrWNKsrVy+PyzBi72TNt8
9SGffwoaasWZFovcrWnBBLimpFx/TDiffy6Fo/Uiph87wOefh+Auut8+P+V6
zWHJ8MGHH5/8quXzzzfw6yvfniySZ/7O33A+VQ+MGMl8wrH/XNhPzbQ1/2L4
095jqTZ8Hhm0HxZo58SamTN/ErwyS0vhniXPfzV86n7+KyGP63ZsrBXPX5Kx
ffUEnn9D+GvP/jdcl/D8O8HXb7dPdeT1l7AHdnY9l17ryfN/HX7YuW1S0yae
/xfwI4vEqZd5vYnaNyGvloaVMX8PHiNh8zPbK5N4fYc5wuOMbQMr+TyzIABe
cTL+75xtzH8V3l3SSaNdH+Z/Dut16Zm20o/Pf9s114rFidH5BnTQcHhsndfa
GDc+/3WAJ22yTTV35/nfCQvnxz9cP5bn/wo8OmfsmtEinv9nsGhUnUbEZJ5/
+e//ngf3y1KhEwzgjVrd32434PmfC7/9qeJ7dzDP/w5Y7PTs3oPRPP+x8NVq
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
X1zvxPdz9oGHbPVZqszjQdGwsFDnhBrnw8paYM9vUpM9i5lv4BmpuHmnTlT0
Euazhj17Pb/S7MJ8W+E2gzLNbDh/NuESXBLx+aqzBfMWwNdMPcSBU5n3F9wr
6uUIuynM2/8s6n/n+31Y68a8s+GK1ZOOFbkz72a4MVvt6lQP5r0Az75+cGHT
euZ9AtvJJ6lH0MLv8OfvsaF/1zFv3xDki9ftv3Uz886Et8/uWlDow/O7AZ6b
Ps7JZBvzh8E2+zs0TeR8Yt1HcECRtfuzrczfCP+p7pFp7sX8vc+hfXBg26UH
dMIMOCPzbkPuQeZfB8/Skt9ufZz5z8Fic5VzaTwuug97fvHIeHSE+b/Cae9G
pCtHMb92qFS8Q2y+25YumAq7tOvWMZSWWws/aWf9M58WnoE1Pg6+kJvA/Dlw
UZXOoeF00Gc4viQoyfUq83cPw/1IPWO+Zhnzm8Kmx3aeUilhfjf47Vu5Ck1a
chL21Tp02In2vRv2b7z0ON/iUuaXwr++2I3p9o35u52Xim+2/yuNpgViuLt3
hlSVDsuAz3Q7HzdHmfPRP8IDFPYkvevE+ega4f/mM96xCm3H+eiT4KWn3qVs
p51XwCt7Tep8uRvnox+GW3Q9g85qcj56GrxBs+vUTrSsBr7Z7HPQjdZVu4D2
RXPsTokW5+NPgDuZPDC/3ovz0ZfCGarllbEDOR//EFx7wUkll/Pjq5PhO/lD
246nBW/hSuU9KeHdOR+/80Wp+O+Tz8+e6XI+/lj4TdLRFT31OB9/MdwY4lNh
MZz598OB8iVDPTm/X+4mbBMXK/zRl/lfwZOHjqky6sP8HSPwe66eY/CeDjKE
fxXWvexHZzrBK9KmTTiuz/x74P7S2Fl2zKN7A+5zvpPYdBDzv4ALRxlvsOdx
3/aXpOIrbltXRvZg/pHwux/CwhJ+X9WO8LkNnbZ35PsJdsOL9o0Kf8D1AERX
4T7+w39d1GH+57B0n3xZEfOFtYtE+2Pd2qCN/HwFw+G6gvhTZbTcPPjimYu+
52jhLrjb4Fdb9/Zn3mewrHnnxr5cLzhTPgrt3z09z9ePZF4DOGBEwSBvWtcO
VlN93WMvLdkBPz7RKNw9gvmewhNrlaJa11+o/guffXJ2xHBaMDhaKt54yMXt
8STms4EnR5umZS9kvu2wpqleriq/r7Ao+Gtvq5vBvD4KiuAVnQYtuNN6flvg
8zelO1OGMJ9+jFRsmTZy2jlef85W8K213yIsWtdb8Ibj7EzCknk9ZEbE/Csf
YuVOL2PefNjiVMmU2KXM+xMuf2XyW5HHJf1ipeKfGSeO6q7h+Z0FP79s9EyJ
61UkbIJHKywfM82L+cPhmFUf1Y95MP9j2Lav123HtczfDJ8+c9Br/jrm7xOH
9s6FNr4W25jfAo7Wrjz8gesrF3jBm2N2duq4lfnD4PYX45X78u+FD+F2MToZ
Mr6+8zdY66CJ6TVL5te5LBU/mhd05yGdOR0O9Qv86zWD+T3hBUaKli42zB8C
KyQbCU/MYv57cIRWb681Eub/Age/L9vUgetjJPS8gvJ5zpQZqTxePQW+t3zD
hIl8P4EH/OmBwxx7MfOfhre0VfM5Npf5s+F22x7krKHD6mH9OTr+GrbMrxWP
9pXte5tD05jfFL7e7JOYTgvXwIfi9f+uncr8J+D++yf0GcvfW2Yt3Hvv4N7v
W8uzrglS8TaR6ep8lje6Irhyfn3IYRXmXQVPNrI12vGA5fVROOvx5Hnj8lhe
3/53fOr1aSOesLz+AFt2/fbOJIfltfpVlD97x8z53lo/mQjXnFDdEsr7ucdy
uP8im52BvJ+HBcO1OZOTN7Xl/SoVTrgxc8+bCtZHa67+m2/R8ZbtM9a/x1+T
ivP8OyXfLWf9ewms+ClFuW8Z698H4aJCXTW9P6x/37r2b3y2+rfFCrw/vYHN
XqbMUub7SVSuoz5dGR11UJ55x8AqRYvSvqgw7yL4gL9ZUN5f1r/3wWXuqqG5
rC8LkuA2ims7bpWy/l0NL9RdV3a8kvXvDjekYhPJjlvrU1j/Hg1/VitfqnST
9e+F8IXmPlrebJ/I7YH9He4aNEex/n0dzkqOWSe+xPxVcHr1juCOGcyvlCgV
nyooC+92l/lHwLEOpkXvuT68bD48s4P6/Zf8e90AuHO7zmbKfH9JAvx8mdqo
oK1sf1TAY6dvCXiykO0PhSSpeE2XjE17nJl/GDzlR/GZDBvmd4C/Fs9xHGPL
/Dth/4YBt5vnMP9lOKhe+cBArr9f0OamVBy1riqolu1HOQM49aaxusFc5p0L
m3z4Uv2Jr+fsCyv8WtxJytcLioHzdri8drJg3hL4jmvO4FOWzPsHvhTm31mR
64voDrolFc/wvK5zgc9fJXNgy/YjRmq3tre3wafXnIpe0trejoTdjz7QNeN+
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
czL7F+yVvOWAnBb1GkmJORndi8rtBlPvPFiYkxYuHkLPvxtW7urZVzaZnu8c
aTHnScj8d1Pp/p1B8M1xYxw2N9H8LIDVWwyNVf+9HxXBR0N1a71oPgv7DtuM
FqdUydB46crg+feP8DVQpOfvCK/TOvfFuZPm562wn/Sz+MI3ND8nw1WSY1NW
ldH8XABveypj7PGR3p++wK3zom5OKqL3J21ZMScpRFOxJJ/enxzgDsWgrA25
9P7Eg6Wf5oRVcWl+ToAVZomG9tjR/JwPb4udFPKrP5Hp/wxXTpG5tq2Pcaem
nJjj43HH7dgXxnozYd3vjQ6tBxlz/eCBa+OaHhxgHHYSPjcgaMelHsapufDe
bykH779hXNcGX5Kbql+VzVhFfaCYoyLIehHzmDGbDReEl8b53GDM2whrp9YW
qaYxFhyHcyxDYhQzGIty4PbTqgknrjOW+ATrmvF8tc4zZqnKiznZnt6y9nzG
3rZwj755wLctjPnrYNVqYy9PHvXHwluv9CvaBlB/FlyW6Z/qTPfXa4JlL7u9
+bKB+lUUxJyF6SqvpchhU2HF+FN3fNyo3wf+6Jzo8NKB+mPgrsJ4sxJr6n8A
T9+xwfMZmf3x7+/b4HzAfjT1Kw0Sc6a6b15XPJL6LeHN5q8WfVKn/pUwz3D0
i3Ma1H8EznV0+FJO92fdhfNujG4bSrd718EGTQnv9RWoX0FRzLnzdeuZRrLQ
DJYe/e5GensC0+8FO37zTl9dwlgvCg5dcW2w2wvG3DvwuzNazWMeMw57B283
7tEwJKfKKYk5H3zZ02ruMq6bBGf5h8prpzJW8YQntM6NNzjNmL3/r5Mv1wQe
Z8xLhYN3L6w9OJmxoBpOnWp4eQFZJD1YzOkXFs39MImxxER4nAmvzWAiY5YH
vODVaulYFmPvvbDNq2RxhSlj/g34jXHmiIpxjIUV8OPWt2OLyJ0DlMWceSFW
BeUa1D8evrhQW9lblfrd4FEeOV3h5LAwOCVx/OslI6j/GiyUCkn+okj9ZbCH
zqwGqV+nmP4/cHmjsklVM2P2GBUx5/DB4AZ2A2PeInj5vKIAtw+MBbthW/+E
oLZKxqLLcOqoxJ1TqhhLlMCOi/qGsKoZs/rgn9+Gx0m2MfY2HiLm8M3fNXPt
qJ8Lh3relmq0p/4d8DC7GgelRub+nRfgMU/Tj9XQ4+u9gi0GpH3oq2PM7YGf
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
p9t53XDX+pGnP9DtAn2WmBPnkmu+n8ZXNAceWCJrFjqX+rfB3A1iqYh51C+A
h8R2v623pf4ieO1AReEQmu/43+Gq8y9f+oVTv+4kHL8Yzf1s+O94zhFOy1h1
OZz2Z72tcEjzYuv7ZG4yvCv/5esEclgBfNVzse4Lmh9Sv8ArB1oN3fGO+rUn
4/1un0N+UAv1O8Ades6qB79SPw8e7xdelkvmJcBH3KXcZciCfHhRZ0xFHx2/
ij7Dy7fXSY+n41cJrSlizsiDd89a0XzGmgkr/dcmSrtG/X5T/m4fLJUuer78
k/DzHQVn83cw71/CXLj5vPTiR06MO9vgAEmli8er45l+dTMcDySXntpfyJjL
hjOsc3WWRjEO2wj7zSjufLiPcepx+O3BuXYV8YzrcuAPgzdbZz9jrPIJ3mnx
PVBPzJitao7zA4+k7P8aGfNs4TDd+YqJzYwF6+Ah7fEbG2Yzz08UC28anGrI
cWQs8RA+HqKUOWwOY1YTbOMaLLKh2/lTLXA8VmlkcWEC9frAXyQyBQnkzhj4
+faS33a29H7+ALb+05XT5M2Y+xEO8S5pXEAOU7LE8axu3ORP6xinWsLnwprM
28h1K+HfOu6ujWsZqxyBu5slqj7xGLPvwh7SgUWxwYx5dXDlDgvL5wmMBQpW
Ys6s6F8GBWSRGSxckaDkHUa9K+DWzF6ZpHDqjYKXxUYruO1j7H0HzmqcKu0v
oP538OlVqm2SZKGctZijo9Dvf+M29U+Cb76sVHUopH5PWGHktuFqNdS/H86L
t6q3Lqf+VPj21R27JJ9QfzVc8XCKQWE69UtPxeNzJ+iL7lP/RNjbJDVQgW5n
e8Bj4o6Yv8qj/r2wqEB7dU4O9d+Ahy1kecnT7aIKOHNb4K6vHtQ7fhrmn12L
4zrJ3m7wroXr8j6FUG8YPFXS//6Cf73XYI7Fzycxh6i3DN7OmrDB/hL1/oGn
Kabn/qDXgzvGBuf7lot6dW5R7yI4ycGu4VsK9e6GHec9DmIlUu9luMWp2Wf0
aeotgZdberJuh1JvH2z31KLizBHqNbbF+e783SM+HaBeLnzUaFRryUbq3QFL
volbNmcVjfdFuPSCGqeLti/WK3jBrZiQrVnU3wPXfhbo7n9A/YbTxZwnah6f
bMjCufA+4+nf7Gg8OrfDYpvKJ7vpdr1zMG+sXfiNt9T/Ap64+GtcNY1/WBd8
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
k2b8Dz/0SaA=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
bTBn8UJzOzJrSBzON7eXG3uSuY7wlcfenTvR/F24CV7ftltSR8slUnjg7iH6
kn/z/3twwFK3k2vp9ao/wxsmj7i3m8wxisf4NaMpczxZMAtul9twr9D5ingD
vNL6+PC7dL4nS47/e/19b8Uy+v39umL4aINwwrnf1P8Jnqg5PN5mIF3/MEhQ
8T9Onuj03oiuf9jDj3Ii821M6PqHCA4dqHtu4Ti6/nEU/n5yqeMmS7r+cQdu
edwtYwf99wC4H2H7n171m2fQ9Y8BiSr+/aFP+tTQf39AMh2WzVL0j/aj6x/+
cKlxcad/VifAD+44Nyt20PWPQrjWbteewHC6/vEeVlgea3PdR9c/+h1R8T/v
lXC/RNH1Dx68M9HSOCSTrv+shs1aZl6tS6HrP3HwMIvE50Vk3g0413izqMsF
6n8Hu83p+aPsMvX3Port107QaWE59dvAB2a94A+l/z4DayXc5z/VucmadP/H
IfjPtPX5IXR/kTAfFrkpOBss6f6PJvia92uB2ozu/2AnYXspLpr9wZ4+/7eG
OcOfrB9O92dxVsCKo4HnRq6iz/+j4Y76A97dXEmf/1+FHSL8583yo8//XyX9
vZ/utUZvR/r8X+eYim/XZ1uyypM+/58I37Xr21fHhz7/Xw6n/mRXu62jz/+j
4Fa+vWdxAH3+fwU+vcUrZT1ZUQe/yy6o+R1I9790T8b25Renm7ue+sfDCzdZ
v5lF97MJveCVdY0qCZ/698Gi7a6J2nQ/gTwHvq2nVZFP96upa+Eb4UmDZ5E5
XY+r+HdSWAdWUp/AAk66PeBxSQj1L4E5549++/zv/rcIuGFYmOXPg9Qvg/NV
wr3//nsE7Gr4sO/mRen/7n/rdAKPP1Pk8NqA+s3gPdoBopt0f5l0EXzpu2j9
ue+0/nfCVlofe72i/14I6xws0fiROqKNtv8qeP6awUnb6b8fIuwgxXg/xXVG
11ba/sfA2XcnT76npu1/AVyb0czRaKbtXwzHtxzc9eInbf9ZcI69o2Y2/X3B
U3hby7FW04+0/f+B724Y637kM23/I1OwP8WtFfyix9e5wuN6zz8e1JH6Q+E0
712HXei/Z8LLhOOXaK0ofUTbfzl82PSAzbga2v5/wkkxa2U3yArjVMxHY3sn
Kf9n6b7jofwDOIBLIpWcKCpJqTRU16ClukOL1BGhFKWdkNJSkSJt2kukZBYN
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
mP8p/LYhbeReVeb/C3/bXxTlMIn5Bz3G/UtxWrM2z69sDjwlbKm1Hq27Ha76
e6jAnNeDJAoe2OuOWTOP+xbBTaJZ3T61nv/fcMUhr6Z+C5h/wBPULwr76avS
Aiu47Xy3n7VOzO8Nnx9QrXrGkfkj4BEV2zvV0WH58POSdUMmLmb+H/+OHyhf
MYWW65dfKx75Xb7wIi2cBde1XzLp8Enm3wTr7wnP1aSDwuHAaZGuKceYPw/O
Do1Zc/E08zfBKXkJ+6pDmb9PQa1Yo/DYdMVw5reAPaaZ1D6/yPxecMioA03y
rft/h8I3DMeU+15j/gdw+xn1/cddZf5vsP5LufKlPC7SKawVu8S89KzmcY/p
8IKGI3K/7jC/J6w0xdDaoor5z8LlPXbpOb5m/nvwPduWudofmP8L7P9n5NYz
H5m/ZxHK84GxXTrUMP8U+NKb2KZF75nfHX7iHWQwlH8vOwWf3bw7espb5s+G
1XK/jBG8Y/56eNXeNR968fP4ahXXioe5XN9Rkcr8JvCaTsErUmKZ3xUOUks+
fziO+U/A8c1fzt+KYv478OHInbtW8/v1qIWTjJ6Y1vH7DOtagvN9fJNPYgLz
T4Z3jAxQHcTXl1sFt/gW7esUxvxH4ZBO3dP1+ft0vg13Pfjp675TzP8Bfmg7
cFW7vczf5Wmt+Pvn5OhzB5nfGO7b43as7j7mXw43T1E4lhrI/MFw083SWTpb
mD8V7pHq2JhCJ7yDd6ifNb6yi/lVS1EfdBJ3nMj/F4yHl996o6nN46IlcKhM
61E3lkceB+ELs2Je317J/LdgDaVfqidtmP916b/n77dyL0xmfpUytM/iDVoU
xzP/GHi0TM/5CssD50Wwc4nE+0hH5t8HV5QkKi1rz/yJsN+94kfKX3n/ewnv
SY7ZO4jW7fAM7ZfKjR9dv/H+Nxq2Gnaj/UvadyHs5rdieRLvbwmBcNH8zmlX
q3n/u/bs33winb5F5bz/VcGeeX3Ppzzj/U+pvFY8+Y9Rx5zfXP9wBLxo9Onn
k39y/cP5cN6wqPPT5ZnfH1611rLQhp9PLgF+8GiV+iX+vbAC3qy4/t6Eet7/
FSpQvhf7NvWs4/1/GPzX7nCYmM60h89t033RmZ9f5gc/yb7f9kgp81+GbS+u
eOPxlPnLYLkjZRlp95m/zXP8PmaYZp39zPxDYLkhi+3Oy5jfFr5Q76dwmBb4
wi4FbQ2+fGL+GHi44a4Vq/h5PUrgtf0Ub43h5wn7AwsPWUS8kHL9x4GVKJ+O
+J3c2cz8c+DCNh07F7E+IdwGj57fFB5JO0fC9z598nf7zvyFcNbM63eG8/Nm
/oIb6ucaXuL7y/pX1Yrlz961+fGe+SVwv9BoI5s3zL8Fbt9p3NKJr5j/Ijzy
zoykczy/CU/ga/L9fHLo6u+wrPFX3zZvmV/vBerHWqHdP/L7FFm++DcfMl9+
axnzb4S3xuQaxvL7DzsP+0X2+xBBFzyChdf8Uq2zmL8JnrlWL83yMvPrvkR9
pvPzvz0zmN8c/t0c/kTSWv9bDx9dINx8KoD5z8EjnTRDftKy+/CtgBH6V4Yx
fwM8PP/S+CRa0qsa15P0S0HDKOafBu84Wpsx2YL518LLZ8a5+c5i/jOw8xb/
pC88LsiFU2ZaxE2yZH4Z7L88Z/ZcM+bv8Qr1++3zMtO4PmeYGax09ZfHJGPm
d4OftokaNHga85969a8/d3ivfWLmz4KjG9Z2bjeG+evgNwWZez7SQZqvcf9d
2H2wOf8+Uww7OJac/T6Z+VfDyV8HL6xtx/zH4YByV9fDysyfCV9XW2A/R4P5
P8FXfut7OvRgfo03teLu9+JnLtJn/knwmK01e9vQgpWw4/avzdbdmf8IbPHk
+dBNnZk/He6S3rPxnBLzv4d3HhIWPPvO+r/a21rx4r0qzzs0/G85Y/ho9pHo
GTK2f5bBr/0dDBO/sP0T9M+3bVZNqGX7JwV29wg5FfeZ7Z+38OaqMMcG/r2s
8zu0l8pSLCO/sv0zDs7V72BvzveTuMBT33scGdXI9s8B+PakMuV99Wz/3IRD
XuyuEdHVr+ApAwfZ9+brCzrV1IrDlzWML+Pri4zgxgO7L7a+n4czXFj6ekaM
lO2fvXD7GjfvWLrgBnwnUTzb5xPzv4QDKxZW6tYwv/L7WnFOuPv55U+ZfxT8
wyb66Ts6aAGcZhF53e0t8++GaxKPHDB6x/xX4dyxW+cWVDF/JTxK5Flq9pr5
FT/Uir/IdQ9oKGJ+IWwvrZlrVsz882CZj++3JYXMvwsu7a6Y6EYL4uG8Uxbq
Cvx7UTmc2jY34kUa87f9WCsWNCj5fWF7MmwoXGY86Ea8CvPbwRafGyvaqjO/
H2wyZ7fSbFoYB+8fNsr0XA3b/6VwWOWzxqCXbP/LfaoVz5rQMKL3W7b/B8NB
lUmafYvZ/reBRVplwd+K2P73gUe+Czy5JI/t/+h/1hl1/sVDtv+L4Qg/ic/m
FLb/W2DND/WlPW+z/a9fWyt+0Tm+78sotv+t4Y0K2Y5PadFW+M6aITZRtMcl
WKA53tv0Atv/BfDav5L+znTBT3hx965HD9Ny/aX4PT5bPPB9OJ9/zIYvW5eN
fBrG/JvhT1nt9ONDmf8CHBZtljSEznwMuwe7mR04x/zN8Jj5rueXnmL+vnWo
/1fW1PTg8xjJTHifT+OOpvPMvwG+mXM+ZyidEAZr1t8eYLGa+R/C8ReiNw7h
8xVBI2xa9urR85XM37se99ety8qt+LzFYwY8/KQooGo586+D9fz73RIuZf4Q
+N3TL+0G0XL3YT+9xqbNLsz/FR5tMmP+rnnMr/0Z9/vRyks300FT4T5mN60l
dKYHHH9PoawDn0/JTsO6K56XTLNg/hz43ajU80lTmP8zXBsZ49ibz5N8u8tw
PS7bOshKzPymsPDNsVxVHq9eA5c4v/PUEDL/SbjHa7fdvWnRXfhZ8+bVwQOY
XwrvD1LtMU2H+bt9Qft/7q5fJ/l8rUAEzxuzxG9ZN+ZfDffqelhXQ4P5j8Hm
z9p2NaOdM+BXTtLSSCXm/wh/7Lvk4mw+z8tU/1or3nVJrS7kD5//TYTf9Vqz
x7yJz/9WfP23fu/uo3Oq+fzzMNxUPPXutwo+/0yDrWNKsrVy+PyzBi72TNt8
9SGffwoaasWZFovcrWnBBLimpFx/TDiffy6Fo/Uiph87wOefh+Auut8+P+V6
zWHJ8MGHH5/8quXzzzfw6yvfniySZ/7O33A+VQ+MGMl8wrH/XNhPzbQ1/2L4
095jqTZ8Hhm0HxZo58SamTN/ErwyS0vhniXPfzV86n7+KyGP63ZsrBXPX5Kx
ffUEnn9D+GvP/jdcl/D8O8HXb7dPdeT1l7AHdnY9l17ryfN/HX7YuW1S0yae
/xfwI4vEqZd5vYnaNyGvloaVMX8PHiNh8zPbK5N4fYc5wuOMbQMr+TyzIABe
cTL+75xtzH8V3l3SSaNdH+Z/Dut16Zm20o/Pf9s114rFidH5BnTQcHhsndfa
GDc+/3WAJ22yTTV35/nfCQvnxz9cP5bn/wo8OmfsmtEinv9nsGhUnUbEZJ5/
+e//ngf3y1KhEwzgjVrd32434PmfC7/9qeJ7dzDP/w5Y7PTs3oPRPP+x8NVq
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
X1zvxPdz9oGHbPVZqszjQdGwsFDnhBrnw8paYM9vUpM9i5lv4BmpuHmnTlT0
Euazhj17Pb/S7MJ8W+E2gzLNbDh/NuESXBLx+aqzBfMWwNdMPcSBU5n3F9wr
6uUIuynM2/8s6n/n+31Y68a8s+GK1ZOOFbkz72a4MVvt6lQP5r0Az75+cGHT
euZ9AtvJJ6lH0MLv8OfvsaF/1zFv3xDki9ftv3Uz886Et8/uWlDow/O7AZ6b
Ps7JZBvzh8E2+zs0TeR8Yt1HcECRtfuzrczfCP+p7pFp7sX8vc+hfXBg26UH
dMIMOCPzbkPuQeZfB8/Skt9ufZz5z8Fic5VzaTwuug97fvHIeHSE+b/Cae9G
pCtHMb92qFS8Q2y+25YumAq7tOvWMZSWWws/aWf9M58WnoE1Pg6+kJvA/Dlw
UZXOoeF00Gc4viQoyfUq83cPw/1IPWO+Zhnzm8Kmx3aeUilhfjf47Vu5Ck1a
chL21Tp02In2vRv2b7z0ON/iUuaXwr++2I3p9o35u52Xim+2/yuNpgViuLt3
hlSVDsuAz3Q7HzdHmfPRP8IDFPYkvevE+ega4f/mM96xCm3H+eiT4KWn3qVs
p51XwCt7Tep8uRvnox+GW3Q9g85qcj56GrxBs+vUTrSsBr7Z7HPQjdZVu4D2
RXPsTokW5+NPgDuZPDC/3ovz0ZfCGarllbEDOR//EFx7wUkll/Pjq5PhO/lD
246nBW/hSuU9KeHdOR+/80Wp+O+Tz8+e6XI+/lj4TdLRFT31OB9/MdwY4lNh
MZz598OB8iVDPTm/X+4mbBMXK/zRl/lfwZOHjqky6sP8HSPwe66eY/CeDjKE
fxXWvexHZzrBK9KmTTiuz/x74P7S2Fl2zKN7A+5zvpPYdBDzv4ALRxlvsOdx
3/aXpOIrbltXRvZg/pHwux/CwhJ+X9WO8LkNnbZ35PsJdsOL9o0Kf8D1AERX
4T7+w39d1GH+57B0n3xZEfOFtYtE+2Pd2qCN/HwFw+G6gvhTZbTcPPjimYu+
52jhLrjb4Fdb9/Zn3mewrHnnxr5cLzhTPgrt3z09z9ePZF4DOGBEwSBvWtcO
VlN93WMvLdkBPz7RKNw9gvmewhNrlaJa11+o/guffXJ2xHBaMDhaKt54yMXt
8STms4EnR5umZS9kvu2wpqleriq/r7Ao+Gtvq5vBvD4KiuAVnQYtuNN6flvg
8zelO1OGMJ9+jFRsmTZy2jlef85W8K213yIsWtdb8Ibj7EzCknk9ZEbE/Csf
YuVOL2PefNjiVMmU2KXM+xMuf2XyW5HHJf1ipeKfGSeO6q7h+Z0FP79s9EyJ
61UkbIJHKywfM82L+cPhmFUf1Y95MP9j2Lav123HtczfDJ8+c9Br/jrm7xOH
9s6FNr4W25jfAo7Wrjz8gesrF3jBm2N2duq4lfnD4PYX45X78u+FD+F2MToZ
Mr6+8zdY66CJ6TVL5te5LBU/mhd05yGdOR0O9Qv86zWD+T3hBUaKli42zB8C
KyQbCU/MYv57cIRWb681Eub/Age/L9vUgetjJPS8gvJ5zpQZqTxePQW+t3zD
hIl8P4EH/OmBwxx7MfOfhre0VfM5Npf5s+F22x7krKHD6mH9OTr+GrbMrxWP
9pXte5tD05jfFL7e7JOYTgvXwIfi9f+uncr8J+D++yf0GcvfW2Yt3Hvv4N7v
W8uzrglS8TaR6ep8lje6Irhyfn3IYRXmXQVPNrI12vGA5fVROOvx5Hnj8lhe
3/53fOr1aSOesLz+AFt2/fbOJIfltfpVlD97x8z53lo/mQjXnFDdEsr7ucdy
uP8im52BvJ+HBcO1OZOTN7Xl/SoVTrgxc8+bCtZHa67+m2/R8ZbtM9a/x1+T
ivP8OyXfLWf9ewms+ClFuW8Z698H4aJCXTW9P6x/37r2b3y2+rfFCrw/vYHN
XqbMUub7SVSuoz5dGR11UJ55x8AqRYvSvqgw7yL4gL9ZUN5f1r/3wWXuqqG5
rC8LkuA2ims7bpWy/l0NL9RdV3a8kvXvDjekYhPJjlvrU1j/Hg1/VitfqnST
9e+F8IXmPlrebJ/I7YH9He4aNEex/n0dzkqOWSe+xPxVcHr1juCOGcyvlCgV
nyooC+92l/lHwLEOpkXvuT68bD48s4P6/Zf8e90AuHO7zmbKfH9JAvx8mdqo
oK1sf1TAY6dvCXiykO0PhSSpeE2XjE17nJl/GDzlR/GZDBvmd4C/Fs9xHGPL
/Dth/4YBt5vnMP9lOKhe+cBArr9f0OamVBy1riqolu1HOQM49aaxusFc5p0L
m3z4Uv2Jr+fsCyv8WtxJytcLioHzdri8drJg3hL4jmvO4FOWzPsHvhTm31mR
64voDrolFc/wvK5zgc9fJXNgy/YjRmq3tre3wafXnIpe0trejoTdjz7QNeN+
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
czL7F+yVvOWAnBb1GkmJORndi8rtBlPvPFiYkxYuHkLPvxtW7urZVzaZnu8c
aTHnScj8d1Pp/p1B8M1xYxw2N9H8LIDVWwyNVf+9HxXBR0N1a71oPgv7DtuM
FqdUydB46crg+feP8DVQpOfvCK/TOvfFuZPm562wn/Sz+MI3ND8nw1WSY1NW
ldH8XABveypj7PGR3p++wK3zom5OKqL3J21ZMScpRFOxJJ/enxzgDsWgrA25
9P7Eg6Wf5oRVcWl+ToAVZomG9tjR/JwPb4udFPKrP5Hp/wxXTpG5tq2Pcaem
nJjj43HH7dgXxnozYd3vjQ6tBxlz/eCBa+OaHhxgHHYSPjcgaMelHsapufDe
bykH779hXNcGX5Kbql+VzVhFfaCYoyLIehHzmDGbDReEl8b53GDM2whrp9YW
qaYxFhyHcyxDYhQzGIty4PbTqgknrjOW+ATrmvF8tc4zZqnKiznZnt6y9nzG
3rZwj755wLctjPnrYNVqYy9PHvXHwluv9CvaBlB/FlyW6Z/qTPfXa4JlL7u9
+bKB+lUUxJyF6SqvpchhU2HF+FN3fNyo3wf+6Jzo8NKB+mPgrsJ4sxJr6n8A
T9+xwfMZmf3x7+/b4HzAfjT1Kw0Sc6a6b15XPJL6LeHN5q8WfVKn/pUwz3D0
i3Ma1H8EznV0+FJO92fdhfNujG4bSrd718EGTQnv9RWoX0FRzLnzdeuZRrLQ
DJYe/e5GensC0+8FO37zTl9dwlgvCg5dcW2w2wvG3DvwuzNazWMeMw57B283
7tEwJKfKKYk5H3zZ02ruMq6bBGf5h8prpzJW8YQntM6NNzjNmL3/r5Mv1wQe
Z8xLhYN3L6w9OJmxoBpOnWp4eQFZJD1YzOkXFs39MImxxER4nAmvzWAiY5YH
vODVaulYFmPvvbDNq2RxhSlj/g34jXHmiIpxjIUV8OPWt2OLyJ0DlMWceSFW
BeUa1D8evrhQW9lblfrd4FEeOV3h5LAwOCVx/OslI6j/GiyUCkn+okj9ZbCH
zqwGqV+nmP4/cHmjsklVM2P2GBUx5/DB4AZ2A2PeInj5vKIAtw+MBbthW/+E
oLZKxqLLcOqoxJ1TqhhLlMCOi/qGsKoZs/rgn9+Gx0m2MfY2HiLm8M3fNXPt
qJ8Lh3relmq0p/4d8DC7GgelRub+nRfgMU/Tj9XQ4+u9gi0GpH3oq2PM7YGf
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
p9t53XDX+pGnP9DtAn2WmBPnkmu+n8ZXNAceWCJrFjqX+rfB3A1iqYh51C+A
h8R2v623pf4ieO1AReEQmu/43+Gq8y9f+oVTv+4kHL8Yzf1s+O94zhFOy1h1
OZz2Z72tcEjzYuv7ZG4yvCv/5esEclgBfNVzse4Lmh9Sv8ArB1oN3fGO+rUn
4/1un0N+UAv1O8Ades6qB79SPw8e7xdelkvmJcBH3KXcZciCfHhRZ0xFHx2/
ij7Dy7fXSY+n41cJrSlizsiDd89a0XzGmgkr/dcmSrtG/X5T/m4fLJUuer78
k/DzHQVn83cw71/CXLj5vPTiR06MO9vgAEmli8er45l+dTMcDySXntpfyJjL
hjOsc3WWRjEO2wj7zSjufLiPcepx+O3BuXYV8YzrcuAPgzdbZz9jrPIJ3mnx
PVBPzJitao7zA4+k7P8aGfNs4TDd+YqJzYwF6+Ah7fEbG2Yzz08UC28anGrI
cWQs8RA+HqKUOWwOY1YTbOMaLLKh2/lTLXA8VmlkcWEC9frAXyQyBQnkzhj4
+faS33a29H7+ALb+05XT5M2Y+xEO8S5pXEAOU7LE8axu3ORP6xinWsLnwprM
28h1K+HfOu6ujWsZqxyBu5slqj7xGLPvwh7SgUWxwYx5dXDlDgvL5wmMBQpW
Ys6s6F8GBWSRGSxckaDkHUa9K+DWzF6ZpHDqjYKXxUYruO1j7H0HzmqcKu0v
oP538OlVqm2SZKGctZijo9Dvf+M29U+Cb76sVHUopH5PWGHktuFqNdS/H86L
t6q3Lqf+VPj21R27JJ9QfzVc8XCKQWE69UtPxeNzJ+iL7lP/RNjbJDVQgW5n
e8Bj4o6Yv8qj/r2wqEB7dU4O9d+Ahy1kecnT7aIKOHNb4K6vHtQ7fhrmn12L
4zrJ3m7wroXr8j6FUG8YPFXS//6Cf73XYI7Fzycxh6i3DN7OmrDB/hL1/oGn
Kabn/qDXgzvGBuf7lot6dW5R7yI4ycGu4VsK9e6GHec9DmIlUu9luMWp2Wf0
aeotgZdberJuh1JvH2z31KLizBHqNbbF+e783SM+HaBeLnzUaFRryUbq3QFL
volbNmcVjfdFuPSCGqeLti/WK3jBrZiQrVnU3wPXfhbo7n9A/YbTxZwnah6f
bMjCufA+4+nf7Gg8OrfDYpvKJ7vpdr1zMG+sXfiNt9T/Ap64+GtcNY1/WBd8
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
k2b8Dz/0SaA=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9543552*^9}, {
              0, 0.07985452574715149}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9543552*^9}, {
             0, 0.07985452574715149}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
bTBn8UJzOzJrSBzON7eXG3uSuY7wlcfenTvR/F24CV7ftltSR8slUnjg7iH6
kn/z/3twwFK3k2vp9ao/wxsmj7i3m8wxisf4NaMpczxZMAtul9twr9D5ingD
vNL6+PC7dL4nS47/e/19b8Uy+v39umL4aINwwrnf1P8Jnqg5PN5mIF3/MEhQ
8T9Onuj03oiuf9jDj3Ii821M6PqHCA4dqHtu4Ti6/nEU/n5yqeMmS7r+cQdu
edwtYwf99wC4H2H7n171m2fQ9Y8BiSr+/aFP+tTQf39AMh2WzVL0j/aj6x/+
cKlxcad/VifAD+44Nyt20PWPQrjWbteewHC6/vEeVlgea3PdR9c/+h1R8T/v
lXC/RNH1Dx68M9HSOCSTrv+shs1aZl6tS6HrP3HwMIvE50Vk3g0413izqMsF
6n8Hu83p+aPsMvX3Port107QaWE59dvAB2a94A+l/z4DayXc5z/VucmadP/H
IfjPtPX5IXR/kTAfFrkpOBss6f6PJvia92uB2ozu/2AnYXspLpr9wZ4+/7eG
OcOfrB9O92dxVsCKo4HnRq6iz/+j4Y76A97dXEmf/1+FHSL8583yo8//XyX9
vZ/utUZvR/r8X+eYim/XZ1uyypM+/58I37Xr21fHhz7/Xw6n/mRXu62jz/+j
4Fa+vWdxAH3+fwU+vcUrZT1ZUQe/yy6o+R1I9790T8b25Renm7ue+sfDCzdZ
v5lF97MJveCVdY0qCZ/698Gi7a6J2nQ/gTwHvq2nVZFP96upa+Eb4UmDZ5E5
XY+r+HdSWAdWUp/AAk66PeBxSQj1L4E5549++/zv/rcIuGFYmOXPg9Qvg/NV
wr3//nsE7Gr4sO/mRen/7n/rdAKPP1Pk8NqA+s3gPdoBopt0f5l0EXzpu2j9
ue+0/nfCVlofe72i/14I6xws0fiROqKNtv8qeP6awUnb6b8fIuwgxXg/xXVG
11ba/sfA2XcnT76npu1/AVyb0czRaKbtXwzHtxzc9eInbf9ZcI69o2Y2/X3B
U3hby7FW04+0/f+B724Y637kM23/I1OwP8WtFfyix9e5wuN6zz8e1JH6Q+E0
712HXei/Z8LLhOOXaK0ofUTbfzl82PSAzbga2v5/wkkxa2U3yArjVMxHY3sn
Kf9n6b7jofwDOIBLIpWcKCpJqTRU16ClukOL1BGhFKWdkNJSkSJt2kukZBYN
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
mP8p/LYhbeReVeb/C3/bXxTlMIn5Bz3G/UtxWrM2z69sDjwlbKm1Hq27Ha76
e6jAnNeDJAoe2OuOWTOP+xbBTaJZ3T61nv/fcMUhr6Z+C5h/wBPULwr76avS
Aiu47Xy3n7VOzO8Nnx9QrXrGkfkj4BEV2zvV0WH58POSdUMmLmb+H/+OHyhf
MYWW65dfKx75Xb7wIi2cBde1XzLp8Enm3wTr7wnP1aSDwuHAaZGuKceYPw/O
Do1Zc/E08zfBKXkJ+6pDmb9PQa1Yo/DYdMVw5reAPaaZ1D6/yPxecMioA03y
rft/h8I3DMeU+15j/gdw+xn1/cddZf5vsP5LufKlPC7SKawVu8S89KzmcY/p
8IKGI3K/7jC/J6w0xdDaoor5z8LlPXbpOb5m/nvwPduWudofmP8L7P9n5NYz
H5m/ZxHK84GxXTrUMP8U+NKb2KZF75nfHX7iHWQwlH8vOwWf3bw7espb5s+G
1XK/jBG8Y/56eNXeNR968fP4ahXXioe5XN9Rkcr8JvCaTsErUmKZ3xUOUks+
fziO+U/A8c1fzt+KYv478OHInbtW8/v1qIWTjJ6Y1vH7DOtagvN9fJNPYgLz
T4Z3jAxQHcTXl1sFt/gW7esUxvxH4ZBO3dP1+ft0vg13Pfjp675TzP8Bfmg7
cFW7vczf5Wmt+Pvn5OhzB5nfGO7b43as7j7mXw43T1E4lhrI/MFw083SWTpb
mD8V7pHq2JhCJ7yDd6ifNb6yi/lVS1EfdBJ3nMj/F4yHl996o6nN46IlcKhM
61E3lkceB+ELs2Je317J/LdgDaVfqidtmP916b/n77dyL0xmfpUytM/iDVoU
xzP/GHi0TM/5CssD50Wwc4nE+0hH5t8HV5QkKi1rz/yJsN+94kfKX3n/ewnv
SY7ZO4jW7fAM7ZfKjR9dv/H+Nxq2Gnaj/UvadyHs5rdieRLvbwmBcNH8zmlX
q3n/u/bs33winb5F5bz/VcGeeX3Ppzzj/U+pvFY8+Y9Rx5zfXP9wBLxo9Onn
k39y/cP5cN6wqPPT5ZnfH1611rLQhp9PLgF+8GiV+iX+vbAC3qy4/t6Eet7/
FSpQvhf7NvWs4/1/GPzX7nCYmM60h89t033RmZ9f5gc/yb7f9kgp81+GbS+u
eOPxlPnLYLkjZRlp95m/zXP8PmaYZp39zPxDYLkhi+3Oy5jfFr5Q76dwmBb4
wi4FbQ2+fGL+GHi44a4Vq/h5PUrgtf0Ub43h5wn7AwsPWUS8kHL9x4GVKJ+O
+J3c2cz8c+DCNh07F7E+IdwGj57fFB5JO0fC9z598nf7zvyFcNbM63eG8/Nm
/oIb6ucaXuL7y/pX1Yrlz961+fGe+SVwv9BoI5s3zL8Fbt9p3NKJr5j/Ijzy
zoykczy/CU/ga/L9fHLo6u+wrPFX3zZvmV/vBerHWqHdP/L7FFm++DcfMl9+
axnzb4S3xuQaxvL7DzsP+0X2+xBBFzyChdf8Uq2zmL8JnrlWL83yMvPrvkR9
pvPzvz0zmN8c/t0c/kTSWv9bDx9dINx8KoD5z8EjnTRDftKy+/CtgBH6V4Yx
fwM8PP/S+CRa0qsa15P0S0HDKOafBu84Wpsx2YL518LLZ8a5+c5i/jOw8xb/
pC88LsiFU2ZaxE2yZH4Z7L88Z/ZcM+bv8Qr1++3zMtO4PmeYGax09ZfHJGPm
d4OftokaNHga85969a8/d3ivfWLmz4KjG9Z2bjeG+evgNwWZez7SQZqvcf9d
2H2wOf8+Uww7OJac/T6Z+VfDyV8HL6xtx/zH4YByV9fDysyfCV9XW2A/R4P5
P8FXfut7OvRgfo03teLu9+JnLtJn/knwmK01e9vQgpWw4/avzdbdmf8IbPHk
+dBNnZk/He6S3rPxnBLzv4d3HhIWPPvO+r/a21rx4r0qzzs0/G85Y/ho9pHo
GTK2f5bBr/0dDBO/sP0T9M+3bVZNqGX7JwV29wg5FfeZ7Z+38OaqMMcG/r2s
8zu0l8pSLCO/sv0zDs7V72BvzveTuMBT33scGdXI9s8B+PakMuV99Wz/3IRD
XuyuEdHVr+ApAwfZ9+brCzrV1IrDlzWML+Pri4zgxgO7L7a+n4czXFj6ekaM
lO2fvXD7GjfvWLrgBnwnUTzb5xPzv4QDKxZW6tYwv/L7WnFOuPv55U+ZfxT8
wyb66Ts6aAGcZhF53e0t8++GaxKPHDB6x/xX4dyxW+cWVDF/JTxK5Flq9pr5
FT/Uir/IdQ9oKGJ+IWwvrZlrVsz882CZj++3JYXMvwsu7a6Y6EYL4uG8Uxbq
Cvx7UTmc2jY34kUa87f9WCsWNCj5fWF7MmwoXGY86Ea8CvPbwRafGyvaqjO/
H2wyZ7fSbFoYB+8fNsr0XA3b/6VwWOWzxqCXbP/LfaoVz5rQMKL3W7b/B8NB
lUmafYvZ/reBRVplwd+K2P73gUe+Czy5JI/t/+h/1hl1/sVDtv+L4Qg/ic/m
FLb/W2DND/WlPW+z/a9fWyt+0Tm+78sotv+t4Y0K2Y5PadFW+M6aITZRtMcl
WKA53tv0Atv/BfDav5L+znTBT3hx965HD9Ny/aX4PT5bPPB9OJ9/zIYvW5eN
fBrG/JvhT1nt9ONDmf8CHBZtljSEznwMuwe7mR04x/zN8Jj5rueXnmL+vnWo
/1fW1PTg8xjJTHifT+OOpvPMvwG+mXM+ZyidEAZr1t8eYLGa+R/C8ReiNw7h
8xVBI2xa9urR85XM37se99ety8qt+LzFYwY8/KQooGo586+D9fz73RIuZf4Q
+N3TL+0G0XL3YT+9xqbNLsz/FR5tMmP+rnnMr/0Z9/vRyks300FT4T5mN60l
dKYHHH9PoawDn0/JTsO6K56XTLNg/hz43ajU80lTmP8zXBsZ49ibz5N8u8tw
PS7bOshKzPymsPDNsVxVHq9eA5c4v/PUEDL/SbjHa7fdvWnRXfhZ8+bVwQOY
XwrvD1LtMU2H+bt9Qft/7q5fJ/l8rUAEzxuzxG9ZN+ZfDffqelhXQ4P5j8Hm
z9p2NaOdM+BXTtLSSCXm/wh/7Lvk4mw+z8tU/1or3nVJrS7kD5//TYTf9Vqz
x7yJz/9WfP23fu/uo3Oq+fzzMNxUPPXutwo+/0yDrWNKsrVy+PyzBi72TNt8
9SGffwoaasWZFovcrWnBBLimpFx/TDiffy6Fo/Uiph87wOefh+Auut8+P+V6
zWHJ8MGHH5/8quXzzzfw6yvfniySZ/7O33A+VQ+MGMl8wrH/XNhPzbQ1/2L4
095jqTZ8Hhm0HxZo58SamTN/ErwyS0vhniXPfzV86n7+KyGP63ZsrBXPX5Kx
ffUEnn9D+GvP/jdcl/D8O8HXb7dPdeT1l7AHdnY9l17ryfN/HX7YuW1S0yae
/xfwI4vEqZd5vYnaNyGvloaVMX8PHiNh8zPbK5N4fYc5wuOMbQMr+TyzIABe
cTL+75xtzH8V3l3SSaNdH+Z/Dut16Zm20o/Pf9s114rFidH5BnTQcHhsndfa
GDc+/3WAJ22yTTV35/nfCQvnxz9cP5bn/wo8OmfsmtEinv9nsGhUnUbEZJ5/
+e//ngf3y1KhEwzgjVrd32434PmfC7/9qeJ7dzDP/w5Y7PTs3oPRPP+x8NVq
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
X1zvxPdz9oGHbPVZqszjQdGwsFDnhBrnw8paYM9vUpM9i5lv4BmpuHmnTlT0
Euazhj17Pb/S7MJ8W+E2gzLNbDh/NuESXBLx+aqzBfMWwNdMPcSBU5n3F9wr
6uUIuynM2/8s6n/n+31Y68a8s+GK1ZOOFbkz72a4MVvt6lQP5r0Az75+cGHT
euZ9AtvJJ6lH0MLv8OfvsaF/1zFv3xDki9ftv3Uz886Et8/uWlDow/O7AZ6b
Ps7JZBvzh8E2+zs0TeR8Yt1HcECRtfuzrczfCP+p7pFp7sX8vc+hfXBg26UH
dMIMOCPzbkPuQeZfB8/Skt9ufZz5z8Fic5VzaTwuug97fvHIeHSE+b/Cae9G
pCtHMb92qFS8Q2y+25YumAq7tOvWMZSWWws/aWf9M58WnoE1Pg6+kJvA/Dlw
UZXOoeF00Gc4viQoyfUq83cPw/1IPWO+Zhnzm8Kmx3aeUilhfjf47Vu5Ck1a
chL21Tp02In2vRv2b7z0ON/iUuaXwr++2I3p9o35u52Xim+2/yuNpgViuLt3
hlSVDsuAz3Q7HzdHmfPRP8IDFPYkvevE+ega4f/mM96xCm3H+eiT4KWn3qVs
p51XwCt7Tep8uRvnox+GW3Q9g85qcj56GrxBs+vUTrSsBr7Z7HPQjdZVu4D2
RXPsTokW5+NPgDuZPDC/3ovz0ZfCGarllbEDOR//EFx7wUkll/Pjq5PhO/lD
246nBW/hSuU9KeHdOR+/80Wp+O+Tz8+e6XI+/lj4TdLRFT31OB9/MdwY4lNh
MZz598OB8iVDPTm/X+4mbBMXK/zRl/lfwZOHjqky6sP8HSPwe66eY/CeDjKE
fxXWvexHZzrBK9KmTTiuz/x74P7S2Fl2zKN7A+5zvpPYdBDzv4ALRxlvsOdx
3/aXpOIrbltXRvZg/pHwux/CwhJ+X9WO8LkNnbZ35PsJdsOL9o0Kf8D1AERX
4T7+w39d1GH+57B0n3xZEfOFtYtE+2Pd2qCN/HwFw+G6gvhTZbTcPPjimYu+
52jhLrjb4Fdb9/Zn3mewrHnnxr5cLzhTPgrt3z09z9ePZF4DOGBEwSBvWtcO
VlN93WMvLdkBPz7RKNw9gvmewhNrlaJa11+o/guffXJ2xHBaMDhaKt54yMXt
8STms4EnR5umZS9kvu2wpqleriq/r7Ao+Gtvq5vBvD4KiuAVnQYtuNN6flvg
8zelO1OGMJ9+jFRsmTZy2jlef85W8K213yIsWtdb8Ibj7EzCknk9ZEbE/Csf
YuVOL2PefNjiVMmU2KXM+xMuf2XyW5HHJf1ipeKfGSeO6q7h+Z0FP79s9EyJ
61UkbIJHKywfM82L+cPhmFUf1Y95MP9j2Lav123HtczfDJ8+c9Br/jrm7xOH
9s6FNr4W25jfAo7Wrjz8gesrF3jBm2N2duq4lfnD4PYX45X78u+FD+F2MToZ
Mr6+8zdY66CJ6TVL5te5LBU/mhd05yGdOR0O9Qv86zWD+T3hBUaKli42zB8C
KyQbCU/MYv57cIRWb681Eub/Age/L9vUgetjJPS8gvJ5zpQZqTxePQW+t3zD
hIl8P4EH/OmBwxx7MfOfhre0VfM5Npf5s+F22x7krKHD6mH9OTr+GrbMrxWP
9pXte5tD05jfFL7e7JOYTgvXwIfi9f+uncr8J+D++yf0GcvfW2Yt3Hvv4N7v
W8uzrglS8TaR6ep8lje6Irhyfn3IYRXmXQVPNrI12vGA5fVROOvx5Hnj8lhe
3/53fOr1aSOesLz+AFt2/fbOJIfltfpVlD97x8z53lo/mQjXnFDdEsr7ucdy
uP8im52BvJ+HBcO1OZOTN7Xl/SoVTrgxc8+bCtZHa67+m2/R8ZbtM9a/x1+T
ivP8OyXfLWf9ewms+ClFuW8Z698H4aJCXTW9P6x/37r2b3y2+rfFCrw/vYHN
XqbMUub7SVSuoz5dGR11UJ55x8AqRYvSvqgw7yL4gL9ZUN5f1r/3wWXuqqG5
rC8LkuA2ims7bpWy/l0NL9RdV3a8kvXvDjekYhPJjlvrU1j/Hg1/VitfqnST
9e+F8IXmPlrebJ/I7YH9He4aNEex/n0dzkqOWSe+xPxVcHr1juCOGcyvlCgV
nyooC+92l/lHwLEOpkXvuT68bD48s4P6/Zf8e90AuHO7zmbKfH9JAvx8mdqo
oK1sf1TAY6dvCXiykO0PhSSpeE2XjE17nJl/GDzlR/GZDBvmd4C/Fs9xHGPL
/Dth/4YBt5vnMP9lOKhe+cBArr9f0OamVBy1riqolu1HOQM49aaxusFc5p0L
m3z4Uv2Jr+fsCyv8WtxJytcLioHzdri8drJg3hL4jmvO4FOWzPsHvhTm31mR
64voDrolFc/wvK5zgc9fJXNgy/YjRmq3tre3wafXnIpe0trejoTdjz7QNeN+
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
czL7F+yVvOWAnBb1GkmJORndi8rtBlPvPFiYkxYuHkLPvxtW7urZVzaZnu8c
aTHnScj8d1Pp/p1B8M1xYxw2N9H8LIDVWwyNVf+9HxXBR0N1a71oPgv7DtuM
FqdUydB46crg+feP8DVQpOfvCK/TOvfFuZPm562wn/Sz+MI3ND8nw1WSY1NW
ldH8XABveypj7PGR3p++wK3zom5OKqL3J21ZMScpRFOxJJ/enxzgDsWgrA25
9P7Eg6Wf5oRVcWl+ToAVZomG9tjR/JwPb4udFPKrP5Hp/wxXTpG5tq2Pcaem
nJjj43HH7dgXxnozYd3vjQ6tBxlz/eCBa+OaHhxgHHYSPjcgaMelHsapufDe
bykH779hXNcGX5Kbql+VzVhFfaCYoyLIehHzmDGbDReEl8b53GDM2whrp9YW
qaYxFhyHcyxDYhQzGIty4PbTqgknrjOW+ATrmvF8tc4zZqnKiznZnt6y9nzG
3rZwj755wLctjPnrYNVqYy9PHvXHwluv9CvaBlB/FlyW6Z/qTPfXa4JlL7u9
+bKB+lUUxJyF6SqvpchhU2HF+FN3fNyo3wf+6Jzo8NKB+mPgrsJ4sxJr6n8A
T9+xwfMZmf3x7+/b4HzAfjT1Kw0Sc6a6b15XPJL6LeHN5q8WfVKn/pUwz3D0
i3Ma1H8EznV0+FJO92fdhfNujG4bSrd718EGTQnv9RWoX0FRzLnzdeuZRrLQ
DJYe/e5GensC0+8FO37zTl9dwlgvCg5dcW2w2wvG3DvwuzNazWMeMw57B283
7tEwJKfKKYk5H3zZ02ruMq6bBGf5h8prpzJW8YQntM6NNzjNmL3/r5Mv1wQe
Z8xLhYN3L6w9OJmxoBpOnWp4eQFZJD1YzOkXFs39MImxxER4nAmvzWAiY5YH
vODVaulYFmPvvbDNq2RxhSlj/g34jXHmiIpxjIUV8OPWt2OLyJ0DlMWceSFW
BeUa1D8evrhQW9lblfrd4FEeOV3h5LAwOCVx/OslI6j/GiyUCkn+okj9ZbCH
zqwGqV+nmP4/cHmjsklVM2P2GBUx5/DB4AZ2A2PeInj5vKIAtw+MBbthW/+E
oLZKxqLLcOqoxJ1TqhhLlMCOi/qGsKoZs/rgn9+Gx0m2MfY2HiLm8M3fNXPt
qJ8Lh3relmq0p/4d8DC7GgelRub+nRfgMU/Tj9XQ4+u9gi0GpH3oq2PM7YGf
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
p9t53XDX+pGnP9DtAn2WmBPnkmu+n8ZXNAceWCJrFjqX+rfB3A1iqYh51C+A
h8R2v623pf4ieO1AReEQmu/43+Gq8y9f+oVTv+4kHL8Yzf1s+O94zhFOy1h1
OZz2Z72tcEjzYuv7ZG4yvCv/5esEclgBfNVzse4Lmh9Sv8ArB1oN3fGO+rUn
4/1un0N+UAv1O8Ades6qB79SPw8e7xdelkvmJcBH3KXcZciCfHhRZ0xFHx2/
ij7Dy7fXSY+n41cJrSlizsiDd89a0XzGmgkr/dcmSrtG/X5T/m4fLJUuer78
k/DzHQVn83cw71/CXLj5vPTiR06MO9vgAEmli8er45l+dTMcDySXntpfyJjL
hjOsc3WWRjEO2wj7zSjufLiPcepx+O3BuXYV8YzrcuAPgzdbZz9jrPIJ3mnx
PVBPzJitao7zA4+k7P8aGfNs4TDd+YqJzYwF6+Ah7fEbG2Yzz08UC28anGrI
cWQs8RA+HqKUOWwOY1YTbOMaLLKh2/lTLXA8VmlkcWEC9frAXyQyBQnkzhj4
+faS33a29H7+ALb+05XT5M2Y+xEO8S5pXEAOU7LE8axu3ORP6xinWsLnwprM
28h1K+HfOu6ujWsZqxyBu5slqj7xGLPvwh7SgUWxwYx5dXDlDgvL5wmMBQpW
Ys6s6F8GBWSRGSxckaDkHUa9K+DWzF6ZpHDqjYKXxUYruO1j7H0HzmqcKu0v
oP538OlVqm2SZKGctZijo9Dvf+M29U+Cb76sVHUopH5PWGHktuFqNdS/H86L
t6q3Lqf+VPj21R27JJ9QfzVc8XCKQWE69UtPxeNzJ+iL7lP/RNjbJDVQgW5n
e8Bj4o6Yv8qj/r2wqEB7dU4O9d+Ahy1kecnT7aIKOHNb4K6vHtQ7fhrmn12L
4zrJ3m7wroXr8j6FUG8YPFXS//6Cf73XYI7Fzycxh6i3DN7OmrDB/hL1/oGn
Kabn/qDXgzvGBuf7lot6dW5R7yI4ycGu4VsK9e6GHec9DmIlUu9luMWp2Wf0
aeotgZdberJuh1JvH2z31KLizBHqNbbF+e783SM+HaBeLnzUaFRryUbq3QFL
volbNmcVjfdFuPSCGqeLti/WK3jBrZiQrVnU3wPXfhbo7n9A/YbTxZwnah6f
bMjCufA+4+nf7Gg8OrfDYpvKJ7vpdr1zMG+sXfiNt9T/Ap64+GtcNY1/WBd8
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
k2b8Dz/0SaA=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9543552*^9}, {
          0, 0.07985452574715149}}, "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9543552*^9}, {0, 0.07985452574715149}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.952950248343712*^9, 3.95306482568782*^9, 
  3.953064963527657*^9, 3.953064999149098*^9, 3.953065201948196*^9, 
  3.9530653549354362`*^9, 3.953065470584772*^9, 3.9531263063877563`*^9, 
  3.953126768437801*^9, 3.953126960242302*^9, 3.9531271188095093`*^9, 
  3.953127190425571*^9, 3.953127521340255*^9, 3.953127571537415*^9, 
  3.953127619589445*^9, 3.953127669707562*^9, 3.953136713558751*^9, 
  3.953136833473392*^9, 3.953136978984818*^9, 3.953137168290571*^9, 
  3.953137361486867*^9, 3.9531374107048407`*^9, 3.953137486629575*^9, 
  3.953137585306974*^9, 3.953285304381791*^9, 3.9532853634246693`*^9, 
  3.9532854623528023`*^9, 3.9534102386067257`*^9, 3.9542733200893717`*^9, 
  3.954446367970045*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"ab81ac7e-4243-4b17-bf4c-065797c59b42"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2906, 78, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4075, 119, 1209, 19, 42, "Output",ExpressionUUID->"572e140f-fa7e-48a8-b8af-1d44dbf1043c"]
}, Open  ]],
Cell[5299, 141, 6071, 125, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11373, 268, 2525, 61, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[13923, 333, 45267, 924, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[59193, 1259, 16619, 331, 5765, "Output",ExpressionUUID->"df0fdd78-33de-4248-8500-cdf02ceed964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75849, 1595, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[76195, 1605, 3918, 87, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[80116, 1694, 207377, 3549, 825, "Output",ExpressionUUID->"ab81ac7e-4243-4b17-bf4c-065797c59b42"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

