(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    292546,       5355]
NotebookOptionsPosition[    290971,       5316]
NotebookOutlinePosition[    291368,       5332]
CellTagsIndexPosition[    291325,       5329]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.952950242158903*^9, 3.9530648211300364`*^9, 3.953064958622326*^9, 
   3.953064994240164*^9, 3.953065349950439*^9, 3.953065465573783*^9, 
   3.953126301207666*^9, 3.953126763140174*^9, 3.95312695500004*^9, 
   3.953127117979952*^9, 3.9531271852779837`*^9, 3.953127515891465*^9, 
   3.953127565970191*^9, 3.953127614148252*^9, 3.953127664280751*^9, 
   3.953136707707389*^9, 3.9531368280231953`*^9, 3.953136973229302*^9, 
   3.953137162354211*^9, 3.953137357043047*^9, 3.953137409894322*^9, 
   3.953137478783972*^9, 3.953137580524066*^9, 3.953285299268303*^9, 
   3.9532853579233027`*^9, 3.953285456811905*^9, 3.9534102329466753`*^9, 
   3.9542733120956717`*^9, 3.95444635802569*^9, 3.9551400263429003`*^9, 
   3.95548301709028*^9, 3.955483914695512*^9, 3.955484592070867*^9, 
   3.9556323769979563`*^9, 3.955788802405212*^9, 3.9559111390723*^9, {
   3.955911408801759*^9, 3.955911408886239*^9}, 3.956325663929028*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"5e869e57-0e80-4bf3-9ce7-babbd2e5d08b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Automatic", "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.005", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.010", "]"}]}], "\[IndentingNewLine]",
               "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}, {3.9554843906883707`*^9, 
   3.9554844202100267`*^9}, 3.9554844683149023`*^9, {3.955484509072035*^9, 
   3.955484573338862*^9}, 3.955484816424817*^9, 3.955484990240109*^9, {
   3.955485048330737*^9, 3.9554850666151657`*^9}, {3.955485212388727*^9, 
   3.955485238935068*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4904, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4904}, {
      4904 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2758.2514014017474`, 2763.9833349954974`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4904}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4904}, {
         4904 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2826.0655768167867`, 2831.7975104105367`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953127185868351*^9, 3.953127399371324*^9, 
  3.953127516744842*^9, 3.953127566636895*^9, 3.953127614757175*^9, 
  3.9531276649479303`*^9, 3.953136708325881*^9, 3.953136828734364*^9, 
  3.9531369738923807`*^9, 3.953137163086714*^9, 3.953137361194911*^9, 
  3.9531374105258427`*^9, 3.9531374818910313`*^9, 3.953137581144923*^9, 
  3.9532852998972692`*^9, 3.953285358708744*^9, 3.953285457535769*^9, 
  3.9534102338402042`*^9, 3.954273313316141*^9, 3.954446359469681*^9, 
  3.955140031195878*^9, 3.955483021842887*^9, 3.955483916294313*^9, 
  3.95548459335896*^9, 3.9554848195482388`*^9, 3.955485068466544*^9, 
  3.955485251684599*^9, 3.955632377787364*^9, 3.9557888035429296`*^9, 
  3.955911140380328*^9, 3.956325664490397*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"1a1f6f19-8a5a-40f4-b03b-ded683ef3adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
aH5BGTy2/WxaKFncDpeo3Z1m0/FdNjhfyd+lFZczmR5fNwuuH9ugl/uUjv+b
YPXuaP3k53T8l8Kf5udsDSeL7sL9BJ2MUyro+P8JVqQeDeuloOP/oCsY30cL
tmx+yJg1E04SjvBypdfDXQ8PG3j7zwH6e8IUmHeO3TyIXo+kBJ7vVRA/9l9/
Kzy5gP2M94z69a9if5ixwmAovR6OA8ybtzqlD1kgghN/Dh6jqKX+w3D20XdX
9r6g/lvwbGmTVSy5rgVWe/QK8Kmn/oEFON/etsSoB5lnB+/kKfx/1lF/ADyn
S8aTNrI0AW4Qpn/vRvMrbsAua/VdNzRS/zvY6pSVUf8G6u9/TckXv1uy6SnN
L+TBiR+vSoPJklVwXGvC1b70/PKDcKz24LnaZHUhPLpL/oWal9T/Fo4e3VVP
RT2CPoVK/tOSFOPAGuq3gSdpGy1MJ8v8Ybd+IsNMcl0sHFX18dZ3MrsAHtCn
SXmUzGuGTez1RjwcTes/+7qS/3XP3bufptL6bw0HD3o3s9WW1n8fePMBoxEX
aDprP1z8p/7zbjI3H04V3OFZkYWNcOaIe1uOTKTtX1uu5FdoGR3zJcsnwDXc
xzERND5UL4MnlF+YYEvmxMA+XtrD5ONp+78ED/s1Z64bTRfXwRuDB2z3J8u6
3VDyu+kM0hhrTdu/FbzeZfWCrVNo+/eCFcU77G3p9fH2wGktJeZG06g/Bz5T
MK/Xg5nUXwuvfHV74EKyokuRks9u6mQ6RED9lvDgS4HuG2j8yl0Cy1qDtcbP
p/4IuFRzJL/rEuqXwQnttSLrpdT/HNY/ePBLZ5pf3ekmxr+jrgzYvID6zeFF
WsFn6+dR/0JYOcou1I2mi3fCnyrlvVMWUf8ZuDqlcTl3MfVXwl9zXHQXkdkd
byn5EcaOIRY0P280vLvzoVZjsmgefE/9w/O0kPrFt/7uH8Z77POl/lNwxaaD
0y6vof4n8OH/JvYYHEz9f+CyJay2rvupf8RtvN+62dpDyBJ3+Pa0j2X5NB6R
b4dTdFPa/6PxkDrz9t/xdftNDo2XOBVwrI1cYnSc+n/CrueumJtmUb9xMc6/
xK/flJNlAljkdKc05jT1by3+O36du/FzDvUfh/UtXMLz+HT8ewgvN5xVMSWK
jn/f4MLu99wr4+n4N7QEx8OXdd9Tr9Lxbzb8dkr2+kD6PIYVDAct2DwrvpiO
/2mwe0KXull36Ph/H/6U2eHNKrLkCxyc77Gn4Ckd/zmlSv5W7kcvwyo6/jvB
WcO3PuY/o89/NsLrT08fW0KfNwmOwbfFSdbbmunznzvw7z2DJBe60+dfbfA3
s5hRFn3o8y/DOxhvWFxwH0VmO8JhZx6t3zSAMW8dHHpH4jLHhLHoCDz0tiA0
OIA+/yuGO4fET591gD7/U8N3l+jkB6XR53/6d5X8QR0sf1zJpc//psMprB6p
dVfo879AOG/Z3ucT7tPnf0nw0GFvTmeS5Tdhs8EhXBlZ/R7Obvi6seEhff6n
ew/bT/gyz4tkwTT444PyJUPYOUz/GjjuYH6AYy/GskPwvckzOl70Y1wnh099
4X1S5TFmq/5a19h57V3GvH738f44rG7IuMdYZAs/9PhSH0aWroRzYqW7fjxg
rIiDqw7MlqvIrEJ4+Ca/tscPGXPfwFbnord9rWQs7F2G8f5QrclmzxlLpsCG
yx5cDyfL/eApoSu6e5PVEnhqcoOFgMy5CrfPd/4STBY0wS5vC/nPyOKeD5T8
rmc9uOJq6p8EL3u94ugmcp033EvZTXyMzP4PLv54/uqkBuq/DG8e1eHK73rq
b4BPa2n46HbMZfp7PMT+ZsycbWs0GCvGw6+N2256k1nL4Pzfcx+9JnOj4V5R
d65ZajIWXoSf/qchae7GWPIS3tPUs0PHHozlWgrMH50m3NydsXosvP3T6DAP
MmcpHP2ik32INmNBFCxJaM7ercNYfAFeGxO4azo9n6wG/jr+U40JzV/XuVzJ
31To2j2ezLaAP+cZbCsk8xbDzZP0qpvo9Yl2w2Fdq79maFH/OXjo3pqVh+j5
Fc/gk5qFulIyq1MFjjcz/P4cI3PHwIqwjiNf96P+BXBEwLQPfgOoPxw2v+84
OLcv9WfD+wVmI7/2of6nsOXJvk0/yZwOj5T8Ga6ac4x6U/8oeG5zzRxVL+r3
gK8NnjrzFpv6w+DaDTcWvibXnYS/VrwIc6DHsx/DSfb2u+Po+Xm/4ZFOl1dc
N6B+08dY348XNY0YRP1u8PqXXTeKDal/G6x2+tPYn8zKhJce+mBYQOaWw9Ni
Dru1GlH/D/heYa4/azj1D3+i5F9KGbOs4xjqd4F3d5+/38SE+rfAJk+7v+s/
ivozYJ+utrOGkAUP4D/rjq5NHUn9X+Fjd8on3CDLhjzF+Gew/FQ3S+p3hpOn
fTRJI7M3wznDA2LDrKg/FY7OPtchjiy6B0syBxvecqT+z/Cx0gntz8kKo0oc
P6zPW1gKqN8JfhZYYD+czN0Ap2atrDo8l/qP/p3ec+j6ZpouKYWbvuv9XE+W
f4T/k2ocGRhE/QZVSn5b5G7pAjJnBvzoaB/rGWupPwjm7qiYdGU59SfDPFPD
/9z8qP82nD44Recoue4DHBd/0XW2L/XrPVPyX2jFllV6U7897KDL2WRPFq2F
kwJaLhR4UX8i/O1Dt70bFlB/ETygelNC1Hzqfw83lN4cGkLmDnj+9/2tuRlK
FvLhEefqLbj0eMlq+M+eTqNkZHk8/N2iw8rxHtR/HWZvXuBiPpn6lXDSrFHL
v42n/r7VOB6tqMlpM6X+qbBHjz3rQ2j9ka2Apx+b/eMmrb91B6r/7q96R3+g
7ZF9Da7MSdxfTNsP7zXMNkjhtNpQf68aJf9m0B3OsbHUPxleFFS5wJDWD4Uv
PFJHM6enNfVLav4en7raF02i/ivwvBG2uf1puvAV7HIic5SaeiQ6tRgvzWmY
6m1B/RPhxl/eP1bpU/9y2O7RVWdD2h45++Ct+11KXw6k/jxYoMW7/UGP+uv/
ethI089/aP/f/YWS3/vjjlN7Wmn/Pw7uVZkQV6Gi/b8Qnhl7tr3nVtr/74Xd
55jvvrKRxj+58PjvjeHCfjT+eQFHN8bvW9VG47+uLzFeLlU/iO5C45+x8Ff1
5Xe+d2n85/l3ummWgettGv9FwotPB8sqaTwpOQ+bq86f9+fS+K8a/lTbKM4c
QeM/zTol32hxfIHuUBr/ceGdHV6smWpI479F8MMTbe9d9Wn8tws+0Cn+/T5t
Gv+dhbv02LDqUA8a/1XBP+cUd3TUovGfRj3+ftep+47q0PjXDH4jD8v73JXG
v/PhUv0Lp3Q70/h3Bzw+w/vIc7rerTgN+7zadsLl3/Xvp/Drceev2aXR+R+r
AeMdZw+vrzF0/jcS7rlar1PDRjr/mwv/55k25yyfzv9CYQ8fZ21LWzr/y4If
+73fEzuFzv8ewfmFh5cFWNP53y94d07pJX+y2KRRyT/fbe/tT5Po/M8VXmzW
plc4kc7/QuARax5mrxpP538n4PeBA64HkXmKv9PfjtuzhSz6Dq/bn9i+cTCd
/w57heNTXMTmFxw6/50Dr36hvWaAIZ3/boEnrZzRdZM+9afDB7SMz/cjC8vg
B4krrWvNqL8dnlPu6sYaQ/2Dm7C8+D+FnSZT/yz4plp+MpPM2QRXP/FaYko9
AinMcXh6faoD9d+F57gmHbxNln2CPf0uH/45g/oHNSv5ublW0WnTqX8m7LSH
1buS5ueth+3iKz3GzqP+lOa/11Ofhgndqb8Exti+hztZ0QrXjzk2124h9Ru8
xv7E12ryN1fqd4DfTK+dWr2A+kVwz8NLHQvJksNwB/v6q5xF1H8L9tD/OVRE
09Ut8NT7Fd0v0+vlDHyD8b40r9aDXq/ADo7akm3iQu+fOADeHLghvYlL/Qmw
b9oZPSXNX3cDtvzRo+i0I/W/g48UrlufQ+b1f4vjwUPP+dvJIh6cy1mlfkiW
roLX5z2OvuNE/QfhLSZaNXfJrOvwrA+/gqpofu5b+PonR/nomdTfR4nzpeq3
vSX0eiQ2sGDiPd1gstwfbvc9nVdKVsfCG5/HOoyjx3MK4DeanhH6s6i/Gc7b
M6vc2pn62Sol/9XxiQN3zqF+azjjSP8ko9nU7wOXbdj6JciG+vfDez8/bVxF
6wcvH940dL70IFnUCGf23Wk7k7Y/qfY7HE/UU6QGtH0pJsDW7zvI73ei/uWw
/obEfAsN6o+ByzquH7TjBPP5nvAS3FOxLG9ZJn3+Vwe3tv7m5kfS53/d3mO8
lG59fFgUY7UVPE7yvf44meMF+264MCh6Lt3/tgdeNLUgbD1ZnAOHfz996rYb
3f9WC4fdL5SVudP9b11asLws5JwRNJ1tCWfaeGY1zGHMWwKHHnTqFejMWBQB
P+ziM16PLJXBOwNPTA22Yax4Dics3yWJI7M0Pyj5E7aJC0OnMOaaw03Lpg04
TRYuhEP2vymKJkt2wty9zqtO21L/GVi12KZiJlldCevzTmUfJnM6qnG+XHrY
tIIsGA1XiVqOzJpK/fPgbtJnj8UTqV8MKy97m/Wh6XWn4PClczv5k9lP4Nda
rK8D6Pl4f+BeeRM2XKTpohGteL3bR9zcRZa6wzcnZU5zIyu2w4rHtoXj6PGs
LPj04lHcNprOrYDtv/W+/5Qs/AmfLBw5K5gsMf6o5P9ym7Wj1Zr6BfBKi/IH
eyZR/1Y4ovM8rSZ6vzjHYaPs1bfE9H4LHsKe1y4NLuJT/zc4ZNvELXYe1D+0
DePHKl6Bxjzqnw03633qs2ch9QfDM3pZpXoup/40+ELXFa/8V1H/fVh5PXTe
sgDq/wIvfu7zURBE/ZxPSj5rUGZJqoj6Z8EbprXNOUGP526EX/AMqhPXUv8x
+MPqtRaHyZI7cOnqyqIysrwN9jhqcCFjDfUbflbysxacH8QlcxzhcWdCp/Si
z8sF6+Bv4fEt3cniI7DMKHK/nj/1F8PODe+7nCPXqeFpKcKvZ2l+tv4X7K82
3Suo86X+6XBsRI3pZbIoEHbnLJsSQ4+XJsHmaZEhg7yo/ybcc9hED0MyqwV+
zG55sn4+9eu24/nuus/yIgunwXEZva1O0/KQrIGLuYt7fqPtV34I/jQnykCH
lp9aDjd1YTv4C6hfBX9I+znzswv19/uK7SH77Yw+NF1sC+fOPJ9hQduzbCXs
PTKd+51cFwc3P4yZPcaV+gthRXCIRbEn9b+Bb1lO2GAbSP29vyn5tjfK1AJa
vtIp8Pkyce6ff8vfDw7SXsHXWkf9sXDwlrgih2jqvwpPas+yNpNQfxO8pzAu
3PYg9ff8ruSveZa+XU2WT4IXth421o6nfm946LleKUvSqP8/+HpUhxR/suAy
nN25f6YL7U/FDXCVRZZRTBb19/iB17tk1hCj09Q/HjaI3DlM14L6l8HNK78/
Kdal/mj4Ys3w+cc51H8RDp47fJ+jCfW/hEtM5ix1JSu0fir5Zw8Jy5PMqd8K
dsjU3yG3pP6lcO0+z5e5ZGEU3Ph9zoZssuQCrP/aIvQN7a/kNbD1UKwNtL2r
O/9S8l/WFb3sR/sHjgUccqStRnsy9S+Gg2efCUscT/27YXXSbKdb1Cc7By/Y
bNPxkRn1P/v7fBpvmj4Ppf5Ov+GRrMXGval/DFyzKerWDrJoAXxs+t59EztQ
fzisU3jU+WB36s+GnTPOh839Sfe/VMIhI0+mzftM9790+KPk91cP419V0/0v
o+BJkUG7i1SMJR5w/OrLOZbPGcvD4IYtKaXW9YzVJ+GK/gtnHqhlzHkMbxPd
XR1I8wt+w/pnHkw/94Kx2JSl4gfMi12xlyxzg52efz4xkFy3DU58v7Nmew1j
diZ8zHZRc00ZY145XJG6svpCEWPRD7ijXX+X2ecZS4d3UPEnZHI1jeMYK1zg
gne/Iv08qX8rbNDde2sYmZsB350Xv73NnfofwF/P6g3SCKX+r38fvze4elgI
9Q/pqOKzjyy16LSM+p1hYVOry1oh9W+G39S89nH0pv5UWKv4rv7LhdR/D75b
kVEZyqf+z7B6U/k260q6/9tIQ8W3He395ByP7v92gtvrRn880o8xbwO8dNKZ
QTfT6P7vo/C1/AK925GMpaXw4w52AyN2MFZ8hN9cHtetaDtjlmEnFX+hv4VZ
cChj7gz4S+iXLSwBY2EQnDLu1OK+jowlyfDB9f3fJExlLL8NW5yf4Nu7F2P1
Bzj9MHf0dzZjjp6mih/40n3HmyvM/eECe3jJRulN/2TG4rXwo8HJ5wccYSxL
hC2Xh2mN2cu4rgi2deob3OLPmP0ettB/NTD8LN3/PaCzin9FL3h4pSvd/82H
DbbarYocSPd/r4YtL7N3xlTQ/c/x8GFDzRK3i3T/sxxO2CKL6hFN9z8r4f2V
9iO+7KX7n/t2UfELc6KOm9N0yVT4xu91Pj6RdP/zCtgpdlta4n90//MB+NuL
thsWT5j7zzjX4Ppibw3rZ4wFr+H/BvoHhTyk+397dUWfr9baz3uY+9dkk+Fg
l42+F93p/l9f2PQyiz1gCWO2BO689WDniQvo/t8rsODG1gfhM+n+t1dw/9aS
lMNOjKU6Wir+quSheiU0XTERNvg59lvNUMYsb1h3ceVB1SDG3H3ww8TIN8FG
jIV5sDaf/TzBkLGkHl7x/Nq6ExzG8u7dVPytplUb3QczVo+Dg563DVxgwJgj
hBcMLQttnMBYsBfetORnjquAsTgXzo/S/WlAvbIXcNd72b+KLam/a3cV/1DC
2RBPejx7LCzf4rP4Zhnd/+cJ1zcEb2stZiyKhNdcNswufUr3P5+HN2fsGHCh
gu5/roYFB64sSblN9z937qHin7iTpWusQ/1c2P33rrKTJ+n+70Xwu2f8lXZC
ZvlJdsE7BM3XcxYzlp+Fl0UJih4tZayugkP5OifGrqblr6GNnj2enSVrafmb
wWGyJr1lKxmL58MHF0ZoX9/BWLYDLl0RKt6/k+5/Pw0vlp3Y/5vMfgp3zvte
lBBP97+zdFT8If81at2LpfvfR8IVc2OqBmXS/Y9z4Wor/vUR5+j+91B4tVFE
LPsN3f9+Es5VLu6U9Jruf38EH78bH+KoZCz8BasWLG6MIktMemJ/mP6uu1hF
/a6w5YOxqTrvqT8ErhiwfNZwMucE/H5cj0txLdSvgMV3dXf0/Uj93+GggOCr
pWTZMLaKP6b1eOKkz9Q/B95r13Sw37/7/7fAT09dSLWopv50eE6L4c9dz6m/
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
eujJyWxnmBezRr49lfo3wUtyfET3yCIpfMlDb9zcFuq/C4udz52OofGg4hPs
kbx7ne0U2v6Npqr476ZtLPhA+0fuTPjJuBbzQDqeC9fD46r6NK1tpv4UuPvo
m4Mv0nhNXgKnNTcb96XtTd0KX7sWdH4CmWNg+/f64q0TS2n/LnCAW4/c8PMk
i0XwyB67StfR+Eh2GN7/Utn44wH134K9NXuPriOzP8Azxkx/svEW9Q/kYXt8
YjPqN413RHawdpigWEb7C2kAzLnx5OUXer2KBPhz1wM/vpFZRXDfeV5lo+qp
/x0st3my8zMdf4T9+Sp+8YbiX47vqZ8Hu3uFVZ8ky1fBlbMvN58nqw/CJzd0
yrxK5lyHk7c/+r3xN/W/hTMTelc//0X9fab9XV9epjjQdJkNbFggEJmR6/zh
+uqgIiXtf9kHYMv5B8YM+zf+KYCfl6Zc2ULnA6JmeOeyji0+prT/Z9up+OsF
U3LrTGj5W8NV2Tl5Y2k6yxe+caFijpUl7f/3w6d6ngsxGUv7/3x4xcPEDln0
eEkj3Nr+8Ml++n0HubY9/r6VTXFHA9r/T4AtP3aKtKTXw1kO9xt+Z2ZPI9r/
x8AWG5+y7w2k/f8l+NC5hKACNu3/6+D63MNWun3p+NdtuopfaLFsihsdL9jj
YMO2XbxiCzr+ecHXzX+N60HfHxftgc12+viupe+XS3Pg1Vo25iX0/XNFLbyn
p2XEcZrO6uqg4nd+USK4S+Zawqelr1NkQ6h/Cdyz7vxCJfVIIuCUn0NO/yDL
ZTD/eOcDmTS+Uj+HP+5kpUvp/ICjOQPH0+djQ6T0fXiBORzZoDspgY5f4oVw
5eh+5678G//vhLNnuFR+e0TL/wxs2WvnhVt0vsCugpNGhdvkFdLy7+io4r+t
aZiefZXW/9GwKELC6n2D1v958IUuwzp9WELrvxi+G3PD0bwL/f7Badg0/LCJ
gSX9/sMTuI9NUP06C/r9hz+wgeNHw4bh9PsPI2aq+EHl3Ak/BtDvP7jDFp8/
RX6ZSr//sB02bNiz0dSGfv8hCzaYWVS9ahz9/kPF38eb3XwXQRb/hFfXdlSb
TqLffzB2UvGnZ75wCTRmXCeAz/cWPNOhv88Ogdu05AfYGox5x2HeKN9L7G/H
mP6HsHKo5pDRLMbSb/Ag1+OWwrdHmf6hs1R8++z3Y5c2MmbNgR/GRWtfbGDM
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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
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
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
Bp6u/GuDvTz1iuEqs55FT8jsn/DCtLWxCnrUayYj4dzonl3ppEa9M+H7eVlR
kgH0+rthja6enS/G0eudLivhPIzwfDOR7t8ZBl8aOcJlzQean4WwVoupuea/
/VEJvD/SsG4hzWf8b7DDcMnFajkaL0M5CUf115AQExV6/a7wMr2Tn907aX5e
D4fKPk4qfknzcxpcK215cfELmp+L4E2P5Mz939P+6TPcOjPuytgS2j/py0s4
qRG6KuWFtH9ygTtUwnJW5NP+iQcrPcrjV3vR/Jz811PFA3ucaH4uhDcljo34
+SuF6f8EV1nLZWzsY9ypq4Dtyf+638HPjI2mwIbfmlxadzP2Wg0rLj3w4U4s
Y/4R+ES/sM1nexhn5sM7vl7cffsl4/o2+IzCROPqXMYa2op4/4U5TxMeMGaz
4aKoigNBlxnzVsKGmXUlmlmMhYfg+3YRCSo3GIvz4PbjmsmHLzGW+ggPGc8L
0TvFmKWphPsHcOWdBYy5jvBPY5t1X9cyFiyDtWrMFwbwqD8RXn/+l4rjOurP
gSvvhma60/2NPsAK5/xefl5B/RrKEs7sbI3nMmT+RLh/0rHrQX7UHwQ3uKe4
PHOh/gT4e3HS+PIJ1H8Hnrx5RcBjMvs9PGuFe6zzcOpX7S/hTJy7ZlnpUOq3
g9fYlM3+qE39i+BQ0+FPT+pQ/z4439XlcyXdn3UTfnB5eNtAup1bD5t8SH5r
rEz9yioSTvaX9elNZNF4WGb4m8vZ7clM/0LY9Ss3e0k5Y6M4eHtghprfU8Ze
1+E36XrNIx4w5r+Bw8x7dEzJmQqq6A9hT6q9ybh+LJwTGqmkn8lYIwAe1Toj
yeQ4Y/YueHTaudoNhxjzMuHwbd51u8cxFtbAmRNNz80ii2XVJJw/opIZ78Yy
lrKCR1rw2kysGLP8Ya+yJbKJLMbcHbBjWZrk1RjGgstwpfndIa9GMha9gvNb
X1uWkDv7qUs4nhH2RZU61D8KPuOtr87VpH4/2MI/ryuKzOfDF1NGPZ8zhPoz
YJFMRNpnFep/AfsbTG2U+XmM6f8DVzapW1Q3M2aP0JBw9u4Ob2Q3MubNhhfM
LFnn946xcBvsEJoc1lbFWHwOvjosZYt1NWOpcth1dt8AVg1jVh/c83XwAek2
xlzzARKOwOZNs5cT9XvBkQHXZJqcqX8zPMip1kW1ibl/52nY8lH2wVp6fqMy
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
Z99h8453s6Ofp/z3P0sY3ZQ=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
aH5BGTy2/WxaKFncDpeo3Z1m0/FdNjhfyd+lFZczmR5fNwuuH9ugl/uUjv+b
YPXuaP3k53T8l8Kf5udsDSeL7sL9BJ2MUyro+P8JVqQeDeuloOP/oCsY30cL
tmx+yJg1E04SjvBypdfDXQ8PG3j7zwH6e8IUmHeO3TyIXo+kBJ7vVRA/9l9/
Kzy5gP2M94z69a9if5ixwmAovR6OA8ybtzqlD1kgghN/Dh6jqKX+w3D20XdX
9r6g/lvwbGmTVSy5rgVWe/QK8Kmn/oEFON/etsSoB5lnB+/kKfx/1lF/ADyn
S8aTNrI0AW4Qpn/vRvMrbsAua/VdNzRS/zvY6pSVUf8G6u9/TckXv1uy6SnN
L+TBiR+vSoPJklVwXGvC1b70/PKDcKz24LnaZHUhPLpL/oWal9T/Fo4e3VVP
RT2CPoVK/tOSFOPAGuq3gSdpGy1MJ8v8Ybd+IsNMcl0sHFX18dZ3MrsAHtCn
SXmUzGuGTez1RjwcTes/+7qS/3XP3bufptL6bw0HD3o3s9WW1n8fePMBoxEX
aDprP1z8p/7zbjI3H04V3OFZkYWNcOaIe1uOTKTtX1uu5FdoGR3zJcsnwDXc
xzERND5UL4MnlF+YYEvmxMA+XtrD5ONp+78ED/s1Z64bTRfXwRuDB2z3J8u6
3VDyu+kM0hhrTdu/FbzeZfWCrVNo+/eCFcU77G3p9fH2wGktJeZG06g/Bz5T
MK/Xg5nUXwuvfHV74EKyokuRks9u6mQ6RED9lvDgS4HuG2j8yl0Cy1qDtcbP
p/4IuFRzJL/rEuqXwQnttSLrpdT/HNY/ePBLZ5pf3ekmxr+jrgzYvID6zeFF
WsFn6+dR/0JYOcou1I2mi3fCnyrlvVMWUf8ZuDqlcTl3MfVXwl9zXHQXkdkd
byn5EcaOIRY0P280vLvzoVZjsmgefE/9w/O0kPrFt/7uH8Z77POl/lNwxaaD
0y6vof4n8OH/JvYYHEz9f+CyJay2rvupf8RtvN+62dpDyBJ3+Pa0j2X5NB6R
b4dTdFPa/6PxkDrz9t/xdftNDo2XOBVwrI1cYnSc+n/CrueumJtmUb9xMc6/
xK/flJNlAljkdKc05jT1by3+O36du/FzDvUfh/UtXMLz+HT8ewgvN5xVMSWK
jn/f4MLu99wr4+n4N7QEx8OXdd9Tr9Lxbzb8dkr2+kD6PIYVDAct2DwrvpiO
/2mwe0KXull36Ph/H/6U2eHNKrLkCxyc77Gn4Ckd/zmlSv5W7kcvwyo6/jvB
WcO3PuY/o89/NsLrT08fW0KfNwmOwbfFSdbbmunznzvw7z2DJBe60+dfbfA3
s5hRFn3o8y/DOxhvWFxwH0VmO8JhZx6t3zSAMW8dHHpH4jLHhLHoCDz0tiA0
OIA+/yuGO4fET591gD7/U8N3l+jkB6XR53/6d5X8QR0sf1zJpc//psMprB6p
dVfo879AOG/Z3ucT7tPnf0nw0GFvTmeS5Tdhs8EhXBlZ/R7Obvi6seEhff6n
ew/bT/gyz4tkwTT444PyJUPYOUz/GjjuYH6AYy/GskPwvckzOl70Y1wnh099
4X1S5TFmq/5a19h57V3GvH738f44rG7IuMdYZAs/9PhSH0aWroRzYqW7fjxg
rIiDqw7MlqvIrEJ4+Ca/tscPGXPfwFbnord9rWQs7F2G8f5QrclmzxlLpsCG
yx5cDyfL/eApoSu6e5PVEnhqcoOFgMy5CrfPd/4STBY0wS5vC/nPyOKeD5T8
rmc9uOJq6p8EL3u94ugmcp033EvZTXyMzP4PLv54/uqkBuq/DG8e1eHK73rq
b4BPa2n46HbMZfp7PMT+ZsycbWs0GCvGw6+N2256k1nL4Pzfcx+9JnOj4V5R
d65ZajIWXoSf/qchae7GWPIS3tPUs0PHHozlWgrMH50m3NydsXosvP3T6DAP
MmcpHP2ik32INmNBFCxJaM7ercNYfAFeGxO4azo9n6wG/jr+U40JzV/XuVzJ
31To2j2ezLaAP+cZbCsk8xbDzZP0qpvo9Yl2w2Fdq79maFH/OXjo3pqVh+j5
Fc/gk5qFulIyq1MFjjcz/P4cI3PHwIqwjiNf96P+BXBEwLQPfgOoPxw2v+84
OLcv9WfD+wVmI7/2of6nsOXJvk0/yZwOj5T8Ga6ac4x6U/8oeG5zzRxVL+r3
gK8NnjrzFpv6w+DaDTcWvibXnYS/VrwIc6DHsx/DSfb2u+Po+Xm/4ZFOl1dc
N6B+08dY348XNY0YRP1u8PqXXTeKDal/G6x2+tPYn8zKhJce+mBYQOaWw9Ni
Dru1GlH/D/heYa4/azj1D3+i5F9KGbOs4xjqd4F3d5+/38SE+rfAJk+7v+s/
ivozYJ+utrOGkAUP4D/rjq5NHUn9X+Fjd8on3CDLhjzF+Gew/FQ3S+p3hpOn
fTRJI7M3wznDA2LDrKg/FY7OPtchjiy6B0syBxvecqT+z/Cx0gntz8kKo0oc
P6zPW1gKqN8JfhZYYD+czN0Ap2atrDo8l/qP/p3ec+j6ZpouKYWbvuv9XE+W
f4T/k2ocGRhE/QZVSn5b5G7pAjJnBvzoaB/rGWupPwjm7qiYdGU59SfDPFPD
/9z8qP82nD44Recoue4DHBd/0XW2L/XrPVPyX2jFllV6U7897KDL2WRPFq2F
kwJaLhR4UX8i/O1Dt70bFlB/ETygelNC1Hzqfw83lN4cGkLmDnj+9/2tuRlK
FvLhEefqLbj0eMlq+M+eTqNkZHk8/N2iw8rxHtR/HWZvXuBiPpn6lXDSrFHL
v42n/r7VOB6tqMlpM6X+qbBHjz3rQ2j9ka2Apx+b/eMmrb91B6r/7q96R3+g
7ZF9Da7MSdxfTNsP7zXMNkjhtNpQf68aJf9m0B3OsbHUPxleFFS5wJDWD4Uv
PFJHM6enNfVLav4en7raF02i/ivwvBG2uf1puvAV7HIic5SaeiQ6tRgvzWmY
6m1B/RPhxl/eP1bpU/9y2O7RVWdD2h45++Ct+11KXw6k/jxYoMW7/UGP+uv/
ethI089/aP/f/YWS3/vjjlN7Wmn/Pw7uVZkQV6Gi/b8Qnhl7tr3nVtr/74Xd
55jvvrKRxj+58PjvjeHCfjT+eQFHN8bvW9VG47+uLzFeLlU/iO5C45+x8Ff1
5Xe+d2n85/l3ummWgettGv9FwotPB8sqaTwpOQ+bq86f9+fS+K8a/lTbKM4c
QeM/zTol32hxfIHuUBr/ceGdHV6smWpI479F8MMTbe9d9Wn8tws+0Cn+/T5t
Gv+dhbv02LDqUA8a/1XBP+cUd3TUovGfRj3+ftep+47q0PjXDH4jD8v73JXG
v/PhUv0Lp3Q70/h3Bzw+w/vIc7rerTgN+7zadsLl3/Xvp/Drceev2aXR+R+r
AeMdZw+vrzF0/jcS7rlar1PDRjr/mwv/55k25yyfzv9CYQ8fZ21LWzr/y4If
+73fEzuFzv8ewfmFh5cFWNP53y94d07pJX+y2KRRyT/fbe/tT5Po/M8VXmzW
plc4kc7/QuARax5mrxpP538n4PeBA64HkXmKv9PfjtuzhSz6Dq/bn9i+cTCd
/w57heNTXMTmFxw6/50Dr36hvWaAIZ3/boEnrZzRdZM+9afDB7SMz/cjC8vg
B4krrWvNqL8dnlPu6sYaQ/2Dm7C8+D+FnSZT/yz4plp+MpPM2QRXP/FaYko9
AinMcXh6faoD9d+F57gmHbxNln2CPf0uH/45g/oHNSv5ublW0WnTqX8m7LSH
1buS5ueth+3iKz3GzqP+lOa/11Ofhgndqb8Exti+hztZ0QrXjzk2124h9Ru8
xv7E12ryN1fqd4DfTK+dWr2A+kVwz8NLHQvJksNwB/v6q5xF1H8L9tD/OVRE
09Ut8NT7Fd0v0+vlDHyD8b40r9aDXq/ADo7akm3iQu+fOADeHLghvYlL/Qmw
b9oZPSXNX3cDtvzRo+i0I/W/g48UrlufQ+b1f4vjwUPP+dvJIh6cy1mlfkiW
roLX5z2OvuNE/QfhLSZaNXfJrOvwrA+/gqpofu5b+PonR/nomdTfR4nzpeq3
vSX0eiQ2sGDiPd1gstwfbvc9nVdKVsfCG5/HOoyjx3MK4DeanhH6s6i/Gc7b
M6vc2pn62Sol/9XxiQN3zqF+azjjSP8ko9nU7wOXbdj6JciG+vfDez8/bVxF
6wcvH940dL70IFnUCGf23Wk7k7Y/qfY7HE/UU6QGtH0pJsDW7zvI73ei/uWw
/obEfAsN6o+ByzquH7TjBPP5nvAS3FOxLG9ZJn3+Vwe3tv7m5kfS53/d3mO8
lG59fFgUY7UVPE7yvf44meMF+264MCh6Lt3/tgdeNLUgbD1ZnAOHfz996rYb
3f9WC4fdL5SVudP9b11asLws5JwRNJ1tCWfaeGY1zGHMWwKHHnTqFejMWBQB
P+ziM16PLJXBOwNPTA22Yax4Dics3yWJI7M0Pyj5E7aJC0OnMOaaw03Lpg04
TRYuhEP2vymKJkt2wty9zqtO21L/GVi12KZiJlldCevzTmUfJnM6qnG+XHrY
tIIsGA1XiVqOzJpK/fPgbtJnj8UTqV8MKy97m/Wh6XWn4PClczv5k9lP4Nda
rK8D6Pl4f+BeeRM2XKTpohGteL3bR9zcRZa6wzcnZU5zIyu2w4rHtoXj6PGs
LPj04lHcNprOrYDtv/W+/5Qs/AmfLBw5K5gsMf6o5P9ym7Wj1Zr6BfBKi/IH
eyZR/1Y4ovM8rSZ6vzjHYaPs1bfE9H4LHsKe1y4NLuJT/zc4ZNvELXYe1D+0
DePHKl6Bxjzqnw03633qs2ch9QfDM3pZpXoup/40+ELXFa/8V1H/fVh5PXTe
sgDq/wIvfu7zURBE/ZxPSj5rUGZJqoj6Z8EbprXNOUGP526EX/AMqhPXUv8x
+MPqtRaHyZI7cOnqyqIysrwN9jhqcCFjDfUbflbysxacH8QlcxzhcWdCp/Si
z8sF6+Bv4fEt3cniI7DMKHK/nj/1F8PODe+7nCPXqeFpKcKvZ2l+tv4X7K82
3Suo86X+6XBsRI3pZbIoEHbnLJsSQ4+XJsHmaZEhg7yo/ybcc9hED0MyqwV+
zG55sn4+9eu24/nuus/yIgunwXEZva1O0/KQrIGLuYt7fqPtV34I/jQnykCH
lp9aDjd1YTv4C6hfBX9I+znzswv19/uK7SH77Yw+NF1sC+fOPJ9hQduzbCXs
PTKd+51cFwc3P4yZPcaV+gthRXCIRbEn9b+Bb1lO2GAbSP29vyn5tjfK1AJa
vtIp8Pkyce6ff8vfDw7SXsHXWkf9sXDwlrgih2jqvwpPas+yNpNQfxO8pzAu
3PYg9ff8ruSveZa+XU2WT4IXth421o6nfm946LleKUvSqP8/+HpUhxR/suAy
nN25f6YL7U/FDXCVRZZRTBb19/iB17tk1hCj09Q/HjaI3DlM14L6l8HNK78/
Kdal/mj4Ys3w+cc51H8RDp47fJ+jCfW/hEtM5ix1JSu0fir5Zw8Jy5PMqd8K
dsjU3yG3pP6lcO0+z5e5ZGEU3Ph9zoZssuQCrP/aIvQN7a/kNbD1UKwNtL2r
O/9S8l/WFb3sR/sHjgUccqStRnsy9S+Gg2efCUscT/27YXXSbKdb1Cc7By/Y
bNPxkRn1P/v7fBpvmj4Ppf5Ov+GRrMXGval/DFyzKerWDrJoAXxs+t59EztQ
fzisU3jU+WB36s+GnTPOh839Sfe/VMIhI0+mzftM9790+KPk91cP419V0/0v
o+BJkUG7i1SMJR5w/OrLOZbPGcvD4IYtKaXW9YzVJ+GK/gtnHqhlzHkMbxPd
XR1I8wt+w/pnHkw/94Kx2JSl4gfMi12xlyxzg52efz4xkFy3DU58v7Nmew1j
diZ8zHZRc00ZY145XJG6svpCEWPRD7ijXX+X2ecZS4d3UPEnZHI1jeMYK1zg
gne/Iv08qX8rbNDde2sYmZsB350Xv73NnfofwF/P6g3SCKX+r38fvze4elgI
9Q/pqOKzjyy16LSM+p1hYVOry1oh9W+G39S89nH0pv5UWKv4rv7LhdR/D75b
kVEZyqf+z7B6U/k260q6/9tIQ8W3He395ByP7v92gtvrRn880o8xbwO8dNKZ
QTfT6P7vo/C1/AK925GMpaXw4w52AyN2MFZ8hN9cHtetaDtjlmEnFX+hv4VZ
cChj7gz4S+iXLSwBY2EQnDLu1OK+jowlyfDB9f3fJExlLL8NW5yf4Nu7F2P1
Bzj9MHf0dzZjjp6mih/40n3HmyvM/eECe3jJRulN/2TG4rXwo8HJ5wccYSxL
hC2Xh2mN2cu4rgi2deob3OLPmP0ettB/NTD8LN3/PaCzin9FL3h4pSvd/82H
DbbarYocSPd/r4YtL7N3xlTQ/c/x8GFDzRK3i3T/sxxO2CKL6hFN9z8r4f2V
9iO+7KX7n/t2UfELc6KOm9N0yVT4xu91Pj6RdP/zCtgpdlta4n90//MB+NuL
thsWT5j7zzjX4Ppibw3rZ4wFr+H/BvoHhTyk+397dUWfr9baz3uY+9dkk+Fg
l42+F93p/l9f2PQyiz1gCWO2BO689WDniQvo/t8rsODG1gfhM+n+t1dw/9aS
lMNOjKU6Wir+quSheiU0XTERNvg59lvNUMYsb1h3ceVB1SDG3H3ww8TIN8FG
jIV5sDaf/TzBkLGkHl7x/Nq6ExzG8u7dVPytplUb3QczVo+Dg563DVxgwJgj
hBcMLQttnMBYsBfetORnjquAsTgXzo/S/WlAvbIXcNd72b+KLam/a3cV/1DC
2RBPejx7LCzf4rP4Zhnd/+cJ1zcEb2stZiyKhNdcNswufUr3P5+HN2fsGHCh
gu5/roYFB64sSblN9z937qHin7iTpWusQ/1c2P33rrKTJ+n+70Xwu2f8lXZC
ZvlJdsE7BM3XcxYzlp+Fl0UJih4tZayugkP5OifGrqblr6GNnj2enSVrafmb
wWGyJr1lKxmL58MHF0ZoX9/BWLYDLl0RKt6/k+5/Pw0vlp3Y/5vMfgp3zvte
lBBP97+zdFT8If81at2LpfvfR8IVc2OqBmXS/Y9z4Wor/vUR5+j+91B4tVFE
LPsN3f9+Es5VLu6U9Jruf38EH78bH+KoZCz8BasWLG6MIktMemJ/mP6uu1hF
/a6w5YOxqTrvqT8ErhiwfNZwMucE/H5cj0txLdSvgMV3dXf0/Uj93+GggOCr
pWTZMLaKP6b1eOKkz9Q/B95r13Sw37/7/7fAT09dSLWopv50eE6L4c9dz6m/
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
eujJyWxnmBezRr49lfo3wUtyfET3yCIpfMlDb9zcFuq/C4udz52OofGg4hPs
kbx7ne0U2v6Npqr476ZtLPhA+0fuTPjJuBbzQDqeC9fD46r6NK1tpv4UuPvo
m4Mv0nhNXgKnNTcb96XtTd0KX7sWdH4CmWNg+/f64q0TS2n/LnCAW4/c8PMk
i0XwyB67StfR+Eh2GN7/Utn44wH134K9NXuPriOzP8Azxkx/svEW9Q/kYXt8
YjPqN413RHawdpigWEb7C2kAzLnx5OUXer2KBPhz1wM/vpFZRXDfeV5lo+qp
/x0st3my8zMdf4T9+Sp+8YbiX47vqZ8Hu3uFVZ8ky1fBlbMvN58nqw/CJzd0
yrxK5lyHk7c/+r3xN/W/hTMTelc//0X9fab9XV9epjjQdJkNbFggEJmR6/zh
+uqgIiXtf9kHYMv5B8YM+zf+KYCfl6Zc2ULnA6JmeOeyji0+prT/Z9up+OsF
U3LrTGj5W8NV2Tl5Y2k6yxe+caFijpUl7f/3w6d6ngsxGUv7/3x4xcPEDln0
eEkj3Nr+8Ml++n0HubY9/r6VTXFHA9r/T4AtP3aKtKTXw1kO9xt+Z2ZPI9r/
x8AWG5+y7w2k/f8l+NC5hKACNu3/6+D63MNWun3p+NdtuopfaLFsihsdL9jj
YMO2XbxiCzr+ecHXzX+N60HfHxftgc12+viupe+XS3Pg1Vo25iX0/XNFLbyn
p2XEcZrO6uqg4nd+USK4S+Zawqelr1NkQ6h/Cdyz7vxCJfVIIuCUn0NO/yDL
ZTD/eOcDmTS+Uj+HP+5kpUvp/ICjOQPH0+djQ6T0fXiBORzZoDspgY5f4oVw
5eh+5678G//vhLNnuFR+e0TL/wxs2WvnhVt0vsCugpNGhdvkFdLy7+io4r+t
aZiefZXW/9GwKELC6n2D1v958IUuwzp9WELrvxi+G3PD0bwL/f7Badg0/LCJ
gSX9/sMTuI9NUP06C/r9hz+wgeNHw4bh9PsPI2aq+EHl3Ak/BtDvP7jDFp8/
RX6ZSr//sB02bNiz0dSGfv8hCzaYWVS9ahz9/kPF38eb3XwXQRb/hFfXdlSb
TqLffzB2UvGnZ75wCTRmXCeAz/cWPNOhv88Ogdu05AfYGox5x2HeKN9L7G/H
mP6HsHKo5pDRLMbSb/Ag1+OWwrdHmf6hs1R8++z3Y5c2MmbNgR/GRWtfbGDM
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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
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
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
Bp6u/GuDvTz1iuEqs55FT8jsn/DCtLWxCnrUayYj4dzonl3ppEa9M+H7eVlR
kgH0+rthja6enS/G0eudLivhPIzwfDOR7t8ZBl8aOcJlzQean4WwVoupuea/
/VEJvD/SsG4hzWf8b7DDcMnFajkaL0M5CUf115AQExV6/a7wMr2Tn907aX5e
D4fKPk4qfknzcxpcK215cfELmp+L4E2P5Mz939P+6TPcOjPuytgS2j/py0s4
qRG6KuWFtH9ygTtUwnJW5NP+iQcrPcrjV3vR/Jz811PFA3ucaH4uhDcljo34
+SuF6f8EV1nLZWzsY9ypq4Dtyf+638HPjI2mwIbfmlxadzP2Wg0rLj3w4U4s
Y/4R+ES/sM1nexhn5sM7vl7cffsl4/o2+IzCROPqXMYa2op4/4U5TxMeMGaz
4aKoigNBlxnzVsKGmXUlmlmMhYfg+3YRCSo3GIvz4PbjmsmHLzGW+ggPGc8L
0TvFmKWphPsHcOWdBYy5jvBPY5t1X9cyFiyDtWrMFwbwqD8RXn/+l4rjOurP
gSvvhma60/2NPsAK5/xefl5B/RrKEs7sbI3nMmT+RLh/0rHrQX7UHwQ3uKe4
PHOh/gT4e3HS+PIJ1H8Hnrx5RcBjMvs9PGuFe6zzcOpX7S/hTJy7ZlnpUOq3
g9fYlM3+qE39i+BQ0+FPT+pQ/z4439XlcyXdn3UTfnB5eNtAup1bD5t8SH5r
rEz9yioSTvaX9elNZNF4WGb4m8vZ7clM/0LY9Ss3e0k5Y6M4eHtghprfU8Ze
1+E36XrNIx4w5r+Bw8x7dEzJmQqq6A9hT6q9ybh+LJwTGqmkn8lYIwAe1Toj
yeQ4Y/YueHTaudoNhxjzMuHwbd51u8cxFtbAmRNNz80ii2XVJJw/opIZ78Yy
lrKCR1rw2kysGLP8Ya+yJbKJLMbcHbBjWZrk1RjGgstwpfndIa9GMha9gvNb
X1uWkDv7qUs4nhH2RZU61D8KPuOtr87VpH4/2MI/ryuKzOfDF1NGPZ8zhPoz
YJFMRNpnFep/AfsbTG2U+XmM6f8DVzapW1Q3M2aP0JBw9u4Ob2Q3MubNhhfM
LFnn946xcBvsEJoc1lbFWHwOvjosZYt1NWOpcth1dt8AVg1jVh/c83XwAek2
xlzzARKOwOZNs5cT9XvBkQHXZJqcqX8zPMip1kW1ibl/52nY8lH2wVp6fqMy
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
Z99h8453s6Ofp/z3P0sY3ZQ=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.956256*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.956256*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
aH5BGTy2/WxaKFncDpeo3Z1m0/FdNjhfyd+lFZczmR5fNwuuH9ugl/uUjv+b
YPXuaP3k53T8l8Kf5udsDSeL7sL9BJ2MUyro+P8JVqQeDeuloOP/oCsY30cL
tmx+yJg1E04SjvBypdfDXQ8PG3j7zwH6e8IUmHeO3TyIXo+kBJ7vVRA/9l9/
Kzy5gP2M94z69a9if5ixwmAovR6OA8ybtzqlD1kgghN/Dh6jqKX+w3D20XdX
9r6g/lvwbGmTVSy5rgVWe/QK8Kmn/oEFON/etsSoB5lnB+/kKfx/1lF/ADyn
S8aTNrI0AW4Qpn/vRvMrbsAua/VdNzRS/zvY6pSVUf8G6u9/TckXv1uy6SnN
L+TBiR+vSoPJklVwXGvC1b70/PKDcKz24LnaZHUhPLpL/oWal9T/Fo4e3VVP
RT2CPoVK/tOSFOPAGuq3gSdpGy1MJ8v8Ybd+IsNMcl0sHFX18dZ3MrsAHtCn
SXmUzGuGTez1RjwcTes/+7qS/3XP3bufptL6bw0HD3o3s9WW1n8fePMBoxEX
aDprP1z8p/7zbjI3H04V3OFZkYWNcOaIe1uOTKTtX1uu5FdoGR3zJcsnwDXc
xzERND5UL4MnlF+YYEvmxMA+XtrD5ONp+78ED/s1Z64bTRfXwRuDB2z3J8u6
3VDyu+kM0hhrTdu/FbzeZfWCrVNo+/eCFcU77G3p9fH2wGktJeZG06g/Bz5T
MK/Xg5nUXwuvfHV74EKyokuRks9u6mQ6RED9lvDgS4HuG2j8yl0Cy1qDtcbP
p/4IuFRzJL/rEuqXwQnttSLrpdT/HNY/ePBLZ5pf3ekmxr+jrgzYvID6zeFF
WsFn6+dR/0JYOcou1I2mi3fCnyrlvVMWUf8ZuDqlcTl3MfVXwl9zXHQXkdkd
byn5EcaOIRY0P280vLvzoVZjsmgefE/9w/O0kPrFt/7uH8Z77POl/lNwxaaD
0y6vof4n8OH/JvYYHEz9f+CyJay2rvupf8RtvN+62dpDyBJ3+Pa0j2X5NB6R
b4dTdFPa/6PxkDrz9t/xdftNDo2XOBVwrI1cYnSc+n/CrueumJtmUb9xMc6/
xK/flJNlAljkdKc05jT1by3+O36du/FzDvUfh/UtXMLz+HT8ewgvN5xVMSWK
jn/f4MLu99wr4+n4N7QEx8OXdd9Tr9Lxbzb8dkr2+kD6PIYVDAct2DwrvpiO
/2mwe0KXull36Ph/H/6U2eHNKrLkCxyc77Gn4Ckd/zmlSv5W7kcvwyo6/jvB
WcO3PuY/o89/NsLrT08fW0KfNwmOwbfFSdbbmunznzvw7z2DJBe60+dfbfA3
s5hRFn3o8y/DOxhvWFxwH0VmO8JhZx6t3zSAMW8dHHpH4jLHhLHoCDz0tiA0
OIA+/yuGO4fET591gD7/U8N3l+jkB6XR53/6d5X8QR0sf1zJpc//psMprB6p
dVfo879AOG/Z3ucT7tPnf0nw0GFvTmeS5Tdhs8EhXBlZ/R7Obvi6seEhff6n
ew/bT/gyz4tkwTT444PyJUPYOUz/GjjuYH6AYy/GskPwvckzOl70Y1wnh099
4X1S5TFmq/5a19h57V3GvH738f44rG7IuMdYZAs/9PhSH0aWroRzYqW7fjxg
rIiDqw7MlqvIrEJ4+Ca/tscPGXPfwFbnord9rWQs7F2G8f5QrclmzxlLpsCG
yx5cDyfL/eApoSu6e5PVEnhqcoOFgMy5CrfPd/4STBY0wS5vC/nPyOKeD5T8
rmc9uOJq6p8EL3u94ugmcp033EvZTXyMzP4PLv54/uqkBuq/DG8e1eHK73rq
b4BPa2n46HbMZfp7PMT+ZsycbWs0GCvGw6+N2256k1nL4Pzfcx+9JnOj4V5R
d65ZajIWXoSf/qchae7GWPIS3tPUs0PHHozlWgrMH50m3NydsXosvP3T6DAP
MmcpHP2ik32INmNBFCxJaM7ercNYfAFeGxO4azo9n6wG/jr+U40JzV/XuVzJ
31To2j2ezLaAP+cZbCsk8xbDzZP0qpvo9Yl2w2Fdq79maFH/OXjo3pqVh+j5
Fc/gk5qFulIyq1MFjjcz/P4cI3PHwIqwjiNf96P+BXBEwLQPfgOoPxw2v+84
OLcv9WfD+wVmI7/2of6nsOXJvk0/yZwOj5T8Ga6ac4x6U/8oeG5zzRxVL+r3
gK8NnjrzFpv6w+DaDTcWvibXnYS/VrwIc6DHsx/DSfb2u+Po+Xm/4ZFOl1dc
N6B+08dY348XNY0YRP1u8PqXXTeKDal/G6x2+tPYn8zKhJce+mBYQOaWw9Ni
Dru1GlH/D/heYa4/azj1D3+i5F9KGbOs4xjqd4F3d5+/38SE+rfAJk+7v+s/
ivozYJ+utrOGkAUP4D/rjq5NHUn9X+Fjd8on3CDLhjzF+Gew/FQ3S+p3hpOn
fTRJI7M3wznDA2LDrKg/FY7OPtchjiy6B0syBxvecqT+z/Cx0gntz8kKo0oc
P6zPW1gKqN8JfhZYYD+czN0Ap2atrDo8l/qP/p3ec+j6ZpouKYWbvuv9XE+W
f4T/k2ocGRhE/QZVSn5b5G7pAjJnBvzoaB/rGWupPwjm7qiYdGU59SfDPFPD
/9z8qP82nD44Recoue4DHBd/0XW2L/XrPVPyX2jFllV6U7897KDL2WRPFq2F
kwJaLhR4UX8i/O1Dt70bFlB/ETygelNC1Hzqfw83lN4cGkLmDnj+9/2tuRlK
FvLhEefqLbj0eMlq+M+eTqNkZHk8/N2iw8rxHtR/HWZvXuBiPpn6lXDSrFHL
v42n/r7VOB6tqMlpM6X+qbBHjz3rQ2j9ka2Apx+b/eMmrb91B6r/7q96R3+g
7ZF9Da7MSdxfTNsP7zXMNkjhtNpQf68aJf9m0B3OsbHUPxleFFS5wJDWD4Uv
PFJHM6enNfVLav4en7raF02i/ivwvBG2uf1puvAV7HIic5SaeiQ6tRgvzWmY
6m1B/RPhxl/eP1bpU/9y2O7RVWdD2h45++Ct+11KXw6k/jxYoMW7/UGP+uv/
ethI089/aP/f/YWS3/vjjlN7Wmn/Pw7uVZkQV6Gi/b8Qnhl7tr3nVtr/74Xd
55jvvrKRxj+58PjvjeHCfjT+eQFHN8bvW9VG47+uLzFeLlU/iO5C45+x8Ff1
5Xe+d2n85/l3ummWgettGv9FwotPB8sqaTwpOQ+bq86f9+fS+K8a/lTbKM4c
QeM/zTol32hxfIHuUBr/ceGdHV6smWpI479F8MMTbe9d9Wn8tws+0Cn+/T5t
Gv+dhbv02LDqUA8a/1XBP+cUd3TUovGfRj3+ftep+47q0PjXDH4jD8v73JXG
v/PhUv0Lp3Q70/h3Bzw+w/vIc7rerTgN+7zadsLl3/Xvp/Drceev2aXR+R+r
AeMdZw+vrzF0/jcS7rlar1PDRjr/mwv/55k25yyfzv9CYQ8fZ21LWzr/y4If
+73fEzuFzv8ewfmFh5cFWNP53y94d07pJX+y2KRRyT/fbe/tT5Po/M8VXmzW
plc4kc7/QuARax5mrxpP538n4PeBA64HkXmKv9PfjtuzhSz6Dq/bn9i+cTCd
/w57heNTXMTmFxw6/50Dr36hvWaAIZ3/boEnrZzRdZM+9afDB7SMz/cjC8vg
B4krrWvNqL8dnlPu6sYaQ/2Dm7C8+D+FnSZT/yz4plp+MpPM2QRXP/FaYko9
AinMcXh6faoD9d+F57gmHbxNln2CPf0uH/45g/oHNSv5ublW0WnTqX8m7LSH
1buS5ueth+3iKz3GzqP+lOa/11Ofhgndqb8Exti+hztZ0QrXjzk2124h9Ru8
xv7E12ryN1fqd4DfTK+dWr2A+kVwz8NLHQvJksNwB/v6q5xF1H8L9tD/OVRE
09Ut8NT7Fd0v0+vlDHyD8b40r9aDXq/ADo7akm3iQu+fOADeHLghvYlL/Qmw
b9oZPSXNX3cDtvzRo+i0I/W/g48UrlufQ+b1f4vjwUPP+dvJIh6cy1mlfkiW
roLX5z2OvuNE/QfhLSZaNXfJrOvwrA+/gqpofu5b+PonR/nomdTfR4nzpeq3
vSX0eiQ2sGDiPd1gstwfbvc9nVdKVsfCG5/HOoyjx3MK4DeanhH6s6i/Gc7b
M6vc2pn62Sol/9XxiQN3zqF+azjjSP8ko9nU7wOXbdj6JciG+vfDez8/bVxF
6wcvH940dL70IFnUCGf23Wk7k7Y/qfY7HE/UU6QGtH0pJsDW7zvI73ei/uWw
/obEfAsN6o+ByzquH7TjBPP5nvAS3FOxLG9ZJn3+Vwe3tv7m5kfS53/d3mO8
lG59fFgUY7UVPE7yvf44meMF+264MCh6Lt3/tgdeNLUgbD1ZnAOHfz996rYb
3f9WC4fdL5SVudP9b11asLws5JwRNJ1tCWfaeGY1zGHMWwKHHnTqFejMWBQB
P+ziM16PLJXBOwNPTA22Yax4Dics3yWJI7M0Pyj5E7aJC0OnMOaaw03Lpg04
TRYuhEP2vymKJkt2wty9zqtO21L/GVi12KZiJlldCevzTmUfJnM6qnG+XHrY
tIIsGA1XiVqOzJpK/fPgbtJnj8UTqV8MKy97m/Wh6XWn4PClczv5k9lP4Nda
rK8D6Pl4f+BeeRM2XKTpohGteL3bR9zcRZa6wzcnZU5zIyu2w4rHtoXj6PGs
LPj04lHcNprOrYDtv/W+/5Qs/AmfLBw5K5gsMf6o5P9ym7Wj1Zr6BfBKi/IH
eyZR/1Y4ovM8rSZ6vzjHYaPs1bfE9H4LHsKe1y4NLuJT/zc4ZNvELXYe1D+0
DePHKl6Bxjzqnw03633qs2ch9QfDM3pZpXoup/40+ELXFa/8V1H/fVh5PXTe
sgDq/wIvfu7zURBE/ZxPSj5rUGZJqoj6Z8EbprXNOUGP526EX/AMqhPXUv8x
+MPqtRaHyZI7cOnqyqIysrwN9jhqcCFjDfUbflbysxacH8QlcxzhcWdCp/Si
z8sF6+Bv4fEt3cniI7DMKHK/nj/1F8PODe+7nCPXqeFpKcKvZ2l+tv4X7K82
3Suo86X+6XBsRI3pZbIoEHbnLJsSQ4+XJsHmaZEhg7yo/ybcc9hED0MyqwV+
zG55sn4+9eu24/nuus/yIgunwXEZva1O0/KQrIGLuYt7fqPtV34I/jQnykCH
lp9aDjd1YTv4C6hfBX9I+znzswv19/uK7SH77Yw+NF1sC+fOPJ9hQduzbCXs
PTKd+51cFwc3P4yZPcaV+gthRXCIRbEn9b+Bb1lO2GAbSP29vyn5tjfK1AJa
vtIp8Pkyce6ff8vfDw7SXsHXWkf9sXDwlrgih2jqvwpPas+yNpNQfxO8pzAu
3PYg9ff8ruSveZa+XU2WT4IXth421o6nfm946LleKUvSqP8/+HpUhxR/suAy
nN25f6YL7U/FDXCVRZZRTBb19/iB17tk1hCj09Q/HjaI3DlM14L6l8HNK78/
Kdal/mj4Ys3w+cc51H8RDp47fJ+jCfW/hEtM5ix1JSu0fir5Zw8Jy5PMqd8K
dsjU3yG3pP6lcO0+z5e5ZGEU3Ph9zoZssuQCrP/aIvQN7a/kNbD1UKwNtL2r
O/9S8l/WFb3sR/sHjgUccqStRnsy9S+Gg2efCUscT/27YXXSbKdb1Cc7By/Y
bNPxkRn1P/v7fBpvmj4Ppf5Ov+GRrMXGval/DFyzKerWDrJoAXxs+t59EztQ
fzisU3jU+WB36s+GnTPOh839Sfe/VMIhI0+mzftM9790+KPk91cP419V0/0v
o+BJkUG7i1SMJR5w/OrLOZbPGcvD4IYtKaXW9YzVJ+GK/gtnHqhlzHkMbxPd
XR1I8wt+w/pnHkw/94Kx2JSl4gfMi12xlyxzg52efz4xkFy3DU58v7Nmew1j
diZ8zHZRc00ZY145XJG6svpCEWPRD7ijXX+X2ecZS4d3UPEnZHI1jeMYK1zg
gne/Iv08qX8rbNDde2sYmZsB350Xv73NnfofwF/P6g3SCKX+r38fvze4elgI
9Q/pqOKzjyy16LSM+p1hYVOry1oh9W+G39S89nH0pv5UWKv4rv7LhdR/D75b
kVEZyqf+z7B6U/k260q6/9tIQ8W3He395ByP7v92gtvrRn880o8xbwO8dNKZ
QTfT6P7vo/C1/AK925GMpaXw4w52AyN2MFZ8hN9cHtetaDtjlmEnFX+hv4VZ
cChj7gz4S+iXLSwBY2EQnDLu1OK+jowlyfDB9f3fJExlLL8NW5yf4Nu7F2P1
Bzj9MHf0dzZjjp6mih/40n3HmyvM/eECe3jJRulN/2TG4rXwo8HJ5wccYSxL
hC2Xh2mN2cu4rgi2deob3OLPmP0ettB/NTD8LN3/PaCzin9FL3h4pSvd/82H
DbbarYocSPd/r4YtL7N3xlTQ/c/x8GFDzRK3i3T/sxxO2CKL6hFN9z8r4f2V
9iO+7KX7n/t2UfELc6KOm9N0yVT4xu91Pj6RdP/zCtgpdlta4n90//MB+NuL
thsWT5j7zzjX4Ppibw3rZ4wFr+H/BvoHhTyk+397dUWfr9baz3uY+9dkk+Fg
l42+F93p/l9f2PQyiz1gCWO2BO689WDniQvo/t8rsODG1gfhM+n+t1dw/9aS
lMNOjKU6Wir+quSheiU0XTERNvg59lvNUMYsb1h3ceVB1SDG3H3ww8TIN8FG
jIV5sDaf/TzBkLGkHl7x/Nq6ExzG8u7dVPytplUb3QczVo+Dg563DVxgwJgj
hBcMLQttnMBYsBfetORnjquAsTgXzo/S/WlAvbIXcNd72b+KLam/a3cV/1DC
2RBPejx7LCzf4rP4Zhnd/+cJ1zcEb2stZiyKhNdcNswufUr3P5+HN2fsGHCh
gu5/roYFB64sSblN9z937qHin7iTpWusQ/1c2P33rrKTJ+n+70Xwu2f8lXZC
ZvlJdsE7BM3XcxYzlp+Fl0UJih4tZayugkP5OifGrqblr6GNnj2enSVrafmb
wWGyJr1lKxmL58MHF0ZoX9/BWLYDLl0RKt6/k+5/Pw0vlp3Y/5vMfgp3zvte
lBBP97+zdFT8If81at2LpfvfR8IVc2OqBmXS/Y9z4Wor/vUR5+j+91B4tVFE
LPsN3f9+Es5VLu6U9Jruf38EH78bH+KoZCz8BasWLG6MIktMemJ/mP6uu1hF
/a6w5YOxqTrvqT8ErhiwfNZwMucE/H5cj0txLdSvgMV3dXf0/Uj93+GggOCr
pWTZMLaKP6b1eOKkz9Q/B95r13Sw37/7/7fAT09dSLWopv50eE6L4c9dz6m/
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
eujJyWxnmBezRr49lfo3wUtyfET3yCIpfMlDb9zcFuq/C4udz52OofGg4hPs
kbx7ne0U2v6Npqr476ZtLPhA+0fuTPjJuBbzQDqeC9fD46r6NK1tpv4UuPvo
m4Mv0nhNXgKnNTcb96XtTd0KX7sWdH4CmWNg+/f64q0TS2n/LnCAW4/c8PMk
i0XwyB67StfR+Eh2GN7/Utn44wH134K9NXuPriOzP8Azxkx/svEW9Q/kYXt8
YjPqN413RHawdpigWEb7C2kAzLnx5OUXer2KBPhz1wM/vpFZRXDfeV5lo+qp
/x0st3my8zMdf4T9+Sp+8YbiX47vqZ8Hu3uFVZ8ky1fBlbMvN58nqw/CJzd0
yrxK5lyHk7c/+r3xN/W/hTMTelc//0X9fab9XV9epjjQdJkNbFggEJmR6/zh
+uqgIiXtf9kHYMv5B8YM+zf+KYCfl6Zc2ULnA6JmeOeyji0+prT/Z9up+OsF
U3LrTGj5W8NV2Tl5Y2k6yxe+caFijpUl7f/3w6d6ngsxGUv7/3x4xcPEDln0
eEkj3Nr+8Ml++n0HubY9/r6VTXFHA9r/T4AtP3aKtKTXw1kO9xt+Z2ZPI9r/
x8AWG5+y7w2k/f8l+NC5hKACNu3/6+D63MNWun3p+NdtuopfaLFsihsdL9jj
YMO2XbxiCzr+ecHXzX+N60HfHxftgc12+viupe+XS3Pg1Vo25iX0/XNFLbyn
p2XEcZrO6uqg4nd+USK4S+Zawqelr1NkQ6h/Cdyz7vxCJfVIIuCUn0NO/yDL
ZTD/eOcDmTS+Uj+HP+5kpUvp/ICjOQPH0+djQ6T0fXiBORzZoDspgY5f4oVw
5eh+5678G//vhLNnuFR+e0TL/wxs2WvnhVt0vsCugpNGhdvkFdLy7+io4r+t
aZiefZXW/9GwKELC6n2D1v958IUuwzp9WELrvxi+G3PD0bwL/f7Badg0/LCJ
gSX9/sMTuI9NUP06C/r9hz+wgeNHw4bh9PsPI2aq+EHl3Ak/BtDvP7jDFp8/
RX6ZSr//sB02bNiz0dSGfv8hCzaYWVS9ahz9/kPF38eb3XwXQRb/hFfXdlSb
TqLffzB2UvGnZ75wCTRmXCeAz/cWPNOhv88Ogdu05AfYGox5x2HeKN9L7G/H
mP6HsHKo5pDRLMbSb/Ag1+OWwrdHmf6hs1R8++z3Y5c2MmbNgR/GRWtfbGDM
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
NI9/NHyjYmtGA+3+Av4S02I8xYbH/y+8ZeblxiRLHv9BP2vELaebL/Seyuff
drBim89eg3vy+fcO2MVz8Jif6swfAau2fbJqow7z5//z4bJLU+i0P7B1ZGbI
G66PLBvwq0Y81Fxz2n4F5reB5xxraXRp4fqvW+F7iZ1nOsozfxhc33P15qBM
rv+aA4eUzZ49PIzrv/6Elw030awL4fq//X6j/j1yza8+O7j+rzVcuWP039Qt
XP93EyzzGLo+kQ4Ogas+NX08O4fr/2bDyx526nhoNtf/bYKdYs6U1lpy/ds+
f2rE9++cyq4x5Pq3VvD0wN07X9mz/8ML3pK0flHNTPZ/BMF5a/LrnLWZ/8m/
12crvduqyfVvv8M/Dut1+NuT+Xs343za4SzarMX1b6fCgZF6n3q2rn/rAXd6
tXl+zXn2/1yAI143dZt3jv0/j+BxX9UGBfN10Vf4iPa+p+8vsv+nZwuuL/nV
t2Lc2f9jAVfHmxi1ncb+Hzd47DPBKUWuRyt3Dj4ybN52BVqYAQ+rdJ3zQJ/9
P3Vw+seXR3b3Z/+X1l+cr5b79HzpNFPY+GXa56167P9ygRWHqNwy6MP+r9Pw
rPSKWbN6sP/rPjywk/azNlXs/6yB5aSrNG69Z/9nVzmpuKzTwITqSPZ/ToKV
rk75tYwWrIadZRnnhlxi/+cJOF/8ad+u5ez/vQdn6UfNqPvA8S8fYTVZg4r4
Cvv/u7SRig+Jux77yfVq5SbC7ZTib1sGsf9/BewwfsHTzgHs/w+ATx07v+qj
P/v/78Jz53b+vmwXx798gJ/G7R8ZNYvjX9TkpeKMRkuTvlZc/2c8PEhd/n0X
rr8jcYbnqxz5c6Z1/bsj8MCsIe/vt65/dwdOlrm0+f6d4x/ewUU/b3QbwfEN
go5tpeLhuWWn1Lk+pWgMrDB1x4SGbI5/WALP7eizIfoWxz8chOd/Dd1bHMvx
H/GwYoZ7YDbX55SrgDsNnCvawvWnhO0VpOJxqTHbLWjH0bD8kbhcs5sc/7EY
lk24IK8Vx/EffnBN3wHnxnF9OdkN2CSqcpxWIMd/lMP2nid6jLrA8R/KilJx
37yoE+GnOP5jBKz28WvXjkEc/7EA1k9oCBtAV+yFj+7bk5N0mPnj4C3Hszdf
5Xg+USmsnJw5poTj7dwVlKTiupahug/p4GGwkXaodgjXj8udCw9s0rxp07r+
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
xf103Ivho/V9XhbzeVJwm1Fonw7L+fOZzh0CFwf9fX53Jsuz2bBPrOmHqGks
z3zg0+O+SoO4345jFDzkRePWHtxfx78QHjWka1hHOq0F3tAmJlVhNPMPHI3f
/5Bp4GquN607C965NvLVq4nMv330v/vvcrn2JswfDh+PTSndzPlgIomhVJzv
Mqhl3RfWT7fAwx+GflrJ9cGDQ+GmvxkCDzr3OTyxZMLEEVLWT3/Cm8PObNfg
+tBCPSN8vw42k2v4/MpxBjxjU58NK7keuv9GOFawNj8siu2TS7D0kGP9aq4P
L8uCO21+Y6LE9eR1G+Hz0QZh3/m8SqI7Bvf/dvH6P8PYPrGEJ5979qs0lO2T
9fCu/iMztENYP78I/9G7dlKOFjyBm7ZZJ5y5yvp5Pey2Y9G8Zr6/e6+xOP6x
43e14fsHT4Hf2qan/+D8qdx1cOjbDvPPc78FuQvwzZ/Oyg89mT8Tjj7adtVT
2lEGv8gpenrgGPP3GIfyYZaziwrnj6aZw23fTdHqyPlcMldYYeex8Gbuv6B7
Fp7joTbsGS1Jh08vjyrtyv0bfGphT/3DV47tZ37N8bj//NHU/MD3qxDDxy8u
edSxdX6aC5x1orK+G18XnYJXSZuHJdDuaXChRfitkXy/4M/wgeU9xl8+xPwa
E9DeWnrOaD2/v9wkWKFrv0viAOZfBStvysrJ4/NDx+Pwp9gPf3L4un8K/GZX
wcFerftTVMNXw09Iqvj7yDobS8VWUXNzPWhdY3h7m8XKFieYfznc1mnf+Ru0
jz8cc1nBJrd1f4IkWPPWyE1/6Ir3sEr6T83ftEBtolTsKNQ7cY77HYjGwSG9
Rjh68HV3J9h8e840tz3Mfxj+M25Fm3X8PXJvw4Kxux+20HLvYOXA20WWtFDV
BOWlooKWNe1oBHcxKynd0Hr8HeGM69MFZXTaAbhvxrzhlcwjuwVfEM0N/HOG
+d/ABV2nS5ZyPwaJyiTUjzdnlHbh+eozCu7xqnmqG6+XuEVw0aqN7r6t+zPs
g3uOT6ydGcz8N2Cdht1O5jyfRWXwuTrDtuf4uruSCOXhQ/efmb7ML4QNkyZl
tqdz58NdPph5XeHzXrm98KIlPo1mPH+EsbBrn6tzV7fmL4Gn9expvdKf+duK
peKNx8/8juf5IJsD124a8siJn6+7C97TMz+qZ+v1HgMvNpuU94i/h08R/HF9
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
y3P/wulnBEmXK5l/8HbcryLOaobyeafQDq5WVnqZosjnVzvg2Z/k8oz4PMc/
Au73o3u4rIn58+ECh6IBA/m8UPYHloy/Z/yQzxN19XdIxV0WtE1Ma31+aQOn
uA4rvcjP99kK+xp495pHx4XBBzzKv45/y/w5cJP/6qiKzzz/f8FWT90vmizk
+d/PG+3P7RsFVp48/63hLlLnyxc9eP5vgvukp6y8spjn+zP4xMrd75e68nxv
gn8c9Zs6g/ulO/bxkYrb3lD+MbV1v3crOLRX+IPNXD8vzQternzb15f728uC
YJUdk+Q0uP+r7lO4m0enufXqPN+/w/5j364Ttu5323sn2qeJy9MWcT/cuKnw
zZ6GwjF0hQfcd/JfYx2+vyAQviM0+zyK4+NFj+CY3ROsV/Lz3L/C4/et9bVl
/2Jwz124/yW2fRXQut+9BSzpsvLUwUyWd+7wLRtnh5uJLO/Owc7eixTsklje
ZcDdFpWMFaWwvKuDK4rGqryk07R2S8WGWedSLNnfJzOFHeNHxFexf1F3LTzx
7kn9newvlJyGL1dodglj/4TPfTindpv3maN8XlEDL1IbvWc2+2cquu5BedDN
wliF/XECEbyy+FTPzrRoNXxz+q5x2iy/3U/A3f/mNFRyvdHge7Df3xmJIa37
vX+EO83Z4x7N/kg59b1S8ef76ksbOX5QOBG2/fh2/RD2RzqugCcVnkuQ43hC
/wB4XaBdaAbvD2l3YZ8TPc5mPmD+D7C3/qnIg7SuwBffN6X3gxTOT5CMh8sO
L551j89/fJzh5/0/n0mh447AXeqNvIa+ZP478Jh7upFnbzBvx304fm/fD5/C
50PuY+Bdpn+flCYz7xK487CQLrd4f8o9CNd2Lpt9iPMn5BJg31XqVScbmLcC
7jdOss9Fxrzt/aTi6OYHhrd4P/MfDXcMdLVNab2/LYZ/P2tnPoznk8wPTh+W
5vyd/VO6N+HA7Lj2Nnz+JCmHx8wLrJ3J/bV9lPdLxZUvdMd58vvFjYC7J3ok
9v7MvAtgHWPVb7a8Xwp84W91LlPf8PoRxcGSV9sWH+f+0O6l8ND2jwq6GvL6
VjiA87lq2bb6sby/DYO1lxto9bfh9T4PPty3l9F4S17vu+F5Ac0LFeJ4vV+F
u16oNwjmeJu0NgdxvuT+urGG43NkQ+Au82yu3Kd1Z8OR8u6O/fn8UuIDX5Bu
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
oEX3W49vM3zptnR30hDm04+Simckj5xykeefow18Z933MKvW9Ra2wjFzTIMT
eT6khcE+4mi5c8uZNweefrbQInoZ8/6CS9+a/lHi65J+0bg+U0+f0F3L42sN
v7pq9FKZ61XEbYJHK6wYM8WL+UPgqNWf1E+6M/8zeHZfr3sL1zF/E3zh/BGv
BZ7M3ycG5cHlNj5W25nfCo7ULjv2kesr53rBm6N2q3bYxvzBcLvQWJW+/Hvh
U1gxqneqjO/v+B3WOmJqdmMG8/e+KhVnz/e//5ROmwoH7/L76zWN+T3gRUZK
M5zsmD8QVkg0Ep62Zv5HcJiWjtdaCfN/hQOqize15/oYcT2vScXiWRbT7vL1
Cgv40YoNEyby8wTu8Ocn82bNFTP/OXhL287eJ2czfwasuP3Jw7V0cB2sP6v3
Xg175teKxflhX213dArzm8E3m7zjU2jhWvhorP7fdZOZ/zTc/9CEPmN5vaXV
wDoHButUt5ZnXeOk4m0iszU5LG90RXDZgrrAYx2ZdzU8ycjeaOcTltcn4AfP
Js0fl83y+t6/1yffnDLiOcvrj/CMrt8/mD5kea1+XSq2PzBm1o/W+slEuOq0
2pYg3s/dV8D9l9jt9uP9PDgArnk4KXFTW96v7sKxt6bvryxlfbTq+r/5Fh3u
2L9k/Xv8DVx/e1UTH5Sw/u0MK31OUulbzPr3ETg/T7ezXgvr33du/Bufrf59
qQLvT5Ww+ZskaxV+nqTjTdQvyyIjjsgz7xi4Y/6S5K8dmXcJfGSvuX/2X9a/
D8LFbmpBmawvCxLgNkrrOmyTsv5dAS/W9Sw+Vcb6d/tbuD9Kdt5Zn8T692j4
S+eSZcq3Wf9eDIc29dHayvaJ3H5477wHBk0RrH/fhNMTozzFV5i/HE6u2BnQ
IZX5leOl4rO5xSHdHjD/CDhmnll+NdeHly2Ap7dXf/yGf6/rC6spdjJX4edL
4uDS5Z1H+W9j+6MUHjN1i+/zxWx/KCRIxWu7pG7a78j8w2CLnwXnU+2Yfx78
rWDWwjH2zL8b3ls/4F7TLOa/CgfUqRweyPX3c9vcloojPMv9a9h+lDOAk24b
qxvMZt7ZsOnHrxWf+X6OPrDC76WqUr6ffxScvdPpnYMV8xbCD1weDj47g3lb
4PDgvZ2UuL6I7qA7UvFUj5u9L/P5q2QWPKPdiJHare3t7fC5tWcjnVvb2+Gw
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
Bp6u/GuDvTz1iuEqs55FT8jsn/DCtLWxCnrUayYj4dzonl3ppEa9M+H7eVlR
kgH0+rthja6enS/G0eudLivhPIzwfDOR7t8ZBl8aOcJlzQean4WwVoupuea/
/VEJvD/SsG4hzWf8b7DDcMnFajkaL0M5CUf115AQExV6/a7wMr2Tn907aX5e
D4fKPk4qfknzcxpcK215cfELmp+L4E2P5Mz939P+6TPcOjPuytgS2j/py0s4
qRG6KuWFtH9ygTtUwnJW5NP+iQcrPcrjV3vR/Jz811PFA3ucaH4uhDcljo34
+SuF6f8EV1nLZWzsY9ypq4Dtyf+638HPjI2mwIbfmlxadzP2Wg0rLj3w4U4s
Y/4R+ES/sM1nexhn5sM7vl7cffsl4/o2+IzCROPqXMYa2op4/4U5TxMeMGaz
4aKoigNBlxnzVsKGmXUlmlmMhYfg+3YRCSo3GIvz4PbjmsmHLzGW+ggPGc8L
0TvFmKWphPsHcOWdBYy5jvBPY5t1X9cyFiyDtWrMFwbwqD8RXn/+l4rjOurP
gSvvhma60/2NPsAK5/xefl5B/RrKEs7sbI3nMmT+RLh/0rHrQX7UHwQ3uKe4
PHOh/gT4e3HS+PIJ1H8Hnrx5RcBjMvs9PGuFe6zzcOpX7S/hTJy7ZlnpUOq3
g9fYlM3+qE39i+BQ0+FPT+pQ/z4439XlcyXdn3UTfnB5eNtAup1bD5t8SH5r
rEz9yioSTvaX9elNZNF4WGb4m8vZ7clM/0LY9Ss3e0k5Y6M4eHtghprfU8Ze
1+E36XrNIx4w5r+Bw8x7dEzJmQqq6A9hT6q9ybh+LJwTGqmkn8lYIwAe1Toj
yeQ4Y/YueHTaudoNhxjzMuHwbd51u8cxFtbAmRNNz80ii2XVJJw/opIZ78Yy
lrKCR1rw2kysGLP8Ya+yJbKJLMbcHbBjWZrk1RjGgstwpfndIa9GMha9gvNb
X1uWkDv7qUs4nhH2RZU61D8KPuOtr87VpH4/2MI/ryuKzOfDF1NGPZ8zhPoz
YJFMRNpnFep/AfsbTG2U+XmM6f8DVzapW1Q3M2aP0JBw9u4Ob2Q3MubNhhfM
LFnn946xcBvsEJoc1lbFWHwOvjosZYt1NWOpcth1dt8AVg1jVh/c83XwAek2
xlzzARKOwOZNs5cT9XvBkQHXZJqcqX8zPMip1kW1ibl/52nY8lH2wVp6fqMy
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
Z99h8453s6Ofp/z3P0sY3ZQ=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.956256*^9}, {0, 0.0798545257471515}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->Missing["KeyAbsent", {18}],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.956256*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+IN/7lqlxe/dZzPZJZ/H0hPfFTQAKIzjz5pAdHzw+3m
gWiJ97EbQXTJtkv7QXRDhk/JXyBdzsS3DkR/OMB+DEQ3PL95E0S7zzv7CETH
Pdbi+QekG40KhUD0njtFEiA6csk2ORDt9dCwk6nkrSO7mv4MEL2wOX4ViI7x
4TwEorOm6N8C0Xx9YQ9AdJXqlZcgevclzW8gepE5j7g3kH4yLVcORGt4ndYC
0T5Zl8U7gLTSHaZW3bK3jnO4/jM3Aemiglc7rpS/dXwx95pRTQVQPidmEYi+
kMrwHUQ7nD4sfxRIO4YxNwpWvnU80r7A1hdIt7+dsUS86q0jANV/nl4=
  "],
 CellLabel->
  "Out[277]=",ExpressionUUID->"84c1656c-9acb-47d9-a215-2a3e4f3e5590"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2133, 1747},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2910, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4079, 120, 1460, 24, 42, "Output",ExpressionUUID->"5e869e57-0e80-4bf3-9ce7-babbd2e5d08b"]
}, Open  ]],
Cell[5554, 147, 6075, 126, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11632, 275, 2529, 62, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[14186, 341, 47227, 959, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[61416, 1302, 17246, 344, 5674, "Output",ExpressionUUID->"1a1f6f19-8a5a-40f4-b03b-ded683ef3adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78699, 1651, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[79045, 1661, 3922, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[82970, 1751, 207961, 3560, 802, "Output",ExpressionUUID->"84c1656c-9acb-47d9-a215-2a3e4f3e5590"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

