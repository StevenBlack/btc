(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    288512,       5284]
NotebookOptionsPosition[    286937,       5245]
NotebookOutlinePosition[    287334,       5261]
CellTagsIndexPosition[    287291,       5258]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[963]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.952950242158903*^9, 3.9530648211300364`*^9, 
  3.953064958622326*^9, 3.953064994240164*^9, 3.953065349950439*^9, 
  3.953065465573783*^9, 3.953126301207666*^9, 3.953126763140174*^9, 
  3.95312695500004*^9, 3.953127117979952*^9, 3.9531271852779837`*^9, 
  3.953127515891465*^9, 3.953127565970191*^9, 3.953127614148252*^9, 
  3.953127664280751*^9, 3.953136707707389*^9, 3.9531368280231953`*^9, 
  3.953136973229302*^9, 3.953137162354211*^9, 3.953137357043047*^9, 
  3.953137409894322*^9, 3.953137478783972*^9, 3.953137580524066*^9, 
  3.953285299268303*^9, 3.9532853579233027`*^9, 3.953285456811905*^9, 
  3.9534102329466753`*^9},
 CellLabel->
  "Out[966]=",ExpressionUUID->"9beb24b3-1e62-4d35-b261-44ce75dc9461"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[972]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DateRange", "[", 
                RowBox[{
                 RowBox[{"{", "2010", "}"}], ",", 
                 RowBox[{"{", "2030", "}"}], ",", 
                 RowBox[{"Quantity", "[", 
                  RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"Scaled", "[", "0.005", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}},
 CellLabel->
  "In[975]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    365, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4870}, {
      4870 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2818.743638525281, 2824.475572119031}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4870}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              DateRange[{2010}, {2030}, 
               Quantity[1, "Months"]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             Scaled[0.005]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4870}, {
         4870 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2886.55781394032, 2892.28974753407}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.953127185868351*^9, 3.953127399371324*^9, 
  3.953127516744842*^9, 3.953127566636895*^9, 3.953127614757175*^9, 
  3.9531276649479303`*^9, 3.953136708325881*^9, 3.953136828734364*^9, 
  3.9531369738923807`*^9, 3.953137163086714*^9, 3.953137361194911*^9, 
  3.9531374105258427`*^9, 3.9531374818910313`*^9, 3.953137581144923*^9, 
  3.9532852998972692`*^9, 3.953285358708744*^9, 3.953285457535769*^9, 
  3.9534102338402042`*^9},
 CellLabel->
  "Out[975]=",ExpressionUUID->"a42c6944-a44e-486d-847b-c88866cc0cb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
2h56cjLbBebtWy3flkb9G+HFub6iO2SRFL7oqTd2Tgv134bFLmdP7aPxoOIT
7Jmya63dZNr+jaao+O+mbij8QPtH7gz40dgWiyA6ngvXwWOr+zStaab+VLj7
6JLBF2i8Ji+D05ubjfvS9qZuha9eDT43nswxsPt7ffHG8SW0fxc4wq2Hr/t7
kcUieGSPneVraXwkOwTHvFC+/HGP+m/APpq9R9eT2R/g6ebTHm24Qf0Dedge
H9mO+k3jHZE9rB0uKJXR/kIaCHOuP3rxhV6vIhH+3PXAj29kVjHcd653xagG
6n8Hy20f7fhMxx9hf76KX7q+9JfTe+rnwR7e4TUnyPKV8JNZl5rPkdXx8In1
nbKukDnX4JRtD35v+E39b+GsxN41z35Rf5+pf9eXF6mONF1mCxsWCkRm5PoA
uKEmuFhJ+1/2Adhq3gHzYf/GP4Xws/LUy5vpfEDUDO9Y2rHF15T2/2x7FX+d
YHJevQktfxu4Oic3fwxNZ/nB189Xzba2ov1/DHyy59lQkzG0/y+Al99P6pBN
j5e8hFvb7z+Kod93kGs74O9b25Z2NKD9/3jY6mOnKCt6PZxlcL/ht2b0NKL9
/z7YcsNj9p2BtP+/CB88mxhcyKb9fz3ckHfIWrcvHf+6TVPxiyyXTnan4wV7
LGzYtpNXaknHP2/4msWvsT3o++Oi3bDZDl+/NfT9cmkuvErL1qKMvn+uqIN3
97SKPEbTWV0dVfzOz8sEt8lcK/iU9HWqbAj1L4Z71p9boKQeSSSc+nPIqR9k
uQzmH+t8IIvGV+pn8McdrAwpnR9wNKfjePpsTKiUvg8vsICjGnUnJtLxS7wA
fjK639nL/8b/O+Cc6a5Pvj2g5X8atuq14/wNOl9gV8PJoyJs84to+Xd0UvHf
1jZOy7lC6/9oWBQpYfW+Tuv/XPh8l2GdPiym9V8M39533cmiC/3+wSnYNOKQ
iYEV/f7DI7iPbXDDWkv6/Yc/sIHTR8PG4fT7DyNmqPjBldzxPwbQ7z94wJaf
P0V9mUK//7ANNmzcvcHUln7/IRs2mFFcs3Is/f5D1d/Hm5W8iySLf8Kr6jqq
TSfS7z8YO6v407KeuwYZM64XwOd6C57q0N9nh8JtWvIDbA3GvGMwb5TfRfa3
o0z/fVg5VHPIaBZj6Td4kNsxK+HbI0z/0JkqvkPO+zFLXjJmzYbvx+3VvtDI
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
IS3/IZEqfqU4c4fFHlr+s2D2zDYd8xha/pvgIH/fFTOiaPmnwWsaVg1viKTl
fweWVZe8PUSu/wwr5ntXHCOzOVE4P7sZmJZN53s8Z1jKNuFO3UDLf33U3++7
VLU709+XHoGvdwopj6HHK8rh83NuDnxFy5PVBvdoWx3Eovm5htE4v/TK170T
Qct/Ohz2O/LzdVpfJcHw3vI9q2+Q5SmwEeuR04lA6r/5d/r7upaFZI4a1tBz
7eVwjvr1dqv4nZXWvOJc6neAX9qsMF1wgfrXwGOzR89rvUj9SXDU6V0G68ns
Evjz6Xqzg/nU/x4W6N++8PE49Q/Yg/1v5Ujhz0zq58N9M44Mssqg/lXwkIjE
seNSqP8g/CZ5UvMVMlcObxJ1KLE+TP1KWOHreu72Gervuxfbz9bI9eVk+RQ4
ynLR4843qH85fMzfb+4auv7MiYPlhU8OxuVR/1X4pHXKhRmXqf81/OXVvbqJ
1CPrtU/FH/Vw1anTJdQ/CV63he1x8xb1+8PWWdfchbQ/5EngImWa76L71H8Z
bp16x9PjAfW/ghcGTJkwtJT6dfar+H20J6SkF1H/RDi6NK/xTQX1+8ApEv0j
xnT9QLgfHrusYnh1X1r/82FNt+fhk51o+2+Af7daPRqxnLb/7v+p+FfkPcYc
3Ezb/zi49FYL23A9bf9CeMmZw1aDyOI98Psv4VmlZFkePKX+5YLVp+n49xxu
YbGnjqfrBWytGIzHc0Ky7qTS9j8G1utr7zWtmLZ/L3hSw925QrI0Cu6yQeOI
+yc6/z0HL/29MW2JPo1/auEzX9LttpK5nSUqfkXHb8fL3Gj8w4UPRzzc3mcO
jX8Wwu0OBRHRZPlO2HlTslluKI1/zsDmO1t1tLfQ+OcpvK/bui6xZIFGrIrP
v+O6LzKExj9mcPeXdo8/h9H4Zx5cyjlm0Smcxj/b4QvLI3T0yewcOHPWxq8S
Gq/xHsNdHg/hvJLQ+I91AMff9w2vxtB06UhYP6nIvozGn4o58K+Q0jFtZFb4
gb+fnxfv+UHmnoClQ+7rZpKFD+DfkS+npJIlv+DNIXn7Mmm8KjeJw/Fza8j7
MrLaDd5T51julkH9W+P+Xr8w3TyLLDgOD9ggN7LIpH4FvGyawSwlTZd9h28b
vu27hKbXD4vH+VrABv0TadTvCmt07rOxN5m3GRZ8e+ivTKf+DFhlbBv6b35p
BbzBOLLMjqxohzkL51k6kFlDEnA82lZl7EXmusAXHvh01qTxu3AjvLZ9l6Se
pkuksN6uIXqSf+P/23DQEs9jq+n1qj/B6yeZ3N5F5hgdxP5hWnP2WLJgBvxd
bsu9SOcr4nXwcpsjw2/R+Z4sFf5pGv14Kf3+fn0ZnNwoHH/mN/V/hCdoDD9o
q0/XPwwSsf1MmuD6zoiufzjC93P3FNqa0vUPERymr3Nm3hi6/nEI/n5sictG
a7r+cRP++KBb1nb69wC4H2DHn94Nm6bR9Y+BSSr+naEP+9bSvz8gsYdlMxQD
YgLo+kcgXGFcpvnP6kT47k23FsV2uv5RDNc57IwKjqDrH+9ghfXhdo/ddP2j
f7KK3xYt4X7eR9c/ePDOJGvj0Gy6/rMS5rZOL6hPo+s/CfBwq6RnpWTeNfiS
8SZRl3PU/xb2nNnrR+UF6u9zCOuvg0BzXhX128L7ZzznD6V/n4G1HO57VXVm
kgbd/3EAZtmvLQyl+4uEhbDIU8FZZ033fzTDl31eCdQWdP8HOwXnl2Wlzu8d
6fN/G9ho+MO1w+n+LI4frDgUfGbECvr8Pybl7/Fw4Nvry+nz/wLYKTJw9owA
+vz/Jdxz4KsOfVzo83/twyq+Q9+tqSov+vx/AnzboV8/bV/6/H8ZnPGTXeO5
hj7/3we38R29yoLo8/+L8InN3mlryYp6+E1OUe3vYLr/pXsq1q+ABJ38tdQ/
Fp630eb1DLqfTegNL69vUkn41L8bFm3zSOpB9xPIc+EbulqPC+l+NXUdLI9I
GTyDzOl6RMW/mcbav5z6BFZwyo2BD8pDqX8xzDl76Ounf/e/RcINw8Ktf/5H
/TK4UCWM/vfvEbBr4Hj/TQsy/93/pnlUxW88Wer0yoD6LeCoHkGi63R/mXQB
nPdNtPbMN1r+O+BxWh96v6R/L4R1BpZ0+JFu0k7rfzXssWpwyjb690OEHaXY
30/2mNa1jdb/0XDOrUmTbqtp/Z8L12W1cDq00PovhhNb/9v5/Cet/6fgPEcX
jRx6fsEjeGvr4TazD7T+/4FvrTOfn/yJ1v8RadieElYLftH89R7wmD5zjqzv
RP1hcKbPznh3+vdMeNlw4mItv4r7tP5XwQlm+23H1NL6/xP+n6X7jofyD+AA
Lhkp5YqiUpRKQ3UNWtKd0aB0RLso2kKkXbSkTXuJRGbRoIgo0qDMiCilqBxd
CS36ffp9/Pl+HXf3ued5vs/3+3zX+QCXuFQ6d0BIjbjzcfXzn8t5/tvAQ5+O
3+hTzPxbYaup8rZPW/OHwZdyw+546/H458DVh4Y0Px3I4/8T1kxLT7nC81Gm
dxnnS+GBtz838/hbw5efzNV8yuMt2QQfO5wwblYTj38IrP9nzkF7jhePy4bt
J2Zc7EtXNMLG2lVBb2lBn9Aacb517JFa/r/ICp73Y53JVo4Xd/eCDd4MKN/O
8bTBQfDfLAVjG853yH0CN4usw65yfJHcdzj90rZed7Q4/qd3GMrLKvXMItpx
KjznY2W/rNbxPx5w/1u/bQwGc/zPBfhutM/cCs7PkGXCLzO/ytlxPKXuV3id
uLDmdCaPf88rNeK5McFNERyf6GMBX63ccDiO4xPj3GDt4DETWnoy/9kr/8bP
L8h8TQsy4By7ty8VOR5TVAd7bNn1fSPtrhWO+sz4dkPLhDz/TeF7G722Jk3k
9e8CW1s93qjB8krudPi/+UWltbFzef3fh5/avVP2WsDrvwZW3je9y/5lPP5d
I1B//vhBN4fXc9okOPno8IL2LD9kq2CdWpeQjrTuCVjt4f70g+t5/O/B7zPk
Y/94Mf9HOMPk8k6rjczfJRL366lFtePpCmO4xFuu5PIO5l8B757R3H04LQqA
7Qr6/nKi3e/CnZ+/HehFB3+ATQy6FrWef7lqUfi+uc37sncx/3jY8s4x1zpa
6AzPXhtybVXr/idH4BVV8R9CDzL/HVjl57oP2leY/x1s+7bkoCEtU43G+TLl
rF8+x2fpjoGjf5ulqnA8lmQJvEzZt2H4U+Y/CGdvNvkwn46Lh5daqYX7cX5M
xRu4s/rZ4385PlHQPgb3i8n+y3p+YP7RcNDnpDk+tPtiuGP75BOXOT8m2A/u
cfuWWx6vj9wbcNLYe6ZDz/H8L4cfLxn1d2g1z3/lqyjfa6unz6MdR8BDHHYk
B9P+C+Bq1UyF4z05/3svrFSqfqdgAOd/x8LZJbv2P9fn/O9SWD2yU0+ZCed/
K1zD+WPx6dtdY87/HgYvihcs62bB+X9zYRV7obSC89crdsFvTVqUrrbOf78K
bxC+fzNwEef/FcNmvTY8XrOe8//axOL6HXlggSYdPAS+ZrpF/gCdaw+XpNtH
ZG3m/HcfeKHhxLMfaWEUnNy0ZkcV7VgY+2++/lmlvVs5/70FnjRkXmUbb+Yf
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
/2X+eXDbVcUDZvHv5fbA04oix3ykhdfgNUHqEwP5+zm+hCd12xzxnftH+cv3
w/Ho89SmYyHzG8BXHaoW6bce/9nw2yyXi+G5zL8TLi4f83MLLYmG94l901bS
Pi/g+CXzzqym4/7C857mqmnw/SoG9Uf9uVeYsTMtsIP7VLfcaLVoB5xlqN6i
wu/nHgEPSDcduTyHxz8fXt7fp/lP6/H/A++2+WYv5uty+gPQ3inLHR1LC23g
+ueGXm15PTluhV+bzZ7Tlf/vHwbLndkkcuN+WWk5sJrzH0kxLfsJT3ZfKV+s
wfGv/fSl4muT5/b278rxv9ZwT0WrCWsEbP9ugtW3FfQJ6sz2bwh86lfF+Qh1
tn+z4YPetRPqaUETnB5VGVlMi/oMxP32inF9BT/P3QoetD4u9gEd7AXPvnF+
ijydGwS7du86R0uTx/8pnPR1iY029zcTfod3Ps8M70479h6E9kJqT73e3C/N
fyqsWKIdV9+P+T3gxDH+bVfQsguwrv+uVyrMq/sIDphfvLyoNf/Xf/9/JnyB
Nj/fp+dg3K87X9Fw7sH8FnD8gv7vE1rzu8HCkZO3neH/C87BI2w8dGpoUQZ8
+3aw3HfavQ7e8/p897xuzK81BPWJo7rhSXSuKVx0df6JdhOYfy288tL8Bdq0
8DR8bmZMyE8P5r8PH3m+pmHtceavgU/n/1LYFMT8XQ1Q35u5ZvDWy8w/CdYZ
4xFzktZdDdvMOtz8I4z5T8AuA92a14Uy/z14WY/4wgI67iM8dXa2exj/vqLL
UJwfZ1O7xoUz/0S4PCu+w5MI5l8Brxl76MIb2j0ANh8dXGBCB9+Fv70XF7rR
uR9glejHKUXXmV8w7F/7OHBeFC0cDzfZan0W3GJ+Z/i+knp5zh3mvQO3sRly
bijH38vewXKe/rs+0bodh6N9dePqwL4PmHcMfGpjo9aQA8y7BH73suGeOR13
EL78cWyaxiHmaS+UikcOufv1rh3zjIYjjzkOmWDGPIvhWwWFzsmcP5HrB1t0
9NFvHMI8N+FVhtUDFA2Ypxx+ey37vgbv347KI3C9fJ6g/KZ1PscI2Gu2ScD4
lyzPFsAuU9ZfsqRle+G9XmX2DqEsz+Jg2a6kCg/uTyQphb986Ht/8TGWZwoj
0b79tcjy2UGWZ8PgqPsz+2+nK+bCcQ+dbvz2Ynm2G/7UaGNqQ4uuwuemnfu4
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
X0+7ArcsipVqc36FLBdeVPNmmQ/nw+j+ho9oBEjKWueb9H+M+51v/bcZnO/k
MxNO3ruhunV/qbjN8MVl7wMGt843uQyXBn7ckMb/FzyHA355Z0ZzvofoB3x6
x3npz9PsL+j7BOWlrCFfi/01wdNh2dMOY7rSuRvg2rELV57k/m1yl+C9h9em
BSgzfxbcyyj+QKgK8zfAsQMqlV60Z36dp2jvHfWv8+bnp02DO+SbXPvYOt/I
E54wLcKpnq/rXoTn+NbtE7TON3oMW7+290tkf5DPN9jsXMCryOvMr50lFQ/0
Kvr8gq6YDLfPix01jf0hgnXwvnmLYqenM/95OPlNtOfVu8z/EH4le2B/kA7+
Ak+K2r+1lv1fud2zcf5WDwiWsb9FzhxWdDXwrWT/htAVTncNfv2J87H8H8B7
Re7bkjjfK00K+zYLbVK5X5ms2zO0B0UiV8vlzCuGVbb0tui3lHnXwNWn+sSU
LmHek8/+ja/PebefjkuF78nXmNhy/aaKT3D+jReLtsxjXo3n8N52kmIH5jV5
/u/+mx1p58S8K+GQ6V0DomYz7zH43cKtF7zmM28yLIma69aV+0nKVcMNe50j
qvh5ws45uJ9ODYwcyf0dHSfAaZ0P9FDk6/7L4EDXosACft+0o/BWv5OHrfj3
skR4xuSsSyP4fXXfw0ZXupgP4/kl6ZSL+kHUxeIQ7lfpMxYOPb1FLZWOWwqn
jjtucWQN8x+CZy7/kRI/jflvw8tcPFY72DD/2/9auve4lv44juPpKrpRuijp
psilkS5SbEk3YZKIaCjXaCLKrUUuoawQuih3cktyTVnqJ4Waki6ipJRqyq2k
4vd2Pv58Pra1vfY9+55zdr4Gzn5dXy9Pv2/FH/gS88mV+mVVU6nXD/aM2GEm
pt8TkToAT9vyYNtn+n0SViYsWehwYAj9f4u8d7D8gIaiLLKwfyn2b6aGyh9+
0HqXCfC0qBfTIun3rTp84WeNASrG9Hs2Bvvg4R55lxPo/2fk3oQXGJ1KukMW
vIHvRV1Yb/aO1rvIlWH7PzVmYfYbWu9iAVuZKzZN+vd7VwthpbVzHWbQemR2
JOy8oXvvr3/rta/D8iYTtqbR70WlVsKa97e/tSmm9T7SrzD/LBnd0E7rn1nz
4dBRny+G0PppXgR82fbptWlk4RW4dt2fPBH9/6micljUp3AskdzxBy5s2aly
JpN6zcsxng/v+ZfQ7/VwveAb+uUOQ+j3pwQ74X6mN1f3e0C9l+DIYY0xPXep
txROqtJK+0jPr9YH103RcmDT87HNXmP/c3RXfPe//991DnznZHGiFz0+dRs8
7e44bihZfB7+6NwpK8yg9U3i13///U1xfT6Z9Qu2krF0Ok/355lU4PzcpDZQ
hXqEs+B+DyLnXab7i0LhwLo9/UbQ8wsMK9s447n3I39kU88MOFMG80Iu9YTA
hbNdrmgeo55UWE3XTfcy/d4NuwhuWJKy6y69P/zv8MPc7nITGq9U/Sqcb8en
Zqyj8RW7wgF7dqd60PYltRF+OD9s6jP6vRxWMqwwyL0skdY/Cb/ANofKNEeS
O6ZXY7yHao0630zjxYc9Do4zPE+/58NNgEVNJe5T//0eWT48V6bRRyuP+j7D
2/KlUh1E1Kf9po0z7uZO20+03l5tGrzSLqi2jdans9fB8yMSrWXo/+flH4dH
RLM6btO/B0jNhQsMnKXMaL27uBWuXfg4WzeR+jRr2jgyjvarVOjfC7DYMJtX
d/4QrXfnrYGH7p23d60v9R6FfZz3B7whi3LgG8MvZPUtpf5mOP25mWsx2UD9
bRsnbmd99i66P9cBDny+3G7sBOpfCV+YVl+0hZweC7+OevOLS67LgrNiVRLd
x1L/RzhZ/d11BTPqV3uH7WOVhXbrEOq3g3Vv/zk3RZ36/eFKuTd7t9H6Z3EM
bJW88uFhstR9eJyN3X41+n0w1gdYJr1CdTutN+Qp17ZxVBIzxAZkoQ1cFOm1
YjHdX7QUXqnw5OyYDlqPeRDW6FZPfPSe1mPega2Sdg43o/WZ3Dp4R1H1vT8v
aT3mgLo2Tlrm9JHLS2k95kR4t6ngyHFan1m3BL4R/LR/J92uFgVnC1dnjaDH
s2/BnA+ejUPzaT3mW9g2h6tdT+tZUxXet3FMxnWalN2j9Zjj4bLbHvcn3aX1
mL6w+ZTjdupkXjoscytS+i2tpxVWw/IDNVK8blKvbH0bx1/i36Vym3rHwU4q
hbsUyQY+sL7WPQ0R/T3ubjj3+4cGwwLqq4A/66ySrf633rrfB+yPTArmKfz7
vbUxsHxMSdX+r9TnDa8MMPbeSuYL/t7/+0HTInq/U9Ng8eUX4X40PuJXcL13
Rr+j/9Zb/4Fld0l39n2h8R3VgP3vtg/dUbS+lDcX7pzyy0iB1rsKd8DeyV3V
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
c+ubLn2/vgnmaGW8GjyUvl8/Bffu3rxcn75/FzyFN/Q8y4jVpv6vcL+AxRc6
Dalfbzb2H4eTegX0fbaaC/xFp59aKpm9Af7wWs9ypCL1J8LXz9taJnbR+eh/
cHFU3crd1CNuh713Jt9fW0/no0O5Eo6vvLXHb/q+m+UER9dO2NhD5q2Hz05b
0bn8K/WfgKVvm5SX0vvf0QZXDOjI8TOjXq05Es6+TLZq+jTq5cA129daF9D7
K1gLc1Tl5y8npx+Dt+5cYzvWnnof/XV0rpXIkvo0PCWcz6G7L+lMpvFcBVff
4q12oe/7xXHw+inWL63JUtmwlVjw8MF8Gs8m+N3QMSv7L6DvywfNxfFQIfuq
HFk4GW5+Zbq/jUvXCwLgdrNLB36TOw7Dv1KDvnLmUN8D+FaX9rgnntTXAJe/
u1fffyG9/mVeEs6ruZfuXPKn8YqGZy6+suVtKPXchf8bK/tjWgSN13uYzZfr
GXuYeqzmSTj1O8atehxPPTxYdU5RofYJ6jkA59cM12w/ST2Z8JnRRrXnjlPP
O/iKso1eSBL19PdG74g3lgFnqWcC7PX2uPO8C9SzGLabESIX8u/61z54b8a1
XgcRjddN+KOlzsQScvobWDCs+uKHeuqVm4/jwfvsleEfqJc1/+/5s0j2wEfq
XQhf3WdrXCam3kg4dVO+0LKCxvM6PHJ8UsN1srgS7jG2PiJLlpJZIOEs3aXq
9Zqu17HGwuPE8XIX6O/x5sMD1AoFa+n+wgj4au1s3T8F1H8F1pb7eXrdWuov
h8eGPDxevYr6pXww/+Wp+0Yvo35z2GTM4GPJa6jfC26+1POuv4D6d8J8xwz+
6V3Ufwlu3RRzePpB6i+DrSdxZhoJqb8P9p1y8QqHzDdbiPMz2dhRxnHUPwde
tb1h9SkaX/E22CWM1+l+jvov/LWXnkGPDF3/FMOxy8pnfZGl65+/4O9R6fVV
ZKHJIhz/VWzM0JSj65+zYPljnzRtVOn6byi8Z/R3Xe0Quv57Fj4q/LFeMZyu
/76AVS5UDY2OoOu/XfD22esep9L15nRDX4z/0R71hHi6/jsDXt4Qd+TdUbr+
uxnm78sVBxyn67+pcM1ei3WcU3T9twg+fdz56pIUuv77Hb7+fOCZslS6/qu/
WMIxfFVqbZVO13/d4KcpodJRadS/EZa7lrzx13XqT4an5HwoKabr68ICeJ3z
hK8ZN6j/C1xvMbtQrYz6dZdIOA0PVuybosCsFzBwhlM6Nlw9qsqYy4dnGl2U
nCELEuBa183rF5LT8+GSBOdQDrnuM/z6xZmxWf0Zq+n44Xgj/sT2djJ7Gsze
7u/spMaYvw7WUXYO+vWV+o/DZX6/nB83UH8unHZh8u4pzdTfBgeUrp1c2kj9
mjwcr1Um2HQq0voHNhx/zOBt40Ba/7AGftHCkvE3pPVpR+HBow4GadPjO3L+
Pv7aiLaRH2n8P8EPZK5VyL6j8Vdfiv3DlFzV6Boafwf4v+0d1smVNP4rYenW
nitrK2j8Y+HUPV9lZXpo/B/CA/ytlz+l52d/hM8tudXf0Ij61ZZhvvwtzHsi
Q+vz7OB4c83gRUq0Ps8fbr/WFNWkQevzDsNWDXX+B61pfd59+LKM0P+ODfV/
gDesjbztOJP6lZfj87dP9mCAPfXbwFfCUy9vo8d3LIXzzXb5/qTHGxyCjQze
LEqyovG/A8fkOcxqm0jjXwcr8Ctvh9Dt6QP8JZy1a21N0h1o/CfC8458W3SF
+tT8YKUl1cV3/9D2HwXXTny0bUQXbf+34PzLHNlieep/6/93/c3GFXL0esUK
ARKO89f+5cbTqX8C3D47TGndZOr3hRNdz7c5u1H/XljvVk3OMbIwHS6NtjEL
IYuq4ZTuwcE76fV1yK7A8Z/v0CcbWdRvAR+KeNi4k56f6wM7jW7wLqTnE+yG
RRGTzNYtof5rcGlVQ8FtX+qvgL8Uq56qm0f90iuxP95ZWDViIY3/GNhTECg7
JYDG3xtuKfgUu2sd9QvgwG/R44z8qT8N3nI7Y+dherxUOfx2SO+8yWTWH9jc
zWO6wIf6R62ScLJfpyiWraD+uXBhh9XlMj7174AXZ8sVrN5A/RfhQdmijhlB
1F8Kv/qo+cpjJ/X3wgvumeZYhlO/6WoJJ2pKfZfBAernwu1H+xItjlP/Vnij
4/JcSQr1n4fd3r3zdzxP/SWwyNJ8/+JL1N8Nz5BoB5depH7jNRLO5vManCN0
u1Qo7C1V9lgcRn3P4SeTRQ4VO6ivE67IrKtr2Uh9Bmsx35xdM1yD3OEO54SP
Ds/zpL4QODCSf0xtLvWlwEqPHtaNnk99hbCqsw2n3Zv6vsEKao0FfHp/64YF
SjhtyrezLvKozxU+21c+6fsa6guGneKerYxYS31JcEdE85oEcuoTOP2Q4Kkv
vd/iDth9yPSEBXepV3cdnq/up5RnCY3vdFgpVctQPpv6g+BT25KvXI+j/pNw
qMMdyR3aHkR5sNZg6bry/6hfAvuMOvum1pTWt2mvl3CeGcX8PDqG1rc5wt+2
/Kg+1kP9gfDUaNEn32/UHw/LrXlTXCyhfhGctzOhatAX6m+F/fbcqh+vSOvZ
pgZJOH1looQUNVrPthrWbrBZk9RLvUfg9uHnRn38Tr05sKVr4VfFbupthq+N
X9zSTOuReYP5OF+va/05Rky99vDPoz0TR5BFK+DY0krdZzXUK4RlJ/aa8Jpp
vLNg4fjOP8b1NN6N8NeuGXsml1Gv6gacj9nGFC+5QH3L4ZtXrvZLOkN9MbBL
5PmdladpfO/Bx4O333Wn+YRfD1er5aw4RRZbB0s4ysYnV9mHUt9S2Ox3fH4u
fb5ZB+Fu44pk2/XUdxt2up830zmYehQ3SjgHffeVP1pFPZYwuyBz7oxA6lkC
b51nG99H8wN3Pxwp1Cs6Tp93QQZ8UzPeqi+Sxq/m7+2K9mdjt1Of/CbMl5VS
A6tCqG88HHLALH3tYupbBFdZvPfbuSlp6v8ylwRk
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
2h56cjLbBebtWy3flkb9G+HFub6iO2SRFL7oqTd2Tgv134bFLmdP7aPxoOIT
7Jmya63dZNr+jaao+O+mbij8QPtH7gz40dgWiyA6ngvXwWOr+zStaab+VLj7
6JLBF2i8Ji+D05ubjfvS9qZuha9eDT43nswxsPt7ffHG8SW0fxc4wq2Hr/t7
kcUieGSPneVraXwkOwTHvFC+/HGP+m/APpq9R9eT2R/g6ebTHm24Qf0Dedge
H9mO+k3jHZE9rB0uKJXR/kIaCHOuP3rxhV6vIhH+3PXAj29kVjHcd653xagG
6n8Hy20f7fhMxx9hf76KX7q+9JfTe+rnwR7e4TUnyPKV8JNZl5rPkdXx8In1
nbKukDnX4JRtD35v+E39b+GsxN41z35Rf5+pf9eXF6mONF1mCxsWCkRm5PoA
uKEmuFhJ+1/2Adhq3gHzYf/GP4Xws/LUy5vpfEDUDO9Y2rHF15T2/2x7FX+d
YHJevQktfxu4Oic3fwxNZ/nB189Xzba2ov1/DHyy59lQkzG0/y+Al99P6pBN
j5e8hFvb7z+Kod93kGs74O9b25Z2NKD9/3jY6mOnKCt6PZxlcL/ht2b0NKL9
/z7YcsNj9p2BtP+/CB88mxhcyKb9fz3ckHfIWrcvHf+6TVPxiyyXTnan4wV7
LGzYtpNXaknHP2/4msWvsT3o++Oi3bDZDl+/NfT9cmkuvErL1qKMvn+uqIN3
97SKPEbTWV0dVfzOz8sEt8lcK/iU9HWqbAj1L4Z71p9boKQeSSSc+nPIqR9k
uQzmH+t8IIvGV+pn8McdrAwpnR9wNKfjePpsTKiUvg8vsICjGnUnJtLxS7wA
fjK639nL/8b/O+Cc6a5Pvj2g5X8atuq14/wNOl9gV8PJoyJs84to+Xd0UvHf
1jZOy7lC6/9oWBQpYfW+Tuv/XPh8l2GdPiym9V8M39533cmiC/3+wSnYNOKQ
iYEV/f7DI7iPbXDDWkv6/Yc/sIHTR8PG4fT7DyNmqPjBldzxPwbQ7z94wJaf
P0V9mUK//7ANNmzcvcHUln7/IRs2mFFcs3Is/f5D1d/Hm5W8iySLf8Kr6jqq
TSfS7z8YO6v407KeuwYZM64XwOd6C57q0N9nh8JtWvIDbA3GvGMwb5TfRfa3
o0z/fVg5VHPIaBZj6Td4kNsxK+HbI0z/0JkqvkPO+zFLXjJmzYbvx+3VvtDI
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
IS3/IZEqfqU4c4fFHlr+s2D2zDYd8xha/pvgIH/fFTOiaPmnwWsaVg1viKTl
fweWVZe8PUSu/wwr5ntXHCOzOVE4P7sZmJZN53s8Z1jKNuFO3UDLf33U3++7
VLU709+XHoGvdwopj6HHK8rh83NuDnxFy5PVBvdoWx3Eovm5htE4v/TK170T
Qct/Ohz2O/LzdVpfJcHw3vI9q2+Q5SmwEeuR04lA6r/5d/r7upaFZI4a1tBz
7eVwjvr1dqv4nZXWvOJc6neAX9qsMF1wgfrXwGOzR89rvUj9SXDU6V0G68ns
Evjz6Xqzg/nU/x4W6N++8PE49Q/Yg/1v5Ujhz0zq58N9M44Mssqg/lXwkIjE
seNSqP8g/CZ5UvMVMlcObxJ1KLE+TP1KWOHreu72Gervuxfbz9bI9eVk+RQ4
ynLR4843qH85fMzfb+4auv7MiYPlhU8OxuVR/1X4pHXKhRmXqf81/OXVvbqJ
1CPrtU/FH/Vw1anTJdQ/CV63he1x8xb1+8PWWdfchbQ/5EngImWa76L71H8Z
bp16x9PjAfW/ghcGTJkwtJT6dfar+H20J6SkF1H/RDi6NK/xTQX1+8ApEv0j
xnT9QLgfHrusYnh1X1r/82FNt+fhk51o+2+Af7daPRqxnLb/7v+p+FfkPcYc
3Ezb/zi49FYL23A9bf9CeMmZw1aDyOI98Psv4VmlZFkePKX+5YLVp+n49xxu
YbGnjqfrBWytGIzHc0Ky7qTS9j8G1utr7zWtmLZ/L3hSw925QrI0Cu6yQeOI
+yc6/z0HL/29MW2JPo1/auEzX9LttpK5nSUqfkXHb8fL3Gj8w4UPRzzc3mcO
jX8Wwu0OBRHRZPlO2HlTslluKI1/zsDmO1t1tLfQ+OcpvK/bui6xZIFGrIrP
v+O6LzKExj9mcPeXdo8/h9H4Zx5cyjlm0Smcxj/b4QvLI3T0yewcOHPWxq8S
Gq/xHsNdHg/hvJLQ+I91AMff9w2vxtB06UhYP6nIvozGn4o58K+Q0jFtZFb4
gb+fnxfv+UHmnoClQ+7rZpKFD+DfkS+npJIlv+DNIXn7Mmm8KjeJw/Fza8j7
MrLaDd5T51julkH9W+P+Xr8w3TyLLDgOD9ggN7LIpH4FvGyawSwlTZd9h28b
vu27hKbXD4vH+VrABv0TadTvCmt07rOxN5m3GRZ8e+ivTKf+DFhlbBv6b35p
BbzBOLLMjqxohzkL51k6kFlDEnA82lZl7EXmusAXHvh01qTxu3AjvLZ9l6Se
pkuksN6uIXqSf+P/23DQEs9jq+n1qj/B6yeZ3N5F5hgdxP5hWnP2WLJgBvxd
bsu9SOcr4nXwcpsjw2/R+Z4sFf5pGv14Kf3+fn0ZnNwoHH/mN/V/hCdoDD9o
q0/XPwwSsf1MmuD6zoiufzjC93P3FNqa0vUPERymr3Nm3hi6/nEI/n5sictG
a7r+cRP++KBb1nb69wC4H2DHn94Nm6bR9Y+BSSr+naEP+9bSvz8gsYdlMxQD
YgLo+kcgXGFcpvnP6kT47k23FsV2uv5RDNc57IwKjqDrH+9ghfXhdo/ddP2j
f7KK3xYt4X7eR9c/ePDOJGvj0Gy6/rMS5rZOL6hPo+s/CfBwq6RnpWTeNfiS
8SZRl3PU/xb2nNnrR+UF6u9zCOuvg0BzXhX128L7ZzznD6V/n4G1HO57VXVm
kgbd/3EAZtmvLQyl+4uEhbDIU8FZZ033fzTDl31eCdQWdP8HOwXnl2Wlzu8d
6fN/G9ho+MO1w+n+LI4frDgUfGbECvr8Pybl7/Fw4Nvry+nz/wLYKTJw9owA
+vz/Jdxz4KsOfVzo83/twyq+Q9+tqSov+vx/AnzboV8/bV/6/H8ZnPGTXeO5
hj7/3we38R29yoLo8/+L8InN3mlryYp6+E1OUe3vYLr/pXsq1q+ABJ38tdQ/
Fp630eb1DLqfTegNL69vUkn41L8bFm3zSOpB9xPIc+EbulqPC+l+NXUdLI9I
GTyDzOl6RMW/mcbav5z6BFZwyo2BD8pDqX8xzDl76Ounf/e/RcINw8Ktf/5H
/TK4UCWM/vfvEbBr4Hj/TQsy/93/pnlUxW88Wer0yoD6LeCoHkGi63R/mXQB
nPdNtPbMN1r+O+BxWh96v6R/L4R1BpZ0+JFu0k7rfzXssWpwyjb690OEHaXY
30/2mNa1jdb/0XDOrUmTbqtp/Z8L12W1cDq00PovhhNb/9v5/Cet/6fgPEcX
jRx6fsEjeGvr4TazD7T+/4FvrTOfn/yJ1v8RadieElYLftH89R7wmD5zjqzv
RP1hcKbPznh3+vdMeNlw4mItv4r7tP5XwQlm+23H1NL6/xP+n6X7jofyD+AA
Lhkp5YqiUpRKQ3UNWtKd0aB0RLso2kKkXbSkTXuJRGbRoIgo0qDMiCilqBxd
CS36ffp9/Pl+HXf3ued5vs/3+3zX+QCXuFQ6d0BIjbjzcfXzn8t5/tvAQ5+O
3+hTzPxbYaup8rZPW/OHwZdyw+546/H458DVh4Y0Px3I4/8T1kxLT7nC81Gm
dxnnS+GBtz838/hbw5efzNV8yuMt2QQfO5wwblYTj38IrP9nzkF7jhePy4bt
J2Zc7EtXNMLG2lVBb2lBn9Aacb517JFa/r/ICp73Y53JVo4Xd/eCDd4MKN/O
8bTBQfDfLAVjG853yH0CN4usw65yfJHcdzj90rZed7Q4/qd3GMrLKvXMItpx
KjznY2W/rNbxPx5w/1u/bQwGc/zPBfhutM/cCs7PkGXCLzO/ytlxPKXuV3id
uLDmdCaPf88rNeK5McFNERyf6GMBX63ccDiO4xPj3GDt4DETWnoy/9kr/8bP
L8h8TQsy4By7ty8VOR5TVAd7bNn1fSPtrhWO+sz4dkPLhDz/TeF7G722Jk3k
9e8CW1s93qjB8krudPi/+UWltbFzef3fh5/avVP2WsDrvwZW3je9y/5lPP5d
I1B//vhBN4fXc9okOPno8IL2LD9kq2CdWpeQjrTuCVjt4f70g+t5/O/B7zPk
Y/94Mf9HOMPk8k6rjczfJRL366lFtePpCmO4xFuu5PIO5l8B757R3H04LQqA
7Qr6/nKi3e/CnZ+/HehFB3+ATQy6FrWef7lqUfi+uc37sncx/3jY8s4x1zpa
6AzPXhtybVXr/idH4BVV8R9CDzL/HVjl57oP2leY/x1s+7bkoCEtU43G+TLl
rF8+x2fpjoGjf5ulqnA8lmQJvEzZt2H4U+Y/CGdvNvkwn46Lh5daqYX7cX5M
xRu4s/rZ4385PlHQPgb3i8n+y3p+YP7RcNDnpDk+tPtiuGP75BOXOT8m2A/u
cfuWWx6vj9wbcNLYe6ZDz/H8L4cfLxn1d2g1z3/lqyjfa6unz6MdR8BDHHYk
B9P+C+Bq1UyF4z05/3svrFSqfqdgAOd/x8LZJbv2P9fn/O9SWD2yU0+ZCed/
K1zD+WPx6dtdY87/HgYvihcs62bB+X9zYRV7obSC89crdsFvTVqUrrbOf78K
bxC+fzNwEef/FcNmvTY8XrOe8//axOL6HXlggSYdPAS+ZrpF/gCdaw+XpNtH
ZG3m/HcfeKHhxLMfaWEUnNy0ZkcV7VgY+2++/lmlvVs5/70FnjRkXmUbb+Yf
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
/2X+eXDbVcUDZvHv5fbA04oix3ykhdfgNUHqEwP5+zm+hCd12xzxnftH+cv3
w/Ho89SmYyHzG8BXHaoW6bce/9nw2yyXi+G5zL8TLi4f83MLLYmG94l901bS
Pi/g+CXzzqym4/7C857mqmnw/SoG9Uf9uVeYsTMtsIP7VLfcaLVoB5xlqN6i
wu/nHgEPSDcduTyHxz8fXt7fp/lP6/H/A++2+WYv5uty+gPQ3inLHR1LC23g
+ueGXm15PTluhV+bzZ7Tlf/vHwbLndkkcuN+WWk5sJrzH0kxLfsJT3ZfKV+s
wfGv/fSl4muT5/b278rxv9ZwT0WrCWsEbP9ugtW3FfQJ6sz2bwh86lfF+Qh1
tn+z4YPetRPqaUETnB5VGVlMi/oMxP32inF9BT/P3QoetD4u9gEd7AXPvnF+
ijydGwS7du86R0uTx/8pnPR1iY029zcTfod3Ps8M70479h6E9kJqT73e3C/N
fyqsWKIdV9+P+T3gxDH+bVfQsguwrv+uVyrMq/sIDphfvLyoNf/Xf/9/JnyB
Nj/fp+dg3K87X9Fw7sH8FnD8gv7vE1rzu8HCkZO3neH/C87BI2w8dGpoUQZ8
+3aw3HfavQ7e8/p897xuzK81BPWJo7rhSXSuKVx0df6JdhOYfy288tL8Bdq0
8DR8bmZMyE8P5r8PH3m+pmHtceavgU/n/1LYFMT8XQ1Q35u5ZvDWy8w/CdYZ
4xFzktZdDdvMOtz8I4z5T8AuA92a14Uy/z14WY/4wgI67iM8dXa2exj/vqLL
UJwfZ1O7xoUz/0S4PCu+w5MI5l8Brxl76MIb2j0ANh8dXGBCB9+Fv70XF7rR
uR9glejHKUXXmV8w7F/7OHBeFC0cDzfZan0W3GJ+Z/i+knp5zh3mvQO3sRly
bijH38vewXKe/rs+0bodh6N9dePqwL4PmHcMfGpjo9aQA8y7BH73suGeOR13
EL78cWyaxiHmaS+UikcOufv1rh3zjIYjjzkOmWDGPIvhWwWFzsmcP5HrB1t0
9NFvHMI8N+FVhtUDFA2Ypxx+ey37vgbv347KI3C9fJ6g/KZ1PscI2Gu2ScD4
lyzPFsAuU9ZfsqRle+G9XmX2DqEsz+Jg2a6kCg/uTyQphb986Ht/8TGWZwoj
0b79tcjy2UGWZ8PgqPsz+2+nK+bCcQ+dbvz2Ynm2G/7UaGNqQ4uuwuemnfu4
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
X0+7ArcsipVqc36FLBdeVPNmmQ/nw+j+ho9oBEjKWueb9H+M+51v/bcZnO/k
MxNO3ruhunV/qbjN8MVl7wMGt843uQyXBn7ckMb/FzyHA355Z0ZzvofoB3x6
x3npz9PsL+j7BOWlrCFfi/01wdNh2dMOY7rSuRvg2rELV57k/m1yl+C9h9em
BSgzfxbcyyj+QKgK8zfAsQMqlV60Z36dp2jvHfWv8+bnp02DO+SbXPvYOt/I
E54wLcKpnq/rXoTn+NbtE7TON3oMW7+290tkf5DPN9jsXMCryOvMr50lFQ/0
Kvr8gq6YDLfPix01jf0hgnXwvnmLYqenM/95OPlNtOfVu8z/EH4le2B/kA7+
Ak+K2r+1lv1fud2zcf5WDwiWsb9FzhxWdDXwrWT/htAVTncNfv2J87H8H8B7
Re7bkjjfK00K+zYLbVK5X5ms2zO0B0UiV8vlzCuGVbb0tui3lHnXwNWn+sSU
LmHek8/+ja/PebefjkuF78nXmNhy/aaKT3D+jReLtsxjXo3n8N52kmIH5jV5
/u/+mx1p58S8K+GQ6V0DomYz7zH43cKtF7zmM28yLIma69aV+0nKVcMNe50j
qvh5ws45uJ9ODYwcyf0dHSfAaZ0P9FDk6/7L4EDXosACft+0o/BWv5OHrfj3
skR4xuSsSyP4fXXfw0ZXupgP4/kl6ZSL+kHUxeIQ7lfpMxYOPb1FLZWOWwqn
jjtucWQN8x+CZy7/kRI/jflvw8tcPFY72DD/2/9auve4lv44juPpKrpRuijp
psilkS5SbEk3YZKIaCjXaCLKrUUuoawQuih3cktyTVnqJ4Waki6ipJRqyq2k
4vd2Pv58Pra1vfY9+55zdr4Gzn5dXy9Pv2/FH/gS88mV+mVVU6nXD/aM2GEm
pt8TkToAT9vyYNtn+n0SViYsWehwYAj9f4u8d7D8gIaiLLKwfyn2b6aGyh9+
0HqXCfC0qBfTIun3rTp84WeNASrG9Hs2Bvvg4R55lxPo/2fk3oQXGJ1KukMW
vIHvRV1Yb/aO1rvIlWH7PzVmYfYbWu9iAVuZKzZN+vd7VwthpbVzHWbQemR2
JOy8oXvvr3/rta/D8iYTtqbR70WlVsKa97e/tSmm9T7SrzD/LBnd0E7rn1nz
4dBRny+G0PppXgR82fbptWlk4RW4dt2fPBH9/6micljUp3AskdzxBy5s2aly
JpN6zcsxng/v+ZfQ7/VwveAb+uUOQ+j3pwQ74X6mN1f3e0C9l+DIYY0xPXep
txROqtJK+0jPr9YH103RcmDT87HNXmP/c3RXfPe//991DnznZHGiFz0+dRs8
7e44bihZfB7+6NwpK8yg9U3i13///U1xfT6Z9Qu2krF0Ok/355lU4PzcpDZQ
hXqEs+B+DyLnXab7i0LhwLo9/UbQ8wsMK9s447n3I39kU88MOFMG80Iu9YTA
hbNdrmgeo55UWE3XTfcy/d4NuwhuWJKy6y69P/zv8MPc7nITGq9U/Sqcb8en
Zqyj8RW7wgF7dqd60PYltRF+OD9s6jP6vRxWMqwwyL0skdY/Cb/ANofKNEeS
O6ZXY7yHao0630zjxYc9Do4zPE+/58NNgEVNJe5T//0eWT48V6bRRyuP+j7D
2/KlUh1E1Kf9po0z7uZO20+03l5tGrzSLqi2jdans9fB8yMSrWXo/+flH4dH
RLM6btO/B0jNhQsMnKXMaL27uBWuXfg4WzeR+jRr2jgyjvarVOjfC7DYMJtX
d/4QrXfnrYGH7p23d60v9R6FfZz3B7whi3LgG8MvZPUtpf5mOP25mWsx2UD9
bRsnbmd99i66P9cBDny+3G7sBOpfCV+YVl+0hZweC7+OevOLS67LgrNiVRLd
x1L/RzhZ/d11BTPqV3uH7WOVhXbrEOq3g3Vv/zk3RZ36/eFKuTd7t9H6Z3EM
bJW88uFhstR9eJyN3X41+n0w1gdYJr1CdTutN+Qp17ZxVBIzxAZkoQ1cFOm1
YjHdX7QUXqnw5OyYDlqPeRDW6FZPfPSe1mPega2Sdg43o/WZ3Dp4R1H1vT8v
aT3mgLo2Tlrm9JHLS2k95kR4t6ngyHFan1m3BL4R/LR/J92uFgVnC1dnjaDH
s2/BnA+ejUPzaT3mW9g2h6tdT+tZUxXet3FMxnWalN2j9Zjj4bLbHvcn3aX1
mL6w+ZTjdupkXjoscytS+i2tpxVWw/IDNVK8blKvbH0bx1/i36Vym3rHwU4q
hbsUyQY+sL7WPQ0R/T3ubjj3+4cGwwLqq4A/66ySrf633rrfB+yPTArmKfz7
vbUxsHxMSdX+r9TnDa8MMPbeSuYL/t7/+0HTInq/U9Ng8eUX4X40PuJXcL13
Rr+j/9Zb/4Fld0l39n2h8R3VgP3vtg/dUbS+lDcX7pzyy0iB1rsKd8DeyV3V
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
c+ubLn2/vgnmaGW8GjyUvl8/Bffu3rxcn75/FzyFN/Q8y4jVpv6vcL+AxRc6
Dalfbzb2H4eTegX0fbaaC/xFp59aKpm9Af7wWs9ypCL1J8LXz9taJnbR+eh/
cHFU3crd1CNuh713Jt9fW0/no0O5Eo6vvLXHb/q+m+UER9dO2NhD5q2Hz05b
0bn8K/WfgKVvm5SX0vvf0QZXDOjI8TOjXq05Es6+TLZq+jTq5cA129daF9D7
K1gLc1Tl5y8npx+Dt+5cYzvWnnof/XV0rpXIkvo0PCWcz6G7L+lMpvFcBVff
4q12oe/7xXHw+inWL63JUtmwlVjw8MF8Gs8m+N3QMSv7L6DvywfNxfFQIfuq
HFk4GW5+Zbq/jUvXCwLgdrNLB36TOw7Dv1KDvnLmUN8D+FaX9rgnntTXAJe/
u1fffyG9/mVeEs6ruZfuXPKn8YqGZy6+suVtKPXchf8bK/tjWgSN13uYzZfr
GXuYeqzmSTj1O8atehxPPTxYdU5RofYJ6jkA59cM12w/ST2Z8JnRRrXnjlPP
O/iKso1eSBL19PdG74g3lgFnqWcC7PX2uPO8C9SzGLabESIX8u/61z54b8a1
XgcRjddN+KOlzsQScvobWDCs+uKHeuqVm4/jwfvsleEfqJc1/+/5s0j2wEfq
XQhf3WdrXCam3kg4dVO+0LKCxvM6PHJ8UsN1srgS7jG2PiJLlpJZIOEs3aXq
9Zqu17HGwuPE8XIX6O/x5sMD1AoFa+n+wgj4au1s3T8F1H8F1pb7eXrdWuov
h8eGPDxevYr6pXww/+Wp+0Yvo35z2GTM4GPJa6jfC26+1POuv4D6d8J8xwz+
6V3Ufwlu3RRzePpB6i+DrSdxZhoJqb8P9p1y8QqHzDdbiPMz2dhRxnHUPwde
tb1h9SkaX/E22CWM1+l+jvov/LWXnkGPDF3/FMOxy8pnfZGl65+/4O9R6fVV
ZKHJIhz/VWzM0JSj65+zYPljnzRtVOn6byi8Z/R3Xe0Quv57Fj4q/LFeMZyu
/76AVS5UDY2OoOu/XfD22esep9L15nRDX4z/0R71hHi6/jsDXt4Qd+TdUbr+
uxnm78sVBxyn67+pcM1ei3WcU3T9twg+fdz56pIUuv77Hb7+fOCZslS6/qu/
WMIxfFVqbZVO13/d4KcpodJRadS/EZa7lrzx13XqT4an5HwoKabr68ICeJ3z
hK8ZN6j/C1xvMbtQrYz6dZdIOA0PVuybosCsFzBwhlM6Nlw9qsqYy4dnGl2U
nCELEuBa183rF5LT8+GSBOdQDrnuM/z6xZmxWf0Zq+n44Xgj/sT2djJ7Gsze
7u/spMaYvw7WUXYO+vWV+o/DZX6/nB83UH8unHZh8u4pzdTfBgeUrp1c2kj9
mjwcr1Um2HQq0voHNhx/zOBt40Ba/7AGftHCkvE3pPVpR+HBow4GadPjO3L+
Pv7aiLaRH2n8P8EPZK5VyL6j8Vdfiv3DlFzV6Boafwf4v+0d1smVNP4rYenW
nitrK2j8Y+HUPV9lZXpo/B/CA/ytlz+l52d/hM8tudXf0Ij61ZZhvvwtzHsi
Q+vz7OB4c83gRUq0Ps8fbr/WFNWkQevzDsNWDXX+B61pfd59+LKM0P+ODfV/
gDesjbztOJP6lZfj87dP9mCAPfXbwFfCUy9vo8d3LIXzzXb5/qTHGxyCjQze
LEqyovG/A8fkOcxqm0jjXwcr8Ctvh9Dt6QP8JZy1a21N0h1o/CfC8458W3SF
+tT8YKUl1cV3/9D2HwXXTny0bUQXbf+34PzLHNlieep/6/93/c3GFXL0esUK
ARKO89f+5cbTqX8C3D47TGndZOr3hRNdz7c5u1H/XljvVk3OMbIwHS6NtjEL
IYuq4ZTuwcE76fV1yK7A8Z/v0CcbWdRvAR+KeNi4k56f6wM7jW7wLqTnE+yG
RRGTzNYtof5rcGlVQ8FtX+qvgL8Uq56qm0f90iuxP95ZWDViIY3/GNhTECg7
JYDG3xtuKfgUu2sd9QvgwG/R44z8qT8N3nI7Y+dherxUOfx2SO+8yWTWH9jc
zWO6wIf6R62ScLJfpyiWraD+uXBhh9XlMj7174AXZ8sVrN5A/RfhQdmijhlB
1F8Kv/qo+cpjJ/X3wgvumeZYhlO/6WoJJ2pKfZfBAernwu1H+xItjlP/Vnij
4/JcSQr1n4fd3r3zdzxP/SWwyNJ8/+JL1N8Nz5BoB5depH7jNRLO5vManCN0
u1Qo7C1V9lgcRn3P4SeTRQ4VO6ivE67IrKtr2Uh9Bmsx35xdM1yD3OEO54SP
Ds/zpL4QODCSf0xtLvWlwEqPHtaNnk99hbCqsw2n3Zv6vsEKao0FfHp/64YF
SjhtyrezLvKozxU+21c+6fsa6guGneKerYxYS31JcEdE85oEcuoTOP2Q4Kkv
vd/iDth9yPSEBXepV3cdnq/up5RnCY3vdFgpVctQPpv6g+BT25KvXI+j/pNw
qMMdyR3aHkR5sNZg6bry/6hfAvuMOvum1pTWt2mvl3CeGcX8PDqG1rc5wt+2
/Kg+1kP9gfDUaNEn32/UHw/LrXlTXCyhfhGctzOhatAX6m+F/fbcqh+vSOvZ
pgZJOH1looQUNVrPthrWbrBZk9RLvUfg9uHnRn38Tr05sKVr4VfFbupthq+N
X9zSTOuReYP5OF+va/05Rky99vDPoz0TR5BFK+DY0krdZzXUK4RlJ/aa8Jpp
vLNg4fjOP8b1NN6N8NeuGXsml1Gv6gacj9nGFC+5QH3L4ZtXrvZLOkN9MbBL
5PmdladpfO/Bx4O333Wn+YRfD1er5aw4RRZbB0s4ysYnV9mHUt9S2Ox3fH4u
fb5ZB+Fu44pk2/XUdxt2up830zmYehQ3SjgHffeVP1pFPZYwuyBz7oxA6lkC
b51nG99H8wN3Pxwp1Cs6Tp93QQZ8UzPeqi+Sxq/m7+2K9mdjt1Of/CbMl5VS
A6tCqG88HHLALH3tYupbBFdZvPfbuSlp6v8ylwRk
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9533184*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9533184*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
2h56cjLbBebtWy3flkb9G+HFub6iO2SRFL7oqTd2Tgv134bFLmdP7aPxoOIT
7Jmya63dZNr+jaao+O+mbij8QPtH7gz40dgWiyA6ngvXwWOr+zStaab+VLj7
6JLBF2i8Ji+D05ubjfvS9qZuha9eDT43nswxsPt7ffHG8SW0fxc4wq2Hr/t7
kcUieGSPneVraXwkOwTHvFC+/HGP+m/APpq9R9eT2R/g6ebTHm24Qf0Dedge
H9mO+k3jHZE9rB0uKJXR/kIaCHOuP3rxhV6vIhH+3PXAj29kVjHcd653xagG
6n8Hy20f7fhMxx9hf76KX7q+9JfTe+rnwR7e4TUnyPKV8JNZl5rPkdXx8In1
nbKukDnX4JRtD35v+E39b+GsxN41z35Rf5+pf9eXF6mONF1mCxsWCkRm5PoA
uKEmuFhJ+1/2Adhq3gHzYf/GP4Xws/LUy5vpfEDUDO9Y2rHF15T2/2x7FX+d
YHJevQktfxu4Oic3fwxNZ/nB189Xzba2ov1/DHyy59lQkzG0/y+Al99P6pBN
j5e8hFvb7z+Kod93kGs74O9b25Z2NKD9/3jY6mOnKCt6PZxlcL/ht2b0NKL9
/z7YcsNj9p2BtP+/CB88mxhcyKb9fz3ckHfIWrcvHf+6TVPxiyyXTnan4wV7
LGzYtpNXaknHP2/4msWvsT3o++Oi3bDZDl+/NfT9cmkuvErL1qKMvn+uqIN3
97SKPEbTWV0dVfzOz8sEt8lcK/iU9HWqbAj1L4Z71p9boKQeSSSc+nPIqR9k
uQzmH+t8IIvGV+pn8McdrAwpnR9wNKfjePpsTKiUvg8vsICjGnUnJtLxS7wA
fjK639nL/8b/O+Cc6a5Pvj2g5X8atuq14/wNOl9gV8PJoyJs84to+Xd0UvHf
1jZOy7lC6/9oWBQpYfW+Tuv/XPh8l2GdPiym9V8M39533cmiC/3+wSnYNOKQ
iYEV/f7DI7iPbXDDWkv6/Yc/sIHTR8PG4fT7DyNmqPjBldzxPwbQ7z94wJaf
P0V9mUK//7ANNmzcvcHUln7/IRs2mFFcs3Is/f5D1d/Hm5W8iySLf8Kr6jqq
TSfS7z8YO6v407KeuwYZM64XwOd6C57q0N9nh8JtWvIDbA3GvGMwb5TfRfa3
o0z/fVg5VHPIaBZj6Td4kNsxK+HbI0z/0JkqvkPO+zFLXjJmzYbvx+3VvtDI
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
IS3/IZEqfqU4c4fFHlr+s2D2zDYd8xha/pvgIH/fFTOiaPmnwWsaVg1viKTl
fweWVZe8PUSu/wwr5ntXHCOzOVE4P7sZmJZN53s8Z1jKNuFO3UDLf33U3++7
VLU709+XHoGvdwopj6HHK8rh83NuDnxFy5PVBvdoWx3Eovm5htE4v/TK170T
Qct/Ohz2O/LzdVpfJcHw3vI9q2+Q5SmwEeuR04lA6r/5d/r7upaFZI4a1tBz
7eVwjvr1dqv4nZXWvOJc6neAX9qsMF1wgfrXwGOzR89rvUj9SXDU6V0G68ns
Evjz6Xqzg/nU/x4W6N++8PE49Q/Yg/1v5Ujhz0zq58N9M44Mssqg/lXwkIjE
seNSqP8g/CZ5UvMVMlcObxJ1KLE+TP1KWOHreu72Gervuxfbz9bI9eVk+RQ4
ynLR4843qH85fMzfb+4auv7MiYPlhU8OxuVR/1X4pHXKhRmXqf81/OXVvbqJ
1CPrtU/FH/Vw1anTJdQ/CV63he1x8xb1+8PWWdfchbQ/5EngImWa76L71H8Z
bp16x9PjAfW/ghcGTJkwtJT6dfar+H20J6SkF1H/RDi6NK/xTQX1+8ApEv0j
xnT9QLgfHrusYnh1X1r/82FNt+fhk51o+2+Af7daPRqxnLb/7v+p+FfkPcYc
3Ezb/zi49FYL23A9bf9CeMmZw1aDyOI98Psv4VmlZFkePKX+5YLVp+n49xxu
YbGnjqfrBWytGIzHc0Ky7qTS9j8G1utr7zWtmLZ/L3hSw925QrI0Cu6yQeOI
+yc6/z0HL/29MW2JPo1/auEzX9LttpK5nSUqfkXHb8fL3Gj8w4UPRzzc3mcO
jX8Wwu0OBRHRZPlO2HlTslluKI1/zsDmO1t1tLfQ+OcpvK/bui6xZIFGrIrP
v+O6LzKExj9mcPeXdo8/h9H4Zx5cyjlm0Smcxj/b4QvLI3T0yewcOHPWxq8S
Gq/xHsNdHg/hvJLQ+I91AMff9w2vxtB06UhYP6nIvozGn4o58K+Q0jFtZFb4
gb+fnxfv+UHmnoClQ+7rZpKFD+DfkS+npJIlv+DNIXn7Mmm8KjeJw/Fza8j7
MrLaDd5T51julkH9W+P+Xr8w3TyLLDgOD9ggN7LIpH4FvGyawSwlTZd9h28b
vu27hKbXD4vH+VrABv0TadTvCmt07rOxN5m3GRZ8e+ivTKf+DFhlbBv6b35p
BbzBOLLMjqxohzkL51k6kFlDEnA82lZl7EXmusAXHvh01qTxu3AjvLZ9l6Se
pkuksN6uIXqSf+P/23DQEs9jq+n1qj/B6yeZ3N5F5hgdxP5hWnP2WLJgBvxd
bsu9SOcr4nXwcpsjw2/R+Z4sFf5pGv14Kf3+fn0ZnNwoHH/mN/V/hCdoDD9o
q0/XPwwSsf1MmuD6zoiufzjC93P3FNqa0vUPERymr3Nm3hi6/nEI/n5sictG
a7r+cRP++KBb1nb69wC4H2DHn94Nm6bR9Y+BSSr+naEP+9bSvz8gsYdlMxQD
YgLo+kcgXGFcpvnP6kT47k23FsV2uv5RDNc57IwKjqDrH+9ghfXhdo/ddP2j
f7KK3xYt4X7eR9c/ePDOJGvj0Gy6/rMS5rZOL6hPo+s/CfBwq6RnpWTeNfiS
8SZRl3PU/xb2nNnrR+UF6u9zCOuvg0BzXhX128L7ZzznD6V/n4G1HO57VXVm
kgbd/3EAZtmvLQyl+4uEhbDIU8FZZ033fzTDl31eCdQWdP8HOwXnl2Wlzu8d
6fN/G9ho+MO1w+n+LI4frDgUfGbECvr8Pybl7/Fw4Nvry+nz/wLYKTJw9owA
+vz/Jdxz4KsOfVzo83/twyq+Q9+tqSov+vx/AnzboV8/bV/6/H8ZnPGTXeO5
hj7/3we38R29yoLo8/+L8InN3mlryYp6+E1OUe3vYLr/pXsq1q+ABJ38tdQ/
Fp630eb1DLqfTegNL69vUkn41L8bFm3zSOpB9xPIc+EbulqPC+l+NXUdLI9I
GTyDzOl6RMW/mcbav5z6BFZwyo2BD8pDqX8xzDl76Ounf/e/RcINw8Ktf/5H
/TK4UCWM/vfvEbBr4Hj/TQsy/93/pnlUxW88Wer0yoD6LeCoHkGi63R/mXQB
nPdNtPbMN1r+O+BxWh96v6R/L4R1BpZ0+JFu0k7rfzXssWpwyjb690OEHaXY
30/2mNa1jdb/0XDOrUmTbqtp/Z8L12W1cDq00PovhhNb/9v5/Cet/6fgPEcX
jRx6fsEjeGvr4TazD7T+/4FvrTOfn/yJ1v8RadieElYLftH89R7wmD5zjqzv
RP1hcKbPznh3+vdMeNlw4mItv4r7tP5XwQlm+23H1NL6/xP+n6X7jofyD+AA
Lhkp5YqiUpRKQ3UNWtKd0aB0RLso2kKkXbSkTXuJRGbRoIgo0qDMiCilqBxd
CS36ffp9/Pl+HXf3ued5vs/3+3zX+QCXuFQ6d0BIjbjzcfXzn8t5/tvAQ5+O
3+hTzPxbYaup8rZPW/OHwZdyw+546/H458DVh4Y0Px3I4/8T1kxLT7nC81Gm
dxnnS+GBtz838/hbw5efzNV8yuMt2QQfO5wwblYTj38IrP9nzkF7jhePy4bt
J2Zc7EtXNMLG2lVBb2lBn9Aacb517JFa/r/ICp73Y53JVo4Xd/eCDd4MKN/O
8bTBQfDfLAVjG853yH0CN4usw65yfJHcdzj90rZed7Q4/qd3GMrLKvXMItpx
KjznY2W/rNbxPx5w/1u/bQwGc/zPBfhutM/cCs7PkGXCLzO/ytlxPKXuV3id
uLDmdCaPf88rNeK5McFNERyf6GMBX63ccDiO4xPj3GDt4DETWnoy/9kr/8bP
L8h8TQsy4By7ty8VOR5TVAd7bNn1fSPtrhWO+sz4dkPLhDz/TeF7G722Jk3k
9e8CW1s93qjB8krudPi/+UWltbFzef3fh5/avVP2WsDrvwZW3je9y/5lPP5d
I1B//vhBN4fXc9okOPno8IL2LD9kq2CdWpeQjrTuCVjt4f70g+t5/O/B7zPk
Y/94Mf9HOMPk8k6rjczfJRL366lFtePpCmO4xFuu5PIO5l8B757R3H04LQqA
7Qr6/nKi3e/CnZ+/HehFB3+ATQy6FrWef7lqUfi+uc37sncx/3jY8s4x1zpa
6AzPXhtybVXr/idH4BVV8R9CDzL/HVjl57oP2leY/x1s+7bkoCEtU43G+TLl
rF8+x2fpjoGjf5ulqnA8lmQJvEzZt2H4U+Y/CGdvNvkwn46Lh5daqYX7cX5M
xRu4s/rZ4385PlHQPgb3i8n+y3p+YP7RcNDnpDk+tPtiuGP75BOXOT8m2A/u
cfuWWx6vj9wbcNLYe6ZDz/H8L4cfLxn1d2g1z3/lqyjfa6unz6MdR8BDHHYk
B9P+C+Bq1UyF4z05/3svrFSqfqdgAOd/x8LZJbv2P9fn/O9SWD2yU0+ZCed/
K1zD+WPx6dtdY87/HgYvihcs62bB+X9zYRV7obSC89crdsFvTVqUrrbOf78K
bxC+fzNwEef/FcNmvTY8XrOe8//axOL6HXlggSYdPAS+ZrpF/gCdaw+XpNtH
ZG3m/HcfeKHhxLMfaWEUnNy0ZkcV7VgY+2++/lmlvVs5/70FnjRkXmUbb+Yf
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
/2X+eXDbVcUDZvHv5fbA04oix3ykhdfgNUHqEwP5+zm+hCd12xzxnftH+cv3
w/Ho89SmYyHzG8BXHaoW6bce/9nw2yyXi+G5zL8TLi4f83MLLYmG94l901bS
Pi/g+CXzzqym4/7C857mqmnw/SoG9Uf9uVeYsTMtsIP7VLfcaLVoB5xlqN6i
wu/nHgEPSDcduTyHxz8fXt7fp/lP6/H/A++2+WYv5uty+gPQ3inLHR1LC23g
+ueGXm15PTluhV+bzZ7Tlf/vHwbLndkkcuN+WWk5sJrzH0kxLfsJT3ZfKV+s
wfGv/fSl4muT5/b278rxv9ZwT0WrCWsEbP9ugtW3FfQJ6sz2bwh86lfF+Qh1
tn+z4YPetRPqaUETnB5VGVlMi/oMxP32inF9BT/P3QoetD4u9gEd7AXPvnF+
ijydGwS7du86R0uTx/8pnPR1iY029zcTfod3Ps8M70479h6E9kJqT73e3C/N
fyqsWKIdV9+P+T3gxDH+bVfQsguwrv+uVyrMq/sIDphfvLyoNf/Xf/9/JnyB
Nj/fp+dg3K87X9Fw7sH8FnD8gv7vE1rzu8HCkZO3neH/C87BI2w8dGpoUQZ8
+3aw3HfavQ7e8/p897xuzK81BPWJo7rhSXSuKVx0df6JdhOYfy288tL8Bdq0
8DR8bmZMyE8P5r8PH3m+pmHtceavgU/n/1LYFMT8XQ1Q35u5ZvDWy8w/CdYZ
4xFzktZdDdvMOtz8I4z5T8AuA92a14Uy/z14WY/4wgI67iM8dXa2exj/vqLL
UJwfZ1O7xoUz/0S4PCu+w5MI5l8Brxl76MIb2j0ANh8dXGBCB9+Fv70XF7rR
uR9glejHKUXXmV8w7F/7OHBeFC0cDzfZan0W3GJ+Z/i+knp5zh3mvQO3sRly
bijH38vewXKe/rs+0bodh6N9dePqwL4PmHcMfGpjo9aQA8y7BH73suGeOR13
EL78cWyaxiHmaS+UikcOufv1rh3zjIYjjzkOmWDGPIvhWwWFzsmcP5HrB1t0
9NFvHMI8N+FVhtUDFA2Ypxx+ey37vgbv347KI3C9fJ6g/KZ1PscI2Gu2ScD4
lyzPFsAuU9ZfsqRle+G9XmX2DqEsz+Jg2a6kCg/uTyQphb986Ht/8TGWZwoj
0b79tcjy2UGWZ8PgqPsz+2+nK+bCcQ+dbvz2Ynm2G/7UaGNqQ4uuwuemnfu4
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
X0+7ArcsipVqc36FLBdeVPNmmQ/nw+j+ho9oBEjKWueb9H+M+51v/bcZnO/k
MxNO3ruhunV/qbjN8MVl7wMGt843uQyXBn7ckMb/FzyHA355Z0ZzvofoB3x6
x3npz9PsL+j7BOWlrCFfi/01wdNh2dMOY7rSuRvg2rELV57k/m1yl+C9h9em
BSgzfxbcyyj+QKgK8zfAsQMqlV60Z36dp2jvHfWv8+bnp02DO+SbXPvYOt/I
E54wLcKpnq/rXoTn+NbtE7TON3oMW7+290tkf5DPN9jsXMCryOvMr50lFQ/0
Kvr8gq6YDLfPix01jf0hgnXwvnmLYqenM/95OPlNtOfVu8z/EH4le2B/kA7+
Ak+K2r+1lv1fud2zcf5WDwiWsb9FzhxWdDXwrWT/htAVTncNfv2J87H8H8B7
Re7bkjjfK00K+zYLbVK5X5ms2zO0B0UiV8vlzCuGVbb0tui3lHnXwNWn+sSU
LmHek8/+ja/PebefjkuF78nXmNhy/aaKT3D+jReLtsxjXo3n8N52kmIH5jV5
/u/+mx1p58S8K+GQ6V0DomYz7zH43cKtF7zmM28yLIma69aV+0nKVcMNe50j
qvh5ws45uJ9ODYwcyf0dHSfAaZ0P9FDk6/7L4EDXosACft+0o/BWv5OHrfj3
skR4xuSsSyP4fXXfw0ZXupgP4/kl6ZSL+kHUxeIQ7lfpMxYOPb1FLZWOWwqn
jjtucWQN8x+CZy7/kRI/jflvw8tcPFY72DD/2/9auve4lv44juPpKrpRuijp
psilkS5SbEk3YZKIaCjXaCLKrUUuoawQuih3cktyTVnqJ4Waki6ipJRqyq2k
4vd2Pv58Pra1vfY9+55zdr4Gzn5dXy9Pv2/FH/gS88mV+mVVU6nXD/aM2GEm
pt8TkToAT9vyYNtn+n0SViYsWehwYAj9f4u8d7D8gIaiLLKwfyn2b6aGyh9+
0HqXCfC0qBfTIun3rTp84WeNASrG9Hs2Bvvg4R55lxPo/2fk3oQXGJ1KukMW
vIHvRV1Yb/aO1rvIlWH7PzVmYfYbWu9iAVuZKzZN+vd7VwthpbVzHWbQemR2
JOy8oXvvr3/rta/D8iYTtqbR70WlVsKa97e/tSmm9T7SrzD/LBnd0E7rn1nz
4dBRny+G0PppXgR82fbptWlk4RW4dt2fPBH9/6micljUp3AskdzxBy5s2aly
JpN6zcsxng/v+ZfQ7/VwveAb+uUOQ+j3pwQ74X6mN1f3e0C9l+DIYY0xPXep
txROqtJK+0jPr9YH103RcmDT87HNXmP/c3RXfPe//991DnznZHGiFz0+dRs8
7e44bihZfB7+6NwpK8yg9U3i13///U1xfT6Z9Qu2krF0Ok/355lU4PzcpDZQ
hXqEs+B+DyLnXab7i0LhwLo9/UbQ8wsMK9s447n3I39kU88MOFMG80Iu9YTA
hbNdrmgeo55UWE3XTfcy/d4NuwhuWJKy6y69P/zv8MPc7nITGq9U/Sqcb8en
Zqyj8RW7wgF7dqd60PYltRF+OD9s6jP6vRxWMqwwyL0skdY/Cb/ANofKNEeS
O6ZXY7yHao0630zjxYc9Do4zPE+/58NNgEVNJe5T//0eWT48V6bRRyuP+j7D
2/KlUh1E1Kf9po0z7uZO20+03l5tGrzSLqi2jdans9fB8yMSrWXo/+flH4dH
RLM6btO/B0jNhQsMnKXMaL27uBWuXfg4WzeR+jRr2jgyjvarVOjfC7DYMJtX
d/4QrXfnrYGH7p23d60v9R6FfZz3B7whi3LgG8MvZPUtpf5mOP25mWsx2UD9
bRsnbmd99i66P9cBDny+3G7sBOpfCV+YVl+0hZweC7+OevOLS67LgrNiVRLd
x1L/RzhZ/d11BTPqV3uH7WOVhXbrEOq3g3Vv/zk3RZ36/eFKuTd7t9H6Z3EM
bJW88uFhstR9eJyN3X41+n0w1gdYJr1CdTutN+Qp17ZxVBIzxAZkoQ1cFOm1
YjHdX7QUXqnw5OyYDlqPeRDW6FZPfPSe1mPega2Sdg43o/WZ3Dp4R1H1vT8v
aT3mgLo2Tlrm9JHLS2k95kR4t6ngyHFan1m3BL4R/LR/J92uFgVnC1dnjaDH
s2/BnA+ejUPzaT3mW9g2h6tdT+tZUxXet3FMxnWalN2j9Zjj4bLbHvcn3aX1
mL6w+ZTjdupkXjoscytS+i2tpxVWw/IDNVK8blKvbH0bx1/i36Vym3rHwU4q
hbsUyQY+sL7WPQ0R/T3ubjj3+4cGwwLqq4A/66ySrf633rrfB+yPTArmKfz7
vbUxsHxMSdX+r9TnDa8MMPbeSuYL/t7/+0HTInq/U9Ng8eUX4X40PuJXcL13
Rr+j/9Zb/4Fld0l39n2h8R3VgP3vtg/dUbS+lDcX7pzyy0iB1rsKd8DeyV3V
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
c+ubLn2/vgnmaGW8GjyUvl8/Bffu3rxcn75/FzyFN/Q8y4jVpv6vcL+AxRc6
Dalfbzb2H4eTegX0fbaaC/xFp59aKpm9Af7wWs9ypCL1J8LXz9taJnbR+eh/
cHFU3crd1CNuh713Jt9fW0/no0O5Eo6vvLXHb/q+m+UER9dO2NhD5q2Hz05b
0bn8K/WfgKVvm5SX0vvf0QZXDOjI8TOjXq05Es6+TLZq+jTq5cA129daF9D7
K1gLc1Tl5y8npx+Dt+5cYzvWnnof/XV0rpXIkvo0PCWcz6G7L+lMpvFcBVff
4q12oe/7xXHw+inWL63JUtmwlVjw8MF8Gs8m+N3QMSv7L6DvywfNxfFQIfuq
HFk4GW5+Zbq/jUvXCwLgdrNLB36TOw7Dv1KDvnLmUN8D+FaX9rgnntTXAJe/
u1fffyG9/mVeEs6ruZfuXPKn8YqGZy6+suVtKPXchf8bK/tjWgSN13uYzZfr
GXuYeqzmSTj1O8atehxPPTxYdU5RofYJ6jkA59cM12w/ST2Z8JnRRrXnjlPP
O/iKso1eSBL19PdG74g3lgFnqWcC7PX2uPO8C9SzGLabESIX8u/61z54b8a1
XgcRjddN+KOlzsQScvobWDCs+uKHeuqVm4/jwfvsleEfqJc1/+/5s0j2wEfq
XQhf3WdrXCam3kg4dVO+0LKCxvM6PHJ8UsN1srgS7jG2PiJLlpJZIOEs3aXq
9Zqu17HGwuPE8XIX6O/x5sMD1AoFa+n+wgj4au1s3T8F1H8F1pb7eXrdWuov
h8eGPDxevYr6pXww/+Wp+0Yvo35z2GTM4GPJa6jfC26+1POuv4D6d8J8xwz+
6V3Ufwlu3RRzePpB6i+DrSdxZhoJqb8P9p1y8QqHzDdbiPMz2dhRxnHUPwde
tb1h9SkaX/E22CWM1+l+jvov/LWXnkGPDF3/FMOxy8pnfZGl65+/4O9R6fVV
ZKHJIhz/VWzM0JSj65+zYPljnzRtVOn6byi8Z/R3Xe0Quv57Fj4q/LFeMZyu
/76AVS5UDY2OoOu/XfD22esep9L15nRDX4z/0R71hHi6/jsDXt4Qd+TdUbr+
uxnm78sVBxyn67+pcM1ei3WcU3T9twg+fdz56pIUuv77Hb7+fOCZslS6/qu/
WMIxfFVqbZVO13/d4KcpodJRadS/EZa7lrzx13XqT4an5HwoKabr68ICeJ3z
hK8ZN6j/C1xvMbtQrYz6dZdIOA0PVuybosCsFzBwhlM6Nlw9qsqYy4dnGl2U
nCELEuBa183rF5LT8+GSBOdQDrnuM/z6xZmxWf0Zq+n44Xgj/sT2djJ7Gsze
7u/spMaYvw7WUXYO+vWV+o/DZX6/nB83UH8unHZh8u4pzdTfBgeUrp1c2kj9
mjwcr1Um2HQq0voHNhx/zOBt40Ba/7AGftHCkvE3pPVpR+HBow4GadPjO3L+
Pv7aiLaRH2n8P8EPZK5VyL6j8Vdfiv3DlFzV6Boafwf4v+0d1smVNP4rYenW
nitrK2j8Y+HUPV9lZXpo/B/CA/ytlz+l52d/hM8tudXf0Ij61ZZhvvwtzHsi
Q+vz7OB4c83gRUq0Ps8fbr/WFNWkQevzDsNWDXX+B61pfd59+LKM0P+ODfV/
gDesjbztOJP6lZfj87dP9mCAPfXbwFfCUy9vo8d3LIXzzXb5/qTHGxyCjQze
LEqyovG/A8fkOcxqm0jjXwcr8Ctvh9Dt6QP8JZy1a21N0h1o/CfC8458W3SF
+tT8YKUl1cV3/9D2HwXXTny0bUQXbf+34PzLHNlieep/6/93/c3GFXL0esUK
ARKO89f+5cbTqX8C3D47TGndZOr3hRNdz7c5u1H/XljvVk3OMbIwHS6NtjEL
IYuq4ZTuwcE76fV1yK7A8Z/v0CcbWdRvAR+KeNi4k56f6wM7jW7wLqTnE+yG
RRGTzNYtof5rcGlVQ8FtX+qvgL8Uq56qm0f90iuxP95ZWDViIY3/GNhTECg7
JYDG3xtuKfgUu2sd9QvgwG/R44z8qT8N3nI7Y+dherxUOfx2SO+8yWTWH9jc
zWO6wIf6R62ScLJfpyiWraD+uXBhh9XlMj7174AXZ8sVrN5A/RfhQdmijhlB
1F8Kv/qo+cpjJ/X3wgvumeZYhlO/6WoJJ2pKfZfBAernwu1H+xItjlP/Vnij
4/JcSQr1n4fd3r3zdzxP/SWwyNJ8/+JL1N8Nz5BoB5depH7jNRLO5vManCN0
u1Qo7C1V9lgcRn3P4SeTRQ4VO6ivE67IrKtr2Uh9Bmsx35xdM1yD3OEO54SP
Ds/zpL4QODCSf0xtLvWlwEqPHtaNnk99hbCqsw2n3Zv6vsEKao0FfHp/64YF
SjhtyrezLvKozxU+21c+6fsa6guGneKerYxYS31JcEdE85oEcuoTOP2Q4Kkv
vd/iDth9yPSEBXepV3cdnq/up5RnCY3vdFgpVctQPpv6g+BT25KvXI+j/pNw
qMMdyR3aHkR5sNZg6bry/6hfAvuMOvum1pTWt2mvl3CeGcX8PDqG1rc5wt+2
/Kg+1kP9gfDUaNEn32/UHw/LrXlTXCyhfhGctzOhatAX6m+F/fbcqh+vSOvZ
pgZJOH1looQUNVrPthrWbrBZk9RLvUfg9uHnRn38Tr05sKVr4VfFbupthq+N
X9zSTOuReYP5OF+va/05Rky99vDPoz0TR5BFK+DY0krdZzXUK4RlJ/aa8Jpp
vLNg4fjOP8b1NN6N8NeuGXsml1Gv6gacj9nGFC+5QH3L4ZtXrvZLOkN9MbBL
5PmdladpfO/Bx4O333Wn+YRfD1er5aw4RRZbB0s4ysYnV9mHUt9S2Ox3fH4u
fb5ZB+Fu44pk2/XUdxt2up830zmYehQ3SjgHffeVP1pFPZYwuyBz7oxA6lkC
b51nG99H8wN3Pxwp1Cs6Tp93QQZ8UzPeqi+Sxq/m7+2K9mdjt1Of/CbMl5VS
A6tCqG88HHLALH3tYupbBFdZvPfbuSlp6v8ylwRk
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9533184*^9}, {0, 0.0798545257471515}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9533184*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.952950248343712*^9, 3.95306482568782*^9, 
  3.953064963527657*^9, 3.953064999149098*^9, 3.953065201948196*^9, 
  3.9530653549354362`*^9, 3.953065470584772*^9, 3.9531263063877563`*^9, 
  3.953126768437801*^9, 3.953126960242302*^9, 3.9531271188095093`*^9, 
  3.953127190425571*^9, 3.953127521340255*^9, 3.953127571537415*^9, 
  3.953127619589445*^9, 3.953127669707562*^9, 3.953136713558751*^9, 
  3.953136833473392*^9, 3.953136978984818*^9, 3.953137168290571*^9, 
  3.953137361486867*^9, 3.9531374107048407`*^9, 3.953137486629575*^9, 
  3.953137585306974*^9, 3.953285304381791*^9, 3.9532853634246693`*^9, 
  3.9532854623528023`*^9, 3.9534102386067257`*^9},
 CellLabel->
  "Out[979]=",ExpressionUUID->"731e0637-b952-47ab-b681-abbf856dce04"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2910, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4079, 120, 1168, 20, 42, "Output",ExpressionUUID->"9beb24b3-1e62-4d35-b261-44ce75dc9461"]
}, Open  ]],
Cell[5262, 143, 6075, 126, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11340, 271, 2529, 62, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[13894, 337, 45271, 925, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[59168, 1264, 16572, 332, 5795, "Output",ExpressionUUID->"a42c6944-a44e-486d-847b-c88866cc0cb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75777, 1601, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[76123, 1611, 3922, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[80048, 1701, 206849, 3539, 806, "Output",ExpressionUUID->"731e0637-b952-47ab-b681-abbf856dce04"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

