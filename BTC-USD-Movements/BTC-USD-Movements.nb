(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    293338,       5373]
NotebookOptionsPosition[    291653,       5332]
NotebookOutlinePosition[    292047,       5348]
CellTagsIndexPosition[    292004,       5345]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->
  "In[2299]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.960120625269417*^9, 3.960542105387349*^9, 
  3.962017595217133*^9},
 CellLabel->
  "Out[2302]=",ExpressionUUID->"86e361d4-b07c-4226-a2dd-085865260b11"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->
  "In[2303]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->
  "In[2308]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Automatic", "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.005", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.010", "]"}]}], "\[IndentingNewLine]",
               "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}, {3.9554843906883707`*^9, 
   3.9554844202100267`*^9}, 3.9554844683149023`*^9, {3.955484509072035*^9, 
   3.955484573338862*^9}, 3.955484816424817*^9, 3.955484990240109*^9, {
   3.955485048330737*^9, 3.9554850666151657`*^9}, {3.955485212388727*^9, 
   3.955485238935068*^9}},
 CellLabel->
  "In[2311]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Day", $CellContext`since$$ = 
    4959, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4959}, {
      4959 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1289.1, {2803.5584039726446`, 2809.2903375663946`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4959}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4959}, {
         4959 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1338.1999999999998`, {2871.372579387684, 2877.104512981434}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.96012062580836*^9, 3.960542105896446*^9, 
  3.962017595992302*^9},
 CellLabel->
  "Out[2311]=",ExpressionUUID->"f47d2153-12af-409e-9f0e-ab0db89c6f29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->
  "In[2312]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
tI8m6WT2JjhveGBcuBX1p8ExOWc7xJNFd2BJ1mDDG47U/xk+Wj6h/RlZYfQE
xw/rXAtLAfU7w0+DCu2Hk7nr4bTsFdWH5lD/kb/Tew5d10zTJeVw03e9n+vI
8o/wf1KNwwODqd+gWslvi9olnU/mzIAfHOljPWMN9QfD3O1Vky4vo/4UmGdq
+J+7P/XfhDMGp+ocIdd/gOMTzrvN8qN+vadK/nOtuIonPtRvDzvocjbak0Vr
4OTAlnOF3tSfBH/70G3P+vnUXwwPqNmYGD2P+t/DjeUlQ0PJ3AHP/r6/tSVh
ZCEfHnG2wYJLj5esgv/s7jRKRpYnwN8tOqwY70n912D2pvmu5pOpXwknzxy1
7Nt46u9bg+PR8tq8NlPqnwp79ti9LpTWH9lyePrRWT9KaP2t31/zd3/VO+YD
bY/sq/CTvKR9pbT98F7DbINUTqsN9feqVfJLgm9xjo6l/snwwuAn8w1p/VD4
wSN1NPN6WlO/pPbv8amrffEk6r8Mzx1hm9+fpgtfwa7Hs0apqUeiU4fx0uzG
qT4W1D8RfvnL58dKfepfBts9uOJiSNsjZy+8ZZ9r+YuB1F8AC7R4Nz/oUX/D
Xw8bafr5D+3/uz9X8nt/3H5ydyvt/8fBvZ4kxlepaP8vhJ3izrT33EL7/z2w
x2zzXZc30PgnHx7//WWEsB+Nf57DMS8T9q5so/Ff1xcYL5er78V0ofHPWPir
+uI7v9s0/vP6O90028DtJo3/ouBFp0JkT2g8KcmFzVW5uQFcGv/VwJ/qXoqz
RtD4T7NeyTdalFCoO5TGf1x4R4fnq6ca0vhvIXz/eNt7N30a/+2E93dKeL9X
m8Z/Z+AuPdavPNiDxn/V8M/ZpR0dtWj8p9GAv9916t4jOjT+HQO/kYcXfO5K
4995cLn+uZO6nWn8ux0en+lz+Bld71acgn1fbT3u+u/692P49bjcq3bpdP7H
asR4x8XT+2ssnf+NhHuu0uvUuIHO/+bA/3mlzz7Dp/O/MNjT10Xb0pbO/7Lh
h/7vd8dNofO/B/ClokNLA63p/O8XvCuv/EIAWWzyUsnP7bbn5qdJdP7nBi8a
06ZXNJHO/0LhEavv56wcT+d/x+H3QQOuBZN5ir/T347bvZks+g6v3ZfUvmEw
nf8Oe4XjU3zkpuccOv+dDa96rr16gCGd/26GJ62Y0XWjPvVnwPu1jHP7kYUV
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
O84XbMlzZ35beOCCWAU/WrIdDtzS/OvBWuaPhFfcNll4mOVhfCE8dpj3hnz2
B1f9hid92vDCmeWpQM8G9f3UD09bLbKG98tvuZNlx/xb4Pjfey+dZvsjJByO
/eIjn879ufPz4OoLfWf6WzH/T1gsnDJnLst3Yf/ZKG89E2wSOX/byQp+VpY7
tRP3Hw/YCHcqrb17lvu7pofCGS2JB1KGM38ufFA4N3fdMOZvhhWyXQT7hjJ/
X1up+IL30Tvz2V72tYQN9X8+GMXnRfHe8J4+6nsK+Ty0KhheWfL1s4Ud2xuP
4T67Pu4ZYMX6+Tf4ckq3t9tb98/pYycVe3ScYzWQ9feQafCrzctHFfZme8MT
LtTsWLGJ+yPJBcE6Ln9CWrhfi/ABrN3TdI0T7fQFtp+jPKg/938J6DUH7em4
4SFtuZ9LujkceuSP14bbvF+7w2bz5BKfJ/B+fRb2VDnbtpT9y5JMeN5Dle+X
W/ePqoe9V8dPj2V9J15zLo7XNSu9Eq5XUGUCawQP6bTZivfrNbAo9kFHs3G8
X5+CpdFpa9qyP9bjHiw0eqN3jf2RIbVwSJLhgWUX2H/QzR7H52X8kE/sD5IT
wfYuZZXuQew/WAV3TClLqefrTsdh2w6mE1PPs//gLtzecf54pWPsP/gAr9JL
X5h5kv1HXR2k4ueLasRa7K/VmQQ7z9QoamJ/rmQ5/G3E/op+iew/CIRDFYo7
S26zv+gdLB+gcXQw+zsFgnko/6dfX/CT/cmi8bCZ3+1bcuw/9XCBT30OzRSy
fznkMGznalqjyPz5t+FVViPmLs5h3mp4i76HY9IN5lWZLxW7KIlMzrI/2WkM
vDixj2kp+88CFsNzva5oj45i3gPwdPvAP3vZ3yxLgCdUKT8tu8S8VbCv8QVD
WQjzdliA63OgveO6UOYdDW8d5qXvw98rfhHs2Uk5fLYX8/vDWR8szi7ayPw3
4L8OPY2WbWH+ClizITNNcxvzKy1E/fTeOsXcrcw7Hz4xOOaOO99Pzg9ut9lx
2KZFzBv/zzPso2tppxdwTYKyTqMT8yoswv2hPFRDl6+nD4PfvP98NZmvy+zh
gCTTt2ta+4d3wdqDO7VVs2TeK/CF4MO6Qtq3FJ65zXWjPR3fxlEqVo/pOOAa
+4Or9OGc4sL6bew/FsyBb72ZHBdsx7y+8LEnXcQF85g3Gj6lF50Ss5DHuxju
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
5lOvRRXG89b10HL6vR4vH/iiUZXjQPr9KcEmWNbs0hLZm9R7Gk4c3Jzae416
K+CsGt2c9/T8mr/ghkm6jhx6Po75Cxx/9iak9/z7/11nwVcPlmX60ONF6+Ep
10Z7rSVLTsDvXboUhHm0vkny4u+/vylrLCazf8DW8uOcT9D9eaYvcX1uWr9c
nXqEM2DZm4lzztD9xWvh5Q1bZIfR8wuMq9u5Y7xuJH6/TT3T4Hx5zAtF1BMN
l8x0Pauzj3pEsKaBu8EZ+r0bTinctOBwwjV6ffjf4FtFPVWmNF4ioxpcb6eL
8lbQ+Erc4LAtm0WetH/JrIZvzY2d/Jh+L4edDffp71GZSeufhJ9h252VOsPJ
nVNrMd6DdEec+EDjxYc9d4w2PkG/5+OVAYtbyj0m//s9smJ4tnyzv+496vsE
ry+WETmKqU/vVTt39KVNEz7SenvNKXC4fUR9O61P56yA58Zn2sjT/8/L3w8P
S2F3XqF/DyAqgh+yXGTMab27pA2un3f3tkEm9enUtXPlnRwWq9O/F2BzYA6v
4cROWu/OWwoPSpqTtCyQevfC/i7bwl6RxYXwxSEnC34FU/8HOPeJuVsZmaX1
up2btqnxdgLd38sRXv4kxN5yLPWHwyenNJbGkHN3wy+SX/3wIjcUwAW71TM9
LKn/PZyt9eZCH3Pq13yD/WOxlV7bQOq3hw2u/Dk+SYv6Q+FqxVdJ62n9syQV
ts4Ov7WLLHMDHm1rv02Tfh+M/Q6Wz32psYHWG/LU6tu56pl5EhZZaAuXJvos
mk/3FwfD4X0eHBvVSesxd8DaPVqZd97SesyrsHXWpiHmtD7TqwHeWFp7/c8z
Wo+p0tDOzcmfOjykgtZjjoc3mwn27Kf1mQ0L4IuRj5S76HbNZPi2cEnBMHo8
5zLMfefdPKiY1mO+hicUeuk10npWUZ+37VzT0V2mlddpPeYYuPKK5w27a7Qe
MxC2mLTfXovMy4XlLyfKvab1tMJaWKmf9mGfS9Sr0NjODZWGdqtfod7RsLN6
SUJfMssfNtK9ri2mv+e1GS769q7J+CH1vYQ/6S9WqP233lr2HY5Hpg/n9Pn3
e2ujYKXU8pptX6jPFw4PG+q7jswX/L3/tx1mpfR6i3JgyZmncUE0PpLncKNv
nuzef+ut/8AKCXJdvz7T+I5owvF3/bueZFpfypsNd036YdKH1rsKN8K+2d21
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
1eWvBvT5ehTM1c17PmAQfb5+CP65eU2IEX3+LngEr+p9nLdbj/q/wLJh8092
GVO/4UwcP3Zl/RTQ59marvBnfVlNEZmzCn73wnDc8L7UnwlfODFhXGY3XY/e
h8uSG8I3U4+kA/bdlH1jWSNdjw7yknIDlWw8f9Pn3WxnOKV+7OpeMm8lfGzK
oq6QL9R/AJa7YlpVQa9/Zzv8UqWzMMicenVnSblb8zkauVOolwvXbVhm85Be
X8EymKuhNDeEnLsPXrdp6QRLB+q989cpRdbicdSn7S3lflq7+bT+RBrPxXDt
Zd4SV/q8X5IGr5xk88yGLHMbtpYIbt2cS+PZAr8ZNCpc2Y8+L+8/G+dDJZxz
imThRPjDc7Nt7V70fUEY3GF+evtvcucu+Ico4gt3FvXdhC93641+4E19TXDV
m+uNyvNo+xf6SLnPZ5++ejqUxisFnj7/bMzrtdRzDb5vqfB9SjyN11uYw1fs
tdxFPdZzpNzGjaMX302nHh6sMau0RO8A9WyHi+uG6HQcpJ58+OhIk/rj+6nn
DXxWzdYwOot6lH3RO+zVuLBj1DMW9nm932XOSeqZD9tPi1aM/vf911Y4Ke/8
T0cxjdcl+P04/fHl5NxXsGBw7al3jdSrOBfngzc44XHvqJc99+/1s1hh+3vq
nQef2zphaKWEehNhUVSxcNxLGs8L8PAxWU0XyJJquHeozR4Fsoy8n5QbnKDh
84K+r2NbwqMl6Yon6e/x5sIqmiWCZXR/YTx8rn6mwZ+H1H8W1lP878iKZdRf
BVtG39pfu5j6Zfwx/93TCkxZSP0WsOmoAfuyl1K/D/zhdO8bZQH1b4L5Tnn8
IwnUfxpui0rdNXUH9VfCNnbc6SZC6v8FB046dZZL5pvPw/WZwu4RQ9Oofxa8
eEPTkkM0vpL1sGssr8vjOPWf/GsfQ1avPH3/KYF3L6ya8VmBvv/8AX9Lzm2s
IQtNA3D+93J1no4iff85A1ba91HHVoO+/10Lbxn5zUAvmr7/PQbvFX5f2TeO
vv99CqufrBmUEk/f/3bDG2auuCui75tzjQMx/nt7tTLS6fvfaXBIU9qeN3vp
+981MH9rkSRsP33/K4LrkqxWcA/R97+l8JH9LucWHKbvf7/BF570O1opou9/
jeZLucbPK2ysc+n7X3f40eG1csk51L8aVjyfvfrHBerPhicVvisvo+/XhQ/h
FS5jv+RdpP7PcKPVzBLNSuo3WCDlNt1ctHVSH2a9AMsFPty56txeDcZefHi6
ySnpUbIgA653W7NyHjm3GC7PcFnLJTd8gl88PWpZoMxYUz8I5xvpBzZ0kDlT
YM6GUBdnTcb8FbC+mkvEjy/Uvx+uDPrhcreJ+ovgnJMTN0/6QP3tcFjFsokV
zdSvw8P5WnWGbVdfWv/AgdP3sV4396P1D0vhp61s+VBjWp+2Fx4wYkeEHj2+
s/Dv488Pax/+nsb/I3xT/vxLhTc0/lrBOD5MKtJIqaPxd4Tvb+i0ya6m8Q+H
5dp6zy57SeO/GxZt+aIg30vjfwtWCbUJeUTPz3kPH19wWdnYhPo1F2K+/C28
90Ce1ufZw+kWOpEBqrQ+LxTuON+S3KJN6/N2wdZNDaE7bGh93g34jLww9Kot
9b+DVy1LvOI0nfrVQvD+26qwI8yB+m3hs3GiM+vp8Z3BcLF5QuB/9HjWTtiE
9Sogy5rG/yqces9xRvt4Gv8GuA+/+ko03Z6rEirlLls2wTTXkcZ/PDxnz9eA
s9SnGQSrLqgtu/aH9v9kuH78nfXDumn/vwwXn+EqlClR/+vQv+tvVi9SpO3t
VFgk5Y4LiT/WNJy2zwpWDQhxZ/3bPn84/7q1b+i/7dsMn/dafzlrLm3feXjq
+WNWdXNo+17CcU8du+pm0PbJhUu5m3sDZtnNpvEZBXeWJc/ftIDGxxeO0w6R
+7yIxiMHPrhOsOriPBqPKniw9mqfhWT2H/iJn6rlEX8ajxGLcb30x+xZUDiN
x2y47tz0xK2raDw2wuayxy8OiaTeU7BbnOXh/yKotwI+5n5ptU8c9f6EZ9TG
eUwRUK/ZEin3loP39RU7qNcLPvO95OzlA9S7Dr7c7Nl75gj1noA7XWepGJ2i
3nJYc0XOiWk51NsDT3Q7PKfwDI3H0KXY/+7URibR7TJr4cRJ5dmf1lHfE3hI
xOIjarR9wi540RqDxb1R1Mdahv3BMG6ELrnTA5abvLX/KHq9WdHwYv7iJxvJ
XofhVO06pTwaP0EJvGhIsUrUv/H8Ck+Nf9woQ693w+DluL76sSjGL5j63ODP
wVfGvFlGfZEwZ7IkZsly6suCz3EMXLeRRQ/gS0f17Hl8Gt9O2L7vqflvb1Cv
wQq8XqUb+PMraHynwsE7zOoK7lB/BKzXbirYs5f6D8Jfns5YuyWA+u/BFmOT
z4sfUb8UFrWkbS0eSevN9Fbi/ahp9nrvGFpv5gRzqgKHH/tD/cvh0rfbDSZ1
U386rKTpOeXgZ+oX/7VDwtSOb9TfBlc+mLYlldYL8ydHYP8bv83MbCCtL1sC
D4rRbb1D64Mle+A1rZcfv/2PegvhlTNS1w36Rb0f4P4Ff+JKvlLvAL6U2+p/
vzW8knod4LW+0fI8sngRLLUc+8GtgXqF8JDxRhHa7TTeBbD2wmldV5tpvJvh
x1buyZteUK/GKhy/ZjtNLDpNfSGwov7GUc3HqS8VLv4zNGgwmXMdTlgjUX7q
TuPbCD+6cjCZ5UHjaROJ+enPt1nXY6kvGA7V2a6gRO8v9g44wtV89CYy7woc
f9r34+HV1NN3tZTLnq64vXkJ9YyDPeUW5iasoJ4FcPjY/Lr+ND94bYOPTNLj
XKH3uyAPztffee1WEo1fHcy5u3+4+SbqU4rC+YeTrIJnDPWNgc/ZWHACaf7h
BMDploqezdHUtwWOWbAmdsh62n8vwns6fw+T+7f/1sDK3sN3XKT9W0YhWsp9
OKylXxjNf+zR8MErz8KiyDw/uLHHwHm0K41nAjxSdk+mKs2n4nOwSEN7zjo6
/nS+gDn7wmKqBlC/7BopN23YtUu9g6h/JDxAe7BP5r/5eA7cMCmpj40d9cfB
LrNv3ZlHbjgD75LeTw4dS/3PYdvpeU2D6PGc33C9a6Pdczb1D4+RcvcbW8S5
kkXesCgzczLHnPo3wJkLPr5bTZY5BduH2rX/vQL+2/8Mtik0eavWRedLvfAb
v13RY9vofGnYWil32t2CTXPp/Eg8E3bXS9zEL6XzhVh488DGdicy6zh8MvPN
1ZkSOl8ogwO8q7K06e8J/oOjlLKKZD7S+YJJLOZzM9G1bnKDJxxZULpDmc43
NGPgRVu+vN1QT8fLI7DeqJwSVgMdLx/Du+X+OzeSzj9E32GDCIu8eeV0vjRk
HY4/K40yVDfT+ZIHbGSb2ueqgM6XouB976ePCibzDsHiNfMPricLH8EDb+kk
raLzX/EX2EQn5cLH5dRvuB7XX34K20/TekqWKywT+cJqzRrqXwUfVakWZYZT
fyYsO9L77iJy7n1Y2F5dkEV/r6ED9p9+ckglWXPQBhzf1vRP3Lma+p1hg8GO
rrXLqH8l/DBGy1CJ1m+KDsAlMQcP+tD6TMld2DtJRSNgIfVLYZ2ohmlLQqhf
d6OU+9pkE2/kIurnwgGHZ3L6BlP/Mnjly8TuO/R48T54gqWBTW0o9d+BF6dN
tZcPo17tTVLuIbctXRm0/YJJ8C6z0DX69Hy5i2GrwUecl5Eb0uDrx3dkz/Kj
3ttw+Jy4j4L51NsCe1Zcux80h3r7x2H+L+ltODiLeifCfBklpQ66XRIG77j/
Ne/0CuoVwlWV/omvyeybcJ73LsUj/tTbBL9apaG2mixUF+D+5kMHp5LFE+CX
dvN7I+n17lwI5w0a/juU+lgpcFD8op7MNOq/Bt/JMG2O9KH+t7B9YXdYiRv1
94vH+b2W/OSeKdRvDRcOEWRMIGvy4Iz1fqOnOlD/djhYzvKM+UTqz4fjWiY9
f0AWvYF1HZo+OjpTv3KClDs3ni/7iB4vMw62d7rfNNSS+ufD6u6v9LJMqX8r
PH3jSf3KAdR/CV566LTlEHXqfwVP9dT8toTWy3Yqbsb10I3Nw5z7UD8bftVv
v62QbveaB2v2BrcnsKg/Ef7qPOz8VXLuBbimO3ffZVqf21ANrx7lbdg8kPrm
JuL6/UDe7W5aTyuKhxNnHkibX0zXv2fhSvcT7LbCjMn/Aw+VE0A=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
tI8m6WT2JjhveGBcuBX1p8ExOWc7xJNFd2BJ1mDDG47U/xk+Wj6h/RlZYfQE
xw/rXAtLAfU7w0+DCu2Hk7nr4bTsFdWH5lD/kb/Tew5d10zTJeVw03e9n+vI
8o/wf1KNwwODqd+gWslvi9olnU/mzIAfHOljPWMN9QfD3O1Vky4vo/4UmGdq
+J+7P/XfhDMGp+ocIdd/gOMTzrvN8qN+vadK/nOtuIonPtRvDzvocjbak0Vr
4OTAlnOF3tSfBH/70G3P+vnUXwwPqNmYGD2P+t/DjeUlQ0PJ3AHP/r6/tSVh
ZCEfHnG2wYJLj5esgv/s7jRKRpYnwN8tOqwY70n912D2pvmu5pOpXwknzxy1
7Nt46u9bg+PR8tq8NlPqnwp79ti9LpTWH9lyePrRWT9KaP2t31/zd3/VO+YD
bY/sq/CTvKR9pbT98F7DbINUTqsN9feqVfJLgm9xjo6l/snwwuAn8w1p/VD4
wSN1NPN6WlO/pPbv8amrffEk6r8Mzx1hm9+fpgtfwa7Hs0apqUeiU4fx0uzG
qT4W1D8RfvnL58dKfepfBts9uOJiSNsjZy+8ZZ9r+YuB1F8AC7R4Nz/oUX/D
Xw8bafr5D+3/uz9X8nt/3H5ydyvt/8fBvZ4kxlepaP8vhJ3izrT33EL7/z2w
x2zzXZc30PgnHx7//WWEsB+Nf57DMS8T9q5so/Ff1xcYL5er78V0ofHPWPir
+uI7v9s0/vP6O90028DtJo3/ouBFp0JkT2g8KcmFzVW5uQFcGv/VwJ/qXoqz
RtD4T7NeyTdalFCoO5TGf1x4R4fnq6ca0vhvIXz/eNt7N30a/+2E93dKeL9X
m8Z/Z+AuPdavPNiDxn/V8M/ZpR0dtWj8p9GAv9916t4jOjT+HQO/kYcXfO5K
4995cLn+uZO6nWn8ux0en+lz+Bld71acgn1fbT3u+u/692P49bjcq3bpdP7H
asR4x8XT+2ssnf+NhHuu0uvUuIHO/+bA/3mlzz7Dp/O/MNjT10Xb0pbO/7Lh
h/7vd8dNofO/B/ClokNLA63p/O8XvCuv/EIAWWzyUsnP7bbn5qdJdP7nBi8a
06ZXNJHO/0LhEavv56wcT+d/x+H3QQOuBZN5ir/T347bvZks+g6v3ZfUvmEw
nf8Oe4XjU3zkpuccOv+dDa96rr16gCGd/26GJ62Y0XWjPvVnwPu1jHP7kYUV
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
O84XbMlzZ35beOCCWAU/WrIdDtzS/OvBWuaPhFfcNll4mOVhfCE8dpj3hnz2
B1f9hid92vDCmeWpQM8G9f3UD09bLbKG98tvuZNlx/xb4Pjfey+dZvsjJByO
/eIjn879ufPz4OoLfWf6WzH/T1gsnDJnLst3Yf/ZKG89E2wSOX/byQp+VpY7
tRP3Hw/YCHcqrb17lvu7pofCGS2JB1KGM38ufFA4N3fdMOZvhhWyXQT7hjJ/
X1up+IL30Tvz2V72tYQN9X8+GMXnRfHe8J4+6nsK+Ty0KhheWfL1s4Ud2xuP
4T67Pu4ZYMX6+Tf4ckq3t9tb98/pYycVe3ScYzWQ9feQafCrzctHFfZme8MT
LtTsWLGJ+yPJBcE6Ln9CWrhfi/ABrN3TdI0T7fQFtp+jPKg/938J6DUH7em4
4SFtuZ9LujkceuSP14bbvF+7w2bz5BKfJ/B+fRb2VDnbtpT9y5JMeN5Dle+X
W/ePqoe9V8dPj2V9J15zLo7XNSu9Eq5XUGUCawQP6bTZivfrNbAo9kFHs3G8
X5+CpdFpa9qyP9bjHiw0eqN3jf2RIbVwSJLhgWUX2H/QzR7H52X8kE/sD5IT
wfYuZZXuQew/WAV3TClLqefrTsdh2w6mE1PPs//gLtzecf54pWPsP/gAr9JL
X5h5kv1HXR2k4ueLasRa7K/VmQQ7z9QoamJ/rmQ5/G3E/op+iew/CIRDFYo7
S26zv+gdLB+gcXQw+zsFgnko/6dfX/CT/cmi8bCZ3+1bcuw/9XCBT30OzRSy
fznkMGznalqjyPz5t+FVViPmLs5h3mp4i76HY9IN5lWZLxW7KIlMzrI/2WkM
vDixj2kp+88CFsNzva5oj45i3gPwdPvAP3vZ3yxLgCdUKT8tu8S8VbCv8QVD
WQjzdliA63OgveO6UOYdDW8d5qXvw98rfhHs2Uk5fLYX8/vDWR8szi7ayPw3
4L8OPY2WbWH+ClizITNNcxvzKy1E/fTeOsXcrcw7Hz4xOOaOO99Pzg9ut9lx
2KZFzBv/zzPso2tppxdwTYKyTqMT8yoswv2hPFRDl6+nD4PfvP98NZmvy+zh
gCTTt2ta+4d3wdqDO7VVs2TeK/CF4MO6Qtq3FJ65zXWjPR3fxlEqVo/pOOAa
+4Or9OGc4sL6bew/FsyBb72ZHBdsx7y+8LEnXcQF85g3Gj6lF50Ss5DHuxju
/f1ccwxfz/8DZyxZUCNwYP7BTlLxYGfLI5+4/pVwNuxWO2TqF9ppG9zr18gN
iXOZPwLeZmQe+plOL4DT9VIuHWR/rewXPMkgq8KQ309n4GKpuO+zjT+POjK/
BI7ofu/cA9p3M1xQ9Hn5NfafVz2FV7RPXnWD4w8EP+BvSjM/aXD9LZHuElx/
98I2FPH39ZgJ94mVv/hwDfNugCve5f/wpPMvwtsWmavKuTJvLqxa236GGV8X
NsFZbuOFs/n+TjrOUrFr7MS0l1yvPMACPl10/dhU9r+nr4M9V7/efKMz816A
VYojJUEC5n0El0+s+m7UhXkb4MHRnw9O7cq8vV1wP95QtixJlcd7KjzMqCxu
KV21Ft5wqJ/BIlpwHq7I/dTdgJ8nyoYlbzUaVWkPGew/aUz0cjqk51KpeM2D
7PepdL4ZPKNyxGDl9szvDs853/B8ekfmPwOXHDbK/96Weevgo8eWhJZy/6x0
jWW4vyi7eXjTMjFcM3DI04uKzOsKO+X3KHNpx7wn4d73D02Z3IZ50//9/5g2
f+rlmPcTvDe+ced3vl6lvlwq7uA/6aYhP18wGdY7cG5Wzz7MuxIO32FgdZT2
OAbPM7O0Ot+XeVNhhcRO0aJmrn/3HlbctX3QTlqu6wr83s4lfQK4/rZwIrzI
aES3W6c4/mEZ7Ob/cdjjoxz/EADnKuUYTOX60enJ8JqSlNkDadlbuObN3WOh
xzj+QXUl7v9DVo/x5P9LxsHBfSMDrnA9al9n+GVWsvAJHX8IrmqSzHOjq27B
ARXtBzzj+tqCN7BO+s/H8VyPW9RpFcqLkdW2w/j9PYzgq7/baV27yfX/nOCM
w6I+Mq7Xl78f1i/M7lhMyyXAnTLvf/fh+wkrYTvnvz6q/Dwn5dVo/2e8qFLn
+oQBo2Bj4aPtxeHMvxDeuzzzx+HW9f/2wufHb7kn5vvpXIdftx+//gDXz5eU
w84bKg4acb15X0VXqdjEecGzoFTmF8LZFjpjbtxh/nnw3M/nyntwfXbBHrgy
QTazB9eTFMXBRof7xKgvY/4yuMw3oWmcO/O3XYPjESds2rSG+YfCJfeW5L19
wvz28P6ZBU2naOFO+LbMTBSbw/yx8ATn93JafD2gBB61yjI+uIr55dxQvl9w
1c95yfxD4OPql/uuKWF+O7glqp/iyVLm94H3hL0o21DG/FFw9DDHkbZ0fBE8
5MZGwTf+fVULHDn6XtouWjDIXSoOWq9roPyc+W3g/Du5Y+UrmX8r3OneZN2h
Fcx/GZaqu1x2fsH8+XBe8aLyQv693C+4h2yXZWU18w/wkIqnuP4Ov0Y7zYLL
XBq6fmPegE3w2PplZkc4Xif9EpyVfXxF4kBe/0/gd5tnNBzT4PX/HV67Z674
INdnlPRbi/vXvO+5w7rz+p8BZ5U+a+fL8jN+PdzxUZ+h4eq8/kPg3ZVdM66y
vBLkwLuy7ivvZnkiaoRtSm94j2F546HtietXc+5lzx68/qfDvuoeVlf4+fle
8IJm88yvtNwFOOJUL/0p/VjePYTXxx6sCOR6kU5f4c/rLMct4X4VAVpeUvHC
XnErCuj0KfBM04VhbzgeTOYB5/hk18q33t/PwT/TO8S1X8r8WfDRxhuP93kz
/2dYUc3gtbEf8/dYh/uJ7E3kQI4XrDKFK3qqBcxk/VTgBkcvzHTdw/qd6DRs
lfPAzqGM+e/DtQsfx6lwvbIQKdwtJ622bhufr3X3xu87bdDpPB/W38Xw3nPf
B+3ieBDhajjpe2ClLdfPcjoBTzuyxXpANevvaXBURcGcibWsv3+Eb546ETSs
df9ztfUo7150PXWzdf9PY3hBsEn9AO43LVkB96xzqsvkeA/fo/AVtdjpxdxv
Mz4Fdi/c/LGI/Q9VNXCfCz9V9Lm/paDLBqm4/zxhl9DxbL9MgH+svuU8dRrb
L0vhVZ1Tx920Z/vlCJy3ILhTwwq2X5Jg/7XSPS/2sb/k7b/3u742YtR+9pd0
3igV352wT3TuDPtLxsIPCrYpvw5if8kS2Mtjnar1RfaXHITzbg0uPXeV/SWJ
8KrpjofOxbK/5DWsOSpn8VVa0nET2vN7v6RXc3yDryGs5+UoWpnJ/I6wpPCc
/zL2x1ftg4+N2nq8Vz+2X2/C2X7+YbqD2H59Bad6vjA0FLL92n6zVFwcNKC4
hf1hISPhZ6NNU3+x/Zi/AC5cZnP55gi2X/fCK1blTXxDC6/BReXLTAIHs/36
Eg4XiWs1JrH92m6LVNzluo3+m/Fsvw6H53dwO6QlZvvVAd6l+/bhzSlsv+6G
a4PvO2bz+0muwi5Bc/c6OrH9+hw+kDwycgqfN8TLb0V97McZr3Wt478NYOXe
sSuGsD9VMBde80du6rVo5t8B+0nUzHudYP4YWFvY3S/gBvM/g1dFD+gZzfHl
+X/hjNOC5EvVzD9kG+5XkWc0wvi8U2gLv1dSfJ7ajs+vtsNzPsoVGPF5TkAk
3P97jwhZM/MXwkWOJQMH8Xmh7DcsGX93YhafJ+robZeKu85vm5Te+vzSGk51
G/biAj/fdwvsZ+DT24GOD4f3e1Z8Gf+a+fPg5oBV0VWfeP7/hC0fe1wwXsDz
v78P2p/bNggsvXj+W8FdpS6XLnjy/N8I981IXXF5Ec/3J/DxFbveLnHj+d4M
fz/iP20m90t36usrFbe9rvR9Wut+75ZwWO+I+5u4fl66N7xM6ZafH/e3lwXD
ytsny6lz/1edx3B3z872DWo837/BAWNfrxW27nfbZwfap0nL0hdyP9z4afCN
XobCMXSVJ9xvyt+J2nx/QRB8W2j6aRTHx4sewLG7Jlit4Od5fIHH713jZ8P+
xZBeO3H/S2r7MrB1v3tzWNJ1xckD2SzvPOCb1i6ON5JY3p2FXXwWKtgms7zL
hLsvLBsrSmV5Vw9XlYxVfk6na+6Sig1zzqZasL9PZgI7JYxIqGH/os4aeNKd
E3o72F8oOQVfqtLoGs7+Cd97cF7dVp/TR/i8ohZeqDp69xz2z1R1243yoLv5
RGX2xwlE8IrSk7260KJV8I0ZO8dpsfz2OA73+JvXWM31RkPuwv5/ZyaFtu73
/gHuPHe3Rwz7I+XU9kjFn+6pLWni+EHhJNjmw+t1+uyPdFoOTy4+myjH8YQB
gfDaINuwTN4f0u/Avsd7nsm+z/zvYB+9k1EHaB2BH75vap/7qZyfIBkPlx9a
NPsun//4usBPB3w6nUrHH4a7Nhh5D33O/LfhMXd1os5cZ16VvTh+r98On8rn
Qx5j4J0mfx+9SGHexXCXYaFdb/L+lH8ArutSPucg50/IJcJ+K9VqTjQybxXc
f5xkr6uMeTv4S8UxLfcNb/J+FjAaVglys0ltvb8tgn89aW82jOeTzB/OGJbu
8o39Uzo34KDc+A7WfP4kqYDHOATVzeL+2r5K+6Ti6mc647z4/eJHwD2SPJP6
fGLe+bD2xE5fbXi/FPjBX+tdp1Xy+hHFw5KXWxcd4/7QHi/goR0eFHUz5PWt
sB/nc83SrQ1jeX8bBmstM9AcYM3r3QE+1K+30XgLXu+7YIfAlgUK8bzer8Dd
zjcYhHC8TXqbAzhf8n9eX83xOTJ9uKuD9eV7tM4cOErew2kAn19KfOHz0m2v
xLw/+EbDvweuODSsdT3LYtjUduiqdlNZnv2B/VtS/MKnsTwffBD1RauGpykS
luezYYXoSYFjbFieb4OHR0SVj+b6lyER8KvKZf128P6RX/DP3is2GtByv+G5
xp8jNtDCgYdwfN193kWc4f1MAk9pnlVfwfULAzbD828PsRew/yg9DF7f+0NJ
J1r2FPbb1XHC9Frm/wEvCH1ctZr3C4nuYfze3f6OvdeR/REzYY1f17ZspOM3
wPKGE8o/sD+n6iK8Ober9VL2LwhyYePJ9tskvdkf0QSf2xN6bZ02+yN0jkjF
T+af+bqd86tCLGChhukCy/Hsj1gHG+zc7XCMlguGnw2NCb8sYn/MI3h20cPC
9q39bw3wupt7Ey2d2R/TO0AqVjVUSEhaxv6YqbBsfamPnhfvZ2thL3WLa5s2
sT/mPHztro+p+h72x2TDI05u+Wh2ivllsH9G/bEe55m/ZyAcfbVJ1jqfzQyO
uBC75yBfF7jDKXojbWw4f010BtZcdv7j3Bjmz4AHX7NVaoxm/jq47NGrRbZR
zK9xFNdLg5p/cQLzm8DnvSv3r0xkfle4bPzroFquv+h0EhYNEjpr8+8D0uHK
Dt7iXbeZ/xPsnujn7JrE/OrHcP3W9u+5nNaZDM9ekLjEKZP5V8KnHmc0eGcz
/zF4zIL2Xs4PmD8VPn/P8nkIXfUeVnOvrfN7zPxdj+P3DF2+4E0+80+EL6t9
2tHmE/Mvg3dqK3l1+Mj8AfCw8Z2Oh9L5yfDriwd3K/9k/nfwvcgNlx7+YH7V
EygvLmnuOzqR8xnHwRPmuq0xFXE+ozM86+jlOxM43zH9ENxlYFGd9mjOZ7wF
L5ld3bmJ1nnz7/3uJt2aasz5jJ1Ooj17vbCLnxHnMxrBwTMqcy4JOZ/RCe6S
HrdNj67aD7f1KvSsGsH5nAnwlg0/j+vRokq4Yewc+xdjOZ9T+RTa127u2lbj
OJ9zFHz3t2ze1DGcz7kQvtCmQrCT30fOH34a3rfi0WTO57wOzzLrO3wH8zqV
w9kbjx9WMWN+xdO4fsYVllvMZH4hHGrWojWMls2D+7/r0eBsxfx74ARjRaMn
tCQO3tXn0lCxhPnL4C8bT5Vt5HzSqqFn8P3+7Jn9YR7z2sMhRy2cz81n3p1n
/j2/SHpawPmlHrGwzauTbQtmM28J/O3Q2V1G9swrdxb1m9AUA11aTh++GL3o
5ARaaAe7rg5b58jPc/KB9bf6LFXm6wFRZ//Nx+pzqgvnw8paYM9vUpN9S5hv
0DnUB3f1iYxyYT4b2LP3y6vNzsy3FZYfnG5my/mz8Zfh4vDP15wsmTcfvm7q
Ifafwry/4N6RlSPmmjPvgPP4/4v9P6x1Y95ZcNlq4xOF7sy7Cf6W2eXaFA/m
vQRLbhxe1LSOeZ/Cc+UT1cJp4XdY9j0m+K8X8/YLQnkUpzNg6ybmnQH7zOqW
X+DD47senpM6ztFkG/OHwLMPdmiaxPnEOjmwX6GN+/OtzN8I/63qmW7hzfza
F9A+OLTt8iM6fjqcln6/Ifsw83vBVpry221OMv8F2MRC5UIKXxc9hL2+eKTl
HGP+r3DKuxGpypHMrxUsFe8QW+y1o/OnwM7tuncMpuXWwk/b2fzMo4XnYPWP
Qy5lxzN/FlxU0efIcDrgMxxfHJDoeo35e4Tg+lNLm69RyvymsOmJXWdUipnf
DX77Vu6FBi05DftqHjnqSPveh8eWj/MtKmF+Kfzzy9wx3b8xf/eLUvGt9n+l
UbRADPfYkiZVpUPS4HPdL8bOVuZ89I+wnsK+xHedOB9dPVQqPppwzzq4Heej
G8MuZ94lb6edVsArext3vtKd89GPwn90PAPOa3A+egq8XqPblE60rAa+1exz
2I3W6XJJKtZtjtkl0eR8/AlwB5NHFjd6cz76UjhNtaw8ZhDn4x+BpZccVbI5
P74qCb6XN7TteFrwFi5X3pcc2oPz8TuH4Xx5+vn5cx3Oxx8Lv008vqKXLufj
L4GbgnxeWA5n/oOwv3zxUE/O75e7BdvGxgh/9GP+1/DkoWMqjPoyf8dwXM9V
sw3e0wGG8K+Cusr+dLojvCJl6oSTesy/Dx4gjbGayzw6N+G+FzuJTQcz/yu4
cNTE9fZ83bf9Zan4qtvWlRE9mX8k/O6HsKCYv1fVAvjC+k7bO/LzBHthpwOj
Qh9xPQDRNVhnz/BfYX2Y/yVcd0C+tJD5QtpFoP3htTZgA79f/nC4Lj/uTCkt
Nw8OOxfme4EW7oa7D3m9df8A5n0Of2netaEf1wtOl49E+3dfr4v1I5nXAPYb
kT94C60zFxaovum5n5bsgJ+cahTuHcF8z+BJtUqRresvVP2Fzz89P2I4LRgS
JRVvOOLs9sSY+WzhyVGmKZmLmG873N1UN1uVv1dIJNygbX0rkOdHfiG8stPg
hfdaj28LfPGWdFeyPvPpRUvFM1NGTr3A88/JGr699lu4Zet6C1vg2LkmIUk8
H9LDYV9xjNzZZcybB884U2wes5R5f8IvXpv8VuTrkv4xuD7TTh3XWcPjawW/
vGL0XInrVcRvhEcrLB8z1Zv5Q+HoVR/VTngw/xN4Tj/vuwvWMn8zfP7cYe/5
XszfNxblwaU2vpbbmN8SjtIqP/qB6yvne8Obond16riV+UPg9mFxyv3498LH
cLvoPmkyvr/TN1jzsInp9ZnM3+eKVJw7L+DeYzp9Ghyy0/+v93Tm94QXGinO
dLZl/iBYIclIeMqK+R/A4Zra3mskzP8FDnxfurED18eI73VVKhbPNp9+h69X
mcMPlq+fMImfJ/CAPz1ymG0vZv6z8Oa2XXxOzGH+TLjdtkdZa+iQelhvdp89
6nbMrxmH88Puve2RqcxvCt9o9klIpYVr4CNxen/XTmH+U/CAgxP6juX1ll4L
a+8fov2+tTzrFi8VbxWZrs5jeaMjgsvn1wcdVWHeVfBkIzujHY9YXh+H7z+Z
PG9cLsvru/9en3Jj6oinLK8/wDO7fXtnksXyWu2aVGy3f8zs7631k0lwzSnV
zcG8n3sshwcstt3lz/t5SCBcmzU5aWNb3q/uwHE3Z+yrfsH6aM21f/MtOt62
e8769/jruP72dEq6X8b6twus+ClZuV8p69+H4cICnS66f1j/vn393/hstW9L
FHh/qobNKpOtlPl5EpUbqF+WR0UelmfeMbBK4eKULyrMuxg+vMcsIPcv698H
4FJ31eBs1pcFiXAbxbUdt0pZ/66CF+l4lZ4sZ/27w03cHyU7bq9LZv17NPy5
S9lSpVusfy+Cw5r7am5h+0RuH7zH4b5BcyTr3zfgjKRoL/Fl5q+AU6p2BHZM
Y36lBKn4TH5paPf7zD8CjnUwLXzP9eFl8+EZHdQeVvLvdfxg1XadzZT5+ZJ4
+MWyLqMCtrL98QIeM22z39NFbH8oJErFa7qmbdznxPzDYPMfRefSbJnfAf5a
NHvBGDvm3wXvaRh4t3k281+BA+uVDw3i+vv5bW5JxZFeFQG1bD/KGcDJtyaq
Gcxh3jmwyYcvVZ/4fk6+sMKvJZ2kfL+AaDh3h/MbR0vmLYbvu2YNOTOTef/A
ESF7OityfRGdwbel4mmeN/pc4vNXyWx4ZvsRI7Va29vb4LNrzkS5tLa3I2D3
4490zLgfQlUBvPTZxqWTOF5P8Bv+aa47Sov7EYgGJknF+3rrB1Vy/wcPCXxS
ZtWuUyGfN2yG7dWrzylyfkt+GPzbrGOtG+fHyOXBOwY7tnlCC3/AQ4c7az1M
4PMG3WSp+OOQsdV/+Lw6YCbsWTxdZWEGnzdsgP0FfaUbc/m84SIc83DCbH2O
B9TJhZWSbw32piVN8DOjqfM8+H18de6gPN0/Zc9bjgeMt4CvB8SmbOd4wap1
cHCtY4h/6/yhYNi/j0T5ZOv8oUewrFxh0DM+b/dogN0XV//9GMr8vVNQP++5
qe/5AOafCr88kNr4iJbzhK3ij3nP4/wo4Xn4QP3NHv1op2zYYIvZ7g4cHxgg
gx1+pT8YSqf3TJWKj0sLJ0dyfxGZGTxS0XXtbm/md4dD6qcOW8LXJWfgwRtT
S2bQvhnwauMc85z1zF8HS68UqHluZn6Nu2g/9pk64iItMIGbEua5RdMiV3iG
ZpvDy2iPk/DWpnO7v9Ih6fBICzfneDr/E7zgR/et8ty/RK5bGs53ny5NeruY
fzK88VLerzOt4x9Xwqa/JOe70wHH4DMJSSsN6fRU+K133/fH+P+y9/BF+e7D
anczf9d0qdiyrOnVhr3MPxHOcVNUm7WV+ZfBAf63Y7pvY/4A+OlGi5I1fF3w
Dr7/MfzOTb6/SPUe6keb97k95vjHEGe4cHMHWcQq5jsEf7n+N82FeeVuw/Pi
p5snb2C+N/f+jcc5m3jSgfk63ZeKt0UUXDxCBxjBwxcN1Lo2n/mcYN+Nw03l
ZjHffnjmPmvfSI6P1EmAfRbY/fHi65JK+KTqgaK+HE/pq5yB+7GS+MXSccw3
KuNf//b7lap8/li1EM5Iiy+aQwv84XYfoz77cvyk6Dp8MGCmII/jJT3KYeXA
vGPhysyvmCkVG9q9ivGm84XwgXPVGfv5PFRuPhy+uEmYxf4z4R54oXfZmOXs
X3OKg6tvb7DWYv9ZQBls0DQ+qI79XbKhWbgeW4abir6yP9AePhm07KtZHftH
dsIeSWvKf1awfyQW7ujksdX3FftHSuCJqcXp7zmfu0ouG+fTW9UDKuwvFOjD
mYvNB6Swf1FkB/dON914jfbwga+mRu1oPs7nxVFwryjJLT3OV8svgreouc4a
x/5XuT9wzwmGjg/5PF846AGOT7eH+nJ83u5kA0t3Nc/p39o/shWeIj/zmjZf
T78M/1kYJ9Xi/ApZPrywtnKpL+fD6PyCD6sHSspb55sMeIj7nV/D15mc7+Q7
C07Zs/596/5S8ZvgC0vfBg5pnW9yCX4R9GF9Ov9f8BQO/OmTHcP5HqLv8Knt
56Q/TrG/oN8jlJeyxkJN9teEzIBljzuO6Ubnr4frxi5YcYL7t8ldhPccWpMe
qMT8OXBvo4T9YcrM3wjHDaxWfNaB+bUfo713JKDeh5+fPh3uWGh89UPrfCMv
eML0SOcGvq5zAZ7rV79X0Drf6CFs9crOP4n9Qb5fYdOzgS+jrjG/Vo5UPMi7
5NMzumoK3KEgbtR09ocI1sJ7HRbGzchg/nNwSmWM15U7zJ8Fv5TdtztAh3yG
J0fv21LH/q/8Hrk4f98PDJGxv0XODG7nZuBXzf4NoRuc4Rby6iPnYwXch/eI
PLYmc75XuhT2axFap3G/Mln3J2gPikRuFsuYVwwrb+5j3n8J866G35/sG/ti
MfOeePJvfH3em310fBp8V77W2IbrN1V9hAuvP1u42YF51Z/Ce9pLSh2Z1/jp
v/tvbpStM/OugENndAuMnsO8R+E3C7ac957HvCmwJNrevRv3k5R7DzfucYms
4ecJu+ThfjotKGok93d0mgCnd9nfsx1fD1gKB7mVBBXx+6Yfgbf4nzhkyb+X
JcEzp+RcHMHvq/MWNrrc1WwYzy9J53zUD6IvlIZyv0rfsXDYqc2qaXT8Ejht
3DHzw6uZ/yA8a9n31ITpzH8LXurqucrRmvlfw/+1dO9xLf1xHMe7S7pRuihZ
SRFpLpVSbEk3IUlK0VLJvUlJbq0kQpkQujB3cktyjSxyKdSUqERJiWrKrX7J
5fd2Pv58Pra189r37HvO2b7m9ovGRiX6fSt+v2eYT842LqyZTL1BsHf8RnMJ
/Z6IzHZ4SszN9Z/o90nY+bB0nuP2gfT/LfLewEoqTaUFZKFyBY5vZsZq777T
epex8JTkp1MS6fetOgPhx81h6kPp92xYW+EhnvfOZND/z+h1CfYzOZR1lSx4
BV9PPrnS/A2td1GsxP5/aNS8269ovYsVbG3Rt8Xu3+9dzYNVl812nEbrkTmJ
sMuqnqQf/9ZrX4CVTMeuy6HfixJVwzo3Nry2LaP1PnLPMf8sGNnUQeuf2XPh
tSM+nYqm9dO8ePjMhEfnp5CFZ+H6FX/uien/TxVXweJfffZlkjv/wCWtm9SP
5lOvRRXG89b10HL6vR4vH/iiUZXjQPr9KcEmWNbs0hLZm9R7Gk4c3Jzae416
K+CsGt2c9/T8mr/ghkm6jhx6Po75Cxx/9iak9/z7/11nwVcPlmX60ONF6+Ep
10Z7rSVLTsDvXboUhHm0vkny4u+/vylrLCazf8DW8uOcT9D9eaYvcX1uWr9c
nXqEM2DZm4lzztD9xWvh5Q1bZIfR8wuMq9u5Y7xuJH6/TT3T4Hx5zAtF1BMN
l8x0Pauzj3pEsKaBu8EZ+r0bTinctOBwwjV6ffjf4FtFPVWmNF4ioxpcb6eL
8lbQ+Erc4LAtm0WetH/JrIZvzY2d/Jh+L4edDffp71GZSeufhJ9h252VOsPJ
nVNrMd6DdEec+EDjxYc9d4w2PkG/5+OVAYtbyj0m//s9smJ4tnyzv+496vsE
ry+WETmKqU/vVTt39KVNEz7SenvNKXC4fUR9O61P56yA58Zn2sjT/8/L3w8P
S2F3XqF/DyAqgh+yXGTMab27pA2un3f3tkEm9enUtXPlnRwWq9O/F2BzYA6v
4cROWu/OWwoPSpqTtCyQevfC/i7bwl6RxYXwxSEnC34FU/8HOPeJuVsZmaX1
up2btqnxdgLd38sRXv4kxN5yLPWHwyenNJbGkHN3wy+SX/3wIjcUwAW71TM9
LKn/PZyt9eZCH3Pq13yD/WOxlV7bQOq3hw2u/Dk+SYv6Q+FqxVdJ62n9syQV
ts4Ov7WLLHMDHm1rv02Tfh+M/Q6Wz32psYHWG/LU6tu56pl5EhZZaAuXJvos
mk/3FwfD4X0eHBvVSesxd8DaPVqZd97SesyrsHXWpiHmtD7TqwHeWFp7/c8z
Wo+p0tDOzcmfOjykgtZjjoc3mwn27Kf1mQ0L4IuRj5S76HbNZPi2cEnBMHo8
5zLMfefdPKiY1mO+hicUeuk10npWUZ+37VzT0V2mlddpPeYYuPKK5w27a7Qe
MxC2mLTfXovMy4XlLyfKvab1tMJaWKmf9mGfS9Sr0NjODZWGdqtfod7RsLN6
SUJfMssfNtK9ri2mv+e1GS769q7J+CH1vYQ/6S9WqP233lr2HY5Hpg/n9Pn3
e2ujYKXU8pptX6jPFw4PG+q7jswX/L3/tx1mpfR6i3JgyZmncUE0PpLncKNv
nuzef+ut/8AKCXJdvz7T+I5owvF3/bueZFpfypsNd036YdKH1rsKN8K+2d21
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
1eWvBvT5ehTM1c17PmAQfb5+CP65eU2IEX3+LngEr+p9nLdbj/q/wLJh8092
GVO/4UwcP3Zl/RTQ59marvBnfVlNEZmzCn73wnDc8L7UnwlfODFhXGY3XY/e
h8uSG8I3U4+kA/bdlH1jWSNdjw7yknIDlWw8f9Pn3WxnOKV+7OpeMm8lfGzK
oq6QL9R/AJa7YlpVQa9/Zzv8UqWzMMicenVnSblb8zkauVOolwvXbVhm85Be
X8EymKuhNDeEnLsPXrdp6QRLB+q989cpRdbicdSn7S3lflq7+bT+RBrPxXDt
Zd4SV/q8X5IGr5xk88yGLHMbtpYIbt2cS+PZAr8ZNCpc2Y8+L+8/G+dDJZxz
imThRPjDc7Nt7V70fUEY3GF+evtvcucu+Ico4gt3FvXdhC93641+4E19TXDV
m+uNyvNo+xf6SLnPZ5++ejqUxisFnj7/bMzrtdRzDb5vqfB9SjyN11uYw1fs
tdxFPdZzpNzGjaMX302nHh6sMau0RO8A9WyHi+uG6HQcpJ58+OhIk/rj+6nn
DXxWzdYwOot6lH3RO+zVuLBj1DMW9nm932XOSeqZD9tPi1aM/vf911Y4Ke/8
T0cxjdcl+P04/fHl5NxXsGBw7al3jdSrOBfngzc44XHvqJc99+/1s1hh+3vq
nQef2zphaKWEehNhUVSxcNxLGs8L8PAxWU0XyJJquHeozR4Fsoy8n5QbnKDh
84K+r2NbwqMl6Yon6e/x5sIqmiWCZXR/YTx8rn6mwZ+H1H8W1lP878iKZdRf
BVtG39pfu5j6Zfwx/93TCkxZSP0WsOmoAfuyl1K/D/zhdO8bZQH1b4L5Tnn8
IwnUfxpui0rdNXUH9VfCNnbc6SZC6v8FB046dZZL5pvPw/WZwu4RQ9Oofxa8
eEPTkkM0vpL1sGssr8vjOPWf/GsfQ1avPH3/KYF3L6ya8VmBvv/8AX9Lzm2s
IQtNA3D+93J1no4iff85A1ba91HHVoO+/10Lbxn5zUAvmr7/PQbvFX5f2TeO
vv99CqufrBmUEk/f/3bDG2auuCui75tzjQMx/nt7tTLS6fvfaXBIU9qeN3vp
+981MH9rkSRsP33/K4LrkqxWcA/R97+l8JH9LucWHKbvf7/BF570O1opou9/
jeZLucbPK2ysc+n7X3f40eG1csk51L8aVjyfvfrHBerPhicVvisvo+/XhQ/h
FS5jv+RdpP7PcKPVzBLNSuo3WCDlNt1ctHVSH2a9AMsFPty56txeDcZefHi6
ySnpUbIgA653W7NyHjm3GC7PcFnLJTd8gl88PWpZoMxYUz8I5xvpBzZ0kDlT
YM6GUBdnTcb8FbC+mkvEjy/Uvx+uDPrhcreJ+ovgnJMTN0/6QP3tcFjFsokV
zdSvw8P5WnWGbVdfWv/AgdP3sV4396P1D0vhp61s+VBjWp+2Fx4wYkeEHj2+
s/Dv488Pax/+nsb/I3xT/vxLhTc0/lrBOD5MKtJIqaPxd4Tvb+i0ya6m8Q+H
5dp6zy57SeO/GxZt+aIg30vjfwtWCbUJeUTPz3kPH19wWdnYhPo1F2K+/C28
90Ce1ufZw+kWOpEBqrQ+LxTuON+S3KJN6/N2wdZNDaE7bGh93g34jLww9Kot
9b+DVy1LvOI0nfrVQvD+26qwI8yB+m3hs3GiM+vp8Z3BcLF5QuB/9HjWTtiE
9Sogy5rG/yqces9xRvt4Gv8GuA+/+ko03Z6rEirlLls2wTTXkcZ/PDxnz9eA
s9SnGQSrLqgtu/aH9v9kuH78nfXDumn/vwwXn+EqlClR/+vQv+tvVi9SpO3t
VFgk5Y4LiT/WNJy2zwpWDQhxZ/3bPn84/7q1b+i/7dsMn/dafzlrLm3feXjq
+WNWdXNo+17CcU8du+pm0PbJhUu5m3sDZtnNpvEZBXeWJc/ftIDGxxeO0w6R
+7yIxiMHPrhOsOriPBqPKniw9mqfhWT2H/iJn6rlEX8ajxGLcb30x+xZUDiN
x2y47tz0xK2raDw2wuayxy8OiaTeU7BbnOXh/yKotwI+5n5ptU8c9f6EZ9TG
eUwRUK/ZEin3loP39RU7qNcLPvO95OzlA9S7Dr7c7Nl75gj1noA7XWepGJ2i
3nJYc0XOiWk51NsDT3Q7PKfwDI3H0KXY/+7URibR7TJr4cRJ5dmf1lHfE3hI
xOIjarR9wi540RqDxb1R1Mdahv3BMG6ELrnTA5abvLX/KHq9WdHwYv7iJxvJ
XofhVO06pTwaP0EJvGhIsUrUv/H8Ck+Nf9woQ693w+DluL76sSjGL5j63ODP
wVfGvFlGfZEwZ7IkZsly6suCz3EMXLeRRQ/gS0f17Hl8Gt9O2L7vqflvb1Cv
wQq8XqUb+PMraHynwsE7zOoK7lB/BKzXbirYs5f6D8Jfns5YuyWA+u/BFmOT
z4sfUb8UFrWkbS0eSevN9Fbi/ahp9nrvGFpv5gRzqgKHH/tD/cvh0rfbDSZ1
U386rKTpOeXgZ+oX/7VDwtSOb9TfBlc+mLYlldYL8ydHYP8bv83MbCCtL1sC
D4rRbb1D64Mle+A1rZcfv/2PegvhlTNS1w36Rb0f4P4Ff+JKvlLvAL6U2+p/
vzW8knod4LW+0fI8sngRLLUc+8GtgXqF8JDxRhHa7TTeBbD2wmldV5tpvJvh
x1buyZteUK/GKhy/ZjtNLDpNfSGwov7GUc3HqS8VLv4zNGgwmXMdTlgjUX7q
TuPbCD+6cjCZ5UHjaROJ+enPt1nXY6kvGA7V2a6gRO8v9g44wtV89CYy7woc
f9r34+HV1NN3tZTLnq64vXkJ9YyDPeUW5iasoJ4FcPjY/Lr+ND94bYOPTNLj
XKH3uyAPztffee1WEo1fHcy5u3+4+SbqU4rC+YeTrIJnDPWNgc/ZWHACaf7h
BMDploqezdHUtwWOWbAmdsh62n8vwns6fw+T+7f/1sDK3sN3XKT9W0YhWsp9
OKylXxjNf+zR8MErz8KiyDw/uLHHwHm0K41nAjxSdk+mKs2n4nOwSEN7zjo6
/nS+gDn7wmKqBlC/7BopN23YtUu9g6h/JDxAe7BP5r/5eA7cMCmpj40d9cfB
LrNv3ZlHbjgD75LeTw4dS/3PYdvpeU2D6PGc33C9a6Pdczb1D4+RcvcbW8S5
kkXesCgzczLHnPo3wJkLPr5bTZY5BduH2rX/vQL+2/8Mtik0eavWRedLvfAb
v13RY9vofGnYWil32t2CTXPp/Eg8E3bXS9zEL6XzhVh488DGdicy6zh8MvPN
1ZkSOl8ogwO8q7K06e8J/oOjlLKKZD7S+YJJLOZzM9G1bnKDJxxZULpDmc43
NGPgRVu+vN1QT8fLI7DeqJwSVgMdLx/Du+X+OzeSzj9E32GDCIu8eeV0vjRk
HY4/K40yVDfT+ZIHbGSb2ueqgM6XouB976ePCibzDsHiNfMPricLH8EDb+kk
raLzX/EX2EQn5cLH5dRvuB7XX34K20/TekqWKywT+cJqzRrqXwUfVakWZYZT
fyYsO9L77iJy7n1Y2F5dkEV/r6ED9p9+ckglWXPQBhzf1vRP3Lma+p1hg8GO
rrXLqH8l/DBGy1CJ1m+KDsAlMQcP+tD6TMld2DtJRSNgIfVLYZ2ohmlLQqhf
d6OU+9pkE2/kIurnwgGHZ3L6BlP/Mnjly8TuO/R48T54gqWBTW0o9d+BF6dN
tZcPo17tTVLuIbctXRm0/YJJ8C6z0DX69Hy5i2GrwUecl5Eb0uDrx3dkz/Kj
3ttw+Jy4j4L51NsCe1Zcux80h3r7x2H+L+ltODiLeifCfBklpQ66XRIG77j/
Ne/0CuoVwlWV/omvyeybcJ73LsUj/tTbBL9apaG2mixUF+D+5kMHp5LFE+CX
dvN7I+n17lwI5w0a/juU+lgpcFD8op7MNOq/Bt/JMG2O9KH+t7B9YXdYiRv1
94vH+b2W/OSeKdRvDRcOEWRMIGvy4Iz1fqOnOlD/djhYzvKM+UTqz4fjWiY9
f0AWvYF1HZo+OjpTv3KClDs3ni/7iB4vMw62d7rfNNSS+ufD6u6v9LJMqX8r
PH3jSf3KAdR/CV566LTlEHXqfwVP9dT8toTWy3Yqbsb10I3Nw5z7UD8bftVv
v62QbveaB2v2BrcnsKg/Ef7qPOz8VXLuBbimO3ffZVqf21ANrx7lbdg8kPrm
JuL6/UDe7W5aTyuKhxNnHkibX0zXv2fhSvcT7LbCjMn/Aw+VE0A=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.961872*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.961872*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
tI8m6WT2JjhveGBcuBX1p8ExOWc7xJNFd2BJ1mDDG47U/xk+Wj6h/RlZYfQE
xw/rXAtLAfU7w0+DCu2Hk7nr4bTsFdWH5lD/kb/Tew5d10zTJeVw03e9n+vI
8o/wf1KNwwODqd+gWslvi9olnU/mzIAfHOljPWMN9QfD3O1Vky4vo/4UmGdq
+J+7P/XfhDMGp+ocIdd/gOMTzrvN8qN+vadK/nOtuIonPtRvDzvocjbak0Vr
4OTAlnOF3tSfBH/70G3P+vnUXwwPqNmYGD2P+t/DjeUlQ0PJ3AHP/r6/tSVh
ZCEfHnG2wYJLj5esgv/s7jRKRpYnwN8tOqwY70n912D2pvmu5pOpXwknzxy1
7Nt46u9bg+PR8tq8NlPqnwp79ti9LpTWH9lyePrRWT9KaP2t31/zd3/VO+YD
bY/sq/CTvKR9pbT98F7DbINUTqsN9feqVfJLgm9xjo6l/snwwuAn8w1p/VD4
wSN1NPN6WlO/pPbv8amrffEk6r8Mzx1hm9+fpgtfwa7Hs0apqUeiU4fx0uzG
qT4W1D8RfvnL58dKfepfBts9uOJiSNsjZy+8ZZ9r+YuB1F8AC7R4Nz/oUX/D
Xw8bafr5D+3/uz9X8nt/3H5ydyvt/8fBvZ4kxlepaP8vhJ3izrT33EL7/z2w
x2zzXZc30PgnHx7//WWEsB+Nf57DMS8T9q5so/Ff1xcYL5er78V0ofHPWPir
+uI7v9s0/vP6O90028DtJo3/ouBFp0JkT2g8KcmFzVW5uQFcGv/VwJ/qXoqz
RtD4T7NeyTdalFCoO5TGf1x4R4fnq6ca0vhvIXz/eNt7N30a/+2E93dKeL9X
m8Z/Z+AuPdavPNiDxn/V8M/ZpR0dtWj8p9GAv9916t4jOjT+HQO/kYcXfO5K
4995cLn+uZO6nWn8ux0en+lz+Bld71acgn1fbT3u+u/692P49bjcq3bpdP7H
asR4x8XT+2ssnf+NhHuu0uvUuIHO/+bA/3mlzz7Dp/O/MNjT10Xb0pbO/7Lh
h/7vd8dNofO/B/ClokNLA63p/O8XvCuv/EIAWWzyUsnP7bbn5qdJdP7nBi8a
06ZXNJHO/0LhEavv56wcT+d/x+H3QQOuBZN5ir/T347bvZks+g6v3ZfUvmEw
nf8Oe4XjU3zkpuccOv+dDa96rr16gCGd/26GJ62Y0XWjPvVnwPu1jHP7kYUV
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
O84XbMlzZ35beOCCWAU/WrIdDtzS/OvBWuaPhFfcNll4mOVhfCE8dpj3hnz2
B1f9hid92vDCmeWpQM8G9f3UD09bLbKG98tvuZNlx/xb4Pjfey+dZvsjJByO
/eIjn879ufPz4OoLfWf6WzH/T1gsnDJnLst3Yf/ZKG89E2wSOX/byQp+VpY7
tRP3Hw/YCHcqrb17lvu7pofCGS2JB1KGM38ufFA4N3fdMOZvhhWyXQT7hjJ/
X1up+IL30Tvz2V72tYQN9X8+GMXnRfHe8J4+6nsK+Ty0KhheWfL1s4Ud2xuP
4T67Pu4ZYMX6+Tf4ckq3t9tb98/pYycVe3ScYzWQ9feQafCrzctHFfZme8MT
LtTsWLGJ+yPJBcE6Ln9CWrhfi/ABrN3TdI0T7fQFtp+jPKg/938J6DUH7em4
4SFtuZ9LujkceuSP14bbvF+7w2bz5BKfJ/B+fRb2VDnbtpT9y5JMeN5Dle+X
W/ePqoe9V8dPj2V9J15zLo7XNSu9Eq5XUGUCawQP6bTZivfrNbAo9kFHs3G8
X5+CpdFpa9qyP9bjHiw0eqN3jf2RIbVwSJLhgWUX2H/QzR7H52X8kE/sD5IT
wfYuZZXuQew/WAV3TClLqefrTsdh2w6mE1PPs//gLtzecf54pWPsP/gAr9JL
X5h5kv1HXR2k4ueLasRa7K/VmQQ7z9QoamJ/rmQ5/G3E/op+iew/CIRDFYo7
S26zv+gdLB+gcXQw+zsFgnko/6dfX/CT/cmi8bCZ3+1bcuw/9XCBT30OzRSy
fznkMGznalqjyPz5t+FVViPmLs5h3mp4i76HY9IN5lWZLxW7KIlMzrI/2WkM
vDixj2kp+88CFsNzva5oj45i3gPwdPvAP3vZ3yxLgCdUKT8tu8S8VbCv8QVD
WQjzdliA63OgveO6UOYdDW8d5qXvw98rfhHs2Uk5fLYX8/vDWR8szi7ayPw3
4L8OPY2WbWH+ClizITNNcxvzKy1E/fTeOsXcrcw7Hz4xOOaOO99Pzg9ut9lx
2KZFzBv/zzPso2tppxdwTYKyTqMT8yoswv2hPFRDl6+nD4PfvP98NZmvy+zh
gCTTt2ta+4d3wdqDO7VVs2TeK/CF4MO6Qtq3FJ65zXWjPR3fxlEqVo/pOOAa
+4Or9OGc4sL6bew/FsyBb72ZHBdsx7y+8LEnXcQF85g3Gj6lF50Ss5DHuxju
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
5lOvRRXG89b10HL6vR4vH/iiUZXjQPr9KcEmWNbs0hLZm9R7Gk4c3Jzae416
K+CsGt2c9/T8mr/ghkm6jhx6Po75Cxx/9iak9/z7/11nwVcPlmX60ONF6+Ep
10Z7rSVLTsDvXboUhHm0vkny4u+/vylrLCazf8DW8uOcT9D9eaYvcX1uWr9c
nXqEM2DZm4lzztD9xWvh5Q1bZIfR8wuMq9u5Y7xuJH6/TT3T4Hx5zAtF1BMN
l8x0Pauzj3pEsKaBu8EZ+r0bTinctOBwwjV6ffjf4FtFPVWmNF4ioxpcb6eL
8lbQ+Erc4LAtm0WetH/JrIZvzY2d/Jh+L4edDffp71GZSeufhJ9h252VOsPJ
nVNrMd6DdEec+EDjxYc9d4w2PkG/5+OVAYtbyj0m//s9smJ4tnyzv+496vsE
ry+WETmKqU/vVTt39KVNEz7SenvNKXC4fUR9O61P56yA58Zn2sjT/8/L3w8P
S2F3XqF/DyAqgh+yXGTMab27pA2un3f3tkEm9enUtXPlnRwWq9O/F2BzYA6v
4cROWu/OWwoPSpqTtCyQevfC/i7bwl6RxYXwxSEnC34FU/8HOPeJuVsZmaX1
up2btqnxdgLd38sRXv4kxN5yLPWHwyenNJbGkHN3wy+SX/3wIjcUwAW71TM9
LKn/PZyt9eZCH3Pq13yD/WOxlV7bQOq3hw2u/Dk+SYv6Q+FqxVdJ62n9syQV
ts4Ov7WLLHMDHm1rv02Tfh+M/Q6Wz32psYHWG/LU6tu56pl5EhZZaAuXJvos
mk/3FwfD4X0eHBvVSesxd8DaPVqZd97SesyrsHXWpiHmtD7TqwHeWFp7/c8z
Wo+p0tDOzcmfOjykgtZjjoc3mwn27Kf1mQ0L4IuRj5S76HbNZPi2cEnBMHo8
5zLMfefdPKiY1mO+hicUeuk10npWUZ+37VzT0V2mlddpPeYYuPKK5w27a7Qe
MxC2mLTfXovMy4XlLyfKvab1tMJaWKmf9mGfS9Sr0NjODZWGdqtfod7RsLN6
SUJfMssfNtK9ri2mv+e1GS769q7J+CH1vYQ/6S9WqP233lr2HY5Hpg/n9Pn3
e2ujYKXU8pptX6jPFw4PG+q7jswX/L3/tx1mpfR6i3JgyZmncUE0PpLncKNv
nuzef+ut/8AKCXJdvz7T+I5owvF3/bueZFpfypsNd036YdKH1rsKN8K+2d21
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
1eWvBvT5ehTM1c17PmAQfb5+CP65eU2IEX3+LngEr+p9nLdbj/q/wLJh8092
GVO/4UwcP3Zl/RTQ59marvBnfVlNEZmzCn73wnDc8L7UnwlfODFhXGY3XY/e
h8uSG8I3U4+kA/bdlH1jWSNdjw7yknIDlWw8f9Pn3WxnOKV+7OpeMm8lfGzK
oq6QL9R/AJa7YlpVQa9/Zzv8UqWzMMicenVnSblb8zkauVOolwvXbVhm85Be
X8EymKuhNDeEnLsPXrdp6QRLB+q989cpRdbicdSn7S3lflq7+bT+RBrPxXDt
Zd4SV/q8X5IGr5xk88yGLHMbtpYIbt2cS+PZAr8ZNCpc2Y8+L+8/G+dDJZxz
imThRPjDc7Nt7V70fUEY3GF+evtvcucu+Ico4gt3FvXdhC93641+4E19TXDV
m+uNyvNo+xf6SLnPZ5++ejqUxisFnj7/bMzrtdRzDb5vqfB9SjyN11uYw1fs
tdxFPdZzpNzGjaMX302nHh6sMau0RO8A9WyHi+uG6HQcpJ58+OhIk/rj+6nn
DXxWzdYwOot6lH3RO+zVuLBj1DMW9nm932XOSeqZD9tPi1aM/vf911Y4Ke/8
T0cxjdcl+P04/fHl5NxXsGBw7al3jdSrOBfngzc44XHvqJc99+/1s1hh+3vq
nQef2zphaKWEehNhUVSxcNxLGs8L8PAxWU0XyJJquHeozR4Fsoy8n5QbnKDh
84K+r2NbwqMl6Yon6e/x5sIqmiWCZXR/YTx8rn6mwZ+H1H8W1lP878iKZdRf
BVtG39pfu5j6Zfwx/93TCkxZSP0WsOmoAfuyl1K/D/zhdO8bZQH1b4L5Tnn8
IwnUfxpui0rdNXUH9VfCNnbc6SZC6v8FB046dZZL5pvPw/WZwu4RQ9Oofxa8
eEPTkkM0vpL1sGssr8vjOPWf/GsfQ1avPH3/KYF3L6ya8VmBvv/8AX9Lzm2s
IQtNA3D+93J1no4iff85A1ba91HHVoO+/10Lbxn5zUAvmr7/PQbvFX5f2TeO
vv99CqufrBmUEk/f/3bDG2auuCui75tzjQMx/nt7tTLS6fvfaXBIU9qeN3vp
+981MH9rkSRsP33/K4LrkqxWcA/R97+l8JH9LucWHKbvf7/BF570O1opou9/
jeZLucbPK2ysc+n7X3f40eG1csk51L8aVjyfvfrHBerPhicVvisvo+/XhQ/h
FS5jv+RdpP7PcKPVzBLNSuo3WCDlNt1ctHVSH2a9AMsFPty56txeDcZefHi6
ySnpUbIgA653W7NyHjm3GC7PcFnLJTd8gl88PWpZoMxYUz8I5xvpBzZ0kDlT
YM6GUBdnTcb8FbC+mkvEjy/Uvx+uDPrhcreJ+ovgnJMTN0/6QP3tcFjFsokV
zdSvw8P5WnWGbVdfWv/AgdP3sV4396P1D0vhp61s+VBjWp+2Fx4wYkeEHj2+
s/Dv488Pax/+nsb/I3xT/vxLhTc0/lrBOD5MKtJIqaPxd4Tvb+i0ya6m8Q+H
5dp6zy57SeO/GxZt+aIg30vjfwtWCbUJeUTPz3kPH19wWdnYhPo1F2K+/C28
90Ce1ufZw+kWOpEBqrQ+LxTuON+S3KJN6/N2wdZNDaE7bGh93g34jLww9Kot
9b+DVy1LvOI0nfrVQvD+26qwI8yB+m3hs3GiM+vp8Z3BcLF5QuB/9HjWTtiE
9Sogy5rG/yqces9xRvt4Gv8GuA+/+ko03Z6rEirlLls2wTTXkcZ/PDxnz9eA
s9SnGQSrLqgtu/aH9v9kuH78nfXDumn/vwwXn+EqlClR/+vQv+tvVi9SpO3t
VFgk5Y4LiT/WNJy2zwpWDQhxZ/3bPn84/7q1b+i/7dsMn/dafzlrLm3feXjq
+WNWdXNo+17CcU8du+pm0PbJhUu5m3sDZtnNpvEZBXeWJc/ftIDGxxeO0w6R
+7yIxiMHPrhOsOriPBqPKniw9mqfhWT2H/iJn6rlEX8ajxGLcb30x+xZUDiN
x2y47tz0xK2raDw2wuayxy8OiaTeU7BbnOXh/yKotwI+5n5ptU8c9f6EZ9TG
eUwRUK/ZEin3loP39RU7qNcLPvO95OzlA9S7Dr7c7Nl75gj1noA7XWepGJ2i
3nJYc0XOiWk51NsDT3Q7PKfwDI3H0KXY/+7URibR7TJr4cRJ5dmf1lHfE3hI
xOIjarR9wi540RqDxb1R1Mdahv3BMG6ELrnTA5abvLX/KHq9WdHwYv7iJxvJ
XofhVO06pTwaP0EJvGhIsUrUv/H8Ck+Nf9woQ693w+DluL76sSjGL5j63ODP
wVfGvFlGfZEwZ7IkZsly6suCz3EMXLeRRQ/gS0f17Hl8Gt9O2L7vqflvb1Cv
wQq8XqUb+PMraHynwsE7zOoK7lB/BKzXbirYs5f6D8Jfns5YuyWA+u/BFmOT
z4sfUb8UFrWkbS0eSevN9Fbi/ahp9nrvGFpv5gRzqgKHH/tD/cvh0rfbDSZ1
U386rKTpOeXgZ+oX/7VDwtSOb9TfBlc+mLYlldYL8ydHYP8bv83MbCCtL1sC
D4rRbb1D64Mle+A1rZcfv/2PegvhlTNS1w36Rb0f4P4Ff+JKvlLvAL6U2+p/
vzW8knod4LW+0fI8sngRLLUc+8GtgXqF8JDxRhHa7TTeBbD2wmldV5tpvJvh
x1buyZteUK/GKhy/ZjtNLDpNfSGwov7GUc3HqS8VLv4zNGgwmXMdTlgjUX7q
TuPbCD+6cjCZ5UHjaROJ+enPt1nXY6kvGA7V2a6gRO8v9g44wtV89CYy7woc
f9r34+HV1NN3tZTLnq64vXkJ9YyDPeUW5iasoJ4FcPjY/Lr+ND94bYOPTNLj
XKH3uyAPztffee1WEo1fHcy5u3+4+SbqU4rC+YeTrIJnDPWNgc/ZWHACaf7h
BMDploqezdHUtwWOWbAmdsh62n8vwns6fw+T+7f/1sDK3sN3XKT9W0YhWsp9
OKylXxjNf+zR8MErz8KiyDw/uLHHwHm0K41nAjxSdk+mKs2n4nOwSEN7zjo6
/nS+gDn7wmKqBlC/7BopN23YtUu9g6h/JDxAe7BP5r/5eA7cMCmpj40d9cfB
LrNv3ZlHbjgD75LeTw4dS/3PYdvpeU2D6PGc33C9a6Pdczb1D4+RcvcbW8S5
kkXesCgzczLHnPo3wJkLPr5bTZY5BduH2rX/vQL+2/8Mtik0eavWRedLvfAb
v13RY9vofGnYWil32t2CTXPp/Eg8E3bXS9zEL6XzhVh488DGdicy6zh8MvPN
1ZkSOl8ogwO8q7K06e8J/oOjlLKKZD7S+YJJLOZzM9G1bnKDJxxZULpDmc43
NGPgRVu+vN1QT8fLI7DeqJwSVgMdLx/Du+X+OzeSzj9E32GDCIu8eeV0vjRk
HY4/K40yVDfT+ZIHbGSb2ueqgM6XouB976ePCibzDsHiNfMPricLH8EDb+kk
raLzX/EX2EQn5cLH5dRvuB7XX34K20/TekqWKywT+cJqzRrqXwUfVakWZYZT
fyYsO9L77iJy7n1Y2F5dkEV/r6ED9p9+ckglWXPQBhzf1vRP3Lma+p1hg8GO
rrXLqH8l/DBGy1CJ1m+KDsAlMQcP+tD6TMld2DtJRSNgIfVLYZ2ohmlLQqhf
d6OU+9pkE2/kIurnwgGHZ3L6BlP/Mnjly8TuO/R48T54gqWBTW0o9d+BF6dN
tZcPo17tTVLuIbctXRm0/YJJ8C6z0DX69Hy5i2GrwUecl5Eb0uDrx3dkz/Kj
3ttw+Jy4j4L51NsCe1Zcux80h3r7x2H+L+ltODiLeifCfBklpQ66XRIG77j/
Ne/0CuoVwlWV/omvyeybcJ73LsUj/tTbBL9apaG2mixUF+D+5kMHp5LFE+CX
dvN7I+n17lwI5w0a/juU+lgpcFD8op7MNOq/Bt/JMG2O9KH+t7B9YXdYiRv1
94vH+b2W/OSeKdRvDRcOEWRMIGvy4Iz1fqOnOlD/djhYzvKM+UTqz4fjWiY9
f0AWvYF1HZo+OjpTv3KClDs3ni/7iB4vMw62d7rfNNSS+ufD6u6v9LJMqX8r
PH3jSf3KAdR/CV566LTlEHXqfwVP9dT8toTWy3Yqbsb10I3Nw5z7UD8bftVv
v62QbveaB2v2BrcnsKg/Ef7qPOz8VXLuBbimO3ffZVqf21ANrx7lbdg8kPrm
JuL6/UDe7W5aTyuKhxNnHkibX0zXv2fhSvcT7LbCjMn/Aw+VE0A=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.961872*^9}, {0, 0.0798545257471515}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {FontSize -> 18}, "AspectRatio" -> GoldenRatio^(-1), 
        "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->{18},
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.961872*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.960120629211121*^9, 3.960542109902869*^9, 
  3.962017599883828*^9},
 CellLabel->
  "Out[2315]=",ExpressionUUID->"9750a01f-ea96-420e-a458-0016b82965f7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.956583594880019*^9, 3.956583597703912*^9}},
 CellLabel->
  "In[2316]:=",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2056, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (March 16, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2911, 79, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4080, 120, 608, 12, 56, "Output",ExpressionUUID->"86e361d4-b07c-4226-a2dd-085865260b11"]
}, Open  ]],
Cell[4703, 135, 6076, 126, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[10782, 263, 2530, 62, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[13337, 329, 47228, 959, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[60568, 1290, 16584, 335, 5779, "Output",ExpressionUUID->"f47d2153-12af-409e-9f0e-ab0db89c6f29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77189, 1630, 321, 6, 66, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[77535, 1640, 3923, 88, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[81461, 1730, 209955, 3591, 819, "Output",ExpressionUUID->"9750a01f-ea96-420e-a458-0016b82965f7"]
}, Open  ]],
Cell[291431, 5324, 194, 4, 19, "Input",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92",
 CellOpen->False]
}, Open  ]]
}, Open  ]]
}
]
*)

