(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    312866,       5685]
NotebookOptionsPosition[    311194,       5645]
NotebookOutlinePosition[    311592,       5661]
CellTagsIndexPosition[    311549,       5658]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin-USD Movements", "Title",
 CellChangeTimes->{{3.817771249918704*^9, 3.817771272743654*^9}, {
  3.930597030408122*^9, 3.930597040645636*^9}, {3.93077730386965*^9, 
  3.9307773049960012`*^9}, {3.950478725765079*^9, 
  3.950478730649313*^9}},ExpressionUUID->"d0156753-738e-4289-aedc-\
5077aa29e1a2"],

Cell["\<\
This notebook serves to analyze Bitcoin price movements on either a daily, \
weekly, or monthly basis .\
\>", "Text",
 CellChangeTimes->{{3.949947167054709*^9, 
  3.949947212016868*^9}},ExpressionUUID->"267939b8-5eda-4511-bf7d-\
42ed242c822b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Since", " ", "Mathematica", " ", "operates", " ", "in", " ", "a", " ", 
     "global", " ", "environment"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "clear", " ", "all", " ", "that"}], ",", 
    " ", 
    RowBox[{"so", " ", 
     RowBox[{"we", "'"}], "re", " ", "clean"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Buttons", " ", "to", " ", 
     RowBox[{"hide", " ", "/", " ", "show"}], " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "cells"}], "}"}], ",", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cells", "=", 
         RowBox[{"Cells", "[", 
          RowBox[{"nb", ",", 
           RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"#", ",", 
            RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
         "cells"}], ";"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Hide Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<Show Code\>\"", ",", 
        RowBox[{"SelectionEvaluate", "[", 
         RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
    "]"}], "\n"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.9501353119954033`*^9, 3.950135312947233*^9}, {
  3.950135348619203*^9, 3.950135387089275*^9}, {3.950735214777595*^9, 
  3.95073521673057*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.952950242158903*^9, 3.9530648211300364`*^9, 3.953064958622326*^9, 
   3.953064994240164*^9, 3.953065349950439*^9, 3.953065465573783*^9, 
   3.953126301207666*^9, 3.953126763140174*^9, 3.95312695500004*^9, 
   3.953127117979952*^9, 3.9531271852779837`*^9, 3.953127515891465*^9, 
   3.953127565970191*^9, 3.953127614148252*^9, 3.953127664280751*^9, 
   3.953136707707389*^9, 3.9531368280231953`*^9, 3.953136973229302*^9, 
   3.953137162354211*^9, 3.953137357043047*^9, 3.953137409894322*^9, 
   3.953137478783972*^9, 3.953137580524066*^9, 3.953285299268303*^9, 
   3.9532853579233027`*^9, 3.953285456811905*^9, 3.9534102329466753`*^9, 
   3.9542733120956717`*^9, 3.95444635802569*^9, 3.9551400263429003`*^9, 
   3.95548301709028*^9, 3.955483914695512*^9, 3.955484592070867*^9, 
   3.9556323769979563`*^9, 3.955788802405212*^9, 3.9559111390723*^9, {
   3.955911408801759*^9, 3.955911408886239*^9}, 3.956325663929028*^9, 
   3.9565835736747913`*^9, 3.9566950342389593`*^9, 3.957003217109652*^9, 
   3.95738834267148*^9, 3.957668020911253*^9, 3.958544604531591*^9, 
   3.958766187928995*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ee420b88-8d40-4c9b-8dbf-bb5f945a7c41"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"settings", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
      RowBox[{"imagesize", "->", "1200"}], "\[IndentingNewLine]", ",", 
      RowBox[{"labelstyle", "->", 
       RowBox[{"{", "18", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"origindate", "->", "\"\<Sep. 14, 2011\>\""}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotbackground", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"plotmarkers", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<OpenMarkers\>\"", ",", "8"}], "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"plotstyle", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"subtitlestyle", "->", 
       RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ticksstyle", "->", 
       RowBox[{"{", "16", "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"titlestyle", "->", 
       RowBox[{"{", 
        RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Put", " ", "these", " ", "stats", " ", "in", " ", "the", " ", "summary", " ",
     "boxes", " ", "placed", " ", "within", " ", "each", " ", "plot"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bstats", "[", "lst_", "]"}], ":=", 
    RowBox[{"Return", "[", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "->", 
         RowBox[{"Length", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"min", "->", 
         RowBox[{"Min", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"mean", "->", 
         RowBox[{"Mean", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"median", "->", " ", 
         RowBox[{"Median", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"max", "->", 
         RowBox[{"Max", "[", "lst", "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"std", "->", 
         RowBox[{"StandardDeviation", "[", "lst", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "//", "Dataset"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Time", " ", "increment", " ", "strings", " ", "for", " ", "selection"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "[", "str_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "str", ",", "\"\<Day\>\"", ",", "\"\<Daily\>\"", ",", "\"\<Week\>\"", 
     ",", "\"\<Weekly\>\"", ",", "\"\<Month\>\"", ",", "\"\<Monthly\>\"", 
     ",", "\"\<Year\>\"", ",", "\"\<Yearly\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticks2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PercentForm", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"100", " ", "#"}], ",", "\"\<Percent\>\""}], "]"}], "]"}]}],
       "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "10"}]}], "]"}]}]}], ";"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8177712771187572`*^9, 3.817771354507091*^9}, {
   3.8177713929562473`*^9, 3.817771421842383*^9}, {3.81777234032673*^9, 
   3.817772365921872*^9}, {3.817772900122843*^9, 3.817772901627557*^9}, {
   3.817772967416851*^9, 3.817772970984816*^9}, {3.817774358515341*^9, 
   3.8177743595448027`*^9}, 3.821802077208342*^9, {3.821802118436161*^9, 
   3.821802120410658*^9}, {3.82180324238376*^9, 3.821803278453909*^9}, {
   3.927054799207635*^9, 3.927054858146652*^9}, 3.927054942536396*^9, {
   3.927055190180209*^9, 3.9270551960366983`*^9}, {3.9270552513052807`*^9, 
   3.927055269404099*^9}, {3.927055363517065*^9, 3.927055365652321*^9}, {
   3.927057277666922*^9, 3.927057328625134*^9}, {3.927057674949617*^9, 
   3.927057747245629*^9}, {3.927057780332376*^9, 3.92705779149765*^9}, 
   3.927061559021743*^9, 3.927062694740728*^9, {3.927063396491254*^9, 
   3.927063397375469*^9}, {3.927066618866694*^9, 3.927066631763128*^9}, {
   3.930773109729363*^9, 3.930773190049923*^9}, {3.93077336157609*^9, 
   3.9307733926136627`*^9}, {3.930776446298995*^9, 3.930776461924596*^9}, {
   3.93077658236301*^9, 3.93077659485312*^9}, {3.930778312654232*^9, 
   3.930778323771391*^9}, {3.930778358159801*^9, 3.930778370578583*^9}, {
   3.930778424845128*^9, 3.930778428022979*^9}, {3.9464685601417103`*^9, 
   3.9464686307565603`*^9}, {3.949946444621788*^9, 3.949946628473647*^9}, {
   3.9499467098534727`*^9, 3.9499467764283133`*^9}, {3.9499472411967287`*^9, 
   3.9499472588539143`*^9}, {3.950475775641748*^9, 3.9504757865508537`*^9}, 
   3.950477104847649*^9, 3.950479479916936*^9, {3.950735200045561*^9, 
   3.950735209161579*^9}, {3.953064338873884*^9, 3.95306438133858*^9}, 
   3.953064600039442*^9, {3.953064987565001*^9, 3.953064988937965*^9}, {
   3.9530651199757957`*^9, 3.953065120414742*^9}, {3.953065301482101*^9, 
   3.953065314167074*^9}, {3.953065345130644*^9, 3.9530653467559233`*^9}, {
   3.953065418741219*^9, 3.95306544503125*^9}, {3.953126136533811*^9, 
   3.953126176322988*^9}, {3.9531262190876017`*^9, 3.953126252248312*^9}, {
   3.9531267514510117`*^9, 3.953126756395422*^9}, 3.9531268925827417`*^9, {
   3.9531270650823717`*^9, 3.95312706549288*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Here", " ", "we", " ", "fetch", " ", "the", " ", "data"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "normalize", " ", "it", " ", "from", " ", "a", " ", "Dataset",
      " ", "to", " ", "a", " ", "plain", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"btcDataFull", " ", "=", " ", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<BTC/USD\>\"", ",", " ", 
        RowBox[{"settings", "[", "origindate", "]"}]}], "]"}], "//", 
      "Normal"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "many", " ", "days", " ", "data", " ", "have", " ", "we", " ", 
     RowBox[{"got", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", " ", "=", " ", 
     RowBox[{"btcDataFull", "//", "Length"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "How", " ", "much", " ", "of", " ", "the", " ", "list", " ", "do", " ", 
     "we", " ", "take", " ", "for", " ", 
     RowBox[{"display", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"takes", "=", 
     RowBox[{
      RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "<>", 
             " ", "\"\< yr\>\""}], ",", "16"}], "]"}]}], "&"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"365", ",", "days", ",", "365"}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", "days", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], "//", "ReverseSort"}]}], 
    ";"}]}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.930773388145524*^9, {3.930773444754338*^9, 3.930773445519784*^9}, {
   3.932596286662141*^9, 3.932596328014542*^9}, {3.932596363373996*^9, 
   3.932596367672576*^9}, 3.933099040149756*^9, {3.933100284894334*^9, 
   3.9331002977591*^9}, {3.949946782809309*^9, 3.949946875593206*^9}, {
   3.949946936281502*^9, 3.949946966519264*^9}, 3.9499472739002457`*^9, {
   3.953126185853492*^9, 3.9531261957797213`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "fun", " ", "begins", " ", "here"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "filename", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "insetscale", " ", "places", " ", "some", " ", "of", " ", "the", " ", 
        "inset", " ", "stat", " ", "boxes", " ", "horizontally"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"insetscale", "=", 
        RowBox[{"{", 
         RowBox[{".07", ",", ".875"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"intervally", "=", 
        RowBox[{"ly", "[", "interval", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"btcData", "=", 
        RowBox[{"TimeSeriesAggregate", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"btcDataFull", ",", 
            RowBox[{"-", "since"}]}], "]"}], ",", "interval", ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"labelstyle", "=", 
        RowBox[{"{", "18", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedstr", "=", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<(updated: ``)\>\"", " ", ",", " ", 
            RowBox[{"DateString", "[", "]"}]}], "]"}], ",", "15"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "A", " ", "B", " ", "S", " ", "O", " ", "L", " ", "U", " ", "T", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"absolutechanges", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
           RowBox[{"Last", "[", 
            RowBox[{"btcData", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tsabsolutechanges", "=", " ", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"btcData", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
              RowBox[{"Last", "[", 
               RowBox[{"btcData", "[", 
                RowBox[{"[", 
                 RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "2", ",", " ", 
             RowBox[{"Length", "@", "btcData"}]}], "}"}]}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"dlpabsolute", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsabsolutechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Absolute `` Price Changes (USD)\>\"", ",", 
                   "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsabsolutechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "50000"}], ",", "50000", ",", "1000"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "50000"}], ",", "50000", ",", "5000"}], 
                 "]"}]}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"GridLines", "->", "Automatic"}]}], "*)"}], 
          "\[IndentingNewLine]", ",", " ", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HoldForm", "[", 
                RowBox[{"US", " ", "Dollars"}], "]"}], ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "absolutechanges", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Absolute-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlpabsolute"}], "]"}], ";", "\n", 
       RowBox[{"rankabs", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsabsolutechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstabs", "=", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"rankabs", ",", 
           RowBox[{"Min", "[", 
            RowBox[{"100", ",", 
             RowBox[{"Length", "[", "rankabs", "]"}]}], "]"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestabs", "=", 
        RowBox[{
         RowBox[{"ReverseSortBy", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"rankabs", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"-", "100"}], ",", 
               RowBox[{"-", 
                RowBox[{"Length", "[", "rankabs", "]"}]}]}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestabs", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Absolute Dollars)\>\"", ",", 
                " ", "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstabs", ",", "bestabs"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\n", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Absolute-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestabs"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "R", " ", "E", " ", "L", " ", "A", " ", "T", " ", "I", " ", "V", " ", 
         "E", "   ", "C", " ", "H", " ", "A", " ", "N", " ", "G", " ", "E", " ",
          "S"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"relativechanges", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{"btcData", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
               RowBox[{"Last", "[", 
                RowBox[{"btcData", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
             
             RowBox[{"(", 
              RowBox[{"Mean", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"Last", "[", 
                  RowBox[{"btcData", "[", 
                   RowBox[{"[", 
                    RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "}"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", " ", 
            RowBox[{"Length", "@", "btcData"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tsrelativechanges", " ", "=", " ", 
        RowBox[{"TimeSeries", "[", "relativechanges", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dlprelative", "=", 
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{"tsrelativechanges", "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Relative `` Changes\>\"", ",", "intervally"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"DateRange", "[", 
                  RowBox[{
                   RowBox[{"{", "2010", "}"}], ",", 
                   RowBox[{"{", "2030", "}"}], ",", 
                   RowBox[{"Quantity", "[", 
                    RowBox[{"1", ",", "\"\<Quarters\>\""}], "]"}]}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
                RowBox[{"DateRange", "[", 
                 RowBox[{
                  RowBox[{"{", "2010", "}"}], ",", 
                  RowBox[{"{", "2030", "}"}], ",", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"1", "/", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"PercentForm", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "0.1"}], ",", "0.1"}], "]"}], ",", 
                RowBox[{"{", "0", "}"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0.1", ",", "1", ",", "0.1"}], "]"}]}], "]"}]}]}], 
            "}"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"TicksStyle", "->", 
           RowBox[{"settings", "[", "ticksstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"Automatic", "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"interval", " ", "==", "\"\<Day\>\""}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.005", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Scaled", "[", "0.010", "]"}]}], "\[IndentingNewLine]",
               "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"Filling", "->", "Axis"}], "\[IndentingNewLine]", ",", 
          RowBox[{"FillingStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", " ", "Green"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "\[Rule]", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", " ", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", "\[IndentingNewLine]", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", 
               RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], 
               "]"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", "insetscale", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", " ", "dlprelative"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rankrel", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "//", "Normal"}], ",", "Last"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstrel", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], "}"}],
            "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{"rankrel", ",", 
            RowBox[{"Min", "[", 
             RowBox[{"100", ",", 
              RowBox[{"Length", "[", "rankrel", "]"}]}], "]"}]}], "]"}]}], "//",
          "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bestrel", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "PercentForm"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"ReverseSortBy", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"rankrel", ",", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"-", "100"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "[", "rankrel", "]"}]}]}], "]"}]}], "]"}],
              ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], ")"}], "//", 
         "Dataset"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"worstandbestrel", "=", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               
               RowBox[{"\"\<Worst and Best ``s (Relative)\>\"", ",", " ", 
                "interval"}], "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "updatedstr", "\[IndentingNewLine]", ",", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"worstrel", ",", "bestrel"}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"ImageSize", "->", "600"}], "\[IndentingNewLine]", ",", 
              " ", 
              RowBox[{"Alignment", "->", "Center"}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Alignment", "->", "Center"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Best-Worst-Relative-``.jpg\>\"", ",",
            "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "worstandbestrel"}], "]"}], ";", "\n", 
       RowBox[{"positives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], " ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"negatives", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"tsrelativechanges", "[", "\"\<Values\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "<", "0"}], "&"}]}], " ", "]"}]}], ";", "\n", 
       RowBox[{"mhistpositive", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
         "positives", "\[IndentingNewLine]", ",", "25", "\[IndentingNewLine]",
           ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Positive Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "positives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Green"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistnegative", "=", 
        RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "negatives", "}"}], "\[IndentingNewLine]", ",", "50", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Column", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Style", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  
                  RowBox[{"\"\<Relative `` Negative Price Movements\>\"", ",",
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                RowBox[{"\"\<`` of `` ``s\>\"", "\[IndentingNewLine]", ",", 
                 RowBox[{"Length", "[", "negatives", "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                  RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                 "\[IndentingNewLine]", ",", "interval"}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               "updatedstr"}], "\[IndentingNewLine]", "}"}], 
             "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"settings", "[", "labelstyle", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"settings", "[", "imagesize", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"ImageMargins", "->", 
           RowBox[{"settings", "[", "imagemargins", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"GridLines", "->", "Automatic"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Ticks", "->", 
           RowBox[{"{", 
            RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
          RowBox[{"ChartStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"LabelingFunction", "\[Rule]", "Above"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Background", "->", 
           RowBox[{"settings", "[", "plotbackground", "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"Inset", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Framed", "[", 
              RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".50", ",", ".85"}], "}"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Background", "->", "White"}]}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", "\n", 
       RowBox[{"mhistcombined", "=", 
        RowBox[{"Manipulate", "[", "\n", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"positives", ",", "negatives"}], "}"}], 
            "\[IndentingNewLine]", ",", "x", "\[IndentingNewLine]", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Column", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    
                    RowBox[{"\"\<Relative `` Movements\>\"", ",", 
                    "intervally"}], "]"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"settings", "[", "titlestyle", "]"}]}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"StringForm", "[", "\[IndentingNewLine]", 
                  RowBox[{"\"\<`` ``s\>\"", "\[IndentingNewLine]", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "positives", "]"}], " ", "+", 
                    RowBox[{"Length", "[", " ", "negatives", "]"}]}], 
                   "\[IndentingNewLine]", ",", "interval"}], 
                  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                 "updatedstr"}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "Center"}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"settings", "[", "labelstyle", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"settings", "[", "imagesize", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"ImageMargins", "->", 
             RowBox[{"settings", "[", "imagemargins", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"GridLines", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1", ",", 
                 RowBox[{"1", "/", "10"}]}], "]"}], ",", "Automatic"}], 
              "}"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"Ticks", "->", 
               RowBox[{"{", 
                RowBox[{"ticks2", ",", " ", "Automatic"}], "}"}]}]}], "*)"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Green", ",", " ", "Red"}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "labelstyle", ",", 
               RowBox[{"{", 
                RowBox[{"labelstyle", ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"x", "<", "50"}], ",", "12", ",", "8"}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"LabelingFunction", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"x", ">", "75"}], ",", "None", ",", "Above"}], "]"}]}],
             "\[IndentingNewLine]", ",", 
            RowBox[{"Background", "->", 
             RowBox[{"settings", "[", "plotbackground", "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Epilog", "->", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"positives", ",", "negatives"}], "]"}], "]"}], 
                  "]"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".30", ",", ".90"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "negatives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".10", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"Inset", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{"bstats", "[", "positives", "]"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".90", ",", ".40"}], "}"}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"Background", "->", "White"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "50", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Bins: \>\"", ",", 
                RowBox[{"{", "15", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10", ",", "200", ",", "10"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", " ", "=", " ", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<BTC-USD-Movements-Histogram-Relative-``.jpg\>\"", ",", 
           "intervally"}], "]"}], "//", "ToString"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"filename", ",", "mhistcombined"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Absolute `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlpabsolute", "\[IndentingNewLine]", ",", "worstandbestabs", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Spacer", "[", "10", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Relative `` Movements\>\"", ",", "intervally"}], 
             "]"}], "\[IndentingNewLine]", ",", "\"\<Section\>\""}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "dlprelative", "\[IndentingNewLine]", ",", "worstandbestrel", 
          "\[IndentingNewLine]", ",", "mhistpositive", "\[IndentingNewLine]", 
          ",", "mhistnegative", "\[IndentingNewLine]", ",", "mhistcombined"}],
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interval", ",", "\"\<Day\>\""}], "}"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", "16"}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<Day\>\"", ",", " ", "\"\<Week\>\"", 
         ",", "\"\<Month\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"since", ",", "days"}], "}"}], "\[IndentingNewLine]", ",", " ",
       "takes"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8218033167751827`*^9, 3.821803323707226*^9}, {
   3.821804089920792*^9, 3.82180409050572*^9}, {3.821804128614079*^9, 
   3.821804129231569*^9}, {3.92705529908486*^9, 3.927055321906384*^9}, {
   3.927055376213205*^9, 3.927055378815543*^9}, {3.927057365887572*^9, 
   3.927057373129609*^9}, {3.927057428750336*^9, 3.927057436893665*^9}, {
   3.927057797980306*^9, 3.927057802677081*^9}, {3.927057864444936*^9, 
   3.927058009584536*^9}, {3.927058044238235*^9, 3.927058070623851*^9}, {
   3.927058234939542*^9, 3.927058262415997*^9}, {3.927058326275997*^9, 
   3.927058367452791*^9}, {3.927058428579284*^9, 3.927058445797999*^9}, {
   3.927058497790576*^9, 3.92705854971666*^9}, {3.927061293557071*^9, 
   3.927061327477988*^9}, {3.927062697995244*^9, 3.927062700564319*^9}, {
   3.9305971401480093`*^9, 3.9305971428932962`*^9}, {3.9305983838003473`*^9, 
   3.930598407745353*^9}, {3.930599371863182*^9, 3.930599454097058*^9}, {
   3.930599699809755*^9, 3.930599709292581*^9}, {3.9306025805098124`*^9, 
   3.930602590569699*^9}, {3.93060331751073*^9, 3.930603433075329*^9}, 
   3.930765369658333*^9, 3.930765417242362*^9, {3.930765448044935*^9, 
   3.930765471625808*^9}, {3.9307698677931957`*^9, 3.93076988493323*^9}, 
   3.930773259890384*^9, {3.93077345097508*^9, 3.930773525263661*^9}, {
   3.9307736750984993`*^9, 3.930773678362458*^9}, {3.930773734603702*^9, 
   3.930773800972302*^9}, {3.930773837621329*^9, 3.930773897074624*^9}, {
   3.930774651144957*^9, 3.930774659320655*^9}, {3.930775143426763*^9, 
   3.930775164581171*^9}, 3.930775863724771*^9, {3.930776260565336*^9, 
   3.930776262866468*^9}, {3.930776429554811*^9, 3.930776431664075*^9}, {
   3.93077652883814*^9, 3.930776531516225*^9}, {3.930776638490739*^9, 
   3.930776641128249*^9}, {3.930777017691364*^9, 3.93077706666937*^9}, 
   3.930777366103262*^9, {3.930777436880534*^9, 3.930777557963817*^9}, {
   3.932589205024778*^9, 3.932589223645443*^9}, {3.932589258068941*^9, 
   3.932589264598353*^9}, {3.932589326653183*^9, 3.93258933758797*^9}, {
   3.932589381526539*^9, 3.932589382565201*^9}, {3.932589422429088*^9, 
   3.9325894379942417`*^9}, {3.932589485162304*^9, 3.9325895011418667`*^9}, {
   3.932589540598324*^9, 3.9325895409774523`*^9}, 3.932589604287313*^9, {
   3.9325962492639027`*^9, 3.9325962529330273`*^9}, {3.932596672788417*^9, 
   3.932596738727755*^9}, {3.9325973497790747`*^9, 3.9325973512406683`*^9}, {
   3.9325974280299463`*^9, 3.932597472987382*^9}, {3.932597532404661*^9, 
   3.93259754137379*^9}, {3.932597611138356*^9, 3.932597613568362*^9}, 
   3.933098641802431*^9, {3.933099723848826*^9, 3.933099771605461*^9}, {
   3.9330998292701817`*^9, 3.9330998675702143`*^9}, 3.933100039304443*^9, {
   3.933100405623919*^9, 3.93310051642211*^9}, {3.933100595573762*^9, 
   3.933100611715904*^9}, {3.933100662100307*^9, 3.933100677055583*^9}, {
   3.946468389642935*^9, 3.9464684429666767`*^9}, {3.946469009418079*^9, 
   3.946469029045267*^9}, {3.94646908763061*^9, 3.946469138862685*^9}, {
   3.9464692388784237`*^9, 3.9464692793218737`*^9}, 3.9464697468028917`*^9, {
   3.9464753883558493`*^9, 3.946475399764448*^9}, {3.946475719290412*^9, 
   3.946475719906127*^9}, {3.946475769781231*^9, 3.946475784778319*^9}, {
   3.946475814889237*^9, 3.946475818320519*^9}, {3.946476619916438*^9, 
   3.9464766379627037`*^9}, {3.946476668630064*^9, 3.9464766690879*^9}, {
   3.946476714810535*^9, 3.9464767263613586`*^9}, 3.947354674751561*^9, 
   3.947354736160553*^9, {3.947354862463785*^9, 3.947354866579899*^9}, {
   3.947354938222332*^9, 3.9473549707045193`*^9}, {3.949947289229928*^9, 
   3.949947300440281*^9}, {3.9499473497010527`*^9, 3.9499473608217163`*^9}, {
   3.9499473917350187`*^9, 3.949947506737507*^9}, {3.949947536750325*^9, 
   3.949947557438916*^9}, {3.94994759982307*^9, 3.949947620011689*^9}, {
   3.9499477548455563`*^9, 3.949947789988323*^9}, {3.949947846349784*^9, 
   3.949947847772584*^9}, {3.9499478811382437`*^9, 3.949947948972628*^9}, {
   3.950136617201415*^9, 3.950136722068115*^9}, {3.950136965707509*^9, 
   3.9501369675538816`*^9}, {3.950472717893097*^9, 3.95047275254395*^9}, {
   3.9504727861350803`*^9, 3.9504728162165117`*^9}, {3.9504728537417192`*^9, 
   3.95047289890126*^9}, {3.9504729385619497`*^9, 3.9504730032171164`*^9}, {
   3.9504737120767317`*^9, 3.950473754315509*^9}, {3.950473797575324*^9, 
   3.950473894659935*^9}, {3.950473991981297*^9, 3.9504741590890627`*^9}, {
   3.950474238162531*^9, 3.950474238767166*^9}, {3.9504743022186317`*^9, 
   3.9504744155939293`*^9}, {3.950474488221025*^9, 3.950474499538802*^9}, {
   3.950474534929267*^9, 3.950474560142592*^9}, {3.9504746084400253`*^9, 
   3.95047476056739*^9}, {3.9504747947219276`*^9, 3.950474795176146*^9}, {
   3.950474878722206*^9, 3.9504749107928467`*^9}, {3.950475177906867*^9, 
   3.950475222022634*^9}, {3.950475253535948*^9, 3.950475294822747*^9}, {
   3.9504756679840107`*^9, 3.9504756762977343`*^9}, {3.9504757084804163`*^9, 
   3.950475756179323*^9}, {3.950475798112627*^9, 3.9504759246307583`*^9}, {
   3.950476111721266*^9, 3.950476179871418*^9}, {3.950476318381928*^9, 
   3.950476394718747*^9}, {3.950476692808716*^9, 3.950476717355835*^9}, {
   3.95047690811827*^9, 3.9504769184163094`*^9}, {3.9504788325280933`*^9, 
   3.950478919015243*^9}, {3.950479054568446*^9, 3.950479116066639*^9}, {
   3.9504791662526417`*^9, 3.950479280267717*^9}, {3.9504793146482964`*^9, 
   3.950479359442795*^9}, {3.950479619403633*^9, 3.950479641720788*^9}, {
   3.9504797660261097`*^9, 3.950479778638805*^9}, {3.950480183672502*^9, 
   3.950480327081911*^9}, {3.9504804910169992`*^9, 3.9504804949762697`*^9}, {
   3.950480595094911*^9, 3.950480622043873*^9}, {3.950480677136619*^9, 
   3.9504806794877863`*^9}, {3.950481551579452*^9, 3.950481591816942*^9}, {
   3.950481658105294*^9, 3.950481690970549*^9}, {3.950481838057075*^9, 
   3.95048197568497*^9}, {3.950549069966489*^9, 3.950549121120802*^9}, {
   3.953064419660632*^9, 3.9530645018556213`*^9}, {3.953064632955308*^9, 
   3.953064786722176*^9}, {3.953065391372377*^9, 3.953065398396068*^9}, {
   3.9531268269863577`*^9, 3.95312683578163*^9}, {3.953126909752865*^9, 
   3.9531269479360857`*^9}, {3.953127079349113*^9, 3.9531271025492477`*^9}, {
   3.953127163350771*^9, 3.953127178721713*^9}, {3.953127234306534*^9, 
   3.9531272693078833`*^9}, {3.953127389520378*^9, 3.9531273964216833`*^9}, {
   3.953127503317102*^9, 3.953127508418927*^9}, {3.953127546225281*^9, 
   3.953127560776716*^9}, {3.9531275953158607`*^9, 3.953127609076494*^9}, 
   3.953127640989373*^9, {3.953136780941668*^9, 3.953136797903908*^9}, {
   3.953136929781802*^9, 3.953136956410593*^9}, {3.953137092438534*^9, 
   3.953137139962092*^9}, {3.9531373473048058`*^9, 3.953137349655712*^9}, {
   3.9531373960108213`*^9, 3.9531374023607264`*^9}, {3.953137515984995*^9, 
   3.95313754357957*^9}, {3.953285276139423*^9, 3.953285281739294*^9}, {
   3.9532853420773153`*^9, 3.953285351365178*^9}, {3.9554843906883707`*^9, 
   3.9554844202100267`*^9}, 3.9554844683149023`*^9, {3.955484509072035*^9, 
   3.955484573338862*^9}, 3.955484816424817*^9, 3.955484990240109*^9, {
   3.955485048330737*^9, 3.9554850666151657`*^9}, {3.955485212388727*^9, 
   3.955485238935068*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`interval$$ = "Month", $CellContext`since$$ =
     4931, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`interval$$], "Day"}, {
      "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
       Style["Month", 16]}, ControlType -> SetterBar}, {{
       Hold[$CellContext`since$$], 4931}, {
      4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
       Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
       Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
       Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
       Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
       Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> Style["2 yr", 16],
        365 -> Style["1 yr", 16]}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {1285.1, {2816.96336342247, 2822.58836342247}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`interval$$ = "Day", $CellContext`since$$ = 
        4931}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`filename$}, $CellContext`insetscale = {0.07, 
          0.875}; $CellContext`intervally = \
$CellContext`ly[$CellContext`interval$$]; $CellContext`btcData = 
         TimeSeriesAggregate[
           
           Take[$CellContext`btcDataFull, -$CellContext`since$$], \
$CellContext`interval$$, Last]; $CellContext`labelstyle = {
          18}; $CellContext`updatedstr = Style[
           StringForm["(updated: ``)", 
            DateString[]], 15]; $CellContext`absolutechanges = Table[Last[
             Part[$CellContext`btcData, $CellContext`n]] - Last[
            Part[$CellContext`btcData, $CellContext`n - 1]], {$CellContext`n, 
            2, 
            Length[$CellContext`btcData]}]; $CellContext`tsabsolutechanges = 
         TimeSeries[
           Table[{
             First[
              Part[$CellContext`btcData, $CellContext`n]], Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              
              Part[$CellContext`btcData, $CellContext`n - 
               1]]}, {$CellContext`n, 2, 
             Length[$CellContext`btcData]}]]; $CellContext`dlpabsolute = 
         DateListPlot[$CellContext`tsabsolutechanges, PlotLabel -> Column[{
              Style[
               StringForm[
               "Absolute `` Price Changes (USD)", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsabsolutechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           PlotRange -> Full, FrameTicks -> All, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Join[
              Range[-50000, 50000, 1000], 
              Map[{#, Thick}& , 
               Range[-50000, 50000, 5000]]]}, Joined -> False, FrameLabel -> {{
              HoldForm[$CellContext`US $CellContext`Dollars], None}, {
             None, None}}, 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`absolutechanges]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Absolute-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlpabsolute]; \
$CellContext`rankabs = SortBy[
           Normal[$CellContext`tsabsolutechanges], 
           Last]; $CellContext`worstabs = Dataset[
           Take[$CellContext`rankabs, 
            Min[100, 
             Length[$CellContext`rankabs]]]]; $CellContext`bestabs = Dataset[
           ReverseSortBy[
            Take[$CellContext`rankabs, 
             Max[-100, -Length[$CellContext`rankabs]]], 
            Part[#, 2]& ]]; $CellContext`worstandbestabs = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Absolute Dollars)", \
$CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstabs, $CellContext`bestabs}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Absolute-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestabs]; \
$CellContext`relativechanges = Table[{
            First[
             Part[$CellContext`btcData, $CellContext`n]], (Last[
               Part[$CellContext`btcData, $CellContext`n]] - Last[
              Part[$CellContext`btcData, $CellContext`n - 1]])/Mean[{
              Last[
               Part[$CellContext`btcData, $CellContext`n]], 
              Last[
               
               Part[$CellContext`btcData, $CellContext`n - 
                1]]}]}, {$CellContext`n, 2, 
            Length[$CellContext`btcData]}]; $CellContext`tsrelativechanges = 
         TimeSeries[$CellContext`relativechanges]; $CellContext`dlprelative = 
         DateListPlot[$CellContext`tsrelativechanges, PlotLabel -> Column[{
              Style[
               StringForm["Relative `` Changes", $CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` ``s", 
               Length[
                $CellContext`tsrelativechanges[
                "Values"]], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], PlotRange -> All, GridLines -> {
             Join[
              If[$CellContext`interval$$ == "Day", 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Months"]], 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Quarters"]]], 
              Map[{#, Thick}& , 
               DateRange[{2010}, {2030}, 
                Quantity[1, "Years"]]]], 
             Range[-1, 1, 1/10]}, FrameTicks -> {All, 
             Map[{#, 
               PercentForm[#]}& , 
              Join[
               Range[-1, -0.1, 0.1], {0}, 
               Range[0.1, 1, 0.1]]]}, 
           TicksStyle -> $CellContext`settings[$CellContext`ticksstyle], 
           Joined -> False, PlotMarkers -> {Automatic, 
             If[$CellContext`interval$$ == "Day", 
              Scaled[0.005], 
              Scaled[0.01]]}, Filling -> Axis, FillingStyle -> {Red, Green}, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[
               $CellContext`tsrelativechanges["Values"]]], 
             Scaled[$CellContext`insetscale], Background -> 
             White]]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Relative-``.jpg", $CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`dlprelative]; \
$CellContext`rankrel = SortBy[
           Normal[$CellContext`tsrelativechanges], 
           Last]; $CellContext`worstrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            Take[$CellContext`rankrel, 
             Min[100, 
              Length[$CellContext`rankrel]]]]]; $CellContext`bestrel = Dataset[
           Map[{
             Part[#, 1], 
             PercentForm[
              Part[#, 2]]}& , 
            ReverseSortBy[
             Take[$CellContext`rankrel, 
              Max[-100, -Length[$CellContext`rankrel]]], 
             Part[#, 2]& ]]]; $CellContext`worstandbestrel = Column[{
            Style[
             StringForm[
             "Worst and Best ``s (Relative)", $CellContext`interval$$], 
             $CellContext`settings[$CellContext`titlestyle]], \
$CellContext`updatedstr, 
            
            Row[{$CellContext`worstrel, $CellContext`bestrel}, ImageSize -> 
             600, Alignment -> Center]}, Alignment -> Center, Frame -> 
           True]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Best-Worst-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`worstandbestrel]; \
$CellContext`positives = Select[
           $CellContext`tsrelativechanges["Values"], # > 
           0& ]; $CellContext`negatives = Select[
           $CellContext`tsrelativechanges["Values"], # < 
           0& ]; $CellContext`mhistpositive = 
         Histogram[$CellContext`positives, 25, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Positive Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`positives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Green, LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`positives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistnegative = 
         Histogram[{$CellContext`negatives}, 50, PlotLabel -> Column[{
              Style[
               StringForm[
               "Relative `` Negative Price Movements", \
$CellContext`intervally], 
               $CellContext`settings[$CellContext`titlestyle]], 
              StringForm["`` of `` ``s", 
               Length[$CellContext`negatives], Length[$CellContext`positives] + 
               Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
           LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
           PlotRange -> Full, 
           ImageSize -> $CellContext`settings[$CellContext`imagesize], 
           ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
           GridLines -> Automatic, Ticks -> {$CellContext`ticks2, Automatic}, 
           FrameTicks -> All, ChartStyle -> Red, LabelingFunction -> Above, 
           LabelingFunction -> Above, 
           Background -> $CellContext`settings[$CellContext`plotbackground], 
           Epilog -> Inset[
             Framed[
              $CellContext`bstats[$CellContext`negatives]], 
             Scaled[{0.5, 0.85}], Background -> 
             White]]; $CellContext`mhistcombined = Manipulate[
           
           Histogram[{$CellContext`positives, $CellContext`negatives}, \
$CellContext`x, PlotLabel -> Column[{
               Style[
                StringForm[
                "Relative `` Movements", $CellContext`intervally], 
                $CellContext`settings[$CellContext`titlestyle]], 
               StringForm[
               "`` ``s", Length[$CellContext`positives] + 
                Length[$CellContext`negatives], $CellContext`interval$$], \
$CellContext`updatedstr}, Center], 
            LabelStyle -> $CellContext`settings[$CellContext`labelstyle], 
            PlotRange -> Full, 
            ImageSize -> $CellContext`settings[$CellContext`imagesize], 
            ImageMargins -> $CellContext`settings[$CellContext`imagemargins], 
            GridLines -> {
              Range[-1, 1, 1/10], Automatic}, FrameTicks -> All, 
            ChartStyle -> {Green, Red}, LabelStyle -> 
            If[$CellContext`x > 
              75, $CellContext`labelstyle, {$CellContext`labelstyle, 
               Directive[
                If[$CellContext`x < 50, 12, 8]]}], LabelingFunction -> 
            If[$CellContext`x > 75, None, Above], 
            Background -> $CellContext`settings[$CellContext`plotbackground], 
            Epilog -> {
              Inset[
               Framed[
                $CellContext`bstats[
                 Join[$CellContext`positives, $CellContext`negatives]]], 
               Scaled[{0.3, 0.9}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`negatives]], 
               Scaled[{0.1, 0.4}], Background -> White], 
              Inset[
               Framed[
                $CellContext`bstats[$CellContext`positives]], 
               Scaled[{0.9, 0.4}], Background -> White]}], {{$CellContext`x, 
             50, 
             Style["Bins: ", {15}]}, 
            Range[10, 200, 10]}]; $CellContext`filename$ = ToString[
           StringForm[
           "BTC-USD-Movements-Histogram-Relative-``.jpg", \
$CellContext`intervally]]; 
        Export[$CellContext`filename$, $CellContext`mhistcombined]; Column[{
           Style[
            StringForm["Absolute `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlpabsolute, \
$CellContext`worstandbestabs, 
           Spacer[10], 
           Style[
            StringForm["Relative `` Movements", $CellContext`intervally], 
            "Section"], $CellContext`dlprelative, \
$CellContext`worstandbestrel, $CellContext`mhistpositive, \
$CellContext`mhistnegative, $CellContext`mhistcombined}]], 
      "Specifications" :> {{{$CellContext`interval$$, "Day"}, {
         "Day" -> Style["Day", 16], "Week" -> Style["Week", 16], "Month" -> 
          Style["Month", 16]}}, {{$CellContext`since$$, 4931}, {
         4931 -> Style["14 yr", 16], 4745 -> Style["13 yr", 16], 4380 -> 
          Style["12 yr", 16], 4015 -> Style["11 yr", 16], 3650 -> 
          Style["10 yr", 16], 3285 -> Style["9 yr", 16], 2920 -> 
          Style["8 yr", 16], 2555 -> Style["7 yr", 16], 2190 -> 
          Style["6 yr", 16], 1825 -> Style["5 yr", 16], 1460 -> 
          Style["4 yr", 16], 1095 -> Style["3 yr", 16], 730 -> 
          Style["2 yr", 16], 365 -> Style["1 yr", 16]}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      1330.1999999999998`, {2885.0973477974703`, 2890.7223477974703`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQY2Bg6Dhp/ehv8VvHxw9f/wHR+69O5/5X/NaxKPGKIIg+
bnVDHMwPlZMD0fNyuzqYSt46vqyfPh1EJ/XtWQmiY44lHQTR22zUboHoLZcD
HoDokGablyDabPGSryA6b1uNmHfJW0eOdddkQTSrqqEWiP7yyEq8o+St4xVZ
rRbdsreOC9jfMzWVvXVc5PJs+5Xyt47vfuwyrKl468ic3bkQRM+q0f4GonW6
C4VqK946vnvbZwiibV6UeoBoMSNL+aMVbx3XxRc2CFa+dVym3WPjW/nWMXQj
/xLxqreOeYvOTppa9dbxTmji/9NVbx05bphXJVW/dZRk4GiXq3nrKPBnr9jy
mreOKZO3SgfXvXX0uHPDb3/dW0cAVjGbfg==
  "],
 CellLabel->"Out[13]=",ExpressionUUID->"eb3b9e1f-c8fe-4fa1-9732-289ee8e574ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Starting here to quantify price volatility (not ready for prime time yet)\
\>", "Section",
 CellChangeTimes->{{3.931557801516337*^9, 3.931557818741585*^9}, {
  3.949947065951025*^9, 3.949947082680051*^9}, {3.949947681642511*^9, 
  3.949947690861421*^9}},ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-\
2e286e53115f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"relativechangesall", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"btcDataFull", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "]"}], "-", 
         RowBox[{"Last", "[", 
          RowBox[{"btcDataFull", "[", 
           RowBox[{"[", 
            RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], 
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Last", "[", 
            RowBox[{"btcDataFull", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]]}],
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", " ", 
       RowBox[{"Length", "@", "btcDataFull"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tsrelativechangesall", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", "relativechangesall", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualvolatility", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "tsrelativechangesall", ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"12", ",", "\"\<Months\>\""}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"annualvolatility", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Volatility\>\""}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "0.2", ",", "0.01"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldForm", "[", 
         RowBox[{"Standard", " ", "deviation"}], "]"}], ",", "None"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"settings", "[", "labelstyle", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.946475927717128*^9, 3.946475929139757*^9}, {
  3.946475960252776*^9, 3.9464759954479837`*^9}, {3.946476060647202*^9, 
  3.9464760957059393`*^9}, {3.946476219176024*^9, 3.946476305890623*^9}, {
  3.946476342537307*^9, 3.9464763661379967`*^9}, {3.946476403758297*^9, 
  3.946476411275354*^9}, {3.946476452799178*^9, 3.94647648862654*^9}, {
  3.946476806371994*^9, 3.946476895049273*^9}, {3.946476990424893*^9, 
  3.9464769999229717`*^9}, {3.946477031333768*^9, 3.9464770825599546`*^9}, {
  3.946477221775094*^9, 3.94647722238356*^9}, {3.946589551401029*^9, 
  3.946589570655095*^9}, {3.94994801401167*^9, 3.949948131950904*^9}, {
  3.949948197131667*^9, 3.9499482024140368`*^9}, {3.9530651728696136`*^9, 
  3.953065199618423*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1:eJws3HlcDH8cx/ElVygrd0rryp0tFBH7VhJSK3IlLVLkqJy5k7scm0o5IolQ
FIVcWbnPkityVBQ+X7LJmev3MJ/fXx7Px3d27auZ+c7s7sy2nhzoMbW6TCYr
ayiT/ftXJpMFXV9BiJA1Gd8q4PgAmUyW8GkFYZ3Tue/tJkvOMwslDFTd9Zo0
XrJscChhbNOmt995SlYGhxJqZFJ9wdbsDCU8GZocaTFGsvZKKGH4wKsmZmzd
x1DCbWV40JN+kvUtVhKGv+hzz9dBssJpJcElJLbdcLZ69krC9xtBTjPYoXEr
Cblq4+7b2ek5Kwman3tNxtpLLnq/kvAnNtLL4tOxf5Y3CyOYj3KdtrhCsgph
hF8FEzZe0ksOmhFGOGDzruwBOyEmjLCoU8T2CSQ570IYoeGIzPMZpZJlFEb4
Is64xLyUrGy8iuBjPH/eziLJmv6rCK2mlB+yYmunrSLMTi/t3JCt27qKsGVc
zvkzryTrz60irPAt/ORXLFnxZhXh+1n97cVXJKsbriZc6Hhiz43LkkP7ribM
G+K5+d1ByelTVxP2Dfc5PXKX5KItqwnL126YE7ed+8+sJhSYW37fzVa9Xk0Y
bPb87Ep2kPEawmSPFjNjo7i/9xpCVu9rRoM2cf/kNYS17/Y5p0Zw/6Y1hBtt
f+fHreH+U2sIvYxqy6as4P7iNQTv6K/P5xxKk/rrrSW0mJjkEs7W9VpLcNxW
9LXbbsl6n7UEc8uKOfWjJSvC1xIeWQcU+1cclfoz1xJS+rb2mEOSQ1+sJWw2
jX8zsFxyep11hHGzZ50d9Upykc06wp6QT8vubUmV+r3XEcLujrPxCpOsWreO
sO/SoYItaslBx9YRNnQyrHN5kOSEwnWEVkPUWVbOkvNqrifkpIbW6dBPsky5
nnA/zdPH2kaycvx6QtvszsOHWkrWrF5PcKyo+/Po5RSp/+h6QvOt82cPvyRZ
V7CesM7H6eai05L11TcQWs88+HBIpmRFtw2EQclfGzzfL1k9ZgPhjUF9bQE7
dOUGwpQVi9Lz2OkpGwgzSyPrTWEXPdxAKI49sn0hWy4LJ5TU03iZTTks9XcO
J6hjnEs3+UkOGhVOmGgR66r5ekjqXx5OyA62iFnCzjsYTjjarnzo1OWSZffD
CavMAw9oF0tW/g4nBMX8nBq8ULKmQwQhfu6kKXNnStaOiCAkPephfLaTZN2S
CMJfF5urzxSS9fsjCC+Dt0ZOf3hQ6s+LINQOdF3a9JRkdVUEYV6E3PwlO7Td
RkJ5xuDv/mmS0902EkZaW9fqelByUchGwqmUSeUVByTL920k9PFR2UW6Slbd
2UgoDKn4U6uf5KBvGwlVt0s2GtSQnNB6E2HYz+TstN/JUv+wTYSSlYWHZv+S
LFuwiRB8/Mjm7jyuTNhE0G4fd72SxzU3NxEmb/Loa1IgWft5EyFs6dmJnmxd
q80EzxZTV8jyJOtdNhOujm9yY+ItyYq5/7w0Pn7ETcnq+M2E+3ZB0RbnJYde
20xYXqAfc+us5PSKzYQtpq+udjotuajlFoL16A3jJ7LlzlsICV5O3VexVUFb
CNNsPyauOSY5aMcWwvJxYw8UsxMubyH4ln+wnh/J/eVbCIE2AeXenbi/hZaQ
vCx689k23O+oJZx2OuvZsTn3z9ISbpj7HnvTjPtjtYT8Jh8MXjfh/otawqXV
db2/N+Z+oSX0T/7dMYytaBpJ6PCi3aFfjbhfFUn4W7yh5f8ODYgkfNphbfGm
PvdHRxLGTD/gEPvjgNSfHUkI9D1V0+OlZPm7SEKTVwce/sqRrGq0lfCruI15
g0uSgxy2Emp96rF4xinJCf5bCdsKtnW8cURyXuRWwr7wDS4drSXLzm0lfHRv
NCDRQLKybCth/Ua/6UZX90v98ihCy9MjGte8JFlrH0XwmmXd+FqMZJ1vFCHj
ifvxrp6S9ZujCK7n17zXjpSsOB1FsKoIVE1zkKx+FUVo5fOj4o9KcqhRNMFt
+eyRRbaS0+2iCZszDsze9iVJ6p8UTWiBk9rz1aRx+cZowuHw8na9wqRx1clo
Qq0JMz51ri05qCia4JAxoUNpxj6pv24M4bRuzpO1myXn9YwhTH9X+DU3WrLM
J4bQ23/J6J9s5YYYwiODik6qTZI1GTEEzZ9wh+1s7fMYwqqbsVNM10rW1d5G
sD7RzKF+J8l6622Er6Vlzba3k6yYsI2wPc07pM/aRKl/7TZCLblZc4ehkkPT
txFMv3b6qBslOf3pNoLS4IHq6yDJRTViCce+NbW53kyyvHssYfr7raf/1pSs
GhdLGH8+w8mwluSgVbGEiLEHum37tFfqPxJL6L+ze6PqRZLzHscSEjY8Krhf
KllWPY4w+l63mTvfSVZ2jSP8Xr4815utGR1HmDD3VlGQkKwNjSPUPKBzX8rW
HY4jVFnkbJS9kqx/EEdI/JDQyrREsuJvHKFDsrnrydrc32k7QVFjbHDxbGk8
dOR2wouzXndDfCWnL9tOeDwjetxQb8lFydsJZ8dnet4cK1mev53w/uhMn3uO
klW/thNaNt3TYbpKcpDlDkI9w2afrdgJ6h2EgbLCjT/6cf/iHYSkxNGr7vG4
bP8Owo6+gxw+PkyQ+nN3EDaGu15re0Wy5scOwmTTB+XhVyVr2+4k1I76s96c
rRu+k6Bbpb1e/alk/cKdhJherusvFkpWJO4kBLo+nd/zuWT17Z2EPvHj48Ly
JId+3UnY6WA6tCEvn67YRVhw9slRRUPuH7qL8LtXk6o79bh//i5Cw16/Tyex
VXt2EQru/LrRpjH339hFeKDqfeOTOfdX7iIsKW/XJZ+dZx5PuBOz9619d+53
iSfkd19jvkfN639OPOHBd83GpuN4/e+KJ7Tt4XA3ewiv/6vxhFmXG4UOYev0
8YT61x5VDnXh9W+6m7C52W2E8vpRDNpNOIFqhZYektWBuwl9dv7p5X2X1//2
3YQztw+2N8vm9X9pN8Fvvpl9yk/u/7CboN/ScaqBjLf/5nsINWR1rymsePsf
uIcQ5h6yeLkbb/8z9xDeXhrsEaCRnLBtD+FT96FbBoyWnKfbQxh05X6B0TrJ
MrGH0CR1XNkotrJJAiHmoGv7jmzNgARCWkC10oerJWunJxCaGWxY9yRcsi4q
gfDAZ4dJVbJk/fkEwukmO/al5ktWvE0gHMssOXHPUpoP1CZ7CRvuj6nWvL3k
0H57CTnJTTxTukpO99tLaIltOotukou0ewkHdW0Gh0VJlp/dSzhSFlN7CM9v
qtK9hIsrehQ/n8bzX4NEwvx16Yezl/H83yeRUP9MQNMfgXz+NyWR0P98wAIP
9RGpf3MiYUiH+Fp/L0hWZiUSPI7vWDxFJ1lTkkhwLpt6pGy4dD6qrb+PYHbC
f/tJP8k6232E30/eNn3an89/NfsIf1K22ATu4/PfiH0EX48yx9tHJKtP7CMU
vIpx1GdJDn25j/C80mVGyCXJ6YZJhJPu55eW5Ugu6pFEyO827PvqQsnyiUmE
U1VbzJeXSlatTyJ4G2SWN/ooOeh4EqFintPB9p8lJzxLIly3GGV85I/kvFr7
/+0PLU/urZYu9VvvJ+T10qy1M5Cs9NpPSLgw61RGDcmaNfsJ48rWOSXYSdam
7Scsddq264qTZN2T/YR6W0oXVhshWW9wgLAtrIfhoWmSFVYHCBe+Rg1ymy5Z
PfYAYaND1KOwGZJDww4Q7K5+caw5S3J66gHCK8fGZoPZRY8OECb08xMr2PJq
yQTXvdVG/g6UrOqSTAiOS7nnzw7yTCakL/HoGMVOWJFMMBn7JbMnO+9Q8r/z
dbMp6sXc/yCZcHL0orAhbOWfZIJH8L647Uu4v+NBQuDz59cbLeV+j4OE9LWb
st/yuG7pQcIU488jS3lcf+Ag4VSNLRMfshX3DhK6tY+0mM9W/zxImHzug9My
dmj7QwTZcdepzsu43/0Qoce23foFy7l/0SHC2NPHtcvZ8qRDhJ7KWXfasFV3
DxFa7p0xbtcK7v9+iFB7iqlbGjuhzWFCVpXVqOWh3O96mNCx9djLo8O4f+Fh
QmTquLiRbOXewwTfAMPvI9iaW4cJUadvVw9Zy/1fDhPuNDhV2p+ts0ghJOY5
vZmxjvuHpBC+OU61nMVWzEshjHYNFnXWc//uFELAyljH05Hcfz2FUJo5ypjY
6Z9SCL4R1/d/j+d+s1RC++zCyJ9s+eBUgqWRqY35bu4PTiW8udbHfg07aGcq
wbmg0YHTCdx/JZWwNW7eHftE7v+YSvjl/NFqAFtmeoTgOzHAx3oH9zsdIRjM
1AY1ZmtmHyHMcraVTd3O/XFHCLtGHKllH8f9OUcI9W2umfjEcP/7I4QnSc3T
O7AVzY4Seoe8XPeNrcZRwmvXxc4p7NAZRwntKqcml0Vzf8xRwog85U4tjxdd
OEowz6yM8uFxOR0lPPDdN28Zj6sapxE0U5eGzOS/T1D/NMJD9UDcZydMSyNc
aDl9yx123tY0wucvSU227uP+82mE99dndF+TxP1v0ghNCiM9S7K5v2E6obv5
hdDy89zfN52gXdlj6Zm33D81nbA+96DvdrZ+SzphfnDylINfuf9MOqHiXuHf
91+4/3U6oVvyqik72KHGxwgfdne6PbY+f/7R+xgho78mpy27aPIxQrd3kxPa
GPHnH5uOEdrWehI03JA//zh1jNCw0e0Jjery5x/Fxwh3BwzwmFWPP/+od5xw
9p6P43F+vrxexwkWdV/vbWXAn39ojhOs0mf07cXPpww/Tqi1qdsibS3+/CPz
OOHvr+d78mry5z8vjhPq+dnscuTH6+pkECaauDR0qs6f/9hkEO4Y5Rjf+Mv9
3hmECLXSP5OtXpdBsN77VFXGDj2WQah7vGL8T3Z6YQahwu5V4CsZ99fMJJQ2
aFW+mP8/uTKTYNrC+t3/Vo3PJPhuCwnexA5anUnwHPQs6Sa/noSjmYTJttHP
L7LzCjIJP1t+mfGULTM4Qcg29ym0+cbrv9sJwp6YBZPsef1pxpwgvNSKum8/
8/pfeYJwvMtlXQ5bl3KCMC/JYhyx9Q9PEJydkmRj/1//spOEhH7NA9LY6s4n
CRtqmDgdYoeOOkmodmmd5RfeHtKXnyRM2x7Zpw6PFx08SVj92GrDWbb8/knC
OB3dTOXlVb9PEmS2XQYMZgd1OEW4Nl7V2rmCt/8RpwhJXet4hel5+19yitBh
5iunw7y9yg6cImxb4hGb/5L7804RAs7ELG/SmfurThEW9ajetWYBf/7VLotw
PyvMqpStc8sizN2wc/rpx3z8D8ki7Hy+v9tLtmJfFuFTx7clTXh59Z0sQs9v
RxOXs0O/ZRGu6UcOHc7H9/TWpwlrDaMy+vLji4adJhT3KDHNfMTH/wWnCeVr
IlrufMrH/4TThK9jMhaHsYNuniY0VtewjM/n4//n04S8vbtXNMzj43+rM4RN
EepFC3Mly4acIWzXdPIZwa9HOfcMoX2LK3+38v+niT9DGJAmL2vFr0d77Qxh
jM+5mB7/91ecIfQ7J3+iesL9Lc8S6iVNM2vLr0fhfJYwYPSM+EZsddBZQuyv
1lZ5z7l/x1lC6u73Z8JfcP/ls4ThCaU9I9lF5WcJes+Gs3yLub/FOcLxpRMs
6rNVjucIYao8/19F3D/rHMGtdtLDSnZC7DlCiWZfVV1ePu/iOYL77JYj5r3i
/vfnCL0O97RoWsL9Tc8TVr6fsOARL69RnSfEfTqbEMLWBpwnRFXEnm3Mz6+L
Pk/QGrUeZcTWZ58ndKl9+vizl9z/7jxhQ9c6poJ71I2yCY+vxVsGPuN+h2yC
nZHFuH3sdP9swogmQebJ7KLIbEJ4wafLVWz5uWxCs0altJutKssmWDqZdsrt
ytu//ALh+4abNz/35+3f/gIhpNX7IRUDePv3/eetFp2O87hsywXC1b/FX9aw
lacvEPaqb6h6sjWvLhAOdLq1aFdv3v+NdIR8Q4s9U9k6Ox3hmfLBxrV8fqif
pCPY3TtuN4Ct2Kgj+PoYtdPZ8v5/Ukdo99ttlAePhxbpCPNDmi3zZ6fXvUio
a9zKoIc97/89LxLmus8Yu7gf7/8+Fwl5V1c6DeDXp9pwkZBYfq27xUDuz7hI
OHJudMO7Q7j/+UXC9NdXWoxj59XOITQordGxjZr7bXIIrU8GjpzH56/KCTmE
tIoQQ9sx3L82h3C9ZmfUmcD96TmE2G/Pg+wncv/THELL6OivtXh5fY1LhG1d
zjRbOJb7u18ijDMMOVo8mvvHXSKILo7LPXg8dNUlwpfHOpP48dx/5BKhMP7V
ZKUX9z++RPie4d58PFte/TJhraXLEmteXtX1MmFNrW0Vluyg0ZcJt/U/vVM0
3B96mfB5jK3npqncf/gyIX9B9MCsmdz/8DJh++be9VuHcP/fy4Q7E2SVdbZw
f6crhLzmqUZt2NqRVwiXB366c5rPR3TLrhDim8d/28znQ/rkK//Or79dUvD5
kiL/CkHroNNa7Of+X1cII9LOdO94kPstrxKGhb55e4+drr5KCBx64/rGFO5f
fJVwsmrU/C8Z3L//KsHU2j3sFPj4l3uVMNl8WH6/9Xz8+3GVcL7erZGPY/j4
1/YaYdTLoqq9Z/n4N/wa4V2/1LmB/H2MLOQaIXjswmExV/n4n3iNMDK2dtGw
G3z8v32N8Dm52tsAtvbrNcLC054bzj3i47/iOmGx8pOPeQEf/4deJyS3X/wA
T/j7n/nXCXNTBvW4xt83qfdcJ1wN3W6/tIy//7lxnfB7Qyvt8Xr8/VfldcKP
bhu7WDfi77/MbxDqWh8f2YUtd7lBWHHk/twFzSSr5vzzDa27WwfJQbtuENpe
US8PmcXf/129Qai1JGbQsK38/Z/+BuHmBOPTwYn8/V/LmwSLajY/z2Ty93+D
bhLiZfX3Fp3h7/8CbxJOTQp/anebv//bfpPQtt3blGS27tJNglXrJcp0tv7D
TUJqyff5Jbn8/V/zW4TrYZO8T7DVA28RKu/em9BGniH1z7xFiIo+PculoeT0
bbcIt/oOrn7CT3KR7hbh8FfVZ3FKslzcIhxqbuk6+6ZkVZPbhPrOM0qSbkkO
GnCbkOv5tXgFO2H6bUJGZMLqn3cl50XdJjzeOlwn2LLs24T2C/wqH+RKVr69
TeiZFrH0+2PJGpM7hJ1tDft2eypZ2+8OwXzS3QthbJ3fHUK/5dPqTWHrtXf+
fd5YYq1mK87eIXwb4/o1hK0uvUNwf5eNJ+zQBncJhkc9laGF3N/nLmHym2m7
F7CLptwlyKlu6B62fPNdwpVPx872KeH+rLuEBV2qnflTzP0ldwkphga+zatn
Sv31cwnvrNyWzjSQnGebS3hjWXlpCls2KZeQ9WfU/TdsZUQuwWT9jfM2NSVr
TuQSHm020JbVlax9mUsIL21QrXp9yTrDPELDiETNwnqS9T3yCMs+d13hyVZM
zCNEvKjhtMRIsnp9HiEytix1jbHk0ON5hNkbA1cP4udLf5ZH+G77+VkHXr6o
1j3CguwR9WLYcut7hC+nzJZms1Ve9wilfUwLS/n1Ba25R1hRp/B7kiH3p90j
tA1/Nn0bP3/ek3uEwzWzmyewZTXyCXUH+/3dw1Za5RPyVlTv/KYJ94/NJ6yb
NfCjXzPuD8snWN12aZ3ZmPtT8wlb1N06f2/E/Y/yCT0ONS79xVZUu09wGVHT
zcKE+7vcJ4wqe+YmGnK/531Cduv+Qy7LuX/FfcLzeRfHvWEXHbpP+J7/YoUz
P17+4D5hh5PTmih+ftWf+4TOQ7OmXTDj/o4PCJn7c0o7teJ+jweEOS/rzA81
5/6lDwgfh/591ZQtS35AmLjto/k5tvLeA4Ljxh0eFRbc//MB4VZ2pr+sPfe3
f0g4GW81qboV97s/JKyuN2ZLhw7cv+ghocOjeu+bduH+pIeEqXUGDGvDVt99
SKg2d/fsvZ25//tDQsKNe3YX2eltHhE8WusO17XhftdHhJ0DP3VIZMsXPiJk
tJ8VuaIn9+99RIhITasWxQ669YgQmdza/LIL9395RNhz3e7bU3aexWOCqf0x
axs19w99THgSeM6pPVs57zFh78HpBTtGcf/uf+MN2s4t43Ht9ceEsirTX3PZ
uk+PCZsSDHa1COZ+swJC5bo1CWPZisEFhPu7G9kPns39wQUE5cr8Pmcmc//O
AgI6mm/28OP+KwWExNbxxrvZRR8LCFtjTowYPpX7TZ8QXhhG3nk8hfudnhAG
NVcscGIHzX5CiJtVfvycD/fHPSH8/Fg3fN5Y7s95QmhWuCB2/Rju//CEUHL9
UtslbGWzp4Tj7Z9dWs7W4CmhU1qxtZIfr53xlPB3Q40u6WxdzFNClXW16bae
3H/hKUG+cKx7977cT08JccO6TP5hy/2NCwm1pj3LqOzI/f0LCaPqb5i7hLef
9GmFhEF7hv+8xNtv0dbCf/OVScRH3h/l5wsJBRlxW67y/qN6U0hoYBavqHDg
/obPCJeCbyj29OD+vs8I44MfjzXn7SNv6jNCV+OaGQ3suV/77N/xqY5TTh/u
P/OMMLbTgMymPK55/YzgdiC5i557tMbPCTvcSvpPseb+3s8Jr35P+RnQkvsn
Pyc43j/ras77o2LTc8LiLe7XX7bg/lPPCWpD1ZWPptxf/Jzg1q5zxy9/ef6v
94Jg8mnl4Q0VPP/3ekFo+Dg2Kl/w/K95QRgSefRbg8U8/4e/IIx0677mzHw+
/8l8QbCtehWmacLnPy9eEMJfxWwKqOTzvzovCYnX9XcjavP5T4+XhG/6rPdT
b/L5n/dLwr6OB81GXOHzv3UvCV4pIemP+XxSe+wlobs4dsxfyed/hS8Jn5+/
Ck3uxOd/NYsIFl4x55q35fM/ZRFhVbUXM/ub8/nf+CJC7oHKDyNa8vnf6iLC
1hoxHzYZ8fnf0SJC7frzArbV5/O/giLCL7er1V0M+fzPoJigrNN/025jPv/t
Vkx4q1tx6ksdPv8dU0y40fL44ea1+Px3ZTHBNmnKrqf8eXdeSjHB9/XSA+7/
f/796N/jex0775jI7/9kJYQTrp4+3zfy+7/OJQT5DNMaJfP5/d+oEsJW70S3
o+D3f8tLCKN9XY1sBvD7v4MlhId+HzZE9uP3f/dLCCezd0yaZc/v/36XENZk
XD/pzw7t8IqQVjf8yuc+/P5vxCuCV7dK0+ze/P5vySuC5czc1ABbfv934BXh
Q2CzC8FsVd4rQud3vTYsYgdVvSLM2xL3bX5rfv/b7jVhS9TahS8U/P7X7TUh
4IXRzGbm/P530WuC/fTBdRa05P59rwlbDS2PNWFr7rwm5MZNt3/ejfu/vSa4
3RvhIbPi/talhNr4panRl/uHlRIu6XWHktmKBaWEpw99JnTkHnVCKcHC+dGF
/s7cf7OUMHzE9ugr7PTPpQRvv6wdvwZzf6sywonMnhGJg7h/SBlhyAaZyWNe
XjW3jOAY89izx2jujy8jtK98tEIzkvuvlRGirx6rP5KdV1FGKLHaM8pxHPeb
vSE8ntqz748R3O/8hvB20PP+hWO5P+gNQb5joks2W7vjDaGaU/FZxXjuv/yG
MLrlr7ZBPK4vf0NQ3c6vl8WvV9HiLeFKwqnnnvx61Y5vCesWpXZw579f6Ky3
hIWB8/aVKrk/9i3BN/GIKfHyRRffEmx+1s9JceH+928J8dlz5mawVU3fEZ7n
eo9Zxg5SvSNkKAL0ueyEgHeEeaceRNwYyv3R7wiLOhg+u8mWXXhHcP34O7iA
l1e+e0e48NlF13UI9zcigih8Z6Ll16N1IIK6963mIWydPxG+TU05dZ2tjyTC
vKeRzr348YpzRCir6b225TDuLyPCqQ3D7tm7cr9cEF7v791ilRv32wvC/l1N
t1sM535fQbgzb/HXYAfu3yII4V8evQrg7UN1WhAWtB2TEM0OeiUIyY1XDRjC
+1+C0XuCs75fghnvX3l27wl9PlTT3a7B/ZPfE0znxZ22NuD+je8Jt6vPbbXy
gPT9nubke0KDvEmnJiXz939F7wnlFX+Up9fx9391PxAG7rPf3269ZH3PDwRb
bVXxfrbC5wPBd97xVhGj+Pq3DR8I4/ufWzGXHZrxgRBWlXL4igdf//b8A2HF
7ez0OyP5+rfa5YSF1jpFJx6X25QTkh28D5a4SVZNKCesiB7aMNBVctDackJe
bV9bU3ZCejkhLPBA/xAHyXlPywnbJ6/WRrFlNT8Sei0NzV7eT7Ky+0dC6aSB
zVLYmnEfCcu2vM2JYGtXfSQow10DUgZw/5GPBOHlkD+ErX/8kdBSdTh1B1tR
XU8Iub6jYz5b3VVPKAgq3zWsP/eP1hPqJjx5ENqb+0P1BMqa0q0Rjxcd1hNW
TRxVw58tf6gnlBnKvjfj51P91RPkp+zmneDxoE4VhKXLOl1azU4YWUG41Cd5
oAc7b1kFIffBgOxe/HjZwQrCYa8uykoeV+ZXEJx+mNx+xNb8qiAcyu48LISt
tfxE+O0xbGWFPferPxGmW9+7u6EP9y/+RFhba7RhKf+9FPs/EcxTZ1wO5b+3
OvcTwev8ydY54P4fnwhLlvZe5OjJ/W0rCZ8LVOcMRnP/8EpCqennRhvGcX9I
JcG5Yc+93pO5P7GSkFln2mv/AO6/XUkQF5aPnjSL+79WErye+n5SB3O/4jOh
Wqvka3uDuH/YZ8LcgZVuB/jxyvmfCUUqs8K42dy/5zOhfMZs6x1s7Y3PhOsz
HufcYesqPxM8d5sdT5rJ/eZfCIfGHmulZCtcvhB6HVneryF/X66e84XwMyym
vB47dNcXQprFui2m/tx/9QthWMmH2mnsIv0XwsB4zfejvLy85VeC64Jb54qm
cv+gr4Sotc86ZrGDAr8SRikm9dvIj0/Y/pXQPXHdklY+3H/pK0HerrenOVtW
/pVwX17+cO4Y7m/+jRB5c+QwH7Zm4DdCTJJJzxReH9qZ3whXlV4NfvD+q9v2
jfDZbb2ZMa8/ve4bobS23Nlfzf3iG+Fj4q8hX9y5v8l3Qkjqu8GNeDx0wHdC
xpBjSda8P6dP/06Y0nmfsopdFPWdUJa7cbjVCO7P/k7IC1lifdWb+99+J1yy
sZs3IJD7TX4QVBfv6NW8fhP6/SCk3QnN/Pv/+vf7QQg2mgbDOdwf+YMQsigq
xzmC+8/+IPT+dtC+m5b7S38QwrOjwgZEc3+DKsKsJ/uW6dm6PlWEcRU7LI1i
uH9KFaFNWsP4CYncv7mKoFtfLd6frc6qIqTWaprszvNpaEkVocD6oMXGg9xf
/ychfcKwNhYp3G/7k2C+blW75tbcP+knoWx61cOrzbk/4ifh5LP2Y/YruP/E
T8KiUe03uXTg/pc/CVc7uE0cwc4z/EU4uk1zb3t37u/5izA4ueVKnQ33T/xF
eLnJ+2UmW7P+F+FVldu8VLb2+C+C2Rvr5W95vtI9+0Xo3fbHqKO8v+tr/SYU
F+W8bMLzg8L6N2HxrspnRn253+s3IWT4kRVxtty/5jehfPvwoZe5Lz3tN2HM
Qofq97tx/5N/z2fwtvRLW+6v8YfwsrPMy9KE+63+EJ4tWH95JTto7B/CnkHh
m3pX4/6wPwTj7N2u0fW4P/UPwS3p2IpRv/j6l8d/CIs7H0oc/YWvf6n2l9BM
3w5n9Xz9S5e/hN7rgtfkCMlaz7+EbTOyMmyeStat+EsoWRR/3b5Ysv7QX8KD
puOGbH0uWfHgL2Fp0M0Zgby8+s9fQssjdwelvZAc2lEmMGN05LRwdrqHTGDI
0y8HWrCLlsoE4j6serbsmWR5skxg94DxZc/uSFbdkwnk751eeDxHctBPmYCB
Y1P34cckJ7SvJmCXrKxpGSU5z72awNn3v9f5eXP/4moCLetNWbyCrUyqJnBj
dMyyypHcf7eawPejpq0MlnP/93+PDw8pbLeE+9tUF5DvmmhdYxL3u1YX8Cmt
cJ+t4f6F1QXePHvj6zKF+/dWF6hz9WbLl+O4/1Z1gZv5SY+Xg/u/VBf4uODe
UvvHfP23hYGAquuUh2kqvv57qIHA16Kun3Y1kayaZyDg3edIq0uJfP33bgOB
86fPmV5ZJznhuoHA/WqOLdaulJz3yUDgbVavujnLJMvMawiM9bfuFrJcsnJw
DYFvy78ukqkla4JrCOzqddirsYtk7c4aAtFzm76N7S9Zd6WGgPUxu6kmDSXr
P9YQ2L9D2bVKLllhWlMg8OXIlW/PSNeHq51qCkyYn3DJf6fk0Nk1BfJb7zzW
bJfk9LiaAjaTVxhahUsuyqkpMGBo45Byf8nyD//GW75uEXaUr/9uVkvgtGlI
+8cj+Ppv1BIwW+wYsK4FX/89o5aATZZ81cZ8vv45ppbADvOa1zxO8PXPuloC
cYvS19eP4OufqZbA5sdOnb6G8/XPjWsLZGes39+dx7X9awvk/Jnj67uOr3+e
VltgaOTSxLjNfP3z1toCP15UXrR+KF1/pjhfW6Do6hQD+yeS1W9qC2xu4R+8
JJev/21YR2DAVMPZXzZI16+l960jEOI+f+qJkXz979Q6Ah2zZPJmEyTLtXUE
6iyOrtV7LF//e6aOgPvFxXfDhvD1b6/rCDSruBa/Y6jkBGNDgZk725pe4/G8
3oYCZr96/HjWVrJsiqFAc6/H0aKVZOUmQ4HcuHVvQywka04ZChhB/jTWXLK2
2FBg2tPzcw4oJOvq1RVY0rFg/sjWkvW96grMeVrZYqyZZIWmrsC4tneWv7KT
rA6vK7Bwwq+MEWrJoZl1BbLWN/9lxr3pL+oK1LmV+vuqDffXqScQE3t0iTc/
Xt6jnsCFRb5el+7w9X/e9QSKSkKWVlyVHLSunsCsLPPU64/4+udj9QQWJq1s
djyfr38urCfgtvXMhPgrfP1zrfoC+28cbG5pzP3K+gIj/6y+c+gQX/89vr7A
hyeY7qiR1p92dX2BleqyCxleknVH6wtMWq/OuT9Rsr6gvsByGB/oMYPXv4GR
QJ0N3rW0s3n9dzMSWJ5eajppuuTQMUYCUePWGl1YKTl9pZHAtWnLQ7es4uvf
U4wEvNIPbPnDlj8yEqh1qionNoavf5cZCyg2vzK8FcnXv3c2FsgftbGgVTJf
/zjKWKCwJy50SuPr35cbC8y0WBspf8vXvx8yFjhBXjW2v+Hr3+8bCyTdjFni
QpI1v40FxFivV+vZ2g4NBL7te18vVHD/iAYCPe722Gv8gfuXNBC432zysPZs
xYEGAh961T8ZVc79eQ0EVtxsvrLxJ+6vaiAQPCvk7HV2eju5gFXF/rg+X7jf
TS4Q4Vga3eT/6/8XyQUeHT6+17qQ+/fJBdzKzX+tfsr9d+QCi9wvv1nCTvgm
F4i55jzOm53XuqHAiR1ucxr/3+/aUOCYYu7wrZXcv6ChgN21Dm8C+fVqEhoK
LCq+c1XDPdqbDQVmFT9yuPOO+z83FOi+8vBsX/576FuZCCwKfTAAbMUQE4HY
iqDYkArun2sioHS/teniNe6PNxH4s+jxdIvr3H/NRKBKNfRYRTb3V5gIjHRe
3e9/y80aCdzX5L/dsJT7nRsJfCtXzdzFDgpqJNDWY/rnDzO5f0cjAYeFIYuM
Z3H/5UYCY0IqrfWTuf9jIwH7u41/LeHtU9miscDX7LopX+dwv2NjAYXx896z
PvL9D7MaC9gO2eA3ka2LbSzwyHpjyTK2/mJjgc/n1vqs0PP9D+8bCyTZ1b3U
+zXf/9C0iUC9SUefOhDPf6omApaOoyfufMP3PwQ0EdB8DK26wS6KbiKwzPvq
qDFv+f6HC00Ewu72Ob2TH69610SgaOgtt+x3koMaNRWI/dNu1Ah2gkNTgQjX
imhbdp5/U4FNe1uk+fDjZVubClB4v2bqhtx/rqlAsEXTq2fk3F/WVODCq7b9
qkx4/cubCZTlab16GvH6t28msLPOgXqrjXn9+zb7dzzQRc5iK7Y0E1i0ZqPr
nDa8/k83EyhdPbVc3YLX/6tmAmEvXFd9ZacbNRfoOiy+8Ae7yK65QOKPEnej
EO6f3Fxg+w+PJVnB3L+xuUDJjJz8rDncf7K5QJecl2EdNdxf1FzgZvuRuSvZ
eXVbCLTtWOnvNo77e7UQiDuQH1hqL1np00LghEe1iG92PP9taCHQerPh6Y69
ef1ntBDQ3wlq5tWT1//zFgJbb8cPG8bW1zYVSPe0+FbK97MobEwFaGHq355s
9QRTgcEebSiJnz90ralAQvpLl3bbeP5PNxUokPUsXvL//P/UVKCrg/zPGxXP
/zVbCgzNWiPr5MTHv+4tBVxGfDL43ZyPf+NaCjy5bNIl4h7P/6taCqRd6LBg
9H2e/4+0FPiI3lc2Xeb5v6ClgK5gwtcOOr7/pbqZwIBpM/c5nuL7X7qaCQyz
rGuZyOPa0WYCf7Mtw46ydaFmArerH2yzhq0/bCZg/+i2fuVFvv/loZnAtgf7
0iov8PXvf80E/qxOqv7qGF//3slc4E2fJc5jzvH17yPNBU4ZtV3ve5Cvf19m
LrByX62NVvv5+veD5gJ9vUtyvY/w8S/fXGDtkPRHD9P4+PfLXMDxuVUs8XiC
ZSuB2ncGes/n8Tx1KwHfHvcHuqdw/5JWAvOsWrWPZiv3txKYqplzaDVbk9tK
IMm86ea2R7n/RyuBwqJG3dL4+XVtLQRMlpoWHmLrh1sIXDke6NvmMPeHWAjk
p3ot3nqI+xMtBO6++Vr7SSL337YQqDh8xv7kPu7/aiGw6MbylIPsIoVCoMp2
zPVoXl4+TCGw5cSNHuFs1XyFwESDtG5R7KA9CoGL2sj3lvz4hBsKgfWln37X
ZedVKgQiTqSPX8mWtWotcHlg9e+NVnC/S2uBKnvfb4lszZzWAqO9t3e44Mf9
u1oLlO16sfESW3e1tYCx9Y9HAf7cr28t0Grm7ERrZ+5v2UZgxtsrmkFO3D+o
jUCzrNfXTjtyf2AbAZ/7L67vH8j929sI2Ov7tN7FLrrURiAlLWfXRgX3l7cR
eDvp5N2E1tzfvK1A97+Pjrm35f6BbQUUsWE97Zpy/8y2An1nJ1sNbsL929oK
JM2qGxVgxP0X2wp0Xu8fZ1OH+0Vbgbda1Q/P2tzfpJ3Ast/NfPcZcv+AdgI0
e2oP67rcP72dQC9Th5E7eVwf1U5gfnD+9xdsRXY7gRs9nnrUMeD+t+0EOs2u
lXmihO//MmkvkFQ76lHPZ3z/V7/2Aj0HDfUtf8z3f/m1F1jvfVI7/iXf/xLZ
XmBWiN3dKrbqbHsBQ6/0LvUK+f6X0vYCNicfvyhhJzSwFLju0/NgzBO+/6WP
pcDajZo969kyX0uBUY96jNfw8srNlgJ7P9q7OD3l+1+yLAVkJ+76rObltSWW
AvdiZioi+PXp6ncQWOV/SDPjId//YttBYO0zh1rb2YpJHQS8vmd0OpXL939F
dBCo0NKB1/e4/0QHgb+Hetb99Yj7X3YQMDacnWucw/2GHQXs/E8GbGXLe3YU
CK/K/HBBx/0TOwrIFJbNvHg8aH1HgfKx4s3ka9x/vKNAyeGsnMTr3P/s3/ID
DPdVv8P9tTsJLC1LLB7GVlp3Eqj7xizEgq3x6iQQm3J+da/n3L+mk8DZBz50
r4j70zoJXL53J/D4O+5/0kkg5WLGav+v3F+js8DWUYHfn3/nfqvOAnSsrM/w
H9w/trOA38WQyK9/uT+ss0Ce7M7sZTLe/lM7C5yNK2x5hsfljzsLbJkwJLk6
W1Wti8C5KbZTo9hBXboIZKWEbd7ETvDsIjDz3MDkQHbeii7/9s/YOkFs2eEu
ArdmTb7zmLdX5YMuAt037asXV4u3/z9dBErP2S08xPuDtmNXgWabl498z9Z5
dBVo0aB0xGe2fmlXgQcBxYW5vD8pkrsKGGx74/yErb7XVUB38cfs99V5///Z
VaCG73uj1F/c376bQOvb6i4h/Pcpcu8msOuhrW0+//3ki7sJXMnKOeXM46qk
bgIGTb4MiGcH3e0mcCTvbY9qVdz/vZtAoX9EyEh2XhsrgbuumQWN+fXKhlsJ
NJ5WPfIr9yoXWgmkNeidVuv//X+vlYDrfdnqary/a29ZCVjFhdc9xMvrvlgJ
+H976hL2f79F93/z2adh97lPMbS7gJEyw2nQG17/87oLRFhGlRSxQ3d3F5iW
eLdg6wvuv95doHtqp8Pur7n/U3cB2QOTCe0ruN9cKWC2++nE9C/cP1gp4Fz9
780yfr6gYKXAi/M5e2u+5f6dSoEU6wkNOrPzrigFHqy+1rGY/94yvVKgZPjj
4d359StNrQVelv49soXXl8bJWsCl0svEgHu1s60FVl+9ZHb3//kvzlqg47Ij
v+bW4/4ca4EDP40+q9iKD9YCNybU+OPEVjezEbibOmKIvhqvf9gIdDm3KfAH
O32GjcC6wT61W/J8WRRjIzBxyiW7///ecp2NQPfXZVEvavD8TzYCx+/6u9So
yfN/4x4CS/0GjCvi8YT+PQRK9RMWJfJ43rQeAs2eXvddwM8ni+oh4HguIuUA
jyvP9xBIn35nb/3/t/83PQRSekVEL/5/+2/YU6DlvhcuCu7R9e0pYNxilnGT
//un9hRYVmE2r8b//dqeAg8Xrx12i/9e6jM9BfZ09IhaVp/7X/cUGGBwv8iR
x9ONewlEPfvxJ/z/7b93L4E/N04Xf+P5Rj6ll8DKhd7vnHm+Vm3qJZD/e/nD
BzxfB53qJZD0+2zrx+yE4l4CBc4fX+05yuu/nq3AzIQ187MO8vq3tRXAm/KV
q/fx/KexFVBvsV3Tl60JtxW4ueyWzyy+v1GbaStg2Sex/7Yonv9e2ArY7Zjx
/H/r69gJDKiwSa7L90cqetgJfOo+4NjS9bz9e9sJJGx4e3fKGt7+19kJLP7W
fVL0Ut7+j9kJ9J2+zNZ7IvcX2gkMHdTcsIDvj5bX6i3gssPUINaF+5W9Bexd
Dj16Opj7x/cWsAtTmLTuzf2rewv8PPy1d5I19x/tLTC0yqfhArbsSW+Bb9UG
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
MU9xyeOnXP8LIwjHBh0cO6yc6/+fCELoEY+ku8wFBpEE1aNqoV8quP7PjCQY
5Zr6+JWy/+ZIwtRJ7e1y2/yjIwkRBdE3t+tz+T+NJHw8MLAltx+X/89IgkbG
gzsXuD7W6Z8nLCsOfPvTl8t/+nnC+UdOGrlc3rYbzxOOHEwZPauZyz/yPMHw
z+z9DhwvnpR/nuAwNjNMj7my6TxhjE71ubfMqr2jCEXTEw/V8OctbKIITj/W
mG/meHGv9VGEQW8MKrZyPG34uShCa56M2Uxe71DwKIrwx2J6dALHF0l9jyJk
RmzpcVOT4396RhO2V6tllzC7TIomzP70vk9eW/yPdzSh7/XfM40GcPzPmWhC
6iU/p0pen1GXHU0oza6Xsud4St36aMIaFNPJbC5/7QsEp/jw5liOT/Qbf4EQ
/37DwSSOT0zyvEDoET5yTKs2+5+6QDhi75z9mlk18wLhqf3bF7Icj2lRe+Ff
+9D/uw+zl2YMIdFUYVC5hOu/ZQzhjs/6zalj+f/vEUOYbvPQR52fV1InYwh+
51/WJDrx//9eDCHX/p38emf+/1MMQX7v1C77lnD5d40l6H36oPuU/88Z42IJ
tw8PKerAz4+65bEE3RqPSGVm3WOxBNWsfQ/2r+PyT48lVGW2T/yznv0/xRIy
zc/vsPFh/y4XCRsmldSYMleaXSSUbZcqO7+N/d0vEnZOa+k+hNniyEWCfZHe
L1dmr9sXCZ2fvO23njn8w0WCuVHXkrb6V6ASR0graNmb78/+pnH/1pMFr65l
lrjFERxWRV5e3rb/yaE4gnt18oeo/ex/M46g+HPNB50L7P8ujjDrbdl+E+Y6
pUuE2RNPBRRyfJbuyEuES7+t7ipyPJbtokuEJfJ7Gofksv/+S4R8X/MPc5mT
ki8RFtuoxATw+pjKN5cIXdROHf3L8YmqHeIJkyYELdH+wP7D4wnhX1Jn+zF7
LYgnKHdIO3ae18eEB8QTtG5c93zG/4+Cq/GE26PSLQed5vpfEU94uGjY30Ef
uf7LJxA8az5OncPsMjSBMHDhtrRw5iDnBMJHpWyZo9q8/nt3AkHupdrNIgNe
/52YQMgv89/3xJDXf79MIKhd7KRdZ87rv2UuE/THf/5224zXfw++TFiQrLqk
23he/+d0maDgIBGVvH690v8y4a15q1xC2/r3hMuEDZKqN/3m8/q/0ssEqx4b
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
bDj/VcdHBHdX+VerJ3P+K5NHhBabWam95rD/wkeEUh81NQVv9t/3iLAnvEHF
agv7X3tEiE05u6HPCvZ//YgQ7nL47Ps17K+QS1hzu7hL1nr2N84ltPzeGr9q
A/vPyyV0q/F+MIyvn7EnlyBsDB4/OMv+SbmEwYtVFNKYdV/lEj5cu7svitlW
No9Qcesqjp9k/yF5hNLuzVeUt7H/nDxCqPt2/UVO7L8zj2AmNE+NtmX/y3mE
S6+PH/BktniRR9h9T2dE8Xj2b59POLqma9hzLr9wo3xC9Y+GPR9Hs79j/r/5
lWsXMjXYf0c+YUnLqBk/dNj/Uj6hQnO4a0sf9n+eT6hqSDMOVGH/v/mE7wcK
Y+eYs3//x4RauYnNOly+dbMeE8aHL7HTZ9bd9phQ8fdwwRSuD7axjwn9etyz
bubjfoWPCU0W07t9aSv/P48JLw6vb+ozn/0NnhACn/UxVGFWnfmEIO28+hct
ZP/NTwjhBpUqofPYP/oJYejLbUo1zOFPnxBeFa8dOHYx+//8d/xg2bLxzFJ9
nhKG/mj/LIpZMv0p4auCm3lwCPtvfEow3BeZrcEcFPmUEDAxxiP1OPvnPyVk
notbFXWa/ZueElLzk/ZXnmP/3gUE9WfHJ8lFsr9NAcFroiW9imL/9QWEs8MO
NrVv2//7XAEh2WRkmd9V9n9UQFCYXNt39BX2/15AMHwjVbaEj1v0fEZwjXvj
XcnHvSY9IyxoOCr1+x77ez8jyI83sbOpYP8zzwhlWrv0571j/5xnhByHFked
T+xf/4ywu9V4S+hn9tcuJAzod6lLh2r2H19IiH5/qWnRR/b3LCQ82RxkNIjP
rztVSDjju/fi+Cr2zywkdM6uH6n6gf1rCwkrAld96sG/x0+ziDDY9dqOl7fZ
37KIsErpyLLUS+zvUUQ43PlWRHA8+58sIiQ210fcjGX/e0WE4Jidu1by/fWi
IkLKiCdWNXw/w7sWE4xPbNyenMT+44oJO4z3qPTn60utKCa0+BXuVwpn/2PF
hLNK3e8Y8v/TJb2YoH7oy7f9p9j/UzEh16HfCtlA9u/ynPDj662LYYfY3+w5
QU8r/ZLufvZ3f05oHi9z/HYA+x95Tmi6UTK95yb2v/2coHV7XmMqc9KH54Qd
amfMLu9if5USQt+F6DiWP69qWkJwv/leQ4ePW7iVEMLrNPO68fPI61AJ4fz0
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
rxErBC7/kdW5cp3z/7msEHhwyKJnHefrKwhcITCwMLtjMbNU8gqBjpn3f2zn
60nerBCwd/27XYW/z0VxpYD2g5eV6pyfMGjYSgFzyaNtxdHsP3+lQIB75s9D
bfn/9q4UOGO6+R74erpXVwq8VTDdsJ/z59uWrxRw9ak4MILzzfvJefzH0pnH
Q9WFcVxCEVGklIQW7U0L2psfUlonaVGK0l6kRakUEtGi0cKbpbSHFlkqRU17
WhBaSBFJ8ZwoRXvvp3n8+f3cO3PnO8+55957nuecS7Bxd3kam8n+khWEu+NM
rVOusv+sFYQZNdHFRrw+u17QCkJpWu1EI15PUnp+BcEqzCTRYBH7F64gFPqn
1Q9Zyf5NPQiV5yX1GzzYv48H4dmN+TlvH7P/TA/CzolP6iOZJVs9CJdr7aRn
HrL/GQ/CUPdKFWPeLn/mQRiwbHzS4VL2V/EklB1a0evhS/bv6UnYb3DSzOMZ
+0/zJPyON9eIeM7+fp6EoONFhesL2T/ekxDf13WAE3NSviehZ4qP3hfev/T3
v+2DblwPZNbrvvJf/rBzb80X7O+4kpB79dFg1RL2911J0L4xqnOfV+x/ciWB
DBacdC9i/9yVhJyCucV5vL/Kz5UEo9rA8SXl7N/Vi2C/4teJC8xuk70IhQvq
Wn9hX/kGL4L1x0V2e7heR3HMi3D37v4lF7vx+f/Yi1CxcULdvrZ8/n/zIqwO
moFdvD6jzHwVwWDWt0d9Dfn8n7CKcOf5U3V/7j+T1q0iaGWZ9DlhwOd/3CpC
YEnrW+e4v9J7+I/v3NTcxv2J9OsqguPzFG9r7m+8Oq0mzG034+RqIz7/HVYT
/A28Jp3l4+euWU1waRh9+zOzyqHVhFORHXrZm3N/d381Yd2ZXa/Ceb1It8+r
CR/Xjh8yn99XITdeQ5jb4fySJ8wK+zWEibZzjpdxPVit1xrCQ7+71aqN1/fo
NYQfCq3zzRey/501hL1fUx6EerN/zRpCM/3eb0YGs7/RWsJ/tWWnu3G9YKnt
WsKr9vryiXx/que5lpAw5/aKIL6/k/63ljD54b1pzoXsf3MtoXrOg/M6vF5Z
HK0ltHl4vVps5vE1Q29Ci7Hd/8vx4/t3eBO2R3/rHsj1IJLl3oT0b+ElTrx+
ltsBb8LYPZumdC3n+/fr3oT4V0+mD6/m+/cP3oTUyAOxfRvff66/jlBQ1Doy
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
E9YajLuwYQPnY2LkhORrfrYGQZyPuSsn9I/Y9MEukv1r5YTQWx/3GcWwf/tw
QkjCufraxvlsduGEk4fOBO3i7XorwwkZFgMcHXn+mvRgOKHdopgPMxLZ/1Y4
ofsFp2ZfE9hfhBOKsl7PdYpn/7Z7CZ/q9EMK0tjfZi8hxrtkx9KL7L9iL6Fw
6JvYal5/0S1iL0HaXeLeifeXK/YSSrW8EXiZ/av2ElZeDHZfkc7+BvsIZdVd
2i9mNh21jzDV5eJ8t9vsv3QfIfLBrTrvu+y/bx/ByqX5Gvd77J+5jxBzY/yL
OObSyn2E1iurRfAD9m+9n3Dh6GKXslz2H76fcEq/KqBJFfsv2k/Y2qnZGq0P
7C/fT+g7VHv/UebcK/sJb47s2qb5g/0r9hMUp9cfu/+d/XUPEPocaxe6dzjP
ZxxygDB8hqeHrZTnM7ofIEzee/LqMJ7vqNh9gNCqW77oNIjnM146QJg/tbxl
PbNp2b/vu5Z+acxIns+oHUHYnpzXKtiK5zNaRRAOTyh5eEzC8xndIgitFOc3
WzCX7oggqK3JW13an+dzpkUQNq3/sd+CWVoSQagbPH1m0WCez6kZSSjzXNlp
0hCezzkwknDtV+2sMdY8n3NOJCG2ySu9rfx7VEIiCTknzF5ljeL5nMmRhMl2
Zv0C2NetOJJw12d/mI4d+2v8R+g9JK943ET2l/xHOGb327gvc+2s/whdKozq
3Cexf9B/hLSRGlaPmWXn/yMEmhzrAxn7F/5H+OQTWejD80lL+xwkHPoTNPX9
LPadeZBweO849+jZ7Lv1IMEyLD37Cc8v9TpzkOD4OqLpk6ns++wg4cvuqECr
meyrEkXQPprRuzOzSq8owpGEuRHDmCXToggrlh9f68rHc/OLIvTy9Vuoydvl
8VEEyROTyFY8H7b2dxRh9ReyCZ3Pft2jCQ2BJqfjF7CfYzRhdceX5xrc2c83
mtCkh8LOiefPJp2MJhScqLngNp59c6MJybZeCLFn35/RhI6nS/rPGM2+XWMI
TY50eb/Kk30nxxCKlo88kLeSfTfEEL7ebnXB3ot9j8UQJqeEza1fy77ZMYQZ
qhf1TzBLvsUQar4lHv67hn3NYwn9z5t29d3AvhNiCVsmt8l94sfxXRdLmJ45
xNVmM/vHxRKcdmnVj+D5xKYPYwnb8hxXvvBl/6+xhD+l7RXjvNm/0yFC5e7N
J7OYkxwOEa4pbtbdDWP/NYcIk9qpbnGMYP9DhwgYp3Mog7dL7x8irP7kdf3h
Pvb/fIiQUdE/U/M0+xsfJgRg3PZpzLn2hwnu6oYtDjOrrDpMyFZ3/JHDLIk+
TDD40PPY3ST2v3OYkPfKZE8/ZnnNYcL5AvnFFRfY3yiO0FT/+uy2z9nfNo5g
eyDwoE4B+3vGEd6+VSlqyyz7L47g327PXldm/5tx/+qlh/jnP2N/iiP8/DTD
2vAL+xseIVxq/pfimfVwhGC06TrpMsddP0KINjxyZqomz0f/cITQTS30YoU2
z0c3OErYl3ZjymF1no8+8ihhwcGKK1uY3ZYcJSztOLLlWUOej773KOGP6Wp5
TFuej55xlLCubRt7bebad0cJlxr8wjyZTVsdI3RuSAyUteP5+MOOEVrYZI1L
6cjz0RceIyh0C4sTu/N8/D3HCNXHXHXu8vz40vRjhBs5fZoOZdZ7e4xQrBl6
5agRz8dveZzwN7vmxQtTno8/+Djh7cX9Szp05vn4848Tvsb6FY3vx/67jhNC
VAv6rOb5/SqXjhOcziRKvpuz/5vjhFF9rF9ZmbF/ixOEXqVTe1cyyy1PEH4+
ESVdmBWuJwhLMsYMi7Bg/9AThC6UOGkG+5imniCYHdGGbQ/2f32C8GTg8HUz
ebt/85OEc56+S0+1Z/8BJwkV3yVPCvj/KnU5STi0TntLCz6e3vaThHk7Bx7N
4vUApBdOEsyC+v08bsL+L08SaKfq8zz2i1M/RfiwZpV8Pf++3H6nCJR7/uBz
ZpVZpwjHo4/7H2KWbDtFMOz5xndHV/Z9cYpQ2xC43pzXC1aonibMDO1w5OMA
9u19mhDcP7fHJmbTGacJerpl7XcwywJOEx5HfpVs789+T08TRlQ3O924/kLp
39OE2OyY/v2Y9XrGE9bvcfd8PJL9nOIJo+JtM27PZb8t8YS2tp3v6vL/FXc6
nlDXacqlcG4fuXnxhCXaPebcaIzv73jCkUsUeKUX+1kkECZmDBhziNuf25QE
wuVVX06Mb1xvYVMCIXGGTVw6twfFiYR//UOiStQi9s1JIEw4WDA6cSH7/kgg
FL6x+aXB22VdEgk/rkfuN/Xg+E5KJLw8a/WiGa9XkeSTSBiktth6jDf7H00k
JCz7oH/Ai/0fJxKmmXtfc1nF/g2JhKjoMO/Za9jf7Axh8LEm/uM3s//4M4R4
4+K973l95VzvM4QNCYHaLXzZP+4Mofnx85rmvL/kwZl/9/sm12v5+92+nCG0
C7OxTZ7I/iZnCQ9nyW88YFaMPUs4vDXkr7cD+68+S5hjpTHR3Yn9Y88S1NKt
JJGT2P/eWcKJdp28PWTs/+ksIbzyuY8Wr4+R1OEcAVNHO1zl7aWjzxHuLV43
bAQfT8/rHKEqy3nqTLB/1DnCxqat/A5MZ//b5whqm7PueDDHfTxHsJhqEmQw
jf3bnSe0mVbptGcM+9ueJ6Q0+KVlMks8zhP2nLf4u8qe/SPPE7ruGmY2mM83
RfV5QqcdPTtVNvZnbZIIvlLb5Tnc35hKkwjFsz/G7tVh32VJhFFW06wCsri/
3p9EuPV41Kwhj7i/vpZEGGmfMqZ/NvfX75MIE9t8qbC5w/21/gWC0w7rqd8a
709GXCC8i9TdeJiv516LLxC6znMKDOHreVz4BUL1nVHpPk35enX1AiEpdUJo
eRHfj767QHh2tsXlaS/4/ntoMuFRkHb6zUK+/16QTNCouqJp/pzvv8OSCXlP
TFt1/sP335eT/9Vn63+Zr8bXp/Jkgl3JlUmafDyZTgqhdXH86TBV9rVOIbTM
m5fxSYd956UQdgfZyR/95fvvnSmE5yt1D9/l+2W9iykEVY1VLXyJ779LUwiu
pmueRxTz/bdWKsFWFnB57RW+/x6USqhpVbiw2SW+/56bSjjeYNZuEz+fqISm
EoKcb/ZuOM333ymphFvpCWtwkv1fpRIySgPCW1xn/2ZphIO5z48a3mT//mmE
RGfbvEpeH752dhphgpb+/RLe3zQ4jdBSvaWdJh9flpRGeLmo1UC5Lz9/FKUR
rMduDM6ey88fahcJnq2v+4S6sX/fi4TR3/Ojrzuxv/NFwuf8qS7W09g/8CIh
qK7btYap7H/2IkH+UXN3d15/P7fJJcLpNa/k1fz8qNL7EuHqpeH6vaez7/RL
BJv3n0qr+Pvc/C8R1H/O1yb+PnnCJcLDAPcy1/HsW3CJcHPFnZ4HJ7Lvn0uE
k3FBLTV4fRHTHpcJY1enmBzj8VfZ1MuEic37DzBufN7efJkQ5XEwfkHj8/ap
y4SV+7NM7fh9CKVPLhMWPvVZOILr9fR+XSb8GN15oDG/j0DaLZ0Q2rFXbAm/
/8FLlk6IqJ2krp3H4w0b0wkzDcqjNXh+S+7xdMIvuxbVnjw/RiUnnRDQw7XJ
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
FNhdyZKZnwipqyMOJJgo2W3rJ4JPw+v2t02VLD/zieBQs3ey5adYpf+zT4Rp
79Skv0jJtSqfCYFHsif8+Kxk016fCZetxn75Xqlk2bTPhHcrN/Yxfq5kf79/
2/V/2LkWKjkp/jPhdweVxbFlSi7N/0x4sfmncdhHJUu71xGcO7y/eLUt+zrW
ESpjfn359Ue5Pc63jtBC9+amG3y83JN1hGFnU2eHVytZ5UkdoZXlXNPCXCVL
ftYRwmLHp/q+UbJb1y+EYYZjW6wsUrJ88hfCN7thqf/x71Fs+ELIj8gKeHKR
fY99Ififntdf3419s78QpBF73ge6su+3L4TEX2tMRvN2f/OvhMjZZx7eH8C+
E74SXiwrX1miw77rvhK8rMY0pHdUst6Rr4Qh+kYNTVqx/8OvBCefAvd6FSV7
ff1KWBhvu2NebYzSv1M9YcCFd17FNUrOdagndCjxs9RgVllbT9A+ZaT64qOS
JYfqCabdA7eFVynZ7X49YcivqkEDzylZ/rmeYFl95H0Us8K4gfDwgbGTcQn7
2zcQkgOrLpT04/a+qoEwo1mWU81mbu/RDYQbJ2fbDd/N7f1OA+GceVuX6Te4
vdc0EE6323U99SG3d6NvhGcfm7rEMevZffu3foKRvyqz13/fCGp9nZu2quD2
ffMb4ei2EQ5/s7l90zfCco31ixcXcPtu+53Qv61FhxW3uX3jO2GgbsPMlsxu
y78Tjr5Q2ZR1n9v3ge8EnW729Wp8/iqufye4+n89p3WNz+8P3wm1ewPzdJlN
DX4QanaanY5llo38QZgxt/CWTzL7LvlBUP3+2KPgAvvu/UHol/niwS3m0owf
hGfNB+mO4f31Kn8QWmUlpRQl8fnd6idBunLDucPMXsN+ErLH5Y1xD2f/hT8J
q7ebXE5kzt3zkzD64tW0JGaVKz8J8+p/a7Q9yf5vfxIuiNH7J/Lx3Fr+IhiO
9yHrSPYf/Iswc9zNsau5f1DM/0XIPL5xzaIw9t/1i7Cq3ZmMm8Hsf+kX4VD4
ogK7bez/5hfhx/vVrk8a493iN8Gs55uFk3ayv+VvQnlm7w0HuP8qdf1NmFs8
56Uzf15vx2/CTvedSQmb2D/1N+HBk7iyAb7s//o3oU6r21YNR/Zv/odg2LGT
mc9U9h/wh7B9t0FsDbPKnD+EhEkGtzPPsv/2P4RhQaFr05ndLvwhdElJMOx0
hv1f/iFMeWV2ajP3zwr1v4RmI7J7B0azf7+/hF33ZNOmpLL/rL+EJhMPrnBh
lm37S4j233zFjdn/3F/CpbqaL80usf+Lv4R2R04sk6axv6qKwOC9Ldc2iWH/
PioCC1+uLLvJ/790horAvIYHH7oksH+AikAX02tDroSwf6KKwLJBG7s12LL/
UxUBzd6OwQEz2F+liUCF1+cnS/n/kvRsIhA7/qLUlf8fN6cmAnFuoScSxrL/
liYCrWvc47Mnsf/pJgJ9ehaNHuvA/nlNBKJSi16Nl7L/7yYC/cbW5ORbs7+F
qsDuB6Wyip7sP0VVoIVhjsK0A/ueUBUYr/V77WAN9s1VFXjR5fu8h8zSH6oC
c2NXbW9mxL5dmgqkNUx9atOSfSc1Fbh+LTlAtOLf39BUoGX996CCAfx7x6sJ
3Nkw+dVQ3r/WW03gXK8e9p7vuH+OUxMwfN+5m37j9eiBmsAeP5OSudyf+X9R
ExjeXSQWqnO8TNQFWvzuuMJcm3//WHWBxUZHP42r5f55jbqAh9r9iKxn3D/H
qgsUqfZMnF/A/fM9dYF1d9W7OZfz9emTukD1pNBz/R/w9amDhkDMhnbaebf5
+mSvIVCj7X116Q2+PnlpCKjdveZfKOP+OUpDQGt0buvvNtw/39YQWBfef8OP
39FK/48aAi8Gqies+6Xk2nbNBBY4p0zf90nJprbNBEy+VNhXhShZ5tFMoNmi
ve/StyvZP7KZwJEm3htPfldy0o1mAoF1iSGXnym5tLqZwMlmQ80KM5WsZ9hc
QC/u6qOwm0qWSpsL3AvI37vgrJK9ljUX6JBU8kA/Wclx+5sLXLPeEKadpuTc
a80FPh7SjzpwRskqH5oLmAzyWmF0TMkSfU2Bay5uGnZyJbuN0BT4bma5um6V
kuWLNQX0i7rNdfFi/3BNgdWnf2uPWM3+VzUFCq6sTBrH+5u+0xTQODX92ael
7K+nJeCYqvekKbP/UC0B7YiDKQums/8CLYGycdH2j+3ZP0xL4GtWxKC8Ieyf
riUwcuNSl/vM0nItgalLx223687+Oi0Ehs70XJzdif2tWwh4WuZM/WDI/vNa
CKzq3P3R0bbsv6uFwI2x9p+e8v6Siy0Ebp3tXt2at7uVthAwexf12kyL/bW0
BVI+rzlcwawYpC2g1v3V2VSKUvrP1RYYU+eW6p6nZNNQbQE/14SW0x8pWZai
LfDqsFFlj5tK9n+lLbCu2/e2nZmTmukIvFkhHVZ8Ucml/XUErq700+yQpGQ9
Fx2BPlUTI8wPKVka/I9jTxWv3a9kryQdAZ/NjiUhA5QcV6QjkDS086kpzLlq
LQV+Kx5MfNNfySr9Wgr0svCqNu+nZIlzSwFZjrtauETJboEtBYbnxIrnfZUs
P9tS4Gm3Kx2f91Ky4nlLgZtVL3s+YK5toiswacPge0/bsn9vXYETjh103fTZ
f7quQFfna/UBzP7+ugKJ0b2fzOjI/gm6AoqmG2I/abN/ga6As/Hot01/HFT6
/9UVeFqha1FYqWRpDz2BnSE+b6Vvlew1VU9gzqQHq6e/UXLcZj2BESujvKtf
KDn3lJ5AUtfoTQMLlaySpyfgMPVXK0mRkiW/9AS+1bXfq1qtZLdurQTklq8q
ZTbsL2sl4OdyoWmFHftvbCXQxqbYXqdCuX/t8VYCPe6m7ivm45vmtBKwapL8
5lepkmXfWwncz7N32s2/179za4E7Ohk9z79TctLE1gIbTI2me/L3la5vLRDZ
JnLj3nL2P9paYPykew2puez/qLVA9Y2WQ/tcY//61gI/NDaP+d6E42+qLzA3
ZmT/ZF2O/zh9Acvk78lddTj+3voCfx0k6rEtOf6H/+0/zwJPmnP8s/QFTo+4
sVSuyv51+gIrnv4ca/JdeTxFRwOB7cPDf5vUsv8YA4GiZUkVG96z/2oDgW36
w352Zh9ZjIFASvG5+YMesP9dA4GyW6NOOtxn/1oDgek6yI/oxv7t2wioxHX8
mt+P/Ue3EfDQ7nf1KNh/ZRsBzYlzB50byv4H2wjM6qEvzfv1n9L/VhuB+4Y6
9VU1Ss4VbQTaKMonhwklq7QzFJhtd8g78q2SJTaGAj5Dgodf+ahktxWGAmO2
9FVt/07J8ghDgR5F9qZHbilZoTAU+KM7wVf7gZJrqwwFduUcG/PwvpJN27QV
2O5lFp1wR8myUW0FbH9iUf1NJfsvbSvwQmfy4gyFkpP2tRUYK/Hsevi6kksz
2wqYdI6MtmSWtm4noDHp1oVC/n6v4e0EtisG9GmRxb6L2gnMHWQY0/8e+8rb
Cbjk15hveci+V9sJOC2caubxhH0r2gkMu9uv3boc9tU1Erjt4tnr+G32HWIk
kPcof+aau+zrbiRQ+L77Own71O42Elj7OLVX6xT2vWwkEHe0uO5cOvuWGQm0
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
CaCWT9phjjjg/z88tIPK
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJws3HlcDH8cx/ElVygrd0rryp0tFBH7VhJSK3IlLVLkqJy5k7scm0o5IolQ
FIVcWbnPkityVBQ+X7LJmev3MJ/fXx7Px3d27auZ+c7s7sy2nhzoMbW6TCYr
ayiT/ftXJpMFXV9BiJA1Gd8q4PgAmUyW8GkFYZ3Tue/tJkvOMwslDFTd9Zo0
XrJscChhbNOmt995SlYGhxJqZFJ9wdbsDCU8GZocaTFGsvZKKGH4wKsmZmzd
x1DCbWV40JN+kvUtVhKGv+hzz9dBssJpJcElJLbdcLZ69krC9xtBTjPYoXEr
Cblq4+7b2ek5Kwman3tNxtpLLnq/kvAnNtLL4tOxf5Y3CyOYj3KdtrhCsgph
hF8FEzZe0ksOmhFGOGDzruwBOyEmjLCoU8T2CSQ570IYoeGIzPMZpZJlFEb4
Is64xLyUrGy8iuBjPH/eziLJmv6rCK2mlB+yYmunrSLMTi/t3JCt27qKsGVc
zvkzryTrz60irPAt/ORXLFnxZhXh+1n97cVXJKsbriZc6Hhiz43LkkP7ribM
G+K5+d1ByelTVxP2Dfc5PXKX5KItqwnL126YE7ed+8+sJhSYW37fzVa9Xk0Y
bPb87Ep2kPEawmSPFjNjo7i/9xpCVu9rRoM2cf/kNYS17/Y5p0Zw/6Y1hBtt
f+fHreH+U2sIvYxqy6as4P7iNQTv6K/P5xxKk/rrrSW0mJjkEs7W9VpLcNxW
9LXbbsl6n7UEc8uKOfWjJSvC1xIeWQcU+1cclfoz1xJS+rb2mEOSQ1+sJWw2
jX8zsFxyep11hHGzZ50d9Upykc06wp6QT8vubUmV+r3XEcLujrPxCpOsWreO
sO/SoYItaslBx9YRNnQyrHN5kOSEwnWEVkPUWVbOkvNqrifkpIbW6dBPsky5
nnA/zdPH2kaycvx6QtvszsOHWkrWrF5PcKyo+/Po5RSp/+h6QvOt82cPvyRZ
V7CesM7H6eai05L11TcQWs88+HBIpmRFtw2EQclfGzzfL1k9ZgPhjUF9bQE7
dOUGwpQVi9Lz2OkpGwgzSyPrTWEXPdxAKI49sn0hWy4LJ5TU03iZTTks9XcO
J6hjnEs3+UkOGhVOmGgR66r5ekjqXx5OyA62iFnCzjsYTjjarnzo1OWSZffD
CavMAw9oF0tW/g4nBMX8nBq8ULKmQwQhfu6kKXNnStaOiCAkPephfLaTZN2S
CMJfF5urzxSS9fsjCC+Dt0ZOf3hQ6s+LINQOdF3a9JRkdVUEYV6E3PwlO7Td
RkJ5xuDv/mmS0902EkZaW9fqelByUchGwqmUSeUVByTL920k9PFR2UW6Slbd
2UgoDKn4U6uf5KBvGwlVt0s2GtSQnNB6E2HYz+TstN/JUv+wTYSSlYWHZv+S
LFuwiRB8/Mjm7jyuTNhE0G4fd72SxzU3NxEmb/Loa1IgWft5EyFs6dmJnmxd
q80EzxZTV8jyJOtdNhOujm9yY+ItyYq5/7w0Pn7ETcnq+M2E+3ZB0RbnJYde
20xYXqAfc+us5PSKzYQtpq+udjotuajlFoL16A3jJ7LlzlsICV5O3VexVUFb
CNNsPyauOSY5aMcWwvJxYw8UsxMubyH4ln+wnh/J/eVbCIE2AeXenbi/hZaQ
vCx689k23O+oJZx2OuvZsTn3z9ISbpj7HnvTjPtjtYT8Jh8MXjfh/otawqXV
db2/N+Z+oSX0T/7dMYytaBpJ6PCi3aFfjbhfFUn4W7yh5f8ODYgkfNphbfGm
PvdHRxLGTD/gEPvjgNSfHUkI9D1V0+OlZPm7SEKTVwce/sqRrGq0lfCruI15
g0uSgxy2Emp96rF4xinJCf5bCdsKtnW8cURyXuRWwr7wDS4drSXLzm0lfHRv
NCDRQLKybCth/Ua/6UZX90v98ihCy9MjGte8JFlrH0XwmmXd+FqMZJ1vFCHj
ifvxrp6S9ZujCK7n17zXjpSsOB1FsKoIVE1zkKx+FUVo5fOj4o9KcqhRNMFt
+eyRRbaS0+2iCZszDsze9iVJ6p8UTWiBk9rz1aRx+cZowuHw8na9wqRx1clo
Qq0JMz51ri05qCia4JAxoUNpxj6pv24M4bRuzpO1myXn9YwhTH9X+DU3WrLM
J4bQ23/J6J9s5YYYwiODik6qTZI1GTEEzZ9wh+1s7fMYwqqbsVNM10rW1d5G
sD7RzKF+J8l6622Er6Vlzba3k6yYsI2wPc07pM/aRKl/7TZCLblZc4ehkkPT
txFMv3b6qBslOf3pNoLS4IHq6yDJRTViCce+NbW53kyyvHssYfr7raf/1pSs
GhdLGH8+w8mwluSgVbGEiLEHum37tFfqPxJL6L+ze6PqRZLzHscSEjY8Krhf
KllWPY4w+l63mTvfSVZ2jSP8Xr4815utGR1HmDD3VlGQkKwNjSPUPKBzX8rW
HY4jVFnkbJS9kqx/EEdI/JDQyrREsuJvHKFDsrnrydrc32k7QVFjbHDxbGk8
dOR2wouzXndDfCWnL9tOeDwjetxQb8lFydsJZ8dnet4cK1mev53w/uhMn3uO
klW/thNaNt3TYbpKcpDlDkI9w2afrdgJ6h2EgbLCjT/6cf/iHYSkxNGr7vG4
bP8Owo6+gxw+PkyQ+nN3EDaGu15re0Wy5scOwmTTB+XhVyVr2+4k1I76s96c
rRu+k6Bbpb1e/alk/cKdhJherusvFkpWJO4kBLo+nd/zuWT17Z2EPvHj48Ly
JId+3UnY6WA6tCEvn67YRVhw9slRRUPuH7qL8LtXk6o79bh//i5Cw16/Tyex
VXt2EQru/LrRpjH339hFeKDqfeOTOfdX7iIsKW/XJZ+dZx5PuBOz9619d+53
iSfkd19jvkfN639OPOHBd83GpuN4/e+KJ7Tt4XA3ewiv/6vxhFmXG4UOYev0
8YT61x5VDnXh9W+6m7C52W2E8vpRDNpNOIFqhZYektWBuwl9dv7p5X2X1//2
3YQztw+2N8vm9X9pN8Fvvpl9yk/u/7CboN/ScaqBjLf/5nsINWR1rymsePsf
uIcQ5h6yeLkbb/8z9xDeXhrsEaCRnLBtD+FT96FbBoyWnKfbQxh05X6B0TrJ
MrGH0CR1XNkotrJJAiHmoGv7jmzNgARCWkC10oerJWunJxCaGWxY9yRcsi4q
gfDAZ4dJVbJk/fkEwukmO/al5ktWvE0gHMssOXHPUpoP1CZ7CRvuj6nWvL3k
0H57CTnJTTxTukpO99tLaIltOotukou0ewkHdW0Gh0VJlp/dSzhSFlN7CM9v
qtK9hIsrehQ/n8bzX4NEwvx16Yezl/H83yeRUP9MQNMfgXz+NyWR0P98wAIP
9RGpf3MiYUiH+Fp/L0hWZiUSPI7vWDxFJ1lTkkhwLpt6pGy4dD6qrb+PYHbC
f/tJP8k6232E30/eNn3an89/NfsIf1K22ATu4/PfiH0EX48yx9tHJKtP7CMU
vIpx1GdJDn25j/C80mVGyCXJ6YZJhJPu55eW5Ugu6pFEyO827PvqQsnyiUmE
U1VbzJeXSlatTyJ4G2SWN/ooOeh4EqFintPB9p8lJzxLIly3GGV85I/kvFr7
/+0PLU/urZYu9VvvJ+T10qy1M5Cs9NpPSLgw61RGDcmaNfsJ48rWOSXYSdam
7Scsddq264qTZN2T/YR6W0oXVhshWW9wgLAtrIfhoWmSFVYHCBe+Rg1ymy5Z
PfYAYaND1KOwGZJDww4Q7K5+caw5S3J66gHCK8fGZoPZRY8OECb08xMr2PJq
yQTXvdVG/g6UrOqSTAiOS7nnzw7yTCakL/HoGMVOWJFMMBn7JbMnO+9Q8r/z
dbMp6sXc/yCZcHL0orAhbOWfZIJH8L647Uu4v+NBQuDz59cbLeV+j4OE9LWb
st/yuG7pQcIU488jS3lcf+Ag4VSNLRMfshX3DhK6tY+0mM9W/zxImHzug9My
dmj7QwTZcdepzsu43/0Qoce23foFy7l/0SHC2NPHtcvZ8qRDhJ7KWXfasFV3
DxFa7p0xbtcK7v9+iFB7iqlbGjuhzWFCVpXVqOWh3O96mNCx9djLo8O4f+Fh
QmTquLiRbOXewwTfAMPvI9iaW4cJUadvVw9Zy/1fDhPuNDhV2p+ts0ghJOY5
vZmxjvuHpBC+OU61nMVWzEshjHYNFnXWc//uFELAyljH05Hcfz2FUJo5ypjY
6Z9SCL4R1/d/j+d+s1RC++zCyJ9s+eBUgqWRqY35bu4PTiW8udbHfg07aGcq
wbmg0YHTCdx/JZWwNW7eHftE7v+YSvjl/NFqAFtmeoTgOzHAx3oH9zsdIRjM
1AY1ZmtmHyHMcraVTd3O/XFHCLtGHKllH8f9OUcI9W2umfjEcP/7I4QnSc3T
O7AVzY4Seoe8XPeNrcZRwmvXxc4p7NAZRwntKqcml0Vzf8xRwog85U4tjxdd
OEowz6yM8uFxOR0lPPDdN28Zj6sapxE0U5eGzOS/T1D/NMJD9UDcZydMSyNc
aDl9yx123tY0wucvSU227uP+82mE99dndF+TxP1v0ghNCiM9S7K5v2E6obv5
hdDy89zfN52gXdlj6Zm33D81nbA+96DvdrZ+SzphfnDylINfuf9MOqHiXuHf
91+4/3U6oVvyqik72KHGxwgfdne6PbY+f/7R+xgho78mpy27aPIxQrd3kxPa
GPHnH5uOEdrWehI03JA//zh1jNCw0e0Jjery5x/Fxwh3BwzwmFWPP/+od5xw
9p6P43F+vrxexwkWdV/vbWXAn39ojhOs0mf07cXPpww/Tqi1qdsibS3+/CPz
OOHvr+d78mry5z8vjhPq+dnscuTH6+pkECaauDR0qs6f/9hkEO4Y5Rjf+Mv9
3hmECLXSP5OtXpdBsN77VFXGDj2WQah7vGL8T3Z6YQahwu5V4CsZ99fMJJQ2
aFW+mP8/uTKTYNrC+t3/Vo3PJPhuCwnexA5anUnwHPQs6Sa/noSjmYTJttHP
L7LzCjIJP1t+mfGULTM4Qcg29ym0+cbrv9sJwp6YBZPsef1pxpwgvNSKum8/
8/pfeYJwvMtlXQ5bl3KCMC/JYhyx9Q9PEJydkmRj/1//spOEhH7NA9LY6s4n
CRtqmDgdYoeOOkmodmmd5RfeHtKXnyRM2x7Zpw6PFx08SVj92GrDWbb8/knC
OB3dTOXlVb9PEmS2XQYMZgd1OEW4Nl7V2rmCt/8RpwhJXet4hel5+19yitBh
5iunw7y9yg6cImxb4hGb/5L7804RAs7ELG/SmfurThEW9ajetWYBf/7VLotw
PyvMqpStc8sizN2wc/rpx3z8D8ki7Hy+v9tLtmJfFuFTx7clTXh59Z0sQs9v
RxOXs0O/ZRGu6UcOHc7H9/TWpwlrDaMy+vLji4adJhT3KDHNfMTH/wWnCeVr
IlrufMrH/4TThK9jMhaHsYNuniY0VtewjM/n4//n04S8vbtXNMzj43+rM4RN
EepFC3Mly4acIWzXdPIZwa9HOfcMoX2LK3+38v+niT9DGJAmL2vFr0d77Qxh
jM+5mB7/91ecIfQ7J3+iesL9Lc8S6iVNM2vLr0fhfJYwYPSM+EZsddBZQuyv
1lZ5z7l/x1lC6u73Z8JfcP/ls4ThCaU9I9lF5WcJes+Gs3yLub/FOcLxpRMs
6rNVjucIYao8/19F3D/rHMGtdtLDSnZC7DlCiWZfVV1ePu/iOYL77JYj5r3i
/vfnCL0O97RoWsL9Tc8TVr6fsOARL69RnSfEfTqbEMLWBpwnRFXEnm3Mz6+L
Pk/QGrUeZcTWZ58ndKl9+vizl9z/7jxhQ9c6poJ71I2yCY+vxVsGPuN+h2yC
nZHFuH3sdP9swogmQebJ7KLIbEJ4wafLVWz5uWxCs0altJutKssmWDqZdsrt
ytu//ALh+4abNz/35+3f/gIhpNX7IRUDePv3/eetFp2O87hsywXC1b/FX9aw
lacvEPaqb6h6sjWvLhAOdLq1aFdv3v+NdIR8Q4s9U9k6Ox3hmfLBxrV8fqif
pCPY3TtuN4Ct2Kgj+PoYtdPZ8v5/Ukdo99ttlAePhxbpCPNDmi3zZ6fXvUio
a9zKoIc97/89LxLmus8Yu7gf7/8+Fwl5V1c6DeDXp9pwkZBYfq27xUDuz7hI
OHJudMO7Q7j/+UXC9NdXWoxj59XOITQordGxjZr7bXIIrU8GjpzH56/KCTmE
tIoQQ9sx3L82h3C9ZmfUmcD96TmE2G/Pg+wncv/THELL6OivtXh5fY1LhG1d
zjRbOJb7u18ijDMMOVo8mvvHXSKILo7LPXg8dNUlwpfHOpP48dx/5BKhMP7V
ZKUX9z++RPie4d58PFte/TJhraXLEmteXtX1MmFNrW0Vluyg0ZcJt/U/vVM0
3B96mfB5jK3npqncf/gyIX9B9MCsmdz/8DJh++be9VuHcP/fy4Q7E2SVdbZw
f6crhLzmqUZt2NqRVwiXB366c5rPR3TLrhDim8d/28znQ/rkK//Or79dUvD5
kiL/CkHroNNa7Of+X1cII9LOdO94kPstrxKGhb55e4+drr5KCBx64/rGFO5f
fJVwsmrU/C8Z3L//KsHU2j3sFPj4l3uVMNl8WH6/9Xz8+3GVcL7erZGPY/j4
1/YaYdTLoqq9Z/n4N/wa4V2/1LmB/H2MLOQaIXjswmExV/n4n3iNMDK2dtGw
G3z8v32N8Dm52tsAtvbrNcLC054bzj3i47/iOmGx8pOPeQEf/4deJyS3X/wA
T/j7n/nXCXNTBvW4xt83qfdcJ1wN3W6/tIy//7lxnfB7Qyvt8Xr8/VfldcKP
bhu7WDfi77/MbxDqWh8f2YUtd7lBWHHk/twFzSSr5vzzDa27WwfJQbtuENpe
US8PmcXf/129Qai1JGbQsK38/Z/+BuHmBOPTwYn8/V/LmwSLajY/z2Ty93+D
bhLiZfX3Fp3h7/8CbxJOTQp/anebv//bfpPQtt3blGS27tJNglXrJcp0tv7D
TUJqyff5Jbn8/V/zW4TrYZO8T7DVA28RKu/em9BGniH1z7xFiIo+PculoeT0
bbcIt/oOrn7CT3KR7hbh8FfVZ3FKslzcIhxqbuk6+6ZkVZPbhPrOM0qSbkkO
GnCbkOv5tXgFO2H6bUJGZMLqn3cl50XdJjzeOlwn2LLs24T2C/wqH+RKVr69
TeiZFrH0+2PJGpM7hJ1tDft2eypZ2+8OwXzS3QthbJ3fHUK/5dPqTWHrtXf+
fd5YYq1mK87eIXwb4/o1hK0uvUNwf5eNJ+zQBncJhkc9laGF3N/nLmHym2m7
F7CLptwlyKlu6B62fPNdwpVPx872KeH+rLuEBV2qnflTzP0ldwkphga+zatn
Sv31cwnvrNyWzjSQnGebS3hjWXlpCls2KZeQ9WfU/TdsZUQuwWT9jfM2NSVr
TuQSHm020JbVlax9mUsIL21QrXp9yTrDPELDiETNwnqS9T3yCMs+d13hyVZM
zCNEvKjhtMRIsnp9HiEytix1jbHk0ON5hNkbA1cP4udLf5ZH+G77+VkHXr6o
1j3CguwR9WLYcut7hC+nzJZms1Ve9wilfUwLS/n1Ba25R1hRp/B7kiH3p90j
tA1/Nn0bP3/ek3uEwzWzmyewZTXyCXUH+/3dw1Za5RPyVlTv/KYJ94/NJ6yb
NfCjXzPuD8snWN12aZ3ZmPtT8wlb1N06f2/E/Y/yCT0ONS79xVZUu09wGVHT
zcKE+7vcJ4wqe+YmGnK/531Cduv+Qy7LuX/FfcLzeRfHvWEXHbpP+J7/YoUz
P17+4D5hh5PTmih+ftWf+4TOQ7OmXTDj/o4PCJn7c0o7teJ+jweEOS/rzA81
5/6lDwgfh/591ZQtS35AmLjto/k5tvLeA4Ljxh0eFRbc//MB4VZ2pr+sPfe3
f0g4GW81qboV97s/JKyuN2ZLhw7cv+ghocOjeu+bduH+pIeEqXUGDGvDVt99
SKg2d/fsvZ25//tDQsKNe3YX2eltHhE8WusO17XhftdHhJ0DP3VIZMsXPiJk
tJ8VuaIn9+99RIhITasWxQ669YgQmdza/LIL9395RNhz3e7bU3aexWOCqf0x
axs19w99THgSeM6pPVs57zFh78HpBTtGcf/uf+MN2s4t43Ht9ceEsirTX3PZ
uk+PCZsSDHa1COZ+swJC5bo1CWPZisEFhPu7G9kPns39wQUE5cr8Pmcmc//O
AgI6mm/28OP+KwWExNbxxrvZRR8LCFtjTowYPpX7TZ8QXhhG3nk8hfudnhAG
NVcscGIHzX5CiJtVfvycD/fHPSH8/Fg3fN5Y7s95QmhWuCB2/Rju//CEUHL9
UtslbGWzp4Tj7Z9dWs7W4CmhU1qxtZIfr53xlPB3Q40u6WxdzFNClXW16bae
3H/hKUG+cKx7977cT08JccO6TP5hy/2NCwm1pj3LqOzI/f0LCaPqb5i7hLef
9GmFhEF7hv+8xNtv0dbCf/OVScRH3h/l5wsJBRlxW67y/qN6U0hoYBavqHDg
/obPCJeCbyj29OD+vs8I44MfjzXn7SNv6jNCV+OaGQ3suV/77N/xqY5TTh/u
P/OMMLbTgMymPK55/YzgdiC5i557tMbPCTvcSvpPseb+3s8Jr35P+RnQkvsn
Pyc43j/ras77o2LTc8LiLe7XX7bg/lPPCWpD1ZWPptxf/Jzg1q5zxy9/ef6v
94Jg8mnl4Q0VPP/3ekFo+Dg2Kl/w/K95QRgSefRbg8U8/4e/IIx0677mzHw+
/8l8QbCtehWmacLnPy9eEMJfxWwKqOTzvzovCYnX9XcjavP5T4+XhG/6rPdT
b/L5n/dLwr6OB81GXOHzv3UvCV4pIemP+XxSe+wlobs4dsxfyed/hS8Jn5+/
Ck3uxOd/NYsIFl4x55q35fM/ZRFhVbUXM/ub8/nf+CJC7oHKDyNa8vnf6iLC
1hoxHzYZ8fnf0SJC7frzArbV5/O/giLCL7er1V0M+fzPoJigrNN/025jPv/t
Vkx4q1tx6ksdPv8dU0y40fL44ea1+Px3ZTHBNmnKrqf8eXdeSjHB9/XSA+7/
f/796N/jex0775jI7/9kJYQTrp4+3zfy+7/OJQT5DNMaJfP5/d+oEsJW70S3
o+D3f8tLCKN9XY1sBvD7v4MlhId+HzZE9uP3f/dLCCezd0yaZc/v/36XENZk
XD/pzw7t8IqQVjf8yuc+/P5vxCuCV7dK0+ze/P5vySuC5czc1ABbfv934BXh
Q2CzC8FsVd4rQud3vTYsYgdVvSLM2xL3bX5rfv/b7jVhS9TahS8U/P7X7TUh
4IXRzGbm/P530WuC/fTBdRa05P59rwlbDS2PNWFr7rwm5MZNt3/ejfu/vSa4
3RvhIbPi/talhNr4panRl/uHlRIu6XWHktmKBaWEpw99JnTkHnVCKcHC+dGF
/s7cf7OUMHzE9ugr7PTPpQRvv6wdvwZzf6sywonMnhGJg7h/SBlhyAaZyWNe
XjW3jOAY89izx2jujy8jtK98tEIzkvuvlRGirx6rP5KdV1FGKLHaM8pxHPeb
vSE8ntqz748R3O/8hvB20PP+hWO5P+gNQb5joks2W7vjDaGaU/FZxXjuv/yG
MLrlr7ZBPK4vf0NQ3c6vl8WvV9HiLeFKwqnnnvx61Y5vCesWpXZw579f6Ky3
hIWB8/aVKrk/9i3BN/GIKfHyRRffEmx+1s9JceH+928J8dlz5mawVU3fEZ7n
eo9Zxg5SvSNkKAL0ueyEgHeEeaceRNwYyv3R7wiLOhg+u8mWXXhHcP34O7iA
l1e+e0e48NlF13UI9zcigih8Z6Ll16N1IIK6963mIWydPxG+TU05dZ2tjyTC
vKeRzr348YpzRCir6b225TDuLyPCqQ3D7tm7cr9cEF7v791ilRv32wvC/l1N
t1sM535fQbgzb/HXYAfu3yII4V8evQrg7UN1WhAWtB2TEM0OeiUIyY1XDRjC
+1+C0XuCs75fghnvX3l27wl9PlTT3a7B/ZPfE0znxZ22NuD+je8Jt6vPbbXy
gPT9nubke0KDvEmnJiXz939F7wnlFX+Up9fx9391PxAG7rPf3269ZH3PDwRb
bVXxfrbC5wPBd97xVhGj+Pq3DR8I4/ufWzGXHZrxgRBWlXL4igdf//b8A2HF
7ez0OyP5+rfa5YSF1jpFJx6X25QTkh28D5a4SVZNKCesiB7aMNBVctDackJe
bV9bU3ZCejkhLPBA/xAHyXlPywnbJ6/WRrFlNT8Sei0NzV7eT7Ky+0dC6aSB
zVLYmnEfCcu2vM2JYGtXfSQow10DUgZw/5GPBOHlkD+ErX/8kdBSdTh1B1tR
XU8Iub6jYz5b3VVPKAgq3zWsP/eP1hPqJjx5ENqb+0P1BMqa0q0Rjxcd1hNW
TRxVw58tf6gnlBnKvjfj51P91RPkp+zmneDxoE4VhKXLOl1azU4YWUG41Cd5
oAc7b1kFIffBgOxe/HjZwQrCYa8uykoeV+ZXEJx+mNx+xNb8qiAcyu48LISt
tfxE+O0xbGWFPferPxGmW9+7u6EP9y/+RFhba7RhKf+9FPs/EcxTZ1wO5b+3
OvcTwev8ydY54P4fnwhLlvZe5OjJ/W0rCZ8LVOcMRnP/8EpCqennRhvGcX9I
JcG5Yc+93pO5P7GSkFln2mv/AO6/XUkQF5aPnjSL+79WErye+n5SB3O/4jOh
Wqvka3uDuH/YZ8LcgZVuB/jxyvmfCUUqs8K42dy/5zOhfMZs6x1s7Y3PhOsz
HufcYesqPxM8d5sdT5rJ/eZfCIfGHmulZCtcvhB6HVneryF/X66e84XwMyym
vB47dNcXQprFui2m/tx/9QthWMmH2mnsIv0XwsB4zfejvLy85VeC64Jb54qm
cv+gr4Sotc86ZrGDAr8SRikm9dvIj0/Y/pXQPXHdklY+3H/pK0HerrenOVtW
/pVwX17+cO4Y7m/+jRB5c+QwH7Zm4DdCTJJJzxReH9qZ3whXlV4NfvD+q9v2
jfDZbb2ZMa8/ve4bobS23Nlfzf3iG+Fj4q8hX9y5v8l3Qkjqu8GNeDx0wHdC
xpBjSda8P6dP/06Y0nmfsopdFPWdUJa7cbjVCO7P/k7IC1lifdWb+99+J1yy
sZs3IJD7TX4QVBfv6NW8fhP6/SCk3QnN/Pv/+vf7QQg2mgbDOdwf+YMQsigq
xzmC+8/+IPT+dtC+m5b7S38QwrOjwgZEc3+DKsKsJ/uW6dm6PlWEcRU7LI1i
uH9KFaFNWsP4CYncv7mKoFtfLd6frc6qIqTWaprszvNpaEkVocD6oMXGg9xf
/ychfcKwNhYp3G/7k2C+blW75tbcP+knoWx61cOrzbk/4ifh5LP2Y/YruP/E
T8KiUe03uXTg/pc/CVc7uE0cwc4z/EU4uk1zb3t37u/5izA4ueVKnQ33T/xF
eLnJ+2UmW7P+F+FVldu8VLb2+C+C2Rvr5W95vtI9+0Xo3fbHqKO8v+tr/SYU
F+W8bMLzg8L6N2HxrspnRn253+s3IWT4kRVxtty/5jehfPvwoZe5Lz3tN2HM
Qofq97tx/5N/z2fwtvRLW+6v8YfwsrPMy9KE+63+EJ4tWH95JTto7B/CnkHh
m3pX4/6wPwTj7N2u0fW4P/UPwS3p2IpRv/j6l8d/CIs7H0oc/YWvf6n2l9BM
3w5n9Xz9S5e/hN7rgtfkCMlaz7+EbTOyMmyeStat+EsoWRR/3b5Ysv7QX8KD
puOGbH0uWfHgL2Fp0M0Zgby8+s9fQssjdwelvZAc2lEmMGN05LRwdrqHTGDI
0y8HWrCLlsoE4j6serbsmWR5skxg94DxZc/uSFbdkwnk751eeDxHctBPmYCB
Y1P34cckJ7SvJmCXrKxpGSU5z72awNn3v9f5eXP/4moCLetNWbyCrUyqJnBj
dMyyypHcf7eawPejpq0MlnP/93+PDw8pbLeE+9tUF5DvmmhdYxL3u1YX8Cmt
cJ+t4f6F1QXePHvj6zKF+/dWF6hz9WbLl+O4/1Z1gZv5SY+Xg/u/VBf4uODe
UvvHfP23hYGAquuUh2kqvv57qIHA16Kun3Y1kayaZyDg3edIq0uJfP33bgOB
86fPmV5ZJznhuoHA/WqOLdaulJz3yUDgbVavujnLJMvMawiM9bfuFrJcsnJw
DYFvy78ukqkla4JrCOzqddirsYtk7c4aAtFzm76N7S9Zd6WGgPUxu6kmDSXr
P9YQ2L9D2bVKLllhWlMg8OXIlW/PSNeHq51qCkyYn3DJf6fk0Nk1BfJb7zzW
bJfk9LiaAjaTVxhahUsuyqkpMGBo45Byf8nyD//GW75uEXaUr/9uVkvgtGlI
+8cj+Ppv1BIwW+wYsK4FX/89o5aATZZ81cZ8vv45ppbADvOa1zxO8PXPuloC
cYvS19eP4OufqZbA5sdOnb6G8/XPjWsLZGes39+dx7X9awvk/Jnj67uOr3+e
VltgaOTSxLjNfP3z1toCP15UXrR+KF1/pjhfW6Do6hQD+yeS1W9qC2xu4R+8
JJev/21YR2DAVMPZXzZI16+l960jEOI+f+qJkXz979Q6Ah2zZPJmEyTLtXUE
6iyOrtV7LF//e6aOgPvFxXfDhvD1b6/rCDSruBa/Y6jkBGNDgZk725pe4/G8
3oYCZr96/HjWVrJsiqFAc6/H0aKVZOUmQ4HcuHVvQywka04ZChhB/jTWXLK2
2FBg2tPzcw4oJOvq1RVY0rFg/sjWkvW96grMeVrZYqyZZIWmrsC4tneWv7KT
rA6vK7Bwwq+MEWrJoZl1BbLWN/9lxr3pL+oK1LmV+vuqDffXqScQE3t0iTc/
Xt6jnsCFRb5el+7w9X/e9QSKSkKWVlyVHLSunsCsLPPU64/4+udj9QQWJq1s
djyfr38urCfgtvXMhPgrfP1zrfoC+28cbG5pzP3K+gIj/6y+c+gQX/89vr7A
hyeY7qiR1p92dX2BleqyCxleknVH6wtMWq/OuT9Rsr6gvsByGB/oMYPXv4GR
QJ0N3rW0s3n9dzMSWJ5eajppuuTQMUYCUePWGl1YKTl9pZHAtWnLQ7es4uvf
U4wEvNIPbPnDlj8yEqh1qionNoavf5cZCyg2vzK8FcnXv3c2FsgftbGgVTJf
/zjKWKCwJy50SuPr35cbC8y0WBspf8vXvx8yFjhBXjW2v+Hr3+8bCyTdjFni
QpI1v40FxFivV+vZ2g4NBL7te18vVHD/iAYCPe722Gv8gfuXNBC432zysPZs
xYEGAh961T8ZVc79eQ0EVtxsvrLxJ+6vaiAQPCvk7HV2eju5gFXF/rg+X7jf
TS4Q4Vga3eT/6/8XyQUeHT6+17qQ+/fJBdzKzX+tfsr9d+QCi9wvv1nCTvgm
F4i55jzOm53XuqHAiR1ucxr/3+/aUOCYYu7wrZXcv6ChgN21Dm8C+fVqEhoK
LCq+c1XDPdqbDQVmFT9yuPOO+z83FOi+8vBsX/576FuZCCwKfTAAbMUQE4HY
iqDYkArun2sioHS/teniNe6PNxH4s+jxdIvr3H/NRKBKNfRYRTb3V5gIjHRe
3e9/y80aCdzX5L/dsJT7nRsJfCtXzdzFDgpqJNDWY/rnDzO5f0cjAYeFIYuM
Z3H/5UYCY0IqrfWTuf9jIwH7u41/LeHtU9miscDX7LopX+dwv2NjAYXx896z
PvL9D7MaC9gO2eA3ka2LbSzwyHpjyTK2/mJjgc/n1vqs0PP9D+8bCyTZ1b3U
+zXf/9C0iUC9SUefOhDPf6omApaOoyfufMP3PwQ0EdB8DK26wS6KbiKwzPvq
qDFv+f6HC00Ewu72Ob2TH69610SgaOgtt+x3koMaNRWI/dNu1Ah2gkNTgQjX
imhbdp5/U4FNe1uk+fDjZVubClB4v2bqhtx/rqlAsEXTq2fk3F/WVODCq7b9
qkx4/cubCZTlab16GvH6t28msLPOgXqrjXn9+zb7dzzQRc5iK7Y0E1i0ZqPr
nDa8/k83EyhdPbVc3YLX/6tmAmEvXFd9ZacbNRfoOiy+8Ae7yK65QOKPEnej
EO6f3Fxg+w+PJVnB3L+xuUDJjJz8rDncf7K5QJecl2EdNdxf1FzgZvuRuSvZ
eXVbCLTtWOnvNo77e7UQiDuQH1hqL1np00LghEe1iG92PP9taCHQerPh6Y69
ef1ntBDQ3wlq5tWT1//zFgJbb8cPG8bW1zYVSPe0+FbK97MobEwFaGHq355s
9QRTgcEebSiJnz90ralAQvpLl3bbeP5PNxUokPUsXvL//P/UVKCrg/zPGxXP
/zVbCgzNWiPr5MTHv+4tBVxGfDL43ZyPf+NaCjy5bNIl4h7P/6taCqRd6LBg
9H2e/4+0FPiI3lc2Xeb5v6ClgK5gwtcOOr7/pbqZwIBpM/c5nuL7X7qaCQyz
rGuZyOPa0WYCf7Mtw46ydaFmArerH2yzhq0/bCZg/+i2fuVFvv/loZnAtgf7
0iov8PXvf80E/qxOqv7qGF//3slc4E2fJc5jzvH17yPNBU4ZtV3ve5Cvf19m
LrByX62NVvv5+veD5gJ9vUtyvY/w8S/fXGDtkPRHD9P4+PfLXMDxuVUs8XiC
ZSuB2ncGes/n8Tx1KwHfHvcHuqdw/5JWAvOsWrWPZiv3txKYqplzaDVbk9tK
IMm86ea2R7n/RyuBwqJG3dL4+XVtLQRMlpoWHmLrh1sIXDke6NvmMPeHWAjk
p3ot3nqI+xMtBO6++Vr7SSL337YQqDh8xv7kPu7/aiGw6MbylIPsIoVCoMp2
zPVoXl4+TCGw5cSNHuFs1XyFwESDtG5R7KA9CoGL2sj3lvz4hBsKgfWln37X
ZedVKgQiTqSPX8mWtWotcHlg9e+NVnC/S2uBKnvfb4lszZzWAqO9t3e44Mf9
u1oLlO16sfESW3e1tYCx9Y9HAf7cr28t0Grm7ERrZ+5v2UZgxtsrmkFO3D+o
jUCzrNfXTjtyf2AbAZ/7L67vH8j929sI2Ov7tN7FLrrURiAlLWfXRgX3l7cR
eDvp5N2E1tzfvK1A97+Pjrm35f6BbQUUsWE97Zpy/8y2An1nJ1sNbsL929oK
JM2qGxVgxP0X2wp0Xu8fZ1OH+0Vbgbda1Q/P2tzfpJ3Ast/NfPcZcv+AdgI0
e2oP67rcP72dQC9Th5E7eVwf1U5gfnD+9xdsRXY7gRs9nnrUMeD+t+0EOs2u
lXmihO//MmkvkFQ76lHPZ3z/V7/2Aj0HDfUtf8z3f/m1F1jvfVI7/iXf/xLZ
XmBWiN3dKrbqbHsBQ6/0LvUK+f6X0vYCNicfvyhhJzSwFLju0/NgzBO+/6WP
pcDajZo969kyX0uBUY96jNfw8srNlgJ7P9q7OD3l+1+yLAVkJ+76rObltSWW
AvdiZioi+PXp6ncQWOV/SDPjId//YttBYO0zh1rb2YpJHQS8vmd0OpXL939F
dBCo0NKB1/e4/0QHgb+Hetb99Yj7X3YQMDacnWucw/2GHQXs/E8GbGXLe3YU
CK/K/HBBx/0TOwrIFJbNvHg8aH1HgfKx4s3ka9x/vKNAyeGsnMTr3P/s3/ID
DPdVv8P9tTsJLC1LLB7GVlp3Eqj7xizEgq3x6iQQm3J+da/n3L+mk8DZBz50
r4j70zoJXL53J/D4O+5/0kkg5WLGav+v3F+js8DWUYHfn3/nfqvOAnSsrM/w
H9w/trOA38WQyK9/uT+ss0Ce7M7sZTLe/lM7C5yNK2x5hsfljzsLbJkwJLk6
W1Wti8C5KbZTo9hBXboIZKWEbd7ETvDsIjDz3MDkQHbeii7/9s/YOkFs2eEu
ArdmTb7zmLdX5YMuAt037asXV4u3/z9dBErP2S08xPuDtmNXgWabl498z9Z5
dBVo0aB0xGe2fmlXgQcBxYW5vD8pkrsKGGx74/yErb7XVUB38cfs99V5///Z
VaCG73uj1F/c376bQOvb6i4h/Pcpcu8msOuhrW0+//3ki7sJXMnKOeXM46qk
bgIGTb4MiGcH3e0mcCTvbY9qVdz/vZtAoX9EyEh2XhsrgbuumQWN+fXKhlsJ
NJ5WPfIr9yoXWgmkNeidVuv//X+vlYDrfdnqary/a29ZCVjFhdc9xMvrvlgJ
+H976hL2f79F93/z2adh97lPMbS7gJEyw2nQG17/87oLRFhGlRSxQ3d3F5iW
eLdg6wvuv95doHtqp8Pur7n/U3cB2QOTCe0ruN9cKWC2++nE9C/cP1gp4Fz9
780yfr6gYKXAi/M5e2u+5f6dSoEU6wkNOrPzrigFHqy+1rGY/94yvVKgZPjj
4d359StNrQVelv49soXXl8bJWsCl0svEgHu1s60FVl+9ZHb3//kvzlqg47Ij
v+bW4/4ca4EDP40+q9iKD9YCNybU+OPEVjezEbibOmKIvhqvf9gIdDm3KfAH
O32GjcC6wT61W/J8WRRjIzBxyiW7///ecp2NQPfXZVEvavD8TzYCx+/6u9So
yfN/4x4CS/0GjCvi8YT+PQRK9RMWJfJ43rQeAs2eXvddwM8ni+oh4HguIuUA
jyvP9xBIn35nb/3/t/83PQRSekVEL/5/+2/YU6DlvhcuCu7R9e0pYNxilnGT
//un9hRYVmE2r8b//dqeAg8Xrx12i/9e6jM9BfZ09IhaVp/7X/cUGGBwv8iR
x9ONewlEPfvxJ/z/7b93L4E/N04Xf+P5Rj6ll8DKhd7vnHm+Vm3qJZD/e/nD
BzxfB53qJZD0+2zrx+yE4l4CBc4fX+05yuu/nq3AzIQ187MO8vq3tRXAm/KV
q/fx/KexFVBvsV3Tl60JtxW4ueyWzyy+v1GbaStg2Sex/7Yonv9e2ArY7Zjx
/H/r69gJDKiwSa7L90cqetgJfOo+4NjS9bz9e9sJJGx4e3fKGt7+19kJLP7W
fVL0Ut7+j9kJ9J2+zNZ7IvcX2gkMHdTcsIDvj5bX6i3gssPUINaF+5W9Bexd
Dj16Opj7x/cWsAtTmLTuzf2rewv8PPy1d5I19x/tLTC0yqfhArbsSW+Bb9UG
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
MU9xyeOnXP8LIwjHBh0cO6yc6/+fCELoEY+ku8wFBpEE1aNqoV8quP7PjCQY
5Zr6+JWy/+ZIwtRJ7e1y2/yjIwkRBdE3t+tz+T+NJHw8MLAltx+X/89IgkbG
gzsXuD7W6Z8nLCsOfPvTl8t/+nnC+UdOGrlc3rYbzxOOHEwZPauZyz/yPMHw
z+z9DhwvnpR/nuAwNjNMj7my6TxhjE71ubfMqr2jCEXTEw/V8OctbKIITj/W
mG/meHGv9VGEQW8MKrZyPG34uShCa56M2Uxe71DwKIrwx2J6dALHF0l9jyJk
RmzpcVOT4396RhO2V6tllzC7TIomzP70vk9eW/yPdzSh7/XfM40GcPzPmWhC
6iU/p0pen1GXHU0oza6Xsud4St36aMIaFNPJbC5/7QsEp/jw5liOT/Qbf4EQ
/37DwSSOT0zyvEDoET5yTKs2+5+6QDhi75z9mlk18wLhqf3bF7Icj2lRe+Ff
+9D/uw+zl2YMIdFUYVC5hOu/ZQzhjs/6zalj+f/vEUOYbvPQR52fV1InYwh+
51/WJDrx//9eDCHX/p38emf+/1MMQX7v1C77lnD5d40l6H36oPuU/88Z42IJ
tw8PKerAz4+65bEE3RqPSGVm3WOxBNWsfQ/2r+PyT48lVGW2T/yznv0/xRIy
zc/vsPFh/y4XCRsmldSYMleaXSSUbZcqO7+N/d0vEnZOa+k+hNniyEWCfZHe
L1dmr9sXCZ2fvO23njn8w0WCuVHXkrb6V6ASR0graNmb78/+pnH/1pMFr65l
lrjFERxWRV5e3rb/yaE4gnt18oeo/ex/M46g+HPNB50L7P8ujjDrbdl+E+Y6
pUuE2RNPBRRyfJbuyEuES7+t7ipyPJbtokuEJfJ7Gofksv/+S4R8X/MPc5mT
ki8RFtuoxATw+pjKN5cIXdROHf3L8YmqHeIJkyYELdH+wP7D4wnhX1Jn+zF7
LYgnKHdIO3ae18eEB8QTtG5c93zG/4+Cq/GE26PSLQed5vpfEU94uGjY30Ef
uf7LJxA8az5OncPsMjSBMHDhtrRw5iDnBMJHpWyZo9q8/nt3AkHupdrNIgNe
/52YQMgv89/3xJDXf79MIKhd7KRdZ87rv2UuE/THf/5224zXfw++TFiQrLqk
23he/+d0maDgIBGVvH690v8y4a15q1xC2/r3hMuEDZKqN/3m8/q/0ssEqx4b
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
bDj/VcdHBHdX+VerJ3P+K5NHhBabWam95rD/wkeEUh81NQVv9t/3iLAnvEHF
agv7X3tEiE05u6HPCvZ//YgQ7nL47Ps17K+QS1hzu7hL1nr2N84ltPzeGr9q
A/vPyyV0q/F+MIyvn7EnlyBsDB4/OMv+SbmEwYtVFNKYdV/lEj5cu7svitlW
No9Qcesqjp9k/yF5hNLuzVeUt7H/nDxCqPt2/UVO7L8zj2AmNE+NtmX/y3mE
S6+PH/BktniRR9h9T2dE8Xj2b59POLqma9hzLr9wo3xC9Y+GPR9Hs79j/r/5
lWsXMjXYf0c+YUnLqBk/dNj/Uj6hQnO4a0sf9n+eT6hqSDMOVGH/v/mE7wcK
Y+eYs3//x4RauYnNOly+dbMeE8aHL7HTZ9bd9phQ8fdwwRSuD7axjwn9etyz
bubjfoWPCU0W07t9aSv/P48JLw6vb+ozn/0NnhACn/UxVGFWnfmEIO28+hct
ZP/NTwjhBpUqofPYP/oJYejLbUo1zOFPnxBeFa8dOHYx+//8d/xg2bLxzFJ9
nhKG/mj/LIpZMv0p4auCm3lwCPtvfEow3BeZrcEcFPmUEDAxxiP1OPvnPyVk
notbFXWa/ZueElLzk/ZXnmP/3gUE9WfHJ8lFsr9NAcFroiW9imL/9QWEs8MO
NrVv2//7XAEh2WRkmd9V9n9UQFCYXNt39BX2/15AMHwjVbaEj1v0fEZwjXvj
XcnHvSY9IyxoOCr1+x77ez8jyI83sbOpYP8zzwhlWrv0571j/5xnhByHFked
T+xf/4ywu9V4S+hn9tcuJAzod6lLh2r2H19IiH5/qWnRR/b3LCQ82RxkNIjP
rztVSDjju/fi+Cr2zywkdM6uH6n6gf1rCwkrAld96sG/x0+ziDDY9dqOl7fZ
37KIsErpyLLUS+zvUUQ43PlWRHA8+58sIiQ210fcjGX/e0WE4Jidu1by/fWi
IkLKiCdWNXw/w7sWE4xPbNyenMT+44oJO4z3qPTn60utKCa0+BXuVwpn/2PF
hLNK3e8Y8v/TJb2YoH7oy7f9p9j/UzEh16HfCtlA9u/ynPDj662LYYfY3+w5
QU8r/ZLufvZ3f05oHi9z/HYA+x95Tmi6UTK95yb2v/2coHV7XmMqc9KH54Qd
amfMLu9if5USQt+F6DiWP69qWkJwv/leQ4ePW7iVEMLrNPO68fPI61AJ4fz0
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
rxErBC7/kdW5cp3z/7msEHhwyKJnHefrKwhcITCwMLtjMbNU8gqBjpn3f2zn
60nerBCwd/27XYW/z0VxpYD2g5eV6pyfMGjYSgFzyaNtxdHsP3+lQIB75s9D
bfn/9q4UOGO6+R74erpXVwq8VTDdsJ/z59uWrxRw9ak4MILzzfvJefzH0pnH
Q9WFcVxCEVGklIQW7U0L2psfUlonaVGK0l6kRakUEtGi0cKbpbSHFlkqRU17
WhBaSBFJ8ZwoRXvvp3n8+f3cO3PnO8+55957nuecS7Bxd3kam8n+khWEu+NM
rVOusv+sFYQZNdHFRrw+u17QCkJpWu1EI15PUnp+BcEqzCTRYBH7F64gFPqn
1Q9Zyf5NPQiV5yX1GzzYv48H4dmN+TlvH7P/TA/CzolP6iOZJVs9CJdr7aRn
HrL/GQ/CUPdKFWPeLn/mQRiwbHzS4VL2V/EklB1a0evhS/bv6UnYb3DSzOMZ
+0/zJPyON9eIeM7+fp6EoONFhesL2T/ekxDf13WAE3NSviehZ4qP3hfev/T3
v+2DblwPZNbrvvJf/rBzb80X7O+4kpB79dFg1RL2911J0L4xqnOfV+x/ciWB
DBacdC9i/9yVhJyCucV5vL/Kz5UEo9rA8SXl7N/Vi2C/4teJC8xuk70IhQvq
Wn9hX/kGL4L1x0V2e7heR3HMi3D37v4lF7vx+f/Yi1CxcULdvrZ8/n/zIqwO
moFdvD6jzHwVwWDWt0d9Dfn8n7CKcOf5U3V/7j+T1q0iaGWZ9DlhwOd/3CpC
YEnrW+e4v9J7+I/v3NTcxv2J9OsqguPzFG9r7m+8Oq0mzG034+RqIz7/HVYT
/A28Jp3l4+euWU1waRh9+zOzyqHVhFORHXrZm3N/d381Yd2ZXa/Ceb1It8+r
CR/Xjh8yn99XITdeQ5jb4fySJ8wK+zWEibZzjpdxPVit1xrCQ7+71aqN1/fo
NYQfCq3zzRey/501hL1fUx6EerN/zRpCM/3eb0YGs7/RWsJ/tWWnu3G9YKnt
WsKr9vryiXx/que5lpAw5/aKIL6/k/63ljD54b1pzoXsf3MtoXrOg/M6vF5Z
HK0ltHl4vVps5vE1Q29Ci7Hd/8vx4/t3eBO2R3/rHsj1IJLl3oT0b+ElTrx+
ltsBb8LYPZumdC3n+/fr3oT4V0+mD6/m+/cP3oTUyAOxfRvff66/jlBQ1Doy
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
E9YajLuwYQPnY2LkhORrfrYGQZyPuSsn9I/Y9MEukv1r5YTQWx/3GcWwf/tw
QkjCufraxvlsduGEk4fOBO3i7XorwwkZFgMcHXn+mvRgOKHdopgPMxLZ/1Y4
ofsFp2ZfE9hfhBOKsl7PdYpn/7Z7CZ/q9EMK0tjfZi8hxrtkx9KL7L9iL6Fw
6JvYal5/0S1iL0HaXeLeifeXK/YSSrW8EXiZ/av2ElZeDHZfkc7+BvsIZdVd
2i9mNh21jzDV5eJ8t9vsv3QfIfLBrTrvu+y/bx/ByqX5Gvd77J+5jxBzY/yL
OObSyn2E1iurRfAD9m+9n3Dh6GKXslz2H76fcEq/KqBJFfsv2k/Y2qnZGq0P
7C/fT+g7VHv/UebcK/sJb47s2qb5g/0r9hMUp9cfu/+d/XUPEPocaxe6dzjP
ZxxygDB8hqeHrZTnM7ofIEzee/LqMJ7vqNh9gNCqW77oNIjnM146QJg/tbxl
PbNp2b/vu5Z+acxIns+oHUHYnpzXKtiK5zNaRRAOTyh5eEzC8xndIgitFOc3
WzCX7oggqK3JW13an+dzpkUQNq3/sd+CWVoSQagbPH1m0WCez6kZSSjzXNlp
0hCezzkwknDtV+2sMdY8n3NOJCG2ySu9rfx7VEIiCTknzF5ljeL5nMmRhMl2
Zv0C2NetOJJw12d/mI4d+2v8R+g9JK943ET2l/xHOGb327gvc+2s/whdKozq
3Cexf9B/hLSRGlaPmWXn/yMEmhzrAxn7F/5H+OQTWejD80lL+xwkHPoTNPX9
LPadeZBweO849+jZ7Lv1IMEyLD37Cc8v9TpzkOD4OqLpk6ns++wg4cvuqECr
meyrEkXQPprRuzOzSq8owpGEuRHDmCXToggrlh9f68rHc/OLIvTy9Vuoydvl
8VEEyROTyFY8H7b2dxRh9ReyCZ3Pft2jCQ2BJqfjF7CfYzRhdceX5xrc2c83
mtCkh8LOiefPJp2MJhScqLngNp59c6MJybZeCLFn35/RhI6nS/rPGM2+XWMI
TY50eb/Kk30nxxCKlo88kLeSfTfEEL7ebnXB3ot9j8UQJqeEza1fy77ZMYQZ
qhf1TzBLvsUQar4lHv67hn3NYwn9z5t29d3AvhNiCVsmt8l94sfxXRdLmJ45
xNVmM/vHxRKcdmnVj+D5xKYPYwnb8hxXvvBl/6+xhD+l7RXjvNm/0yFC5e7N
J7OYkxwOEa4pbtbdDWP/NYcIk9qpbnGMYP9DhwgYp3Mog7dL7x8irP7kdf3h
Pvb/fIiQUdE/U/M0+xsfJgRg3PZpzLn2hwnu6oYtDjOrrDpMyFZ3/JHDLIk+
TDD40PPY3ST2v3OYkPfKZE8/ZnnNYcL5AvnFFRfY3yiO0FT/+uy2z9nfNo5g
eyDwoE4B+3vGEd6+VSlqyyz7L47g327PXldm/5tx/+qlh/jnP2N/iiP8/DTD
2vAL+xseIVxq/pfimfVwhGC06TrpMsddP0KINjxyZqomz0f/cITQTS30YoU2
z0c3OErYl3ZjymF1no8+8ihhwcGKK1uY3ZYcJSztOLLlWUOej773KOGP6Wp5
TFuej55xlLCubRt7bebad0cJlxr8wjyZTVsdI3RuSAyUteP5+MOOEVrYZI1L
6cjz0RceIyh0C4sTu/N8/D3HCNXHXHXu8vz40vRjhBs5fZoOZdZ7e4xQrBl6
5agRz8dveZzwN7vmxQtTno8/+Djh7cX9Szp05vn4848Tvsb6FY3vx/67jhNC
VAv6rOb5/SqXjhOcziRKvpuz/5vjhFF9rF9ZmbF/ixOEXqVTe1cyyy1PEH4+
ESVdmBWuJwhLMsYMi7Bg/9AThC6UOGkG+5imniCYHdGGbQ/2f32C8GTg8HUz
ebt/85OEc56+S0+1Z/8BJwkV3yVPCvj/KnU5STi0TntLCz6e3vaThHk7Bx7N
4vUApBdOEsyC+v08bsL+L08SaKfq8zz2i1M/RfiwZpV8Pf++3H6nCJR7/uBz
ZpVZpwjHo4/7H2KWbDtFMOz5xndHV/Z9cYpQ2xC43pzXC1aonibMDO1w5OMA
9u19mhDcP7fHJmbTGacJerpl7XcwywJOEx5HfpVs789+T08TRlQ3O924/kLp
39OE2OyY/v2Y9XrGE9bvcfd8PJL9nOIJo+JtM27PZb8t8YS2tp3v6vL/FXc6
nlDXacqlcG4fuXnxhCXaPebcaIzv73jCkUsUeKUX+1kkECZmDBhziNuf25QE
wuVVX06Mb1xvYVMCIXGGTVw6twfFiYR//UOiStQi9s1JIEw4WDA6cSH7/kgg
FL6x+aXB22VdEgk/rkfuN/Xg+E5KJLw8a/WiGa9XkeSTSBiktth6jDf7H00k
JCz7oH/Ai/0fJxKmmXtfc1nF/g2JhKjoMO/Za9jf7Axh8LEm/uM3s//4M4R4
4+K973l95VzvM4QNCYHaLXzZP+4Mofnx85rmvL/kwZl/9/sm12v5+92+nCG0
C7OxTZ7I/iZnCQ9nyW88YFaMPUs4vDXkr7cD+68+S5hjpTHR3Yn9Y88S1NKt
JJGT2P/eWcKJdp28PWTs/+ksIbzyuY8Wr4+R1OEcAVNHO1zl7aWjzxHuLV43
bAQfT8/rHKEqy3nqTLB/1DnCxqat/A5MZ//b5whqm7PueDDHfTxHsJhqEmQw
jf3bnSe0mVbptGcM+9ueJ6Q0+KVlMks8zhP2nLf4u8qe/SPPE7ruGmY2mM83
RfV5QqcdPTtVNvZnbZIIvlLb5Tnc35hKkwjFsz/G7tVh32VJhFFW06wCsri/
3p9EuPV41Kwhj7i/vpZEGGmfMqZ/NvfX75MIE9t8qbC5w/21/gWC0w7rqd8a
709GXCC8i9TdeJiv516LLxC6znMKDOHreVz4BUL1nVHpPk35enX1AiEpdUJo
eRHfj767QHh2tsXlaS/4/ntoMuFRkHb6zUK+/16QTNCouqJp/pzvv8OSCXlP
TFt1/sP335eT/9Vn63+Zr8bXp/Jkgl3JlUmafDyZTgqhdXH86TBV9rVOIbTM
m5fxSYd956UQdgfZyR/95fvvnSmE5yt1D9/l+2W9iykEVY1VLXyJ779LUwiu
pmueRxTz/bdWKsFWFnB57RW+/x6USqhpVbiw2SW+/56bSjjeYNZuEz+fqISm
EoKcb/ZuOM333ymphFvpCWtwkv1fpRIySgPCW1xn/2ZphIO5z48a3mT//mmE
RGfbvEpeH752dhphgpb+/RLe3zQ4jdBSvaWdJh9flpRGeLmo1UC5Lz9/FKUR
rMduDM6ey88fahcJnq2v+4S6sX/fi4TR3/Ojrzuxv/NFwuf8qS7W09g/8CIh
qK7btYap7H/2IkH+UXN3d15/P7fJJcLpNa/k1fz8qNL7EuHqpeH6vaez7/RL
BJv3n0qr+Pvc/C8R1H/O1yb+PnnCJcLDAPcy1/HsW3CJcHPFnZ4HJ7Lvn0uE
k3FBLTV4fRHTHpcJY1enmBzj8VfZ1MuEic37DzBufN7efJkQ5XEwfkHj8/ap
y4SV+7NM7fh9CKVPLhMWPvVZOILr9fR+XSb8GN15oDG/j0DaLZ0Q2rFXbAm/
/8FLlk6IqJ2krp3H4w0b0wkzDcqjNXh+S+7xdMIvuxbVnjw/RiUnnRDQw7XJ
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
FNhdyZKZnwipqyMOJJgo2W3rJ4JPw+v2t02VLD/zieBQs3ey5adYpf+zT4Rp
79Skv0jJtSqfCYFHsif8+Kxk016fCZetxn75Xqlk2bTPhHcrN/Yxfq5kf79/
2/V/2LkWKjkp/jPhdweVxbFlSi7N/0x4sfmncdhHJUu71xGcO7y/eLUt+zrW
ESpjfn359Ue5Pc63jtBC9+amG3y83JN1hGFnU2eHVytZ5UkdoZXlXNPCXCVL
ftYRwmLHp/q+UbJb1y+EYYZjW6wsUrJ88hfCN7thqf/x71Fs+ELIj8gKeHKR
fY99Ififntdf3419s78QpBF73ge6su+3L4TEX2tMRvN2f/OvhMjZZx7eH8C+
E74SXiwrX1miw77rvhK8rMY0pHdUst6Rr4Qh+kYNTVqx/8OvBCefAvd6FSV7
ff1KWBhvu2NebYzSv1M9YcCFd17FNUrOdagndCjxs9RgVllbT9A+ZaT64qOS
JYfqCabdA7eFVynZ7X49YcivqkEDzylZ/rmeYFl95H0Us8K4gfDwgbGTcQn7
2zcQkgOrLpT04/a+qoEwo1mWU81mbu/RDYQbJ2fbDd/N7f1OA+GceVuX6Te4
vdc0EE6323U99SG3d6NvhGcfm7rEMevZffu3foKRvyqz13/fCGp9nZu2quD2
ffMb4ei2EQ5/s7l90zfCco31ixcXcPtu+53Qv61FhxW3uX3jO2GgbsPMlsxu
y78Tjr5Q2ZR1n9v3ge8EnW729Wp8/iqufye4+n89p3WNz+8P3wm1ewPzdJlN
DX4QanaanY5llo38QZgxt/CWTzL7LvlBUP3+2KPgAvvu/UHol/niwS3m0owf
hGfNB+mO4f31Kn8QWmUlpRQl8fnd6idBunLDucPMXsN+ErLH5Y1xD2f/hT8J
q7ebXE5kzt3zkzD64tW0JGaVKz8J8+p/a7Q9yf5vfxIuiNH7J/Lx3Fr+IhiO
9yHrSPYf/Iswc9zNsau5f1DM/0XIPL5xzaIw9t/1i7Cq3ZmMm8Hsf+kX4VD4
ogK7bez/5hfhx/vVrk8a493iN8Gs55uFk3ayv+VvQnlm7w0HuP8qdf1NmFs8
56Uzf15vx2/CTvedSQmb2D/1N+HBk7iyAb7s//o3oU6r21YNR/Zv/odg2LGT
mc9U9h/wh7B9t0FsDbPKnD+EhEkGtzPPsv/2P4RhQaFr05ndLvwhdElJMOx0
hv1f/iFMeWV2ajP3zwr1v4RmI7J7B0azf7+/hF33ZNOmpLL/rL+EJhMPrnBh
lm37S4j233zFjdn/3F/CpbqaL80usf+Lv4R2R04sk6axv6qKwOC9Ldc2iWH/
PioCC1+uLLvJ/790horAvIYHH7oksH+AikAX02tDroSwf6KKwLJBG7s12LL/
UxUBzd6OwQEz2F+liUCF1+cnS/n/kvRsIhA7/qLUlf8fN6cmAnFuoScSxrL/
liYCrWvc47Mnsf/pJgJ9ehaNHuvA/nlNBKJSi16Nl7L/7yYC/cbW5ORbs7+F
qsDuB6Wyip7sP0VVoIVhjsK0A/ueUBUYr/V77WAN9s1VFXjR5fu8h8zSH6oC
c2NXbW9mxL5dmgqkNUx9atOSfSc1Fbh+LTlAtOLf39BUoGX996CCAfx7x6sJ
3Nkw+dVQ3r/WW03gXK8e9p7vuH+OUxMwfN+5m37j9eiBmsAeP5OSudyf+X9R
ExjeXSQWqnO8TNQFWvzuuMJcm3//WHWBxUZHP42r5f55jbqAh9r9iKxn3D/H
qgsUqfZMnF/A/fM9dYF1d9W7OZfz9emTukD1pNBz/R/w9amDhkDMhnbaebf5
+mSvIVCj7X116Q2+PnlpCKjdveZfKOP+OUpDQGt0buvvNtw/39YQWBfef8OP
39FK/48aAi8Gqies+6Xk2nbNBBY4p0zf90nJprbNBEy+VNhXhShZ5tFMoNmi
ve/StyvZP7KZwJEm3htPfldy0o1mAoF1iSGXnym5tLqZwMlmQ80KM5WsZ9hc
QC/u6qOwm0qWSpsL3AvI37vgrJK9ljUX6JBU8kA/Wclx+5sLXLPeEKadpuTc
a80FPh7SjzpwRskqH5oLmAzyWmF0TMkSfU2Bay5uGnZyJbuN0BT4bma5um6V
kuWLNQX0i7rNdfFi/3BNgdWnf2uPWM3+VzUFCq6sTBrH+5u+0xTQODX92ael
7K+nJeCYqvekKbP/UC0B7YiDKQums/8CLYGycdH2j+3ZP0xL4GtWxKC8Ieyf
riUwcuNSl/vM0nItgalLx223687+Oi0Ehs70XJzdif2tWwh4WuZM/WDI/vNa
CKzq3P3R0bbsv6uFwI2x9p+e8v6Siy0Ebp3tXt2at7uVthAwexf12kyL/bW0
BVI+rzlcwawYpC2g1v3V2VSKUvrP1RYYU+eW6p6nZNNQbQE/14SW0x8pWZai
LfDqsFFlj5tK9n+lLbCu2/e2nZmTmukIvFkhHVZ8Ucml/XUErq700+yQpGQ9
Fx2BPlUTI8wPKVka/I9jTxWv3a9kryQdAZ/NjiUhA5QcV6QjkDS086kpzLlq
LQV+Kx5MfNNfySr9Wgr0svCqNu+nZIlzSwFZjrtauETJboEtBYbnxIrnfZUs
P9tS4Gm3Kx2f91Ky4nlLgZtVL3s+YK5toiswacPge0/bsn9vXYETjh103fTZ
f7quQFfna/UBzP7+ugKJ0b2fzOjI/gm6AoqmG2I/abN/ga6As/Hot01/HFT6
/9UVeFqha1FYqWRpDz2BnSE+b6Vvlew1VU9gzqQHq6e/UXLcZj2BESujvKtf
KDn3lJ5AUtfoTQMLlaySpyfgMPVXK0mRkiW/9AS+1bXfq1qtZLdurQTklq8q
ZTbsL2sl4OdyoWmFHftvbCXQxqbYXqdCuX/t8VYCPe6m7ivm45vmtBKwapL8
5lepkmXfWwncz7N32s2/179za4E7Ohk9z79TctLE1gIbTI2me/L3la5vLRDZ
JnLj3nL2P9paYPykew2puez/qLVA9Y2WQ/tcY//61gI/NDaP+d6E42+qLzA3
ZmT/ZF2O/zh9Acvk78lddTj+3voCfx0k6rEtOf6H/+0/zwJPmnP8s/QFTo+4
sVSuyv51+gIrnv4ca/JdeTxFRwOB7cPDf5vUsv8YA4GiZUkVG96z/2oDgW36
w352Zh9ZjIFASvG5+YMesP9dA4GyW6NOOtxn/1oDgek6yI/oxv7t2wioxHX8
mt+P/Ue3EfDQ7nf1KNh/ZRsBzYlzB50byv4H2wjM6qEvzfv1n9L/VhuB+4Y6
9VU1Ss4VbQTaKMonhwklq7QzFJhtd8g78q2SJTaGAj5Dgodf+ahktxWGAmO2
9FVt/07J8ghDgR5F9qZHbilZoTAU+KM7wVf7gZJrqwwFduUcG/PwvpJN27QV
2O5lFp1wR8myUW0FbH9iUf1NJfsvbSvwQmfy4gyFkpP2tRUYK/Hsevi6kksz
2wqYdI6MtmSWtm4noDHp1oVC/n6v4e0EtisG9GmRxb6L2gnMHWQY0/8e+8rb
Cbjk15hveci+V9sJOC2caubxhH0r2gkMu9uv3boc9tU1Erjt4tnr+G32HWIk
kPcof+aau+zrbiRQ+L77Own71O42Elj7OLVX6xT2vWwkEHe0uO5cOvuWGQm0
/PtrVSyzv3Z7gZj8y2cL2CfJqr3A+9RHU782+rq1F8iWbXabwf+H3s72Ar/7
+5gfYZamtRd42vbXx8pr7F/SXmBczfXhLYvYX7ODwAL5dI3AYvYf2EHAfN3S
DytfsP/cDgJdY7dmVjNLQjoIjJ3T4t7MUvZP7iAQuHWmed9y9i/uIPDexvGR
OrNCw1jAvK5Hzcm/7C8xFlCdH64iX8LtfbaxQMiVtBPdlnN7DzIW8FnQrK25
O7f388YCtyas1bSezO290FjAYXbesIIp3N6bdhSYVn/MXMOR23vfjgI1JQ0t
3Hm7dGZHgQevbWZ7TeL2vrWjwI+M26WTJnB/d6ajQGuDV/mzmHOfdRQ4/9nZ
YKgt93dNTAS8milC1tpwf9fLRMBgurn3q+Hc300zEbjXdqVaO0sly/1MBJo6
PbkxhFkRbyLw63R2z6G9+HzPNxG45nS0adevHP8/JgIO1pP7ZdVx/Lt3EtBd
tsTvsBHH37GTwHvXqQY/WnP8fTsJ6Bt9XqzfhuN/spPAr/wBUYYGHP8nnQSq
zsz/b7ghx/9nJwGdqnnvZuhy/LuaCpy1b1Fdp8bxn2wqkBVxM/Ulc+4GU4Fg
LbM5j5ty/I+bCixotsovogXHP9tUwKk+ee6GVhz/b6YCZnXlIx3+Rir9zc0E
JnT9sjtdleM/wUxgUM/VrXs24fivMxOQzbsvq+T9TY+YCfRz7D76KB9P9tBM
QM+xp9U8dfb/aiawKKLf+6aN/p3MBXIuuvSbp83+DuYC9y+P84vl36e31lzA
rmH0/RbsKz1kLnCs/PXJ1zrsf99cIF7v/ujp/PvjPpsLSIMXHvgxgP2NOwuM
fBK6I3Yy+4/pLLDdxPu+s4z9V3UW6G/3Zd8vR/aP7iwQuu1HzJ4p3P7vdBYo
+qKr8pn3rzXqIlDU7WqoQRzH266LQF30T4NfzDLPLgLSmOwVlvHs+18XgZQ2
Dn4ihn1vdhHYc3DPhsPH2Ze6CBh8Cltos5t923YVmNXBcrB8A/st7yqwr+VX
yyp/9jvQVeDTAJNPp46w3/WuAnvk8cdnHmO/qq4CPx07/BzLLDHoJrBlcvq2
0YfZb2Q3Aa9HKWFdY9lvSTeBhQ2u58Gs2NtN4L1elMGdZPbN6CZQtlL91Dju
v0wruwlkzJyg5naVfVtZCHg8N9sRxv2X/zALAex921T7BvsutBCoeTuilRn3
X6V7LAQGT7jVOb6xf7tiIVCx7utSf+5/pG8tBLxc9unObM7nd8vuArV+kSvP
6/H5Pbi7wFM1J3zS4vN7fneBF3+XjrdjVtndXWCITdmlgcySS90FMkMGfv9k
yuf3m+4C6XdsxQFzPr9b9BBwjtUz9OvA57dlD4HjQfUPPZhrXXsIBKzQqark
/sd0Rw8BGFqs2KrB/VtqD4E0jVF6O/+w/+seAr7yYcGW59m/eU+BcRe0bmxn
Lh3QU8BG2hSDU9l/Tk+BqpLWG20y2H97T4EVR8YkJPH/7XXhH6fsaB1xheP/
sqfAOZ03z+M5PrnqvQTK1dd07j2L4y/pJfDCLqfQegHHf1Yvgaxl1TsSFnH8
t/USCAgtK77BLD/XS2Ct9Hbo4lCO/4teAg9mPGrnGszxV+0tcDdifo/TzKZ9
eguMk17Zum0nx39Gb4H1UX5flm5j/4DeAm2g+XjDZvZP7C2w2yWv6PlW9n/a
W2Dk5AE9zZj1VPoI7LhgHrzcg/179hH4cHhhn4ol7O/UR2D2jKIxXZax/5Y+
AsW3uv15OJ/9T/cRyArb9Oo6s0p+H4GtVOpTspb9f/cRmJpxxnM2ny9uFn0F
/rjJS35Fsf+UvgKnI95suxzC/pv6CgSVztjd/T/2P9FXYNah05Vx0eyf21fA
82mUvMcl9v/RV2BA5tfV88+xf5d+AmnD0sbXHGX/Sf0ErL/eGRR3iP19+glU
9bXf/mwh+x/rJ3B9bX/nqe7s/7ifwLijDlN+83avhn4C9Us6HXrD2+PMJAJ7
J9ywDOb45o6XCDTP0xjkN5H910kEZEtF062T2D9OIqAX3vCybAT7P5AILGqu
rWjF/Z38i0Sg8Njjxx4B7G/SXyCuy8SPnRvv58b2F0hJm38qgM9n0zX9BTZU
ThtymVkW21/A9/bjJ1HM/vf6C8S7TDN5xP1D0qf+AvObD2698RX7dxggYBBk
f9v7PfvbDxCoMR2nH/KZ/b0GCPT2CCi4wewVNUBg18ymM9WZ424PEJhaG/b8
F9+/5n4cIOCyvlStN9+/qhgNFOgUcvHIYO7PJLYDBXT+q85NTmB/j4H/2odE
r55/rzxyoMDDjfeO3N6ovH4pbgwUqDymNu26g5JrqwcKrFHVObG/KELpbzhI
oGls/sHgLCXLpIME0obcMJ4VqmT/ZYMEVozKrs0IUnLS/kECRSETbZ5HKLn0
2iCBNy09h2TeV7Leh0ECm6y+rDUVSpbqWwqkOMdk/lehZK8RlgL+JpO1oyuV
HLfYUqAVRSx7O0b5+3LDLQWWt0zqjLFKVsmwFNi/QedKm/FKlryzFBju5JM7
nLfLh1oJ+LzoYnW8D/susBL4pHIlLoq5NsxK4OH6vD82I/h6nm4lMORv/bV3
bkqWlVsJbHDLq5jC7K9jLRBrsnfAh8VKTrK2Fjjq/86ymrl0nrXAH+OZThWL
lKy3y1qgoVKl8IOXkqUXrQWc1dY+CPdRsleptcCLjVbWD6OUHKc1WGD07h/m
95hzBw0WULhG6bj5s6/rYIGqKz/VYwLYN3SwwOzw3VrTg5TsljJY4GrFULWV
cez/arBA7Hz9alVmRbMhAh20fq88e4H9+w8ROPf4hb59Fvu7DBHQ6rSuvUEx
+wcPEbgVMbhsyFP2TxoikBy/0Vf1DvsXDRF4njHQPCuV/dWGClyV9THLvcz+
/YYKuFkkrdXi7VLnoQI99u6yzLnF/oFDBXLvdXC/do39zw4VaOMomavJ23Of
//u+dWt9Pzuzb+9hAgN8p+2tZXabPkxgk+PiWx82sK//MIGhqisvT2n0TRgm
AKtvd8J2sG/BMIH1kj5L7U6y799hAsO0U2985f9D1mO4gL/11J/G59l36nCB
GHubt3WJ7Lt5uMDYSTe9JdHse2q4wHuHygXdD7Fv3nCBOdYukgt+7PtruIDN
Xavnh3exb7cRAjMmb+74YTv7ykYI7OnStSpvGftuHCGg+mzv7PHzOd4nRgjk
HTdAPbcvSc4IgSnnwzasucr+30cIlHyMMwlOZ//OIwXuGDh/GM6smDhSIKjb
yDobjkft+pECYviLO5t5u+nRkQIre9oEnH3J/o9GCvSb9nlvEcffv36kQNSh
7NyZBexvOkpA/XvHyXsr2H/cKAG7U98c9N+zv/coge8LVq4//4j9D48SWJ+w
t92Cx+yfNUrgxPQkV4uH7F83SiD82hyJSjb7d5QKXKxcpu/9gP3HSgV2m7ez
jGOWrJYK/DZ+Omwktz+3GKlAl6WLjXIy2P+uVEB1RIDuCo6nolYqoCEbuj7n
Ivu3h0CMbYtoLf7/TEdDoCEm6KEqs2wlBCz/GyL1C2b/gxBoud5EOnon+9+C
wCXbM1rDmPXa2QiYGoY5rN/HvjY2AudH/p47Zw/7rrARcMjX7OjFHBdhIyBc
g2cc4faTq7ARSOodXqU4wr7VNgLypLvPNxxl3za2AuuvDe+aHcK+o2wFrDUn
SP5yfyJfaivQvCp60FM+/xX7bAW2pk8w+ctcm2krMNXOeZ8Ls+l7W4HY5g9b
zt3Evq3tBPqhpfNt7n/9h9sJFF7X3D2/nPvzRXYCzRwiJjbR53jL7QQC3/Y3
b9Ke/a/aCVhtHhvh2Yn9K/7tb/kzvC9v99IdLVBZ+W68szH7Dxkt0DHlyLMV
7djffbSAsfpYh9AO7B82WmBIVdQ3J3P2vzxaIOr2mO6avdi/bLSA+h/Z6qtS
9te2F7DcJftVxNcHhZW9wCl7YyyZzf5u9gI3I0fg1Bz232kv0L2wouPgeeyf
Zi8w/FOhj95CjneJvcDL6u+hXzw43ppjBD68P+K1y5P9B44RWKWz0yGMWRoy
RmDkPP0Lz7j/iSseIzDTsXh18Rv20xgrsPvA7/nOL9iv/1gBoytGXRuYJbPH
Cpy00+mz8xX7BY0V6OsRUCPn50n5+bECJtMDc8YwKwrHCux4ZDxMws+ntU0d
BLRVXTMjmE37Ogg4bq3NHKPP9yszHQQ+OfofHs/sv9VBYMSayJsTNPl+5YyD
gE6i/FZqZ75feeYg0KqVsdOMLny/0mScgKVoMjuZWdprnICR/XHD6xZ8vzJt
nEB6osuIe/35fsVvnMCwl1dlOo3Po/HjBMa87ffwtQPfrxSME7CpnKtlzCz5
M05gffjk5RZL2ddxvEBxtqVJsR0/n/iOF4BRft9ua/n55OR4gb9LrLt2COLn
kZ/jBfT1r05fzuPH/l0nCNgOskqob8Hjy5MnCCR0tl7ywIDHlzdMEFgf1HNm
N0MeXz8+QSBpT5ZjFY9HS7MnCFyclT3jXk8eX/82QcDKeLxRzCgeXzWfKHD3
QOwCcuHx1QkTBZxn9d3fmVll/USBzYOm7WsxmsdXj0wU+Dm4uaphFT+PPZwo
sNtuePZBHi+Vf50ocFPx7Ib2J/btNEmg7vefC1Ff2NdhksBup5cpdR14fH3t
JAG0TS5o3Z7H1w9NEvgVuM7dhMff/e9PElj182FyeDv2/zxJoMnCOSfrzdjf
eLLAlD0xv/x5PFtvzGSBz0ZN9OKYpasmC5Q/Mx7YXZP9oycLnDsxeGB0Az+P
3pkskB1aujiQfXJrJgtM3xKbvryMn0fbywRcNKwm/OHxbomdTCCsZMCan8xu
njKBY7aL6t0/s/9/MgHVtC5P8/j/ryWZwHOt2muuFuzbdopASKpUN8mWfTFF
oNh3udU9/n/9l08RgK7GDHfmpANTBDZuWTa4z3D2vf6Pd9+wVAxkPwNHgRqf
wNNGwzieSxwFilLclo7h8f7cvY4CniOtnlgxq2Q6CgzK9c+4MoPjWekoUNK+
9+LmM3m8vNVUgQtZ0jPqzPJhUwUqC7qFkIzzBQunCny0OL3jD3PtnqkCP+JW
fsYU9rsyVSC1oV3fu47s93aqwNPXl8uaz+LfP99JoGDq6YunF3C8djsJTJyT
uP6VD/tcchK43Uftq20Ax+uNk4DUS/1nnz3sYzlNoGxz3yU3I9jHbZqA3pQH
We3+Y58d0wRuF3cyrDnIPqnTBI72Mi85Hsk+r6cJJOpYG3vHsE/z6QIpXV8O
XHiMfQZMF5j6KtJ+2kn2mTNdYOh4b3XvxvzX9uni3/vAfo1QcLwuTBd4N9Bo
UA5z0svpAn4di06Vl7Gv+gyBnHTpYr9y9pXMEBgxWaG24x37zpohcGb74M75
uey7bYZA3Nrb8oHPOZ7nZgj06B/z9hxz7osZAr86W+1TY1ZpOlNg3lZdp2ec
r5P0mSnQNzdC/SR/n9uMmQJaeln+y3l/ecBMgTMlkzv8vcf+iTMF2ql/O+Kx
nP2fzhTo450RWbSE/VWcBYbf0nfZPZ/9ezoLdO3d+kDsMvZ3chZ4f/rn6+b+
7L/FWWCVTbLXka3sf9pZoGpt2J7RO9k/31nAcggmmsvZ/7ezwJyRpxLB7GUx
S6CpWniPznvZf8osgSW+b5ce4vjmbpolMHaDW/244+x/cpbAGCdj059NOf+Z
O0sgfP7TSZ/UOP/5Y5bAl9CkskJmeZfZAlHP1yQbqnP+c9JsAY0DHwytdTn/
6zNbIKjXlw7tvDn/e2y2wH75V09NP87/Pp4t0PJkYfvdAZz/bZgt4DvZ42Yc
55uTzFwEAvb/1I+K4PzveBcB97d7973ez/nfdS4CXttv5C6M5PxvnItAcXA/
Dxzi/O8DF4EjkfZn5h7m/O8XF4Fzj1oczY/j/K/JHIHOBXlWlkmc/3WYI3D/
sI9qaAL7r5kjoH42ds2Pc+wfO0dgxLXynGzOr8vvzRHwsB/wOfk8+3+aI1De
b3KWXj77d5gr8PbKou0jmynrBUzt5wrE1a46s19XyTKvuQKTzE+Jo8z+UXMF
Ssau85zFnHR7rkBOlL0PmEs/zhV49vhon6vNlaxn5CqwOuI/3xpmqa2rgNR3
gb2dnpK9PFwF2urYr/zxmf0jXQXyXX/Y33zL/jdcBRJPDgsc+Z79yVVgYd7y
YXkV7G/oJqD5Isq6XpPrH6RuAhEHTF9VtOD6h2VuAtlVkqYLzLg+bb+bQOse
O1e248/XXnMTaHa2K3V/x/H/4CZwtenZ52qvOf768wRmjryhu7uY4z9insAd
31qr2Bcc/8XzBFSrfyYuf87xD58nEBf0Wa3pT45/xjyBFgus3O/z8aXv5gkc
n5vS3Myc/fXmCxT8kd+625Tr84bOF4joabh6tjbX5y2YL1BztjK00oDr8/bM
Fxj0tnTBTiuuz0ufLxDfVL7gojX7l88XWLV8W5rNRPbXcRew2q62c+Fw9rd2
F0j0i4vfxJ+vnecucMtiq8s3/rzpLncBc9OXs2MsOf4X3QXCbo2YRIM4/qXu
As28XqR58/YkrQUCy5cP7pI0guM/aIGA07662Ynsp+e6QEB7blH2pb/c/kMX
CJQOur6pawO3/5QFArfjoZatwf6vFggYvF+zSJ1/b26zhQJjPjd/2nk0+w9Y
KFAzeYO2xzD2d1koEDP2BNk7sH/wQgHjlOJrB5jlSQsFcndbW3gzK4oWChz+
3nr1Fv59tWqLBK66tL+7RsL+/RYJ7ArIqNjCx5c5LxKw6/V2ehYfzz9wkYAi
YIiFx1z2P7tIIL/w7b00F/Z/vkjgc7buodJp7K+6WMBjS1Zh11kc/96LBRz9
V6iNXMjxn75Y4MO9D+FbPdjff7HAirrdfc0XsH/CYoH1aclb9vDnVZ4uFnjV
5te0YcySv4sFejpMGO3vzP49lghkPjusmb+I/acuEciqtYzP92L/zUsE5mSq
31u6iv1PLRFolamoHb+S/fOWCBS8MyyYsIX9fy0RmHm527WBfuzfbanAjpFl
DaY72F+2VKBm/+/ofpHsv3GpwBob9xviMPufWCrg8Pr1gv9btP+oGu84DuBx
nFKKi0jkFFGjRim/Ftqn0pzMjEQ7SpdZdH917+3+vreEWra2RqkR/ZofMWzN
KDulIqJlqYhKW1fHj8T7FJGQ7Dgff77P9z7PeV7P53me7+fc8wk4wv7rMaAL
PjN3RR5j/6sYUAgmKBsL2e8qAqmO2FMGr1voRKC1Fjcu1uvZd00EqvarXHw7
nn19ItDtM2ZzVxz7XMQg5SGRsz3nnhAxqHybx7aq1exTi0GSJHmmIJR9eWLQ
iIoys8c69tWIQaOC51P3Wvb1ikFWgvtX5Hx/zZMloCd2Z0sLhexbJgEdftu0
8LmIfUoJKCi9dst2MfsOSkA92ztF2ZzzqyWgoh8Sr0bw/a7vkYBCxi3NDi9h
7yQpyMrcb7H6Otd3qRRkm+8wxfI8+2OloFxjzonf0tm/XwrSLS5GMT8PlVVS
kMOYoeamy+yHFBQ+49Cddjeeb5sgA12bmta/15Pn2wJkoOfaF62Zb9gvkYH8
f6x8FNHL/iwZyFJ0p64O7K+UgaoSsltGP2X/YxkoKvnPDm9rnmfzjwW9u1GZ
nSfgebaYWND4e/NFBwfYmxEL6nY+POPBc/aWx4J8l9U8s37F3s5Y0CnvyK5O
nkcWjpG//3//cb9nPXsXyUEv977xnc65MloO2tPYPKm2jb275aBhvgPThJ1c
79L3695971w7uN735aDel8uT/W6wd5QCNLggrW7DUfZ9rQD9ceLkkIO/sC9N
AQpOOpLQXMD1PacAZSpNJSH8PZF3KECtgvLoXM7185Sgka77ty7SsW+jEuQ2
mHXpAr/fXqlK0GvX2zkLZOw7qwQF/lW1IljJHus4UGpESlPFVvb4xIH8r5wJ
XS5hz4Y4kCFsQdZb/j58uSsOlLzb6e+f+X1PPB0HKhqfNfdtEtev7f269aJD
e0zss1SBspstRrSo2eetAqm+dy8SR7JvvQrUPPtuVIKKfckqkHt+f34uv3/5
v6tAUa7xNmV8/fUtKlDp0fV2Jn6+LYapQdW59edPrWHvLDVoRZBXVxlnYbga
dNPPp7gqmOu5Qw0aSPGsG877S+VJNcjtVkKw/Tj231KDNnlVWGrGsn+IBqRO
HfowbhL7PTSglFC7dZkf9qcwDejotEQnx4Xs36YBeZhWHffjbD6uAY1s+HdA
Pof9NzWgpU6Bqybz8Z8OakCj566a84j3A/lHWtA/7bUCIef81VpQx8dCm+/c
2W/Sglx2liWVcrYo1IL6ZtpN7nJkf4MW1PDFiRQp73fCN1rQ2KoK2YUn3J9N
14HmCEYXhjdxf7ZSB1pzsbt33zXuT/Q60ANB3jExZ5fDOpCxwmgjbOT+pE4H
0nXeiyzg8yX260CXd9wLyuni/mSqHpTR5DZzz2PuTz7Xgzbbhq552M79iVYP
+nVl2KuVd3l/LtCDvCV9MU85y2v1oNbC4XrnVu7PXuhBbt13Q3c0cH/mbADd
PGdVWPwt92chBlCgyU4hTeL+TGUAxfkqlkzkLMw1gDInRN/34bz7qgHUbww4
47WT/c8MoP/MgS1WPI/Z42QETWkMKC1Rsf8zIyjD1sdxk4H9CiNIoOid3iZm
/wEjKKRGP6uAc9FlIyirv/tBOc9/mruNoNNTzu3s4yyYaAJFhiW3JWnZH2QC
LU+f5jIYy36ZCZSmmxdjpWH/PhMo9Vn5sEQp+y+aQJ717lFF0eyHCSTwc/Ap
2cJ+h3jQ2tcle6Ui9lM8yEY148nGb9gvjgeJLvlVD+ffV2bGg/Jq5to68rxp
T0U8KGeXQRbwYR7VPgH002zb42V8/YlLEkCO5vBOMR9ftDUBdH3zV+llnM3p
CaCWT9phjjjg/z88tIPK
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.556656*^9, 3.9586752*^9}, {
              0, 0.0798545257471515}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.556656*^9, 0}, 
            "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False},
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.556656*^9, 3.9586752*^9}, {
             0, 0.0798545257471515}}, "Frame" -> {{True, True}, {True, True}},
            "AxesOrigin" -> {3.556656*^9, 0}, 
           "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJws3HlcDH8cx/ElVygrd0rryp0tFBH7VhJSK3IlLVLkqJy5k7scm0o5IolQ
FIVcWbnPkityVBQ+X7LJmev3MJ/fXx7Px3d27auZ+c7s7sy2nhzoMbW6TCYr
ayiT/ftXJpMFXV9BiJA1Gd8q4PgAmUyW8GkFYZ3Tue/tJkvOMwslDFTd9Zo0
XrJscChhbNOmt995SlYGhxJqZFJ9wdbsDCU8GZocaTFGsvZKKGH4wKsmZmzd
x1DCbWV40JN+kvUtVhKGv+hzz9dBssJpJcElJLbdcLZ69krC9xtBTjPYoXEr
Cblq4+7b2ek5Kwman3tNxtpLLnq/kvAnNtLL4tOxf5Y3CyOYj3KdtrhCsgph
hF8FEzZe0ksOmhFGOGDzruwBOyEmjLCoU8T2CSQ570IYoeGIzPMZpZJlFEb4
Is64xLyUrGy8iuBjPH/eziLJmv6rCK2mlB+yYmunrSLMTi/t3JCt27qKsGVc
zvkzryTrz60irPAt/ORXLFnxZhXh+1n97cVXJKsbriZc6Hhiz43LkkP7ribM
G+K5+d1ByelTVxP2Dfc5PXKX5KItqwnL126YE7ed+8+sJhSYW37fzVa9Xk0Y
bPb87Ep2kPEawmSPFjNjo7i/9xpCVu9rRoM2cf/kNYS17/Y5p0Zw/6Y1hBtt
f+fHreH+U2sIvYxqy6as4P7iNQTv6K/P5xxKk/rrrSW0mJjkEs7W9VpLcNxW
9LXbbsl6n7UEc8uKOfWjJSvC1xIeWQcU+1cclfoz1xJS+rb2mEOSQ1+sJWw2
jX8zsFxyep11hHGzZ50d9Upykc06wp6QT8vubUmV+r3XEcLujrPxCpOsWreO
sO/SoYItaslBx9YRNnQyrHN5kOSEwnWEVkPUWVbOkvNqrifkpIbW6dBPsky5
nnA/zdPH2kaycvx6QtvszsOHWkrWrF5PcKyo+/Po5RSp/+h6QvOt82cPvyRZ
V7CesM7H6eai05L11TcQWs88+HBIpmRFtw2EQclfGzzfL1k9ZgPhjUF9bQE7
dOUGwpQVi9Lz2OkpGwgzSyPrTWEXPdxAKI49sn0hWy4LJ5TU03iZTTks9XcO
J6hjnEs3+UkOGhVOmGgR66r5ekjqXx5OyA62iFnCzjsYTjjarnzo1OWSZffD
CavMAw9oF0tW/g4nBMX8nBq8ULKmQwQhfu6kKXNnStaOiCAkPephfLaTZN2S
CMJfF5urzxSS9fsjCC+Dt0ZOf3hQ6s+LINQOdF3a9JRkdVUEYV6E3PwlO7Td
RkJ5xuDv/mmS0902EkZaW9fqelByUchGwqmUSeUVByTL920k9PFR2UW6Slbd
2UgoDKn4U6uf5KBvGwlVt0s2GtSQnNB6E2HYz+TstN/JUv+wTYSSlYWHZv+S
LFuwiRB8/Mjm7jyuTNhE0G4fd72SxzU3NxEmb/Loa1IgWft5EyFs6dmJnmxd
q80EzxZTV8jyJOtdNhOujm9yY+ItyYq5/7w0Pn7ETcnq+M2E+3ZB0RbnJYde
20xYXqAfc+us5PSKzYQtpq+udjotuajlFoL16A3jJ7LlzlsICV5O3VexVUFb
CNNsPyauOSY5aMcWwvJxYw8UsxMubyH4ln+wnh/J/eVbCIE2AeXenbi/hZaQ
vCx689k23O+oJZx2OuvZsTn3z9ISbpj7HnvTjPtjtYT8Jh8MXjfh/otawqXV
db2/N+Z+oSX0T/7dMYytaBpJ6PCi3aFfjbhfFUn4W7yh5f8ODYgkfNphbfGm
PvdHRxLGTD/gEPvjgNSfHUkI9D1V0+OlZPm7SEKTVwce/sqRrGq0lfCruI15
g0uSgxy2Emp96rF4xinJCf5bCdsKtnW8cURyXuRWwr7wDS4drSXLzm0lfHRv
NCDRQLKybCth/Ua/6UZX90v98ihCy9MjGte8JFlrH0XwmmXd+FqMZJ1vFCHj
ifvxrp6S9ZujCK7n17zXjpSsOB1FsKoIVE1zkKx+FUVo5fOj4o9KcqhRNMFt
+eyRRbaS0+2iCZszDsze9iVJ6p8UTWiBk9rz1aRx+cZowuHw8na9wqRx1clo
Qq0JMz51ri05qCia4JAxoUNpxj6pv24M4bRuzpO1myXn9YwhTH9X+DU3WrLM
J4bQ23/J6J9s5YYYwiODik6qTZI1GTEEzZ9wh+1s7fMYwqqbsVNM10rW1d5G
sD7RzKF+J8l6622Er6Vlzba3k6yYsI2wPc07pM/aRKl/7TZCLblZc4ehkkPT
txFMv3b6qBslOf3pNoLS4IHq6yDJRTViCce+NbW53kyyvHssYfr7raf/1pSs
GhdLGH8+w8mwluSgVbGEiLEHum37tFfqPxJL6L+ze6PqRZLzHscSEjY8Krhf
KllWPY4w+l63mTvfSVZ2jSP8Xr4815utGR1HmDD3VlGQkKwNjSPUPKBzX8rW
HY4jVFnkbJS9kqx/EEdI/JDQyrREsuJvHKFDsrnrydrc32k7QVFjbHDxbGk8
dOR2wouzXndDfCWnL9tOeDwjetxQb8lFydsJZ8dnet4cK1mev53w/uhMn3uO
klW/thNaNt3TYbpKcpDlDkI9w2afrdgJ6h2EgbLCjT/6cf/iHYSkxNGr7vG4
bP8Owo6+gxw+PkyQ+nN3EDaGu15re0Wy5scOwmTTB+XhVyVr2+4k1I76s96c
rRu+k6Bbpb1e/alk/cKdhJherusvFkpWJO4kBLo+nd/zuWT17Z2EPvHj48Ly
JId+3UnY6WA6tCEvn67YRVhw9slRRUPuH7qL8LtXk6o79bh//i5Cw16/Tyex
VXt2EQru/LrRpjH339hFeKDqfeOTOfdX7iIsKW/XJZ+dZx5PuBOz9619d+53
iSfkd19jvkfN639OPOHBd83GpuN4/e+KJ7Tt4XA3ewiv/6vxhFmXG4UOYev0
8YT61x5VDnXh9W+6m7C52W2E8vpRDNpNOIFqhZYektWBuwl9dv7p5X2X1//2
3YQztw+2N8vm9X9pN8Fvvpl9yk/u/7CboN/ScaqBjLf/5nsINWR1rymsePsf
uIcQ5h6yeLkbb/8z9xDeXhrsEaCRnLBtD+FT96FbBoyWnKfbQxh05X6B0TrJ
MrGH0CR1XNkotrJJAiHmoGv7jmzNgARCWkC10oerJWunJxCaGWxY9yRcsi4q
gfDAZ4dJVbJk/fkEwukmO/al5ktWvE0gHMssOXHPUpoP1CZ7CRvuj6nWvL3k
0H57CTnJTTxTukpO99tLaIltOotukou0ewkHdW0Gh0VJlp/dSzhSFlN7CM9v
qtK9hIsrehQ/n8bzX4NEwvx16Yezl/H83yeRUP9MQNMfgXz+NyWR0P98wAIP
9RGpf3MiYUiH+Fp/L0hWZiUSPI7vWDxFJ1lTkkhwLpt6pGy4dD6qrb+PYHbC
f/tJP8k6232E30/eNn3an89/NfsIf1K22ATu4/PfiH0EX48yx9tHJKtP7CMU
vIpx1GdJDn25j/C80mVGyCXJ6YZJhJPu55eW5Ugu6pFEyO827PvqQsnyiUmE
U1VbzJeXSlatTyJ4G2SWN/ooOeh4EqFintPB9p8lJzxLIly3GGV85I/kvFr7
/+0PLU/urZYu9VvvJ+T10qy1M5Cs9NpPSLgw61RGDcmaNfsJ48rWOSXYSdam
7Scsddq264qTZN2T/YR6W0oXVhshWW9wgLAtrIfhoWmSFVYHCBe+Rg1ymy5Z
PfYAYaND1KOwGZJDww4Q7K5+caw5S3J66gHCK8fGZoPZRY8OECb08xMr2PJq
yQTXvdVG/g6UrOqSTAiOS7nnzw7yTCakL/HoGMVOWJFMMBn7JbMnO+9Q8r/z
dbMp6sXc/yCZcHL0orAhbOWfZIJH8L647Uu4v+NBQuDz59cbLeV+j4OE9LWb
st/yuG7pQcIU488jS3lcf+Ag4VSNLRMfshX3DhK6tY+0mM9W/zxImHzug9My
dmj7QwTZcdepzsu43/0Qoce23foFy7l/0SHC2NPHtcvZ8qRDhJ7KWXfasFV3
DxFa7p0xbtcK7v9+iFB7iqlbGjuhzWFCVpXVqOWh3O96mNCx9djLo8O4f+Fh
QmTquLiRbOXewwTfAMPvI9iaW4cJUadvVw9Zy/1fDhPuNDhV2p+ts0ghJOY5
vZmxjvuHpBC+OU61nMVWzEshjHYNFnXWc//uFELAyljH05Hcfz2FUJo5ypjY
6Z9SCL4R1/d/j+d+s1RC++zCyJ9s+eBUgqWRqY35bu4PTiW8udbHfg07aGcq
wbmg0YHTCdx/JZWwNW7eHftE7v+YSvjl/NFqAFtmeoTgOzHAx3oH9zsdIRjM
1AY1ZmtmHyHMcraVTd3O/XFHCLtGHKllH8f9OUcI9W2umfjEcP/7I4QnSc3T
O7AVzY4Seoe8XPeNrcZRwmvXxc4p7NAZRwntKqcml0Vzf8xRwog85U4tjxdd
OEowz6yM8uFxOR0lPPDdN28Zj6sapxE0U5eGzOS/T1D/NMJD9UDcZydMSyNc
aDl9yx123tY0wucvSU227uP+82mE99dndF+TxP1v0ghNCiM9S7K5v2E6obv5
hdDy89zfN52gXdlj6Zm33D81nbA+96DvdrZ+SzphfnDylINfuf9MOqHiXuHf
91+4/3U6oVvyqik72KHGxwgfdne6PbY+f/7R+xgho78mpy27aPIxQrd3kxPa
GPHnH5uOEdrWehI03JA//zh1jNCw0e0Jjery5x/Fxwh3BwzwmFWPP/+od5xw
9p6P43F+vrxexwkWdV/vbWXAn39ojhOs0mf07cXPpww/Tqi1qdsibS3+/CPz
OOHvr+d78mry5z8vjhPq+dnscuTH6+pkECaauDR0qs6f/9hkEO4Y5Rjf+Mv9
3hmECLXSP5OtXpdBsN77VFXGDj2WQah7vGL8T3Z6YQahwu5V4CsZ99fMJJQ2
aFW+mP8/uTKTYNrC+t3/Vo3PJPhuCwnexA5anUnwHPQs6Sa/noSjmYTJttHP
L7LzCjIJP1t+mfGULTM4Qcg29ym0+cbrv9sJwp6YBZPsef1pxpwgvNSKum8/
8/pfeYJwvMtlXQ5bl3KCMC/JYhyx9Q9PEJydkmRj/1//spOEhH7NA9LY6s4n
CRtqmDgdYoeOOkmodmmd5RfeHtKXnyRM2x7Zpw6PFx08SVj92GrDWbb8/knC
OB3dTOXlVb9PEmS2XQYMZgd1OEW4Nl7V2rmCt/8RpwhJXet4hel5+19yitBh
5iunw7y9yg6cImxb4hGb/5L7804RAs7ELG/SmfurThEW9ajetWYBf/7VLotw
PyvMqpStc8sizN2wc/rpx3z8D8ki7Hy+v9tLtmJfFuFTx7clTXh59Z0sQs9v
RxOXs0O/ZRGu6UcOHc7H9/TWpwlrDaMy+vLji4adJhT3KDHNfMTH/wWnCeVr
IlrufMrH/4TThK9jMhaHsYNuniY0VtewjM/n4//n04S8vbtXNMzj43+rM4RN
EepFC3Mly4acIWzXdPIZwa9HOfcMoX2LK3+38v+niT9DGJAmL2vFr0d77Qxh
jM+5mB7/91ecIfQ7J3+iesL9Lc8S6iVNM2vLr0fhfJYwYPSM+EZsddBZQuyv
1lZ5z7l/x1lC6u73Z8JfcP/ls4ThCaU9I9lF5WcJes+Gs3yLub/FOcLxpRMs
6rNVjucIYao8/19F3D/rHMGtdtLDSnZC7DlCiWZfVV1ePu/iOYL77JYj5r3i
/vfnCL0O97RoWsL9Tc8TVr6fsOARL69RnSfEfTqbEMLWBpwnRFXEnm3Mz6+L
Pk/QGrUeZcTWZ58ndKl9+vizl9z/7jxhQ9c6poJ71I2yCY+vxVsGPuN+h2yC
nZHFuH3sdP9swogmQebJ7KLIbEJ4wafLVWz5uWxCs0altJutKssmWDqZdsrt
ytu//ALh+4abNz/35+3f/gIhpNX7IRUDePv3/eetFp2O87hsywXC1b/FX9aw
lacvEPaqb6h6sjWvLhAOdLq1aFdv3v+NdIR8Q4s9U9k6Ox3hmfLBxrV8fqif
pCPY3TtuN4Ct2Kgj+PoYtdPZ8v5/Ukdo99ttlAePhxbpCPNDmi3zZ6fXvUio
a9zKoIc97/89LxLmus8Yu7gf7/8+Fwl5V1c6DeDXp9pwkZBYfq27xUDuz7hI
OHJudMO7Q7j/+UXC9NdXWoxj59XOITQordGxjZr7bXIIrU8GjpzH56/KCTmE
tIoQQ9sx3L82h3C9ZmfUmcD96TmE2G/Pg+wncv/THELL6OivtXh5fY1LhG1d
zjRbOJb7u18ijDMMOVo8mvvHXSKILo7LPXg8dNUlwpfHOpP48dx/5BKhMP7V
ZKUX9z++RPie4d58PFte/TJhraXLEmteXtX1MmFNrW0Vluyg0ZcJt/U/vVM0
3B96mfB5jK3npqncf/gyIX9B9MCsmdz/8DJh++be9VuHcP/fy4Q7E2SVdbZw
f6crhLzmqUZt2NqRVwiXB366c5rPR3TLrhDim8d/28znQ/rkK//Or79dUvD5
kiL/CkHroNNa7Of+X1cII9LOdO94kPstrxKGhb55e4+drr5KCBx64/rGFO5f
fJVwsmrU/C8Z3L//KsHU2j3sFPj4l3uVMNl8WH6/9Xz8+3GVcL7erZGPY/j4
1/YaYdTLoqq9Z/n4N/wa4V2/1LmB/H2MLOQaIXjswmExV/n4n3iNMDK2dtGw
G3z8v32N8Dm52tsAtvbrNcLC054bzj3i47/iOmGx8pOPeQEf/4deJyS3X/wA
T/j7n/nXCXNTBvW4xt83qfdcJ1wN3W6/tIy//7lxnfB7Qyvt8Xr8/VfldcKP
bhu7WDfi77/MbxDqWh8f2YUtd7lBWHHk/twFzSSr5vzzDa27WwfJQbtuENpe
US8PmcXf/129Qai1JGbQsK38/Z/+BuHmBOPTwYn8/V/LmwSLajY/z2Ty93+D
bhLiZfX3Fp3h7/8CbxJOTQp/anebv//bfpPQtt3blGS27tJNglXrJcp0tv7D
TUJqyff5Jbn8/V/zW4TrYZO8T7DVA28RKu/em9BGniH1z7xFiIo+PculoeT0
bbcIt/oOrn7CT3KR7hbh8FfVZ3FKslzcIhxqbuk6+6ZkVZPbhPrOM0qSbkkO
GnCbkOv5tXgFO2H6bUJGZMLqn3cl50XdJjzeOlwn2LLs24T2C/wqH+RKVr69
TeiZFrH0+2PJGpM7hJ1tDft2eypZ2+8OwXzS3QthbJ3fHUK/5dPqTWHrtXf+
fd5YYq1mK87eIXwb4/o1hK0uvUNwf5eNJ+zQBncJhkc9laGF3N/nLmHym2m7
F7CLptwlyKlu6B62fPNdwpVPx872KeH+rLuEBV2qnflTzP0ldwkphga+zatn
Sv31cwnvrNyWzjSQnGebS3hjWXlpCls2KZeQ9WfU/TdsZUQuwWT9jfM2NSVr
TuQSHm020JbVlax9mUsIL21QrXp9yTrDPELDiETNwnqS9T3yCMs+d13hyVZM
zCNEvKjhtMRIsnp9HiEytix1jbHk0ON5hNkbA1cP4udLf5ZH+G77+VkHXr6o
1j3CguwR9WLYcut7hC+nzJZms1Ve9wilfUwLS/n1Ba25R1hRp/B7kiH3p90j
tA1/Nn0bP3/ek3uEwzWzmyewZTXyCXUH+/3dw1Za5RPyVlTv/KYJ94/NJ6yb
NfCjXzPuD8snWN12aZ3ZmPtT8wlb1N06f2/E/Y/yCT0ONS79xVZUu09wGVHT
zcKE+7vcJ4wqe+YmGnK/531Cduv+Qy7LuX/FfcLzeRfHvWEXHbpP+J7/YoUz
P17+4D5hh5PTmih+ftWf+4TOQ7OmXTDj/o4PCJn7c0o7teJ+jweEOS/rzA81
5/6lDwgfh/591ZQtS35AmLjto/k5tvLeA4Ljxh0eFRbc//MB4VZ2pr+sPfe3
f0g4GW81qboV97s/JKyuN2ZLhw7cv+ghocOjeu+bduH+pIeEqXUGDGvDVt99
SKg2d/fsvZ25//tDQsKNe3YX2eltHhE8WusO17XhftdHhJ0DP3VIZMsXPiJk
tJ8VuaIn9+99RIhITasWxQ669YgQmdza/LIL9395RNhz3e7bU3aexWOCqf0x
axs19w99THgSeM6pPVs57zFh78HpBTtGcf/uf+MN2s4t43Ht9ceEsirTX3PZ
uk+PCZsSDHa1COZ+swJC5bo1CWPZisEFhPu7G9kPns39wQUE5cr8Pmcmc//O
AgI6mm/28OP+KwWExNbxxrvZRR8LCFtjTowYPpX7TZ8QXhhG3nk8hfudnhAG
NVcscGIHzX5CiJtVfvycD/fHPSH8/Fg3fN5Y7s95QmhWuCB2/Rju//CEUHL9
UtslbGWzp4Tj7Z9dWs7W4CmhU1qxtZIfr53xlPB3Q40u6WxdzFNClXW16bae
3H/hKUG+cKx7977cT08JccO6TP5hy/2NCwm1pj3LqOzI/f0LCaPqb5i7hLef
9GmFhEF7hv+8xNtv0dbCf/OVScRH3h/l5wsJBRlxW67y/qN6U0hoYBavqHDg
/obPCJeCbyj29OD+vs8I44MfjzXn7SNv6jNCV+OaGQ3suV/77N/xqY5TTh/u
P/OMMLbTgMymPK55/YzgdiC5i557tMbPCTvcSvpPseb+3s8Jr35P+RnQkvsn
Pyc43j/ras77o2LTc8LiLe7XX7bg/lPPCWpD1ZWPptxf/Jzg1q5zxy9/ef6v
94Jg8mnl4Q0VPP/3ekFo+Dg2Kl/w/K95QRgSefRbg8U8/4e/IIx0677mzHw+
/8l8QbCtehWmacLnPy9eEMJfxWwKqOTzvzovCYnX9XcjavP5T4+XhG/6rPdT
b/L5n/dLwr6OB81GXOHzv3UvCV4pIemP+XxSe+wlobs4dsxfyed/hS8Jn5+/
Ck3uxOd/NYsIFl4x55q35fM/ZRFhVbUXM/ub8/nf+CJC7oHKDyNa8vnf6iLC
1hoxHzYZ8fnf0SJC7frzArbV5/O/giLCL7er1V0M+fzPoJigrNN/025jPv/t
Vkx4q1tx6ksdPv8dU0y40fL44ea1+Px3ZTHBNmnKrqf8eXdeSjHB9/XSA+7/
f/796N/jex0775jI7/9kJYQTrp4+3zfy+7/OJQT5DNMaJfP5/d+oEsJW70S3
o+D3f8tLCKN9XY1sBvD7v4MlhId+HzZE9uP3f/dLCCezd0yaZc/v/36XENZk
XD/pzw7t8IqQVjf8yuc+/P5vxCuCV7dK0+ze/P5vySuC5czc1ABbfv934BXh
Q2CzC8FsVd4rQud3vTYsYgdVvSLM2xL3bX5rfv/b7jVhS9TahS8U/P7X7TUh
4IXRzGbm/P530WuC/fTBdRa05P59rwlbDS2PNWFr7rwm5MZNt3/ejfu/vSa4
3RvhIbPi/talhNr4panRl/uHlRIu6XWHktmKBaWEpw99JnTkHnVCKcHC+dGF
/s7cf7OUMHzE9ugr7PTPpQRvv6wdvwZzf6sywonMnhGJg7h/SBlhyAaZyWNe
XjW3jOAY89izx2jujy8jtK98tEIzkvuvlRGirx6rP5KdV1FGKLHaM8pxHPeb
vSE8ntqz748R3O/8hvB20PP+hWO5P+gNQb5joks2W7vjDaGaU/FZxXjuv/yG
MLrlr7ZBPK4vf0NQ3c6vl8WvV9HiLeFKwqnnnvx61Y5vCesWpXZw579f6Ky3
hIWB8/aVKrk/9i3BN/GIKfHyRRffEmx+1s9JceH+928J8dlz5mawVU3fEZ7n
eo9Zxg5SvSNkKAL0ueyEgHeEeaceRNwYyv3R7wiLOhg+u8mWXXhHcP34O7iA
l1e+e0e48NlF13UI9zcigih8Z6Ll16N1IIK6963mIWydPxG+TU05dZ2tjyTC
vKeRzr348YpzRCir6b225TDuLyPCqQ3D7tm7cr9cEF7v791ilRv32wvC/l1N
t1sM535fQbgzb/HXYAfu3yII4V8evQrg7UN1WhAWtB2TEM0OeiUIyY1XDRjC
+1+C0XuCs75fghnvX3l27wl9PlTT3a7B/ZPfE0znxZ22NuD+je8Jt6vPbbXy
gPT9nubke0KDvEmnJiXz939F7wnlFX+Up9fx9391PxAG7rPf3269ZH3PDwRb
bVXxfrbC5wPBd97xVhGj+Pq3DR8I4/ufWzGXHZrxgRBWlXL4igdf//b8A2HF
7ez0OyP5+rfa5YSF1jpFJx6X25QTkh28D5a4SVZNKCesiB7aMNBVctDackJe
bV9bU3ZCejkhLPBA/xAHyXlPywnbJ6/WRrFlNT8Sei0NzV7eT7Ky+0dC6aSB
zVLYmnEfCcu2vM2JYGtXfSQow10DUgZw/5GPBOHlkD+ErX/8kdBSdTh1B1tR
XU8Iub6jYz5b3VVPKAgq3zWsP/eP1hPqJjx5ENqb+0P1BMqa0q0Rjxcd1hNW
TRxVw58tf6gnlBnKvjfj51P91RPkp+zmneDxoE4VhKXLOl1azU4YWUG41Cd5
oAc7b1kFIffBgOxe/HjZwQrCYa8uykoeV+ZXEJx+mNx+xNb8qiAcyu48LISt
tfxE+O0xbGWFPferPxGmW9+7u6EP9y/+RFhba7RhKf+9FPs/EcxTZ1wO5b+3
OvcTwev8ydY54P4fnwhLlvZe5OjJ/W0rCZ8LVOcMRnP/8EpCqennRhvGcX9I
JcG5Yc+93pO5P7GSkFln2mv/AO6/XUkQF5aPnjSL+79WErye+n5SB3O/4jOh
Wqvka3uDuH/YZ8LcgZVuB/jxyvmfCUUqs8K42dy/5zOhfMZs6x1s7Y3PhOsz
HufcYesqPxM8d5sdT5rJ/eZfCIfGHmulZCtcvhB6HVneryF/X66e84XwMyym
vB47dNcXQprFui2m/tx/9QthWMmH2mnsIv0XwsB4zfejvLy85VeC64Jb54qm
cv+gr4Sotc86ZrGDAr8SRikm9dvIj0/Y/pXQPXHdklY+3H/pK0HerrenOVtW
/pVwX17+cO4Y7m/+jRB5c+QwH7Zm4DdCTJJJzxReH9qZ3whXlV4NfvD+q9v2
jfDZbb2ZMa8/ve4bobS23Nlfzf3iG+Fj4q8hX9y5v8l3Qkjqu8GNeDx0wHdC
xpBjSda8P6dP/06Y0nmfsopdFPWdUJa7cbjVCO7P/k7IC1lifdWb+99+J1yy
sZs3IJD7TX4QVBfv6NW8fhP6/SCk3QnN/Pv/+vf7QQg2mgbDOdwf+YMQsigq
xzmC+8/+IPT+dtC+m5b7S38QwrOjwgZEc3+DKsKsJ/uW6dm6PlWEcRU7LI1i
uH9KFaFNWsP4CYncv7mKoFtfLd6frc6qIqTWaprszvNpaEkVocD6oMXGg9xf
/ychfcKwNhYp3G/7k2C+blW75tbcP+knoWx61cOrzbk/4ifh5LP2Y/YruP/E
T8KiUe03uXTg/pc/CVc7uE0cwc4z/EU4uk1zb3t37u/5izA4ueVKnQ33T/xF
eLnJ+2UmW7P+F+FVldu8VLb2+C+C2Rvr5W95vtI9+0Xo3fbHqKO8v+tr/SYU
F+W8bMLzg8L6N2HxrspnRn253+s3IWT4kRVxtty/5jehfPvwoZe5Lz3tN2HM
Qofq97tx/5N/z2fwtvRLW+6v8YfwsrPMy9KE+63+EJ4tWH95JTto7B/CnkHh
m3pX4/6wPwTj7N2u0fW4P/UPwS3p2IpRv/j6l8d/CIs7H0oc/YWvf6n2l9BM
3w5n9Xz9S5e/hN7rgtfkCMlaz7+EbTOyMmyeStat+EsoWRR/3b5Ysv7QX8KD
puOGbH0uWfHgL2Fp0M0Zgby8+s9fQssjdwelvZAc2lEmMGN05LRwdrqHTGDI
0y8HWrCLlsoE4j6serbsmWR5skxg94DxZc/uSFbdkwnk751eeDxHctBPmYCB
Y1P34cckJ7SvJmCXrKxpGSU5z72awNn3v9f5eXP/4moCLetNWbyCrUyqJnBj
dMyyypHcf7eawPejpq0MlnP/93+PDw8pbLeE+9tUF5DvmmhdYxL3u1YX8Cmt
cJ+t4f6F1QXePHvj6zKF+/dWF6hz9WbLl+O4/1Z1gZv5SY+Xg/u/VBf4uODe
UvvHfP23hYGAquuUh2kqvv57qIHA16Kun3Y1kayaZyDg3edIq0uJfP33bgOB
86fPmV5ZJznhuoHA/WqOLdaulJz3yUDgbVavujnLJMvMawiM9bfuFrJcsnJw
DYFvy78ukqkla4JrCOzqddirsYtk7c4aAtFzm76N7S9Zd6WGgPUxu6kmDSXr
P9YQ2L9D2bVKLllhWlMg8OXIlW/PSNeHq51qCkyYn3DJf6fk0Nk1BfJb7zzW
bJfk9LiaAjaTVxhahUsuyqkpMGBo45Byf8nyD//GW75uEXaUr/9uVkvgtGlI
+8cj+Ppv1BIwW+wYsK4FX/89o5aATZZ81cZ8vv45ppbADvOa1zxO8PXPuloC
cYvS19eP4OufqZbA5sdOnb6G8/XPjWsLZGes39+dx7X9awvk/Jnj67uOr3+e
VltgaOTSxLjNfP3z1toCP15UXrR+KF1/pjhfW6Do6hQD+yeS1W9qC2xu4R+8
JJev/21YR2DAVMPZXzZI16+l960jEOI+f+qJkXz979Q6Ah2zZPJmEyTLtXUE
6iyOrtV7LF//e6aOgPvFxXfDhvD1b6/rCDSruBa/Y6jkBGNDgZk725pe4/G8
3oYCZr96/HjWVrJsiqFAc6/H0aKVZOUmQ4HcuHVvQywka04ZChhB/jTWXLK2
2FBg2tPzcw4oJOvq1RVY0rFg/sjWkvW96grMeVrZYqyZZIWmrsC4tneWv7KT
rA6vK7Bwwq+MEWrJoZl1BbLWN/9lxr3pL+oK1LmV+vuqDffXqScQE3t0iTc/
Xt6jnsCFRb5el+7w9X/e9QSKSkKWVlyVHLSunsCsLPPU64/4+udj9QQWJq1s
djyfr38urCfgtvXMhPgrfP1zrfoC+28cbG5pzP3K+gIj/6y+c+gQX/89vr7A
hyeY7qiR1p92dX2BleqyCxleknVH6wtMWq/OuT9Rsr6gvsByGB/oMYPXv4GR
QJ0N3rW0s3n9dzMSWJ5eajppuuTQMUYCUePWGl1YKTl9pZHAtWnLQ7es4uvf
U4wEvNIPbPnDlj8yEqh1qionNoavf5cZCyg2vzK8FcnXv3c2FsgftbGgVTJf
/zjKWKCwJy50SuPr35cbC8y0WBspf8vXvx8yFjhBXjW2v+Hr3+8bCyTdjFni
QpI1v40FxFivV+vZ2g4NBL7te18vVHD/iAYCPe722Gv8gfuXNBC432zysPZs
xYEGAh961T8ZVc79eQ0EVtxsvrLxJ+6vaiAQPCvk7HV2eju5gFXF/rg+X7jf
TS4Q4Vga3eT/6/8XyQUeHT6+17qQ+/fJBdzKzX+tfsr9d+QCi9wvv1nCTvgm
F4i55jzOm53XuqHAiR1ucxr/3+/aUOCYYu7wrZXcv6ChgN21Dm8C+fVqEhoK
LCq+c1XDPdqbDQVmFT9yuPOO+z83FOi+8vBsX/576FuZCCwKfTAAbMUQE4HY
iqDYkArun2sioHS/teniNe6PNxH4s+jxdIvr3H/NRKBKNfRYRTb3V5gIjHRe
3e9/y80aCdzX5L/dsJT7nRsJfCtXzdzFDgpqJNDWY/rnDzO5f0cjAYeFIYuM
Z3H/5UYCY0IqrfWTuf9jIwH7u41/LeHtU9miscDX7LopX+dwv2NjAYXx896z
PvL9D7MaC9gO2eA3ka2LbSzwyHpjyTK2/mJjgc/n1vqs0PP9D+8bCyTZ1b3U
+zXf/9C0iUC9SUefOhDPf6omApaOoyfufMP3PwQ0EdB8DK26wS6KbiKwzPvq
qDFv+f6HC00Ewu72Ob2TH69610SgaOgtt+x3koMaNRWI/dNu1Ah2gkNTgQjX
imhbdp5/U4FNe1uk+fDjZVubClB4v2bqhtx/rqlAsEXTq2fk3F/WVODCq7b9
qkx4/cubCZTlab16GvH6t28msLPOgXqrjXn9+zb7dzzQRc5iK7Y0E1i0ZqPr
nDa8/k83EyhdPbVc3YLX/6tmAmEvXFd9ZacbNRfoOiy+8Ae7yK65QOKPEnej
EO6f3Fxg+w+PJVnB3L+xuUDJjJz8rDncf7K5QJecl2EdNdxf1FzgZvuRuSvZ
eXVbCLTtWOnvNo77e7UQiDuQH1hqL1np00LghEe1iG92PP9taCHQerPh6Y69
ef1ntBDQ3wlq5tWT1//zFgJbb8cPG8bW1zYVSPe0+FbK97MobEwFaGHq355s
9QRTgcEebSiJnz90ralAQvpLl3bbeP5PNxUokPUsXvL//P/UVKCrg/zPGxXP
/zVbCgzNWiPr5MTHv+4tBVxGfDL43ZyPf+NaCjy5bNIl4h7P/6taCqRd6LBg
9H2e/4+0FPiI3lc2Xeb5v6ClgK5gwtcOOr7/pbqZwIBpM/c5nuL7X7qaCQyz
rGuZyOPa0WYCf7Mtw46ydaFmArerH2yzhq0/bCZg/+i2fuVFvv/loZnAtgf7
0iov8PXvf80E/qxOqv7qGF//3slc4E2fJc5jzvH17yPNBU4ZtV3ve5Cvf19m
LrByX62NVvv5+veD5gJ9vUtyvY/w8S/fXGDtkPRHD9P4+PfLXMDxuVUs8XiC
ZSuB2ncGes/n8Tx1KwHfHvcHuqdw/5JWAvOsWrWPZiv3txKYqplzaDVbk9tK
IMm86ea2R7n/RyuBwqJG3dL4+XVtLQRMlpoWHmLrh1sIXDke6NvmMPeHWAjk
p3ot3nqI+xMtBO6++Vr7SSL337YQqDh8xv7kPu7/aiGw6MbylIPsIoVCoMp2
zPVoXl4+TCGw5cSNHuFs1XyFwESDtG5R7KA9CoGL2sj3lvz4hBsKgfWln37X
ZedVKgQiTqSPX8mWtWotcHlg9e+NVnC/S2uBKnvfb4lszZzWAqO9t3e44Mf9
u1oLlO16sfESW3e1tYCx9Y9HAf7cr28t0Grm7ERrZ+5v2UZgxtsrmkFO3D+o
jUCzrNfXTjtyf2AbAZ/7L67vH8j929sI2Ov7tN7FLrrURiAlLWfXRgX3l7cR
eDvp5N2E1tzfvK1A97+Pjrm35f6BbQUUsWE97Zpy/8y2An1nJ1sNbsL929oK
JM2qGxVgxP0X2wp0Xu8fZ1OH+0Vbgbda1Q/P2tzfpJ3Ast/NfPcZcv+AdgI0
e2oP67rcP72dQC9Th5E7eVwf1U5gfnD+9xdsRXY7gRs9nnrUMeD+t+0EOs2u
lXmihO//MmkvkFQ76lHPZ3z/V7/2Aj0HDfUtf8z3f/m1F1jvfVI7/iXf/xLZ
XmBWiN3dKrbqbHsBQ6/0LvUK+f6X0vYCNicfvyhhJzSwFLju0/NgzBO+/6WP
pcDajZo969kyX0uBUY96jNfw8srNlgJ7P9q7OD3l+1+yLAVkJ+76rObltSWW
AvdiZioi+PXp6ncQWOV/SDPjId//YttBYO0zh1rb2YpJHQS8vmd0OpXL939F
dBCo0NKB1/e4/0QHgb+Hetb99Yj7X3YQMDacnWucw/2GHQXs/E8GbGXLe3YU
CK/K/HBBx/0TOwrIFJbNvHg8aH1HgfKx4s3ka9x/vKNAyeGsnMTr3P/s3/ID
DPdVv8P9tTsJLC1LLB7GVlp3Eqj7xizEgq3x6iQQm3J+da/n3L+mk8DZBz50
r4j70zoJXL53J/D4O+5/0kkg5WLGav+v3F+js8DWUYHfn3/nfqvOAnSsrM/w
H9w/trOA38WQyK9/uT+ss0Ce7M7sZTLe/lM7C5yNK2x5hsfljzsLbJkwJLk6
W1Wti8C5KbZTo9hBXboIZKWEbd7ETvDsIjDz3MDkQHbeii7/9s/YOkFs2eEu
ArdmTb7zmLdX5YMuAt037asXV4u3/z9dBErP2S08xPuDtmNXgWabl498z9Z5
dBVo0aB0xGe2fmlXgQcBxYW5vD8pkrsKGGx74/yErb7XVUB38cfs99V5///Z
VaCG73uj1F/c376bQOvb6i4h/Pcpcu8msOuhrW0+//3ki7sJXMnKOeXM46qk
bgIGTb4MiGcH3e0mcCTvbY9qVdz/vZtAoX9EyEh2XhsrgbuumQWN+fXKhlsJ
NJ5WPfIr9yoXWgmkNeidVuv//X+vlYDrfdnqary/a29ZCVjFhdc9xMvrvlgJ
+H976hL2f79F93/z2adh97lPMbS7gJEyw2nQG17/87oLRFhGlRSxQ3d3F5iW
eLdg6wvuv95doHtqp8Pur7n/U3cB2QOTCe0ruN9cKWC2++nE9C/cP1gp4Fz9
780yfr6gYKXAi/M5e2u+5f6dSoEU6wkNOrPzrigFHqy+1rGY/94yvVKgZPjj
4d359StNrQVelv49soXXl8bJWsCl0svEgHu1s60FVl+9ZHb3//kvzlqg47Ij
v+bW4/4ca4EDP40+q9iKD9YCNybU+OPEVjezEbibOmKIvhqvf9gIdDm3KfAH
O32GjcC6wT61W/J8WRRjIzBxyiW7///ecp2NQPfXZVEvavD8TzYCx+/6u9So
yfN/4x4CS/0GjCvi8YT+PQRK9RMWJfJ43rQeAs2eXvddwM8ni+oh4HguIuUA
jyvP9xBIn35nb/3/t/83PQRSekVEL/5/+2/YU6DlvhcuCu7R9e0pYNxilnGT
//un9hRYVmE2r8b//dqeAg8Xrx12i/9e6jM9BfZ09IhaVp/7X/cUGGBwv8iR
x9ONewlEPfvxJ/z/7b93L4E/N04Xf+P5Rj6ll8DKhd7vnHm+Vm3qJZD/e/nD
BzxfB53qJZD0+2zrx+yE4l4CBc4fX+05yuu/nq3AzIQ187MO8vq3tRXAm/KV
q/fx/KexFVBvsV3Tl60JtxW4ueyWzyy+v1GbaStg2Sex/7Yonv9e2ArY7Zjx
/H/r69gJDKiwSa7L90cqetgJfOo+4NjS9bz9e9sJJGx4e3fKGt7+19kJLP7W
fVL0Ut7+j9kJ9J2+zNZ7IvcX2gkMHdTcsIDvj5bX6i3gssPUINaF+5W9Bexd
Dj16Opj7x/cWsAtTmLTuzf2rewv8PPy1d5I19x/tLTC0yqfhArbsSW+Bb9UG
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
MU9xyeOnXP8LIwjHBh0cO6yc6/+fCELoEY+ku8wFBpEE1aNqoV8quP7PjCQY
5Zr6+JWy/+ZIwtRJ7e1y2/yjIwkRBdE3t+tz+T+NJHw8MLAltx+X/89IgkbG
gzsXuD7W6Z8nLCsOfPvTl8t/+nnC+UdOGrlc3rYbzxOOHEwZPauZyz/yPMHw
z+z9DhwvnpR/nuAwNjNMj7my6TxhjE71ubfMqr2jCEXTEw/V8OctbKIITj/W
mG/meHGv9VGEQW8MKrZyPG34uShCa56M2Uxe71DwKIrwx2J6dALHF0l9jyJk
RmzpcVOT4396RhO2V6tllzC7TIomzP70vk9eW/yPdzSh7/XfM40GcPzPmWhC
6iU/p0pen1GXHU0oza6Xsud4St36aMIaFNPJbC5/7QsEp/jw5liOT/Qbf4EQ
/37DwSSOT0zyvEDoET5yTKs2+5+6QDhi75z9mlk18wLhqf3bF7Icj2lRe+Ff
+9D/uw+zl2YMIdFUYVC5hOu/ZQzhjs/6zalj+f/vEUOYbvPQR52fV1InYwh+
51/WJDrx//9eDCHX/p38emf+/1MMQX7v1C77lnD5d40l6H36oPuU/88Z42IJ
tw8PKerAz4+65bEE3RqPSGVm3WOxBNWsfQ/2r+PyT48lVGW2T/yznv0/xRIy
zc/vsPFh/y4XCRsmldSYMleaXSSUbZcqO7+N/d0vEnZOa+k+hNniyEWCfZHe
L1dmr9sXCZ2fvO23njn8w0WCuVHXkrb6V6ASR0graNmb78/+pnH/1pMFr65l
lrjFERxWRV5e3rb/yaE4gnt18oeo/ex/M46g+HPNB50L7P8ujjDrbdl+E+Y6
pUuE2RNPBRRyfJbuyEuES7+t7ipyPJbtokuEJfJ7Gofksv/+S4R8X/MPc5mT
ki8RFtuoxATw+pjKN5cIXdROHf3L8YmqHeIJkyYELdH+wP7D4wnhX1Jn+zF7
LYgnKHdIO3ae18eEB8QTtG5c93zG/4+Cq/GE26PSLQed5vpfEU94uGjY30Ef
uf7LJxA8az5OncPsMjSBMHDhtrRw5iDnBMJHpWyZo9q8/nt3AkHupdrNIgNe
/52YQMgv89/3xJDXf79MIKhd7KRdZ87rv2UuE/THf/5224zXfw++TFiQrLqk
23he/+d0maDgIBGVvH690v8y4a15q1xC2/r3hMuEDZKqN/3m8/q/0ssEqx4b
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
bDj/VcdHBHdX+VerJ3P+K5NHhBabWam95rD/wkeEUh81NQVv9t/3iLAnvEHF
agv7X3tEiE05u6HPCvZ//YgQ7nL47Ps17K+QS1hzu7hL1nr2N84ltPzeGr9q
A/vPyyV0q/F+MIyvn7EnlyBsDB4/OMv+SbmEwYtVFNKYdV/lEj5cu7svitlW
No9Qcesqjp9k/yF5hNLuzVeUt7H/nDxCqPt2/UVO7L8zj2AmNE+NtmX/y3mE
S6+PH/BktniRR9h9T2dE8Xj2b59POLqma9hzLr9wo3xC9Y+GPR9Hs79j/r/5
lWsXMjXYf0c+YUnLqBk/dNj/Uj6hQnO4a0sf9n+eT6hqSDMOVGH/v/mE7wcK
Y+eYs3//x4RauYnNOly+dbMeE8aHL7HTZ9bd9phQ8fdwwRSuD7axjwn9etyz
bubjfoWPCU0W07t9aSv/P48JLw6vb+ozn/0NnhACn/UxVGFWnfmEIO28+hct
ZP/NTwjhBpUqofPYP/oJYejLbUo1zOFPnxBeFa8dOHYx+//8d/xg2bLxzFJ9
nhKG/mj/LIpZMv0p4auCm3lwCPtvfEow3BeZrcEcFPmUEDAxxiP1OPvnPyVk
notbFXWa/ZueElLzk/ZXnmP/3gUE9WfHJ8lFsr9NAcFroiW9imL/9QWEs8MO
NrVv2//7XAEh2WRkmd9V9n9UQFCYXNt39BX2/15AMHwjVbaEj1v0fEZwjXvj
XcnHvSY9IyxoOCr1+x77ez8jyI83sbOpYP8zzwhlWrv0571j/5xnhByHFked
T+xf/4ywu9V4S+hn9tcuJAzod6lLh2r2H19IiH5/qWnRR/b3LCQ82RxkNIjP
rztVSDjju/fi+Cr2zywkdM6uH6n6gf1rCwkrAld96sG/x0+ziDDY9dqOl7fZ
37KIsErpyLLUS+zvUUQ43PlWRHA8+58sIiQ210fcjGX/e0WE4Jidu1by/fWi
IkLKiCdWNXw/w7sWE4xPbNyenMT+44oJO4z3qPTn60utKCa0+BXuVwpn/2PF
hLNK3e8Y8v/TJb2YoH7oy7f9p9j/UzEh16HfCtlA9u/ynPDj662LYYfY3+w5
QU8r/ZLufvZ3f05oHi9z/HYA+x95Tmi6UTK95yb2v/2coHV7XmMqc9KH54Qd
amfMLu9if5USQt+F6DiWP69qWkJwv/leQ4ePW7iVEMLrNPO68fPI61AJ4fz0
uHfpy9n/ZglBXf63Sog9+78r+Tf+fjP7/Dj2Vy4lFCUatciZsv/IUsLwOn2X
y/w8cFlUSnAptt18tCP77y8lvCxOll+qwP7JpQT/nKI8xW/8/ntTSth3Ky6w
P7NuhxeEuHKfzx7f+f03/AVh5uDrCm+Y/Ra8IKz2X+aewu+3pIAXhELnTmlX
Kvn9d/UFYYVdT73CMn7/VbwgeOfrRaS+4PeffBlhXOuIjll/OP/h0DKCy/DT
r8b94vyHzmWE/MGxEZPas//uMsKKNdOe2fPvk0oqIzzKW6F2gc+XvCwj+Mqt
yxlTy+9/mZcEKvJr0q7h9//gl4S/s4PDwZzh9JIQtlX3dSf+/XX+LwlPMx9K
Hy1h/4SXhNlRy957PWf/0pcEqaOld9Mesn+7V4TOk60enPnK/gNfEaQGLp4d
Ucf+Dq8IEbX+MsHMqn6vCK4F0kb1X9g/7hVhiMmuZSv493oVvyJ495G7OZJ/
T3jrK4LksE30a8H5H/uVE24d9Q/Z2cz+s8oJhe06dirk9oRkazlhuHNTZAyz
S0w5IefLl92rf7D/s3LCg6nX7g3h35vxu5zwrdbR5AJ/f13fCoL0mfv2Pz+y
v20Foc+5iyPs37P/pgqCvNLoJWPfsn9UBcH43uSUMC7fpCcVhKvt+2zPYq78
UUGoa/yt166K/fVfE9Zrnuv+me+nxbTX/9ZDPm2/pZT9fV4TtsRlm1zi+x8e
8ZqwM6bPp2jmgrzXhCFX/W/bPWD/pteEqWv006YlsL/uG8LkTq/+at9l/ylv
CH+aI5/YtrX/1r0hHJsv8T21h/3D3hCMF2qc/cVc9/AN4eaeoYaXB7N/wxvC
kKcXTFOYbXtUEoSoL2gYxv4TKwk7jtHdcTbsv6aS4D41frXfdPYPrSQs3LQ7
pZ6Pq2ZXElKn2sSbT2P/ukrCbvesGY7W7K/1lvBt29yMNM7PGW79liB35beX
uRn7r35LeN4utv+Aiex/6u2/+dwhPfaD/R+8JcQ1rOkkO5L9a94S3hdk7PvM
HKTxjiC9oPuAKXx+Bt4R5swrPvNjHPuvfEe49W3AApJl/xPvCHvKPDyCFdk/
4x3heuf5TrPU2f/LO0LCH0PvOVrsr/6eoJWTOHWRIfubvyeM3FId2I5Zdfl7
wvxt35rturP/0fcEmyevBm3sxP533hO63NFuDJNn/4/vCTsPSwpe/OD2f+cq
wuJA5VcdGv5nKbMqwrHMoxcn13H/Z2kV4f3uOSbJ9dz/CaoivE23XzGGuP+T
WkVY7XX2VPxX7v9UVRF8K8LnNfD5dZ0+EO6Upk6L+cb9n9EfCNmGHZym8PfZ
un4gjP/odXRYI/d/Dn4gpJuXKu6v5f7PjQ+EsNd7qy2YK9/+O79ff6defH1V
pWpCxNIG01K+vsWIakLjwb1Rbd/n5VJNKCh5NzlOcP8nsJqgUL168yXmguvV
hPvJmLH9C/u/qSYEvFxQrlvN/oofCVmRnhHuz9l/2EfCT/uLzz8wB83/SEiz
ibm2uor9934kfEg+enDEB/a/8u/zo7Y4FlSwf/lHwjAL7xLrd+wv94lQL9V9
T0Mh+0s+EZxEtaN1EfvP/USo2+733e0Z++/6RCjpLpe8mlk18RMh/5SNmgyf
b1H2iXBbOjv6dRr7S38mqDTI+9dzfzJ80GdCqVn/64nK7D/7M8Hma+NLaTX2
9/9MsJy1V34GsyT+M2H/4GFWYdXc/y/5TIgsf9EY9Ib7/1JfCNPHNAztVcX9
/wFfCEHlKRp6Rdz/t/9CsNAsPfK9kPv/278QjD8EhLjlc///4j/uOSzidS73
/4u+EKL9bbf7pnL/v+ULQeNTbYl2Ovf/DYlQ0SlR700s9//tiOAjkznvObPF
FiLcWzXQPpbZ6wIRVDVMN1ud5/5/ARHW/LXt68Jc8IsIi7t3PRbMLNVXEK69
WNzvYySPf8wQhAS7UuPn4ezvKwhfHsgaJp5j//OCEH7ROmUgc8ZjQfA8str6
YBj7NwvCSGePiCWn2F+vhlBRXl2txeMxtlNrCPu3N+5oimD/DTWEG1kRWYOY
k8JrCBq16QY2K9k/t4aQeP6iz0AeX1FtrCFYlr7Ne7Wc/XvVEhy2LC2byeMt
XpNrCUNCLPZUuLP/2lpCn919bkqWsP/ZWsKH5/Wy/ZmlHtYS/PUbm3xd2f9b
LWG45WTnXXPZX+crQcpEcYkvc9CErwQ96xt2tswZXl8Jl3NkSjvw+FTd6a8E
3WWviifasH/WV8KHYbcjUsaz/9evBIqJm9eLx5P8utcRbJZu6T8T7G9VRxj6
/ni2Ch+vXFVHKHb54K0uYf+QOoLWu9V7ezFb3K8jlDX7rjxiwP6ijnAgSEVr
Yk/271ZPuOC463cIj68VWNQT5o5081/ajf1X1hN6dA3WVVdn/+P1hCkvpLta
M7vcrSe8XShKYuTZ/3M94bOeW9QMHs/LUPtG2HWhc83ZVh7/G/uN8KHHqn1T
mnj8b9k3wrGTe4/NquTxz+BvhKaiCfe/v+Txz7RvBLu44kzNLB7/rP5GKPJO
872Sy+Ofqg2EDJtFnnbMqmMaCNXFZYYjI3n8c0kDIU4/etLxgzz+ebiB0EX3
+9fnnK85/FYD4VDu5ye/icc/3zcQ3l3+/mRRe/bv9J3QW+XgUGP2k4z6x8/6
dLZq81/8nUCBx2/b83hk0IHvhM46WZesp7B/ynfC8geaMjnTuPwrvxNCHj59
K+Hjuh0bCc5ud7etHMPlb9JIqNfue93Djct/YSPhWrrC7Xlc/5L2NRIWeYTd
IW8u/2uNhNxO0ilNG7n8XzcS8mySJyRwfbNQaCJ00VSfacb/By/jJsKU0G3l
KVy/w+c1EUabOQSU83hmwZ4mwrKQxL+ztrL/lSbC3mIlddne7P+qiaDfRTtt
uT+P/8o2E5B88akRc9CQZsKomvVr4lbz+O+cZoL5RofbUzy5/Hc2EyTOibnr
RnH5X24mmGSNWjXcgsv/RTPBYliNevQ4Lv/2Pwgh5/o8UGZOMvpB8NHsXrXN
iMvf8Qeh6pey3/0BXP47fhCw8EXOo+Fc/pd+EK5Ubs5sZPZ6/oPwNb7VbOJM
Lv+/PwibZpxvSp3C5d//J6HlZMuZnpN4/Nv+J0G23Zf1A7R5/HvbT8KqtQNG
/lRj/9ifhA7Sj5b79GL/wp+EjgfLIyYyZ/z5SZh2MTvyDedHrjP4RTCy1pi8
T4b9Z/4iOAa3Nnm0cv7Xzb8I6bc6z3Bpz/7RvwgN2it8z2Vz/tenv/69bxwd
h0Rz/tefvwhuQ8w1aiM5/2+f34RM45W/em/j/L/TfxPebxv+9+4mzv+78Teh
znvQulvM4ZG/CdWfmz+dms35f/N/E5ZmdVI+4Mj5f5t/E1zjQ17WTOH8t73/
EO7dPJFPJpz/1uYPwebszh2vHHj+Y/0fwqbUdfNpBs9/nPtDeLaysNZNh/0f
/TvuKPduswbnv/3+h/DzoH7Hv9rs37OFYLXNzcJXk/PfTmohnL2o/1m7Lf+t
dwtB+ZXvXArl+Z8zLYTY183d5pzm+Z+cFsLoepX+4Xzcor6FcEhnb25VGM//
aLcSvrVfcT3ei+d/xrcSPiabj5CezPM/nq2EUY9VT8hyPlqp062Eg4PnbJVh
lmS2Ega/Xz37viHP/9S2EjI/vTi0sy/Pf2n+JZyasld/D3OG5V/C2BcZXzbr
8/yXx1+C7EDF60a9ef7r5F+C3YPKWbO0eP7r3l9Cv046j9tV8/wn/SVIieXq
16t4/rOrlEBFp34pHy/y/Oc4KQG5hIm/ljCrrpASWFqXeXpgBM9/HpMSKMTn
vf5Lef43XUog1zBuWu0Hjn/5JCXQqa5RERd4/r9LO4ED6Br8k/PVSo1tJ6Ag
l3xjyjme/3dvJ7DA1Dm38xGe/z/STuB4cOjyT0E8/3+7ncAcp87fl/hz/MuH
dgK5SfuM42Zx/ItKe4Gspinmejac/8e0vcBAtfZVXTj/jq1be4G5iof+hLTl
vzvUXqBf3sCqe2357262F7hT59Hu+3eOf3jXXuD5z6vdhnJ8g6qytMDggvIT
apyf0mKktID0pG1jGvM5/mGRtICTst+GS9c5/mG/tMDc+qjdpYkc/5EsLSCX
6XU2n/NzSlVKC3Tq52SxifNPSTrICJjejd86ntlluIyA9KGkAqtrHP+xQEbg
65gz7TWTOP4jQEaA9AxOj+b8cnVXZQTM496P1jzL8R8VMgIOa49pDTvD8R/y
sgJ6z+KOxZzg+I+hsgIqn+q7Kp/j+A9nWQHDlMZoA+bK3bICh/buepp6kP2T
ZAU2Hc33TeB4PouXsgLyadkjyzjezktGTqCmdZBuFnP4YDmBETpROpGcP67A
SU6gX7PGtZlt+d92ygl0Gdz1lSrHc0kS5ARuRyee/MH511xK5QRe9m63w5/j
24LayQsAjQdRz/FvA+UFXiukdNBirnOQF1i/RU/udBXHv/nJCxRHdRztxvFn
tnHyAild1xWvfMbxb8XyAs5PTULePOL4t1Z5gdlvrrXUM1f2UxDwyTuyriqH
4z9nKQgsNn39QjeT49+2KggcS/b6mHyb499iFASMbp5ecI45/JmCQN6R+WYL
b3H822+Ff/V77dmmRI5/M1AUePzaOHB0Ese/2SoKfI78em6UF8e/bVIUKLsv
t8FkBftHKQqkNvZ0ebmc/Z8oCnQap+W+8i/7/1AUKC08ea/yF/vrdxAY8iww
R5vvn+20DgL2JzUvOuSzv08HgdlDdaPsmJMiOggE9NT6s/Ex++d1EFh43GTC
Oo4fU23qILDpZ9NMI2YL3Y4CztPXfA6+z/5TOgosnhvwaUwB+6/rKFA7/Kvt
EI4PLAjrKLB7fIB8yxr2f9RRoPSBTGOPdezf0FFgr1G7VWYb2L+HkkD2oebu
C73Zf6KSgIxxz80pK9l/jZJAQsWAxy58f+pClQSiZmsWrXVl/2wlgSkhPXs/
WMz+dUoCUvrBYe6T2F9LWeDBpbzh5ZPZ3/of9z97a8A09l+tLOCxziYnYir7
n1L+V7/TB0mZs/8DZYF3HX2nrdBk/xplgby8cSstldhfo5PAH5kZo8fIsD86
CfjYDXAtb+L4b49OArrpKhPf/eT47xOdBG6Y6LzYyeyS0UnAKcqj8N4Pjv/+
0knA8/e0nsf5ehnqKgIbsy652TZy/Le5ioDbBKv4C8y6y1UEjtv1strwneO/
j6oIbNZ6P6hDA8d/31ERaF+5yLmQz0/6qCJQu3WB/bNfHP/dWVXghvdffZu/
HP9tpiqwwLVh7x979l+qKrDO6lXpJ7B/kKqA1Ject+N2s3+qqoC3eH7r0S72
r1IV2K+a+Mw5gMtfpbNAxA65U30PcfmP7iwwocOuwxrRXP6unQU2LlOP/HuO
y/9gZwF1V633Gl/Y/0ZngRI1rROda7j833YWGPGhomj+Ry5/pS4CmxpfaxW2
1f8RXQRsG8xcvlZz+bt0EdgaZt1x23Mu/8AuAqPUKuoPMlde7yLQrf3tA085
/lb1TRcBz8pbJW4cn2qhqCbQpVf+OSk+7jVMTaD9eFejAfx7wuerCfxdGL9d
X7D/XjUBhakOkqccvyt1VU1g0O+rkkscjyspVxM4M3fhlZv8PHORUxfwOLHX
VU6Zn/8SdYH2vWdOjON444y56gLL8xNm3OF8knW71AUueYz7u1KTn/+J6gLv
ngXM28Txm7Zl6gKqF6ylnzP7SXcVMMi1urRDj5//g7oKbKzo0i/biJ//s7sK
xBR/DnTm54mqf1eBZ9JGj+1b2T++q8Cwr49vu/P98CrpKhB+xvGpFMc7h0t1
E8hYe6b+YZv/gG4C6TkJH7M/sL9DN4G0Idvu7ebylGzvJmCg3N6/F98/l4vd
BILXZt7bweUZVNRN4K27n/33tvJv6SZwZMl3KSOOn68z1BAYfCruyJGO7G+n
IdC+sfr+FY6/t92iIVB+d37TFGa/CxoCFlo/+1bx70kq0BC41VLRXqEz+//S
EHj544Rf6yZ+//XVFGh+7N05Op7ffzM0BVbax7/wuMjvP19NgTsOL0Y4cDxl
+HlNAaeSzIWFnB+y4LGmwHjHyWqej/j990NTYGfDQp/pDfz+0+suEKATs1mf
8w26TO0u8NZkUfUu5qAN3QWMdqXJSnfi9k94d4H+x1werlXh9k9udwGNHjfX
7OD8gbqN3QV+mDgXP+f87La9tASO3Q6F7EBu/0zWErB7llq2T8Ltn7VaAtM6
XN1XOYLzH57VEnikEJmjOobzHz7UEliv/K5UYwPnP/ymJZDqMafOPIDjn3W0
BXZ17ueZ1tb+m6At0O+zmu2eMm7/eWkLpCYs9Lj5ltt/odoCCvt6ag1/x+2/
LG2BD65G1Tbv2f+rtkD3tIwNl/h4UHcdgS2lYwP8+PoZVjoCSYE6fwNr2X+V
jsD+Ak/s4XhR3RAdgQsnXdP7P2D/+zoClgaPVDems7/QEVBcnXqujvdLSOrW
QwBHlUOt+HilRY9/9zd9OphVV/YQ+F6j+eUcs8XxHgLbJ95R//CI/e/2EPgk
u39gA7dvwz/3EFDps17lC++/UKDWU6Bbifyci/fZ37ynwI/l8QVbmCXLegqY
pSjpyT9k/+CeAp/ORYTo5LN/Wk+BRs9DvS15P4mM6p4CmlsqJBpP2F+1l8CG
XjPXTeD9I3TH9BJotE58vu02+y/pJeDst01Gl/dH8DvcSyCk699eDbw/QtKt
XgLZ9knr711n//e9BGrjDrTrxd+n2klXwFZ8Sox+zv6jdAWcN/+aNozZa7Gu
QO+Ast4j2/Y/OqArcPd77JwK/n0FKboClvLD7phzfZB6qyvwqO++jjeZJR17
C9wIrP6FavY36S0gcXnTJ4nrS9DC3gItCS0dnbl+ZOzrLWD0JWz1Uea6a70F
FgxXnPG5kv1f9xYw/VE2tJDZVkFP4MwG33j/RvY31hOwK64Z96me/efpCdwZ
Ny/o3Ff236MnEDiJHJ3q2P+KnsD2sKuxL6W4//NKT+DYdf9eX9tz/0dWX8D0
j6OnHR8PH6IvMLNT8/RLf9l/jr6A9PJSg1l8vtQufQGbkosjPzFLLusLrDyn
NvYs3z+XF/oCFt18Y7/z/lFB7fsI1PTOnalczP5GfQQSFlbPN2wrf8c+Am/z
PMJiCth/Rx+B0oqRPzcx217qIxCAPRnLmP2e9xFIXjQnZAVz0t8+AnNyC1TU
+XqV/fsKPO8RbebGrGrfV0DvY+vVNrbY1lcgz0StVZF/n1dsXwGDB5bGS59y
+Rf2FVjS16/lT1v5/+kr4D/zmwP4uJShgcDo8oLhicySmQYC35+YrJfm/5PL
ZgOBN1aOs7vy54OiDQSkQjZaePJ+WRlPDQRU3P7YljLX/TQQmOC1rH2pOse/
9jEUuDzBqWdQV47/nW4ooC1rM2alKvd/NxoKqG0p6n2uM/d/Iw0FTvyqDI1V
4/5vvqHA/u01YxqYVZsNBTLj3l8sZbbo3U8g/oJZQyV/n5dNP4H+65IS7zOH
r+8nYH81dGJ75oJz/QRWd+86W1ODyz+3n8Dt+kUzdXh/M8n3fgI7nmTHdGd2
6dlfYMFdbf2evF9a0KT+AnJlOkkNfdjfu7/ArZFB0u7MdWf6C+gG+b9SZF/d
nP4CR+aWLi1p86/vLyAbEuOsw9/vpz1AIKLzBXU3LfYfP0AgxblvVUqbv+cA
gaHGE7aE8OdVTw8QMJ7p3YuYLTIHCNy4ES71ndmrdoDArteh3Z91Y3/NgQK+
h3VjUpkLLAcKlCbMPaYwhv1XDRRYHjHXWYdZcnKgwOkZ8ZE/vdn/3kCBw09W
Nq46yv40UOBk4S+ZjefYv6uRgMmMlQM2n2f/cUYCvUZ6xx9n1l1hJGA762DL
j2j2P2Yk4NHPs2VNFPunGwks0UouLmJO+mQkMMkx3yuaz6/sMkig86m7XZNi
2H/sIIHyvOSOj2LZ332QwIpRB868YfY6MkjAanh4kTlz+O1BAt+qUOzJXPBh
kIDipYd3Sq6wv+pgAROds3PimCWmgwV+2Gl+Ub3O/m6DBe7LqVU8vcm+NwcL
SM0ceHoQx9/XvfvHa4P8PzPrKg8R2HM1oZ/effYdOUTguE+T5sBA9l00RODd
i8Z0a+ak/UMEIj+NylA/wD4dJAJDB96uv23PPsMlAheDXQaOsWKfBRKB5KJi
tzReP1EQIBGwVvYzbBrIPtckAitMPhrIGrFPhUTg7eX8e+r8/naRHyqQ8GWM
/Ju29RxDhwqsczQ/YvqCn2fOQwVWTVwXMYW5bvdQgV3ryx0WRvHzLGmoQJ1/
aqU3709k+3KowNcPevcWBPPzTMZYwO7X/CmP9/PzbLCxwMV7M/puZa50MhZI
ynK9+ns9P892Ggt8bpppOZPZIsFYIHTy6U/+vJ+OV6mxwOGG3i9KeTwpvN0w
gX2Dn/75wlwwcJhAybm/T27P4OeZ4zCB7YmWH+Im8/PMb5jAydH14hzvt+MS
N0xg4POmzVq8v05Q8TCBYQO7RiszZ7QOE/BpF39XZjj79xsuEHfA8uwKzjet
O2u4gN+qi69ejWX/rcMF5m1eKtXBnP1jhgscSbzz0pfXg1nYmggUevRvXfOV
26ebTAQkWVGfl3F+8PAoE4Hmv5mq3swFT0wEzMvGjB0quH3600TANzpkqzrn
h5bojxDY0HHmBOLxK5dpIwSmbey9YRnnQw/yGSGQqLqqMDqO+ycRIwTEAZeG
FZwfvi5vhEAn3zfmcpxPXrdphMDpS0bR33m8ylZ3pECyQrLhz2jun0wZKTDh
9ONfL6O4f7JupIB/X+NMnUhun4eNFPijf/m4FLPqo5ECzVump4QkcPu8YaSA
57b5c1r4+l49RgkkJZr6t+Prh08cJfDW7sGDH7x+qmDNKIGotx3nhvJ+C1Jn
Rglc++kmn7WW/bNHCVw6LL08l9mlbpTA86cluYHB7K81WqBilpuHIq8fzbAe
LSD9bqKmMq/nqls9WkB2R3BMC++/oHtqtICTt8rgx8y2D0YLnFwa97Ir79/g
VzNaYK3hwQvB+9hfw1TgwR8NjQ98vUqYChwNW5Sj3LY+zcNUIO/Y+4ZufNzi
hKnACtEyOIXZK8NU4Pn4mOvGfL3wL6YCgUu1TM8fYH/1MQLBi0+PWMe/X2rc
GAGZrn0icIT9l48RkN+Y9/QZjx+6HB0j8Dnxw5+nfDzozhiB1/5F+3u07U/x
cYxAQswx22q+P3WdzQSmxDkVeDPrmpkJbG23QH78MfZfaiYg7bo39CqzX5CZ
QPx5mZkFbfsTpJoJaFw33viHubLKTEDxwU+N38yqKmMFXCT6x07zfgcWo8cK
RPYY6uLNx71cxwpYb3062XMX+x8cK/BntHu7NXw/Cm6MFeg8amdWK7PUu7EC
8mdvlExhliiZC5yXldGczuwywlxAzars5Ya28ncxF8i8MlW1nDkj0Fygd+ac
Ie/Zp+66ucAZC6ezf0LY/425QFHXqbaLeT8GW8VxAvDNfNmF66vfsHECWq9a
Jnny/yVp/jiBkuU+Xnva9mfYO05A2/RWzYxw9r86TkC3caerNddni/JxAqdr
TaRP83EvOQuBuCyvn9l72F9iIWCSOi67A3PBXAuBLh+s1l/g8V6p3RYC8xb5
NVlx/ZEkWgis7p3gtKLNv8xCYLK29vRlQewvDQGfoyG/k7k+1M2GQO3GgTmu
/P26/hDYpV0Yp932f4+HwAKrcc9y+H74lUDg07qo2EM8fp4kZSkg4/Qma1se
+w6wFFirsGRqLx5vV3WwFHgw2vJJLLPFdkuBvmszjHvn8fP7oqXAmKC1A3yn
8vuryFLg2Sh5u5Uz+f3VYilgAOOPecxS/awERnztNmfwYn5/2VkJPHzzecjq
Zfw+3mIlUDBu/bj27tweuWAloJOS5OdUwO/fvtYCwZ7KAVWv+f07w1rAzvCJ
7I6P/P71tRZojC9/vOYbv3/PWwv0eOYhu5G58vG/z7c7OXwFs+oPa4G7UvFv
B7StN9MbL7AybbPHrw483zR1vEDSKHmfewo8vxQ+XqD1ffOmY9o8n9Q4XmBd
3fzgr+N5PqnXBAGHea6JmrY8nzR5gsCtd7+kVzzj9sXaCQID6q/1PtPm83CC
QEnMt5+L+Pttv00QkFpssGcjs5/ORAEla+PqX23r5yZMFDDbkHvI5w/7eE0U
WFh79dKU3+wTOlHAaqzloG+8Ps4ia6JAdUzl8L5/ub3xdaKAZ6xse8X2PH/W
fZLAkv7J/jry7Gc1SaDxmIlCddv6udWTBOZ6jles4vshCZkkYCYb4H6Mz3e5
P0ngrEqf6LvMQWKSQK/mg9kflHj+rNtkgVo64xjF16uzmPyvfTazdbcaz5+t
nCyQdjtb5irfT9vjkwW21pbm6DL73Z0sYLtYc/54TV4/9nmywN/JU+tkNHj+
UG2KwARXtewW/n5V8ykC086nPrbk8rJYNkVgoeni9rvNuDyDpwjUOCx47DeW
/dOmCDjlp609y1xQPUXgq8q7a72YpTrbCCQsUagKYZaMsRGQrVae15PZZYmN
QNyJjr2GDGP/wzYCBlMSFl7k/TQzbtkIpLkK3UN8ft17G4HaIXMuzrJk/05T
BZ72e16+x5r9R00VGNq38ZTHIfZfPFXA8/jEp1n72P/AVIFG/dZh3/ezf8pU
gfoihXamVuz/dqqAvdvrzPTp7N9xmsDUK1Z+p/l+eZlME1iQkN3Upxv7L5wm
oLR1++vJ3dl/3zSB5i5KBfpd2P/6NIGeySMSd3B9k7yeJrDsfrqRNa9/dFGY
LtDL9brNd24PBxlPFxjV2/6q8T2u7/OmC3T6NvuaGnPdnukC+WNz995J5fp/
ZbrASuclvrO4/W37arrAwNT7ilNucP2XnSHQI0C5q3861/8hMwT6vdz0cecF
rv9zZgiUPPtzx45ZddcMgUXblxrOZba4PEOgr+eXLSbMXi9mCMyKjHXHGX5e
tbcVeFB7YFLiSX5eGdkK+Nb7fewbws+r2bYCq9+3PNRkluywFRhR35DvuI39
L9kKvHtdJDvCi/2f2wq019loPJ454++/60158fMI97fq+s8UWOCsuvmpJ/vb
zxToNy9eZg+z7baZAsGbm3/nrGH/2JkC7jct5x/i52FS4UyBUYPX+xTwfHDl
n5kCY7/4vHTl56mqoZ3A+jufnrSxxUw7gcD2m29nObD/ZjuBpD97z4dw/yM8
2k4goX57+wzen7vgqZ3Ah7De0wKms/8vOwFIJjjO5ue7pM8sATvvZLsUXr/t
Mn2WQHFZ/kQl3n88aOMsAaVSSj/N+7tmRM4SuN+Ssj9tCPvnzxI4IJmdv24w
+zfPEpDJdlPdN4j9e9sLhK0Pvu3M/WU/G3sBk4G/cobxeFHSenuB3T3Vdxfy
eGjlOXuB5SXfvk5x4P5Grr1Az52fd/edzu3z7/YCMWldq7a17Z/T00HAq6Pj
dANuv4dPchB4vcl9WGEP7m94OwgUanas8OX9kaTOOgjourWGt/B+LZIcB4Fe
WlarXJhd6h0EZjsq9uvD+78EaTsKHEocEi7N+7lkjHcUiDzcutbnJr+vPR0F
rOdKpbxI5vf1aUcBb+XT0qU8v2yb6Sjg/FD5x4W2/aNqHQXWr0yaHM/tnSTN
2QLxV6YblnC+gkrL2QIa5wYobZrO7+tVswXGxed0tB7N7+uTswVq4u6ukub5
WK97swWGjHhneIXnI8NptkDELZP9S8N4/qCrk8CBV0kDvvB8kJSFk8Bst7I3
nmd5/mCFk0DHtLK0Wj7ucsxJwKGDldmdMzx/kO4koLDQ2VT+KM8ffHISWGGY
MT/zBM8fdZkj8GJBNXR4vlZ37BwB12kaRU08n2vrPkegcWhghV4Kzx8cmSNw
Xqa4k+1Nni/6MEegfZBGcH+e71RVnSswfvLVeb94PtnC9B/vuXlDiudPvdzm
CoR8jcyU8Pxy+KG5Ag4eVtVy7F9wc67AiulDZy/KY9/3cwU2DfRaeOsa+yo7
C7jKW1ie5vlkl5HOAotSelqV8vxZ0CJngdlrE3oNv8i++50FJjsdad3L8811
yc4CYyoVn5SdZ99KZwE/8zCTunD27TBPINDAaeG6SPYdPk9gy+C1A7fz/Upa
ME9grZJi9Ky17B8wTyDz05TTCzay/7V5An/naI1Yupn9K+YJaDZk3tXcyv7y
8wVO3Vsnl7+FfZ3nCxzvf+m2J19Pas98AdlNCwf7LmDfpH881SmOmF1ezheo
TlbUbXRhX5kFAk3lkRr6fDxj8AKBdx+/Xk7l43VOCwSCbllVrWqbH965QKBn
fyVpNRv2TVggEHbukL6E2a90gcC0rR4bnZiT2i0UUL/Use8Vng+uHLhQIK+4
sHYrzx+rOi4UuPFuXOI5B/b1Wyhw9HFnPJvLvnELBU4axqVdms/lXbxQoMeP
0OZLfLygdaHAg8XzqlXnsH9/F4EBrjaHv3D+K8ksF4HVNGBiPbPLVhcBnd/G
Pimz2T/GRWDriPGRX5kznrkIZBimnT/A87V1v10EzIyyKkz49+kaLBLo/Xzj
r+CF7G+7SCCm273QHGa/TYsEnhV9db/C8+eVTxYJLFNIXXGN4w9Ufy4S+C4/
7YsG59+y0F8s0PFelE8R31+vaYsFesa3j3i4in19FgtUfCj46c1cELFYYMuC
8SpSHuybv1hAhRSmWvNxSdNigazVppJZfH0XXVcBj3izu684X3nQFFeBkKKr
Ryfy/HvGOlcB75VvN13rxL5hrgLKxbG2Z1XZ95GrQLlZ5Y8Rndm3wVWgf9zX
AxO7sG8PN4G+PmVLb6lweU90Exg8oixxCXPlGjcBn4N6RguYVc+4CVTkf+lm
xN9nke0mYFul0ajC7FXnJhAwdmScO3O41hKB1TnZH+8wF1gvEZj6Zmh/RQX2
91wi4Him4cXkjux/aolAyaERBT+k2bdmiUDw0cWRpbx/VobGUoHliqu91jPX
YanAR4MBTyLk2NdjqYBLQfcyN1n2PbFUQOf+wQnj2rFvxr/Pj2zXWivFvl+W
CuxNavT/wccr1d0FFAPGXjfh71cd5y5guD90hlZP9l3uLhC9w2h6MLPXUXeB
udY208/0Zt877gLSKUpxFs2c/+6ju4D8zm39/JmluiwT6Ota0jOI829LzJYJ
LBgxtOuNkxz/sHSZwKqAz4Nzgzn+IWiZwBP5PKOJnD86I3WZgEdJ2iwD5rqq
ZQLV79KPRh7l+AeV5QLPB6wc6c2ftx29XCCsd2xQAuej9nNdLlCRlSp5zJx0
cLnAmybbuauZK28sFwiqUOj7nPNrq75bLtA741duEufjtlBaIRBm/N5+MP9+
rxErBC7/kdW5cp3z/7msEHhwyKJnHefrKwhcITCwMLtjMbNU8gqBjpn3f2zn
60nerBCwd/27XYW/z0VxpYD2g5eV6pyfMGjYSgFzyaNtxdHsP3+lQIB75s9D
bfn/9q4UOGO6+R74erpXVwq8VTDdsJ/z59uWrxRw9ak4MILzzfvJefzH0pnH
Q9WFcVxCEVGklIQW7U0L2psfUlonaVGK0l6kRakUEtGi0cKbpbSHFlkqRU17
WhBaSBFJ8ZwoRXvvp3n8+f3cO3PnO8+55957nuecS7Bxd3kam8n+khWEu+NM
rVOusv+sFYQZNdHFRrw+u17QCkJpWu1EI15PUnp+BcEqzCTRYBH7F64gFPqn
1Q9Zyf5NPQiV5yX1GzzYv48H4dmN+TlvH7P/TA/CzolP6iOZJVs9CJdr7aRn
HrL/GQ/CUPdKFWPeLn/mQRiwbHzS4VL2V/EklB1a0evhS/bv6UnYb3DSzOMZ
+0/zJPyON9eIeM7+fp6EoONFhesL2T/ekxDf13WAE3NSviehZ4qP3hfev/T3
v+2DblwPZNbrvvJf/rBzb80X7O+4kpB79dFg1RL2911J0L4xqnOfV+x/ciWB
DBacdC9i/9yVhJyCucV5vL/Kz5UEo9rA8SXl7N/Vi2C/4teJC8xuk70IhQvq
Wn9hX/kGL4L1x0V2e7heR3HMi3D37v4lF7vx+f/Yi1CxcULdvrZ8/n/zIqwO
moFdvD6jzHwVwWDWt0d9Dfn8n7CKcOf5U3V/7j+T1q0iaGWZ9DlhwOd/3CpC
YEnrW+e4v9J7+I/v3NTcxv2J9OsqguPzFG9r7m+8Oq0mzG034+RqIz7/HVYT
/A28Jp3l4+euWU1waRh9+zOzyqHVhFORHXrZm3N/d381Yd2ZXa/Ceb1It8+r
CR/Xjh8yn99XITdeQ5jb4fySJ8wK+zWEibZzjpdxPVit1xrCQ7+71aqN1/fo
NYQfCq3zzRey/501hL1fUx6EerN/zRpCM/3eb0YGs7/RWsJ/tWWnu3G9YKnt
WsKr9vryiXx/que5lpAw5/aKIL6/k/63ljD54b1pzoXsf3MtoXrOg/M6vF5Z
HK0ltHl4vVps5vE1Q29Ci7Hd/8vx4/t3eBO2R3/rHsj1IJLl3oT0b+ElTrx+
ltsBb8LYPZumdC3n+/fr3oT4V0+mD6/m+/cP3oTUyAOxfRvff66/jlBQ1Doy
tfH9nyPXEVwO23zsyu+bli1ZR2gv3MRtrvfw37uOcFb/jEMBv28zKWMdwStv
44d8zj+UvltHMDn0Q6cXv99Sr9V6QudZklZHh/Lzy7D1hG/LL7mPGcvPLwvX
E5a1zBySOpOfX/asJ+S4HNauW8LPL+nrCaGrKKgolPMlb9cTuiSvOjVwB+dL
WvoQrg0LlUYf5HzJYB/C3SebNd/Ecr5kvg9htdda3SlHOF+yy4eQe6nH8+hz
nC+56ENY5uC6O/oM50ve+BDaDnw47xyzrMUGwvLtnxTlXN/gb7mB0G2Nq3Tp
bfZ33UCQ5UWHLOJ8fGnoBsL+gb77O5jz82vqBsKd4JDjnbvz8+vrDYSM1UWW
lhJ+fm2+kVAQ27XgN+fD4gb840G2mT/5+THXZSMhf5HjydT+/Py6fSNh8bKc
4WXMkgv/thcvsgnvwc+vLzcSjktR3XYEP7+qbyK0SnbsVTaUn1/7bSLM0vLc
bQx+fnXeRAjs/PZ+qj0/v27bRKg+fNP1Lv8+2blNBPfYGdtd3fj59cUmws4r
A07b83hDkqovYfP3g2vWNtZ/9/YlaHY8s6Qn51P1ZvgSPP6ojLmQwP4BvoRg
mf7oDgfYP9GX0EliGCxPYf+nvoSlCV3bJ3B9ee5fX8LN//SuHCtn/56bCTGn
D7Y9zuOdEqfNhMpmGi8y1Xn8astmwvQPKk+seDxHfnozocs3o1O1Deyft5lQ
4PqsW3ceL6z9tZkwZei14Xd4PNHUYguh1eym6YrG8cspWwiZnn2LDvHx/Tdt
IQT39uvozJx0Ygthx+pXn4a+Yf+cLYRv8mUJpVXc/n9sIYx/4HVopAu3/y5+
hJmb1+uNX8Ptf5IfoTUtOHZoNbd/Hz+C2a3MJSfncnt/7EfYvyTw7XxPbu8N
foRve0LGTuT3pbuZ+ROaJjf7Nrbxfe/j/QnHO566uYHXz1N4+xMWN7sUHMzv
t6897E/Q3DJKxYDf/2r6wJ9guLrlzDp9bu9f/AnywW9WSRrfd2sSQFBNX6SY
w+/DTRobQEjpYCmxZi5dHUDobP93eCf+fr3YAMJliW3VQK6Pl94LIJwNHDZp
CR/P61MAYeh2j2BHzi/GddhK0E5v+jK88X33o7cSZK2XROy8y/2d11ZC6pQF
rinp3N9FbSW4+81Rc7rC/d3trYQ2cwoHSzO5v/u4lVD6bLDmC2ZFu0CC5cOo
zHGc76u1CSS4pfVPe8f5RVOPQMLwqwcsAjhfKIsMJBwrbdv6BOcn/G8EEnKE
r99/e3i8ojqQMEd30LbpnJ8pbbONYGE4ergm5+P0pNsIS55HdGjFLF22jZA8
YesQY+6/vfZvIxj9zflazuuNxl3bRgj5OzH9aOP73t9vI+jO2OaVyPlIFf0g
QtUN/fn1XD8oGRFEcHz/Zm0vzke6LQ4ijCqIuqjC9YTy8CDCqlin47f5+qC4
GkTw39/+4N2b7F8RRPCziIjfyWyqF0xYkmlyM5PnJ8iGBhNe7Z479RqP//gv
CCZkd636L5M5KSyY0LrOyrvPC/a/HEywvmYafzCZfXW2E2Rv3vYbw+NDXtbb
CVtt/mYVZbDvvO2EVn2Ptk7l61Puzu2Ej62Kp+/i+RMqF7cTgpfqvzvwlX1L
txO6DpFtX1HLvlohhMTfNy1T+XomHxRC0In1dMxsvL7NDSH8fNzcri+3p9qQ
EMKtvooFXzg/ZZoSQoh9lKQ1hcefZK9CCNbOsWIyv1/bv1kooeyp6ZA1/PuS
+ocSjNJXp5tUse/sUEKn4dqfHfl6qRccSvj8ccXYEj5/pEmhBNlL37n7+P3Q
XkWhhD5a9/LbWPL5rbaDkPpuoW/dYL6+9d1B6LCod7uuU/h8d95BCDPvaDV0
HJ/vgTsIzuG/XdSS+Hw/u4PQJqaudxzX2yia7CTo5v5IXs71ObW9dhJaO085
eYPZdPpOQryql1tXHr+U+e8kxNDm1+Drg3/CTsLvbkt2921cz7JgJ8HWqc8y
9THcn/3ZSQj9nRF8Yiz35z12ESom1WVnyLg/n7qLoJYwItzakfvzzbsI/U7F
Fw/i9S/jTu0ivC5ZZB7A14/cJ//Ye4lPb2aVX7sIM0bWnFrPLOm2m5C40q/i
1EG+nsl2E8Y0TP74itcvlG/cTZh9uedMPc4fKY7vJqzr+P6ZNnNt9m5CUGCL
YQ7V7P/93/5HH5Qu5+uFrHMYoWObv4NvtOB8xMQwQtufFzb5MCetDyOoWg4r
fs/5nNIjYYRNj1pPWcj5Bb1HYYQRo2ZulnXkfER9GCEm6OiFtZ04H2G6h/B4
9sHPW3h+Vdy4PQRJW1uX8UM5H7F2D6H31m3O+5hVDu8hPO2TeOKklPMxWXsI
U/Pv5zVvzL/V7SGsTd1+cbw752M6ygm6lmpp6Ys4HzNGTvi07rmfxRq+nq2S
E9YajLuwYQPnY2LkhORrfrYGQZyPuSsn9I/Y9MEukv1r5YTQWx/3GcWwf/tw
QkjCufraxvlsduGEk4fOBO3i7XorwwkZFgMcHXn+mvRgOKHdopgPMxLZ/1Y4
ofsFp2ZfE9hfhBOKsl7PdYpn/7Z7CZ/q9EMK0tjfZi8hxrtkx9KL7L9iL6Fw
6JvYal5/0S1iL0HaXeLeifeXK/YSSrW8EXiZ/av2ElZeDHZfkc7+BvsIZdVd
2i9mNh21jzDV5eJ8t9vsv3QfIfLBrTrvu+y/bx/ByqX5Gvd77J+5jxBzY/yL
OObSyn2E1iurRfAD9m+9n3Dh6GKXslz2H76fcEq/KqBJFfsv2k/Y2qnZGq0P
7C/fT+g7VHv/UebcK/sJb47s2qb5g/0r9hMUp9cfu/+d/XUPEPocaxe6dzjP
ZxxygDB8hqeHrZTnM7ofIEzee/LqMJ7vqNh9gNCqW77oNIjnM146QJg/tbxl
PbNp2b/vu5Z+acxIns+oHUHYnpzXKtiK5zNaRRAOTyh5eEzC8xndIgitFOc3
WzCX7oggqK3JW13an+dzpkUQNq3/sd+CWVoSQagbPH1m0WCez6kZSSjzXNlp
0hCezzkwknDtV+2sMdY8n3NOJCG2ySu9rfx7VEIiCTknzF5ljeL5nMmRhMl2
Zv0C2NetOJJw12d/mI4d+2v8R+g9JK943ET2l/xHOGb327gvc+2s/whdKozq
3Cexf9B/hLSRGlaPmWXn/yMEmhzrAxn7F/5H+OQTWejD80lL+xwkHPoTNPX9
LPadeZBweO849+jZ7Lv1IMEyLD37Cc8v9TpzkOD4OqLpk6ns++wg4cvuqECr
meyrEkXQPprRuzOzSq8owpGEuRHDmCXToggrlh9f68rHc/OLIvTy9Vuoydvl
8VEEyROTyFY8H7b2dxRh9ReyCZ3Pft2jCQ2BJqfjF7CfYzRhdceX5xrc2c83
mtCkh8LOiefPJp2MJhScqLngNp59c6MJybZeCLFn35/RhI6nS/rPGM2+XWMI
TY50eb/Kk30nxxCKlo88kLeSfTfEEL7ebnXB3ot9j8UQJqeEza1fy77ZMYQZ
qhf1TzBLvsUQar4lHv67hn3NYwn9z5t29d3AvhNiCVsmt8l94sfxXRdLmJ45
xNVmM/vHxRKcdmnVj+D5xKYPYwnb8hxXvvBl/6+xhD+l7RXjvNm/0yFC5e7N
J7OYkxwOEa4pbtbdDWP/NYcIk9qpbnGMYP9DhwgYp3Mog7dL7x8irP7kdf3h
Pvb/fIiQUdE/U/M0+xsfJgRg3PZpzLn2hwnu6oYtDjOrrDpMyFZ3/JHDLIk+
TDD40PPY3ST2v3OYkPfKZE8/ZnnNYcL5AvnFFRfY3yiO0FT/+uy2z9nfNo5g
eyDwoE4B+3vGEd6+VSlqyyz7L47g327PXldm/5tx/+qlh/jnP2N/iiP8/DTD
2vAL+xseIVxq/pfimfVwhGC06TrpMsddP0KINjxyZqomz0f/cITQTS30YoU2
z0c3OErYl3ZjymF1no8+8ihhwcGKK1uY3ZYcJSztOLLlWUOej773KOGP6Wp5
TFuej55xlLCubRt7bebad0cJlxr8wjyZTVsdI3RuSAyUteP5+MOOEVrYZI1L
6cjz0RceIyh0C4sTu/N8/D3HCNXHXHXu8vz40vRjhBs5fZoOZdZ7e4xQrBl6
5agRz8dveZzwN7vmxQtTno8/+Djh7cX9Szp05vn4848Tvsb6FY3vx/67jhNC
VAv6rOb5/SqXjhOcziRKvpuz/5vjhFF9rF9ZmbF/ixOEXqVTe1cyyy1PEH4+
ESVdmBWuJwhLMsYMi7Bg/9AThC6UOGkG+5imniCYHdGGbQ/2f32C8GTg8HUz
ebt/85OEc56+S0+1Z/8BJwkV3yVPCvj/KnU5STi0TntLCz6e3vaThHk7Bx7N
4vUApBdOEsyC+v08bsL+L08SaKfq8zz2i1M/RfiwZpV8Pf++3H6nCJR7/uBz
ZpVZpwjHo4/7H2KWbDtFMOz5xndHV/Z9cYpQ2xC43pzXC1aonibMDO1w5OMA
9u19mhDcP7fHJmbTGacJerpl7XcwywJOEx5HfpVs789+T08TRlQ3O924/kLp
39OE2OyY/v2Y9XrGE9bvcfd8PJL9nOIJo+JtM27PZb8t8YS2tp3v6vL/FXc6
nlDXacqlcG4fuXnxhCXaPebcaIzv73jCkUsUeKUX+1kkECZmDBhziNuf25QE
wuVVX06Mb1xvYVMCIXGGTVw6twfFiYR//UOiStQi9s1JIEw4WDA6cSH7/kgg
FL6x+aXB22VdEgk/rkfuN/Xg+E5KJLw8a/WiGa9XkeSTSBiktth6jDf7H00k
JCz7oH/Ai/0fJxKmmXtfc1nF/g2JhKjoMO/Za9jf7Axh8LEm/uM3s//4M4R4
4+K973l95VzvM4QNCYHaLXzZP+4Mofnx85rmvL/kwZl/9/sm12v5+92+nCG0
C7OxTZ7I/iZnCQ9nyW88YFaMPUs4vDXkr7cD+68+S5hjpTHR3Yn9Y88S1NKt
JJGT2P/eWcKJdp28PWTs/+ksIbzyuY8Wr4+R1OEcAVNHO1zl7aWjzxHuLV43
bAQfT8/rHKEqy3nqTLB/1DnCxqat/A5MZ//b5whqm7PueDDHfTxHsJhqEmQw
jf3bnSe0mVbptGcM+9ueJ6Q0+KVlMks8zhP2nLf4u8qe/SPPE7ruGmY2mM83
RfV5QqcdPTtVNvZnbZIIvlLb5Tnc35hKkwjFsz/G7tVh32VJhFFW06wCsri/
3p9EuPV41Kwhj7i/vpZEGGmfMqZ/NvfX75MIE9t8qbC5w/21/gWC0w7rqd8a
709GXCC8i9TdeJiv516LLxC6znMKDOHreVz4BUL1nVHpPk35enX1AiEpdUJo
eRHfj767QHh2tsXlaS/4/ntoMuFRkHb6zUK+/16QTNCouqJp/pzvv8OSCXlP
TFt1/sP335eT/9Vn63+Zr8bXp/Jkgl3JlUmafDyZTgqhdXH86TBV9rVOIbTM
m5fxSYd956UQdgfZyR/95fvvnSmE5yt1D9/l+2W9iykEVY1VLXyJ779LUwiu
pmueRxTz/bdWKsFWFnB57RW+/x6USqhpVbiw2SW+/56bSjjeYNZuEz+fqISm
EoKcb/ZuOM333ymphFvpCWtwkv1fpRIySgPCW1xn/2ZphIO5z48a3mT//mmE
RGfbvEpeH752dhphgpb+/RLe3zQ4jdBSvaWdJh9flpRGeLmo1UC5Lz9/FKUR
rMduDM6ey88fahcJnq2v+4S6sX/fi4TR3/Ojrzuxv/NFwuf8qS7W09g/8CIh
qK7btYap7H/2IkH+UXN3d15/P7fJJcLpNa/k1fz8qNL7EuHqpeH6vaez7/RL
BJv3n0qr+Pvc/C8R1H/O1yb+PnnCJcLDAPcy1/HsW3CJcHPFnZ4HJ7Lvn0uE
k3FBLTV4fRHTHpcJY1enmBzj8VfZ1MuEic37DzBufN7efJkQ5XEwfkHj8/ap
y4SV+7NM7fh9CKVPLhMWPvVZOILr9fR+XSb8GN15oDG/j0DaLZ0Q2rFXbAm/
/8FLlk6IqJ2krp3H4w0b0wkzDcqjNXh+S+7xdMIvuxbVnjw/RiUnnRDQw7XJ
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
FNhdyZKZnwipqyMOJJgo2W3rJ4JPw+v2t02VLD/zieBQs3ey5adYpf+zT4Rp
79Skv0jJtSqfCYFHsif8+Kxk016fCZetxn75Xqlk2bTPhHcrN/Yxfq5kf79/
2/V/2LkWKjkp/jPhdweVxbFlSi7N/0x4sfmncdhHJUu71xGcO7y/eLUt+zrW
ESpjfn359Ue5Pc63jtBC9+amG3y83JN1hGFnU2eHVytZ5UkdoZXlXNPCXCVL
ftYRwmLHp/q+UbJb1y+EYYZjW6wsUrJ88hfCN7thqf/x71Fs+ELIj8gKeHKR
fY99Ififntdf3419s78QpBF73ge6su+3L4TEX2tMRvN2f/OvhMjZZx7eH8C+
E74SXiwrX1miw77rvhK8rMY0pHdUst6Rr4Qh+kYNTVqx/8OvBCefAvd6FSV7
ff1KWBhvu2NebYzSv1M9YcCFd17FNUrOdagndCjxs9RgVllbT9A+ZaT64qOS
JYfqCabdA7eFVynZ7X49YcivqkEDzylZ/rmeYFl95H0Us8K4gfDwgbGTcQn7
2zcQkgOrLpT04/a+qoEwo1mWU81mbu/RDYQbJ2fbDd/N7f1OA+GceVuX6Te4
vdc0EE6323U99SG3d6NvhGcfm7rEMevZffu3foKRvyqz13/fCGp9nZu2quD2
ffMb4ei2EQ5/s7l90zfCco31ixcXcPtu+53Qv61FhxW3uX3jO2GgbsPMlsxu
y78Tjr5Q2ZR1n9v3ge8EnW729Wp8/iqufye4+n89p3WNz+8P3wm1ewPzdJlN
DX4QanaanY5llo38QZgxt/CWTzL7LvlBUP3+2KPgAvvu/UHol/niwS3m0owf
hGfNB+mO4f31Kn8QWmUlpRQl8fnd6idBunLDucPMXsN+ErLH5Y1xD2f/hT8J
q7ebXE5kzt3zkzD64tW0JGaVKz8J8+p/a7Q9yf5vfxIuiNH7J/Lx3Fr+IhiO
9yHrSPYf/Iswc9zNsau5f1DM/0XIPL5xzaIw9t/1i7Cq3ZmMm8Hsf+kX4VD4
ogK7bez/5hfhx/vVrk8a493iN8Gs55uFk3ayv+VvQnlm7w0HuP8qdf1NmFs8
56Uzf15vx2/CTvedSQmb2D/1N+HBk7iyAb7s//o3oU6r21YNR/Zv/odg2LGT
mc9U9h/wh7B9t0FsDbPKnD+EhEkGtzPPsv/2P4RhQaFr05ndLvwhdElJMOx0
hv1f/iFMeWV2ajP3zwr1v4RmI7J7B0azf7+/hF33ZNOmpLL/rL+EJhMPrnBh
lm37S4j233zFjdn/3F/CpbqaL80usf+Lv4R2R04sk6axv6qKwOC9Ldc2iWH/
PioCC1+uLLvJ/790horAvIYHH7oksH+AikAX02tDroSwf6KKwLJBG7s12LL/
UxUBzd6OwQEz2F+liUCF1+cnS/n/kvRsIhA7/qLUlf8fN6cmAnFuoScSxrL/
liYCrWvc47Mnsf/pJgJ9ehaNHuvA/nlNBKJSi16Nl7L/7yYC/cbW5ORbs7+F
qsDuB6Wyip7sP0VVoIVhjsK0A/ueUBUYr/V77WAN9s1VFXjR5fu8h8zSH6oC
c2NXbW9mxL5dmgqkNUx9atOSfSc1Fbh+LTlAtOLf39BUoGX996CCAfx7x6sJ
3Nkw+dVQ3r/WW03gXK8e9p7vuH+OUxMwfN+5m37j9eiBmsAeP5OSudyf+X9R
ExjeXSQWqnO8TNQFWvzuuMJcm3//WHWBxUZHP42r5f55jbqAh9r9iKxn3D/H
qgsUqfZMnF/A/fM9dYF1d9W7OZfz9emTukD1pNBz/R/w9amDhkDMhnbaebf5
+mSvIVCj7X116Q2+PnlpCKjdveZfKOP+OUpDQGt0buvvNtw/39YQWBfef8OP
39FK/48aAi8Gqies+6Xk2nbNBBY4p0zf90nJprbNBEy+VNhXhShZ5tFMoNmi
ve/StyvZP7KZwJEm3htPfldy0o1mAoF1iSGXnym5tLqZwMlmQ80KM5WsZ9hc
QC/u6qOwm0qWSpsL3AvI37vgrJK9ljUX6JBU8kA/Wclx+5sLXLPeEKadpuTc
a80FPh7SjzpwRskqH5oLmAzyWmF0TMkSfU2Bay5uGnZyJbuN0BT4bma5um6V
kuWLNQX0i7rNdfFi/3BNgdWnf2uPWM3+VzUFCq6sTBrH+5u+0xTQODX92ael
7K+nJeCYqvekKbP/UC0B7YiDKQums/8CLYGycdH2j+3ZP0xL4GtWxKC8Ieyf
riUwcuNSl/vM0nItgalLx223687+Oi0Ehs70XJzdif2tWwh4WuZM/WDI/vNa
CKzq3P3R0bbsv6uFwI2x9p+e8v6Siy0Ebp3tXt2at7uVthAwexf12kyL/bW0
BVI+rzlcwawYpC2g1v3V2VSKUvrP1RYYU+eW6p6nZNNQbQE/14SW0x8pWZai
LfDqsFFlj5tK9n+lLbCu2/e2nZmTmukIvFkhHVZ8Ucml/XUErq700+yQpGQ9
Fx2BPlUTI8wPKVka/I9jTxWv3a9kryQdAZ/NjiUhA5QcV6QjkDS086kpzLlq
LQV+Kx5MfNNfySr9Wgr0svCqNu+nZIlzSwFZjrtauETJboEtBYbnxIrnfZUs
P9tS4Gm3Kx2f91Ky4nlLgZtVL3s+YK5toiswacPge0/bsn9vXYETjh103fTZ
f7quQFfna/UBzP7+ugKJ0b2fzOjI/gm6AoqmG2I/abN/ga6As/Hot01/HFT6
/9UVeFqha1FYqWRpDz2BnSE+b6Vvlew1VU9gzqQHq6e/UXLcZj2BESujvKtf
KDn3lJ5AUtfoTQMLlaySpyfgMPVXK0mRkiW/9AS+1bXfq1qtZLdurQTklq8q
ZTbsL2sl4OdyoWmFHftvbCXQxqbYXqdCuX/t8VYCPe6m7ivm45vmtBKwapL8
5lepkmXfWwncz7N32s2/179za4E7Ohk9z79TctLE1gIbTI2me/L3la5vLRDZ
JnLj3nL2P9paYPykew2puez/qLVA9Y2WQ/tcY//61gI/NDaP+d6E42+qLzA3
ZmT/ZF2O/zh9Acvk78lddTj+3voCfx0k6rEtOf6H/+0/zwJPmnP8s/QFTo+4
sVSuyv51+gIrnv4ca/JdeTxFRwOB7cPDf5vUsv8YA4GiZUkVG96z/2oDgW36
w352Zh9ZjIFASvG5+YMesP9dA4GyW6NOOtxn/1oDgek6yI/oxv7t2wioxHX8
mt+P/Ue3EfDQ7nf1KNh/ZRsBzYlzB50byv4H2wjM6qEvzfv1n9L/VhuB+4Y6
9VU1Ss4VbQTaKMonhwklq7QzFJhtd8g78q2SJTaGAj5Dgodf+ahktxWGAmO2
9FVt/07J8ghDgR5F9qZHbilZoTAU+KM7wVf7gZJrqwwFduUcG/PwvpJN27QV
2O5lFp1wR8myUW0FbH9iUf1NJfsvbSvwQmfy4gyFkpP2tRUYK/Hsevi6kksz
2wqYdI6MtmSWtm4noDHp1oVC/n6v4e0EtisG9GmRxb6L2gnMHWQY0/8e+8rb
Cbjk15hveci+V9sJOC2caubxhH0r2gkMu9uv3boc9tU1Erjt4tnr+G32HWIk
kPcof+aau+zrbiRQ+L77Own71O42Elj7OLVX6xT2vWwkEHe0uO5cOvuWGQm0
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
CaCWT9phjjjg/z88tIPK
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.556656*^9, 3.9586752*^9}, {0, 0.0798545257471515}},
         "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.556656*^9, 0}, 
        "ImageSize" -> {1200, 1200/GoldenRatio}, "Axes" -> {False, False}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.556656*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       TagBox[
        RowBox[{"Standard", " ", "deviation"}], HoldForm], HoldForm], 
      TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{All, All}, {
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}}, {{
     All, All}, {{{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}, {{3.5343648*^9, 
        FormBox[
         StyleBox["\"2012\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"2024\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         StyleBox["\"2026\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], 
        Automatic, 
        Directive[]}, {3.5343648*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5659872*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.88152*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}, {3.9762144*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], Automatic, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      (Part[
       Select[
        Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}][
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]& )[
       SlotSequence[1]], {Identity, Identity}]& , {0., 0.01, 0.02, 0.03, 0.04,
      0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
     0.17, 0.18, 0.19, 0.2}}, {{3.5343648*^9, 3.5975232*^9, 3.6605952*^9, 
     3.7237536*^9, 3.7868256*^9, 3.849984*^9, 3.913056*^9, 3.9762144*^9}, {0.,
      0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 
     0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1200,
  LabelStyle->Missing["KeyAbsent", {18}],
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Volatility\"", TraditionalForm],
  PlotRange->{{3.556656*^9, 3.9586752*^9}, {0, 0.0798545257471515}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxU0ogwEYAODPVpa1Fi7bQZOVxUriwIm8DmgmRU1qpqYVizbb134+MxvT
OFB+24GNtVIO4iI1NZm5LKVZalphJj/1xgUnpve5PFV6U5+hiGGYOoZhDgvC
6T0rQojXZLq3IqzkzB56LJH30aGB1iAt/Rg6otnjVIz2jKrZXyuCnSc+oD/P
BJe05yWToTuDVzla96QU/VkRvI2T5fRp1iKlByPHMlr12LDIYxEEivoAvTs3
vE9r1SXntHG9/o4WL2seaK46/UZHU7XfdLhZJOlmEfKbEzK6RpVU0mrjjWSB
RZBnefN1NoQtYYE/a0OwmN9P0naE1+3bRpcDQT6uDdPXBuaHbkvGKxMOBNDw
vWVOhAv/TkuPE8GPgYiEQ5gpVqxtcAhL0mghySH4nlc5/RRCul3nl7kQwtAh
2XMhsCNdFf1uhHjpV2/MjfAPpae6Qg==
  "],
 CellLabel->"Out[17]=",ExpressionUUID->"00e99461-45ff-4aee-8fd3-fe19986b6d48"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.956583594880019*^9, 3.956583597703912*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1438.5, 878.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Linux x86 (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d94d918-3899-4e18-aac0-70bf8cee834b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 309, 5, 96, "Title",ExpressionUUID->"d0156753-738e-4289-aedc-5077aa29e1a2"],
Cell[888, 29, 253, 6, 33, "Text",ExpressionUUID->"267939b8-5eda-4511-bf7d-42ed242c822b"],
Cell[CellGroupData[{
Cell[1166, 39, 2905, 78, 19, "Input",ExpressionUUID->"9e5f9d4f-7f8a-46d3-b2ed-6aba96bf060c",
 CellOpen->False],
Cell[4074, 119, 1624, 26, 40, "Output",ExpressionUUID->"ee420b88-8d40-4c9b-8dbf-bb5f945a7c41"]
}, Open  ]],
Cell[5713, 148, 6070, 125, 19, "Input",ExpressionUUID->"7ba4890e-baff-4440-b611-c0ef85b503a5",
 CellOpen->False],
Cell[11786, 275, 2525, 61, 19, "Input",ExpressionUUID->"c3aff205-d97a-4203-8afb-492c50dd5de2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[14336, 340, 47223, 958, 19, "Input",ExpressionUUID->"b56523c0-f5af-4d51-b376-8ed10c008b3c",
 CellOpen->False],
Cell[61562, 1300, 16937, 341, 5792, "Output",ExpressionUUID->"eb3b9e1f-c8fe-4fa1-9732-289ee8e574ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78536, 1646, 321, 6, 65, "Section",ExpressionUUID->"673cb76b-bd4d-4e8e-b2fc-2e286e53115f"],
Cell[CellGroupData[{
Cell[78882, 1656, 3918, 87, 19, "Input",ExpressionUUID->"5df44138-e30e-41bd-843f-d9b16e477c68",
 CellOpen->False],
Cell[82803, 1745, 228177, 3891, 800, "Output",ExpressionUUID->"00e99461-45ff-4aee-8fd3-fe19986b6d48"]
}, Open  ]],
Cell[310995, 5639, 171, 2, 29, "Input",ExpressionUUID->"510a1483-7bdf-4274-aeef-821d200aff92"]
}, Open  ]]
}, Open  ]]
}
]
*)

