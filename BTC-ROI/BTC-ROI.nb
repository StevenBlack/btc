(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    614417,      11541]
NotebookOptionsPosition[    567154,      10668]
NotebookOutlinePosition[    613432,      11521]
CellTagsIndexPosition[    613389,      11518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bitcoin ROI performance", "Title",
 CellChangeTimes->{{3.93438465236578*^9, 3.934384675784363*^9}, {
   3.934384735742881*^9, 3.9343847602015333`*^9}, {3.934388250569322*^9, 
   3.934388294772936*^9}, 3.9343883249206533`*^9, {3.9344716123697233`*^9, 
   3.934471706879547*^9}, {3.9344719643965*^9, 3.9344720785590267`*^9}, {
   3.934472112707695*^9, 3.934472117372675*^9}, {3.9344721685769787`*^9, 
   3.934472170401115*^9}, {3.9344722153641*^9, 3.93447221675655*^9}, {
   3.940852953847753*^9, 3.940852985473755*^9}, {3.946314180623323*^9, 
   3.946314259792115*^9}, {3.9463156420430183`*^9, 3.94631564237997*^9}, {
   3.946315685402276*^9, 3.94631569286625*^9}, {3.946315724193636*^9, 
   3.94631579785072*^9}, {3.9463158577546186`*^9, 3.946315877249687*^9}, {
   3.9463159327818117`*^9, 3.946315935179348*^9}, {3.9503773061961927`*^9, 
   3.950377327057673*^9}},ExpressionUUID->"deb1a217-b104-4580-882f-\
939ace20911a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Buttons", " ", "to", " ", 
    RowBox[{"hide", "/", "show"}], " ", "code"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CloseAllInputsCells", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nb", ",", "cells"}], "}"}], ",", 
      RowBox[{
       RowBox[{"nb", "=", 
        RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cells", "=", 
        RowBox[{"Cells", "[", 
         RowBox[{"nb", ",", 
          RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"SetOptions", "[", 
          RowBox[{"#", ",", 
           RowBox[{"CellOpen", "->", "False"}]}], "]"}], "&"}], "/@", 
        "cells"}], ";"}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OpenAllInputsCells", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nb", ",", "cells"}], "}"}], ",", 
      RowBox[{
       RowBox[{"nb", "=", 
        RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cells", "=", 
        RowBox[{"Cells", "[", 
         RowBox[{"nb", ",", 
          RowBox[{"CellStyle", "->", "\"\<Input\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"SetOptions", "[", 
          RowBox[{"#", ",", 
           RowBox[{"CellOpen", "->", "True"}]}], "]"}], "&"}], "/@", 
        "cells"}], ";"}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Hide Code\>\"", ",", 
      RowBox[{"SelectionEvaluate", "[", 
       RowBox[{"CloseAllInputsCells", "[", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"Button", "[", 
     RowBox[{"\"\<Show Code\>\"", ",", 
      RowBox[{"SelectionEvaluate", "[", 
       RowBox[{"OpenAllInputsCells", "[", "]"}], "]"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellOpen->False,
 TaggingRules-><|"ChatNotebookSettings" -> <||>|>,
 CellChangeTimes->{{3.950377338542898*^9, 3.9503773428172417`*^9}, {
  3.9524587278914633`*^9, 3.952458738003194*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"5f80661a-cd8b-4293-acf4-83030feaedf6"],

Cell[BoxData[
 TemplateBox[{
   ButtonBox["\"Hide Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`CloseAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"], 
   ButtonBox["\"Show Code\"", ButtonFunction :> SelectionEvaluate[
      $CellContext`OpenAllInputsCells[]], Appearance -> Automatic, Evaluator -> 
    Automatic, Method -> "Preemptive"]},
  "RowDefault"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+KWlSyG+/PeOp4RZV0cXPjWcYuHv3EIkN7Xf9srGUhb
NfbPbgfSH856qC8teut44e7ezu1Aukx2aT+IzuG6vRdEe81mjb1d/NaxT8eg
hrPkrWNJj+4kVSAtY1A6G0TnJdosAdEPeAo8rwDpXZ231twqfevYs+5AqW7Z
W0e954u7z5W/dXQ4dyn6bAVQ3YY3IgVVbx3losUVzgBpDwO7bUnVbx1fvLbl
Dq576/i9LOU6Y/1bx97gWYeeA+kax1VFTxreOlYVBqYrNb11TArwjVkBpJft
7r+j3PzWUanvS1glkNblkL7/qeWtY4rfibmfW4H+edbiId0GdF+N4slpQPp0
8bT1Hu1vHeu+fMuaCqRlphaHl3UA5TtcFzh1v3Us//ow7+LEt44AGK2jbQ==

  "],
 CellLabel->
  "Out[291]=",ExpressionUUID->"7872e4ea-df80-403f-bd17-d740fcf6bb27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btc", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<BTC/USD\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2012", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"price", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"btc", "//", "Normal"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pl", "[", "x_", "]"}], ":=", 
  RowBox[{"Style", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "Bold", ",", "Red"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"settings", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"aspectratio", "->", 
      RowBox[{"1", "/", "3"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"drop", "->", "180"}], "\[IndentingNewLine]", ",", 
     RowBox[{"imagemargins", "->", "20"}], "\[IndentingNewLine]", ",", 
     RowBox[{"imagesize", "->", "1000"}], "\[IndentingNewLine]", ",", 
     RowBox[{"labelstyle", "->", 
      RowBox[{"Directive", "[", "14", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"plotbackground", "->", 
      RowBox[{"Lighter", "[", 
       RowBox[{"LightGray", ",", "0.75"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"subtitlestyle", " ", "->", " ", 
      RowBox[{"{", "15", "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"ticksstyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"{", "16", "}"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"titlestyle", "->", 
      RowBox[{"{", 
       RowBox[{"20", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", "|>"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updatedstr", "=", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTemplate", "[", "\"\<(updated: ``)\>\"", "]"}], "[", 
      RowBox[{"DateString", "[", "]"}], "]"}], ",", 
     RowBox[{"settings", "[", "subtitlestyle", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gridlinesx", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"DateRange", "[", 
       RowBox[{
        RowBox[{"{", "2010", "}"}], ",", 
        RowBox[{"{", "2030", "}"}], ",", 
        RowBox[{"Quantity", "[", 
         RowBox[{"1", ",", "\"\<Months\>\""}], "]"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", "2010", "}"}], ",", 
         RowBox[{"{", "2030", "}"}], ",", 
         RowBox[{"Quantity", "[", 
          RowBox[{"1", ",", "\"\<Years\>\""}], "]"}]}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"btc", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<BTC Price (USD)\>\"", ",", 
          RowBox[{"settings", "[", "titlestyle", "]"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<Latest: ``\>\"", ",", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{"btc", "[", "\"\<LastValue\>\"", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"settings", "[", "subtitlestyle", "]"}]}], "]"}], 
        "\[IndentingNewLine]", ",", "updatedstr"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "Center"}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"AspectRatio", "->", 
    RowBox[{"settings", "[", "aspectratio", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Background", "->", 
    RowBox[{"settings", "[", "plotbackground", "]"}]}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"FrameTicks", "->", "All"}], "\[IndentingNewLine]", ",", 
   RowBox[{"FrameTicksStyle", "->", " ", 
    RowBox[{"settings", "[", "ticksstyle", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"GridLines", "->", 
    RowBox[{"{", 
     RowBox[{"gridlinesx", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1000000", ",", "5000"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "1000000", ",", "20000"}], "]"}]}]}], "]"}]}], 
     "}"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageMargins", "->", 
    RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "->", 
    RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Ticks", "->", "Automatic"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.93438465236578*^9, 3.934384675784363*^9}, {
   3.934384735742881*^9, 3.9343847602015333`*^9}, {3.934388250569322*^9, 
   3.934388294772936*^9}, 3.9343883249206533`*^9, {3.9344716123697233`*^9, 
   3.934471706879547*^9}, {3.9344719643965*^9, 3.9344720785590267`*^9}, {
   3.934472112707695*^9, 3.934472117372675*^9}, {3.9344721685769787`*^9, 
   3.934472170401115*^9}, {3.9344722153641*^9, 3.93447221675655*^9}, {
   3.940852953847753*^9, 3.940852985473755*^9}, {3.946314180623323*^9, 
   3.946314259792115*^9}, {3.9463156420430183`*^9, 3.94631564237997*^9}, {
   3.946315685402276*^9, 3.94631569286625*^9}, {3.946315724193636*^9, 
   3.94631579785072*^9}, {3.9463158577546186`*^9, 3.946315877249687*^9}, {
   3.9463159327818117`*^9, 3.946315935179348*^9}, 3.9503773061961927`*^9, {
   3.951729638815996*^9, 3.951729660948288*^9}, {3.9517297574963017`*^9, 
   3.951729936757153*^9}, {3.951730103314357*^9, 3.951730118578598*^9}, {
   3.951731085930715*^9, 3.951731088526613*^9}, {3.952458717383326*^9, 
   3.9524587214705267`*^9}, {3.9524590616110373`*^9, 3.952459062466072*^9}, {
   3.9524591286397257`*^9, 3.952459133792755*^9}, {3.9531512018280773`*^9, 
   3.953151256535245*^9}, {3.953151297992991*^9, 3.9531513021987953`*^9}, {
   3.9531514289651003`*^9, 3.953151440317889*^9}, {3.953208397714035*^9, 
   3.9532084398887177`*^9}, {3.953208511751749*^9, 3.9532085886930304`*^9}, {
   3.9535660892161837`*^9, 3.953566095717679*^9}, {3.953566128022882*^9, 
   3.9535662374933577`*^9}, {3.956695465049159*^9, 3.9566955024956303`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"f96d83c5-c56e-457f-a564-3a7b7085a9c1"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1: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
YlW/qoh+6xKu31FN9NdZovZfddE/eImq92LXly/hfn8oducZ1V+rKfo/sn+2
NTVEf9altFtrif5aS+nfXmK3DVjK82u09HcsWUr9w4VdJ5eqfBE2/ap9e2F/
pmXq/BO2Vl/G/CxUW/T3W0Z/7Kov+iOVPbld9B9T/VM2Fv1vlqn5G4n+DMs5
/8eGor/KcsZrptidvWlPekr6u+cvZ3w+NhH9purfpLnoj11O/+UQtqV1q3wU
dlRyc7xELUR/DzfXk6Sl6J/jVvpai/5Dqr/WTvS/oP1zlEP0/7OCdp+wUWEF
x9vXUfSHKrtb2OdawfmXdxH9B1ao+tlN9D/9r31v0Z9qJVmX9u6yKzn+raai
v7Pi4W1E/8yVqj5Af9RK5T/of6TGM8SfruSrWD8SiL/NUqtUvkh7v2OV8q+M
b522ivWyj/jDvlvZV3UQ/Q9WMT47xe5Jspr761170V98NeMTLP6wtF+t9HYS
/ZNX0/8Hxe7cwfaRaO++qzij+NubcI3SK6wVXcP6+lLa29qs4Xk9UtgRTtZs
sj7XtjVqvRJv89Ya5vMEyQd/vLWsJ/naiv7Ca2nPDf0t19If/4rdGLdW+Vf8
5dm8VtV3sftuqPa/xW6Js07FT8bTC65T55+0dzZbp/wj7B6zjv78K+zdoOym
rF+7to7+qyDj2/5wvNDm0t6Rfz3jWxj6G6/neMuFzZHrWf8zCPvXrg/wl/Wy
Ygf0/1yv8kvYyLOB+fRZ4u1puIHzp5P4+IZvYPvswpbVG9T4wvpFxS7JJ+c3
tn8YJuzOuZH5Vhfxr7dRxU/s2tCN9PcPYduKjTzfMkh7x7mNyl+yPtfnjYzH
BWEz+yYVX2F/7U3qPBa2DtrE/NoO/cs2sd5OE38bpzdRX03E/wP5YdJWoj/L
Zta3lBIvS83Nqv4L6/0VTxJ2Lt6s8kn6u09sph5T8tP7ju0f3hbWMm1hvsYI
26ptUfVL+jv6KrbK+K6FW9T5h/yP3sL510l7/+st6nwQtqbfGjCevfJW+juT
sNGLHHRf5vfM28rzqquw78hW7v/twpZXW9V5KqwHbVP7VeqPs+I25mtFYXf3
bfR/R2Hv7G1KTzPRf0ixhvr3fBvzuZacF47UHlU/hV3lPYzfATmvzK4e5u88
YX8E2ztHSb207lf9I4XtTzwqHsJGyu1c/3RZj6fMdtan08K+TtsZr6myPssM
xa+E9b3bqW8s9D9U3F/OK3eyHYzHY+gvuYP+Pozzz0GObSTz2abu4Prcwo5d
yl5Z2HV/B/fPQGEz8U7u11Bhf7Gd9F+UsLXdTq43k8xnn6Tsk4WN7TuVv4Q9
d3YyP5IK+xLsUvVS9Fhsu+iflsJ6611q/0k+OCfs4npnCbu37lL1GPl/cxfX
+0X6a/F2K/8I2/7dreqZtHe02K30CrvGkoN74/zftJvxr476f30383WWjGfV
9gSs315gD/3rEDaa7mH/cGHP6D1c3w1h33r2j5yC/L+6h/OfR/7/Vu0nQn++
vaoeQn+jvZz/DfSP2Eu9V7H/1+5l/z2yH23evfRXadnfjh/k8MVSn1y5o2hH
vTIbRDFer/D8MyyK662N839VlKpvcp7YLyj7d9S/r1FcrxPnf459HC9M2Fd3
n8pHYcuQfRyvtNRr3b1P7V+p186z+1g/mgm7P5E/66j/2fbT33lw/tfez3o9
Xeq1beB+dX4KO5buZ36VwPl3aj/98RPn33s13jycf5kP0N4L9b/GAfafIGx3
HlD5huefRbQ3WijsOX5AxUvY95bjtc0ubMl4kPpbQH/VgyrfcP71of3hfpx/
Cw6q80vYe/Qg15cM59/rg/T3fuhPd4j+ugn9+qGA887V8xDXux7n39xDXM9X
nH+HD3E+L/S/PET/lJT57GkO098HoT8E7IhYCf3dDqv6CP2zDgec75aD7J/t
OvQ/O6z2s+Sv03KE6+km8XCXO6LOB1mPt8uRgPNZizhC/y6H/n1H6M+H0P/4
SIC/XClM5u9wYbO0yXjiecLf0aR/bgpbp7O98zf07zG5fxbg+d+n7G+EPUmP
qv54/i9xlPWsKJ5/O5CD/gjrU9g+LEtn0b/zqIo3nv/vHWU+XBH2JoqmPyaE
iv5iZC1K/p6wtY3m+Tm6h+ifSHtM+e6i3xNNvU2kvXk7Wp03Mp4//jGOp0t7
axFyzBxhe6tjXP98Gd8YT47dLnbPlmP0f3+x+2KOMV7VhC1xj6t6JKwXOq7m
6yn6mx9nPrWWv4fcxnH2b9tX9G88ruq5U/RfV/1tA0T/X8W+QaI/+ATbNxks
+pucUO3Fbo46wflGi92/7gT9U2SI6L+i2i8cJvp/KXuqMNGf96SK13DRbz9J
/xQbIfrDFN8YJfrXKH4xQfRfUmwaov87OfbIONGf6xTHNyaK/vqKb04W/cNO
cT0vp4j+lae4nzRhx3nak0YIu74o+8rpot96mv7JPlP011G8LkL0Dz7NerJt
luhffprrHS1snDmt1jND9H9U7Vu6RH/WM7SPFLbUOsP1eKS/PuAM2/+R+ZxL
zjB/hsp63SfPcL0bw0W/X423EPozn6X+7KLHVv0s1x8pehz9znI/Dpsm+iPP
sp6VFTaPqfbbhP1vaA+ZP1X0ZzjH+fzC9iqKF8p6jN7nuP7kwp75yq5LPH2m
4u5it8QqtowX/WnPc76FEm9npfPUn0fs7h60Bw2RfPHOIcd2E9YOK3sZGd/2
4jzHbzlJ9P9zgfV4suSPq8IFZRc2QxWbwn7XBY4XX/pbDyi7T+z2pxfo7wVi
N1Jd5H4eK/HwlL1Ie12Jn6/zRfr/mbBl5kWOV0vipUddpJ59ws5HbL9qtozn
Tn6J9fqA9PeWusT1nRTWOl5ifVwt8bFNu8T9HFfGc+wmhzrE7npwSdVL6W8m
8XL+McL+4l6eT7UR//Ze6hkodvtkL9fzUtZn7PByPLvYPXe9nN8u/X0JL7Ne
e6G/6GWOf0pYb3OZ40UKO8PZXnMg/7f9xzKf99Zl6ikF/fGv0D4E+7/wFY43
BvFvqexu6e8ad4Xn12Vhc/MV6v8r7L+h2meQ8axxrnJ/9ID+glfZHvvTaEa7
Vg36x1zleZYO8d9AXjVAxrdcU/0fyPr0P+SgxJJfzvzXaK8q+exufI37Kwz7
f+Q1jj9aWFtH+/kMyP/Lqn8H2R+On6q/b5zoz3Od60X9NRte5/pGC/uHK3t3
2X/W1de5Hy8I2y+SI5cKG9/IzlHCnpw3mI8zx4r+eje4vgIyv2Uo7UnTY/+v
uMHzGvXAee4G139A6of78w2Vr8Le7DG015bxtDoxtJcRtg2KYX5Vkvkdy2iP
OSDsOq36bxc2P8Rw//4r/vNnucnxEgtba95k+3fiH3v/m8zv18LG4pvc3yeh
/4Tq7xD2vVP8Q9iS6RbXtwn6q5HPm9Df9xb9cQn1b+Et+isl6l/0LcZ/ndi1
N7c4/kNhW/rb9H+MsKPybe6XQcKuXrfZvrCwOY8cEyTsP3KbepqLP62v1Hgn
xV/2oDuM/wpho+Id9h8p7Ol+h/5BfHyz7zC/KyH+h9heswrrz+/QH9vk+cCZ
+i73Z4sxor/8XZ4PUaNFf1dy0NaRot9Fjp0mbNt/V+W3jOd4cpf1q588j7hS
3qM9m7Q3yyi2Cfs73aO/4kp/64x7XN8Jsdv33uP8X2Q84yHY2ra22D3J7jOf
luL5p6TiI/I8ZXHc5/id5PlJn3qf448Xdu66T//+lucp9/37Kv9lfG/iB/Rv
A9kPWvEH3L/ThG3taA8tJv5zTHpAfwaL/1zbHzBek8Ru3nnA/V1d2J/Ax/zL
IGy1+bi+5dLf3pr2iLXCxgTaz3eS9p6tPvqnovjPd9PH+h8t67fEe0h9D6D/
34fM50XiL2eLh9T7Tdg99iHXnwv6N4GN6FOI/w1yUAPEX3vEfOkp/R0FyNEN
Ef+mj6gngbA5mnz+hqzHv161nyZ261XaP/cVtv9+xPWXlvmMfI85/1TEv9Fj
5kMfxH8E7SHzhS1rH9Pf/YV172P60wv9Px7TX0+gP/cT8g9hb4Mn9FcW6B/+
hOt7LXbbqifM9zhid1xQ9smI/9cn1HdP2MzxlBwh+eOvSw5qIWwdQo4dI2x3
P2V8nmH/n33K/C49TvR/esr8e436n+0Z/ZVX7Jbaz+ifGLHrA59xvo6of0tp
D1+E+nfqGevRFmHv+2eM12Y8/2V5Tv+gHttqPKc9Ac4/53P6f6Wwa9Fz+rsW
zr/jbJ9tLM6/t8/pv2nC1owvyGVR/6u+4PiVUP/7vOB4/VH/F7ygvtvQf/QF
9Q+D/tcv6E8T+tO95PgDxO7UX3I/txB29yQ3eiPsnfuS8fwprB15SX+HC9te
sn1Yd2FHmlf0Tx9hV8grjrdf2Oz2iuO1FvbPYvuYWFmf9eArdb6j/j9T/VG/
DUss9eLvNU+5WMZzkLCvC+1b90B/RCzz5xfOv32x1P8e8X/M/iENxb/uFK+5
voI4/0q/pr/x/KF1ek3/7sT5N121P4bzb4+yO3H++ZQ9HOdf0jdcL553/CXe
0H9Vha0d3tAf54TtU94wP18IGzvfcD3bEP97HC+2nbAv0VuenwOELcXeUn9t
6G/7lnqxHudExfuQ/x7VfgPy//Zb5sdM6E/wjuP3hP4i79i+LfS3Isd0gP7x
76jvBuK/hdwoBvGPecd8WipsjevnfGOF7YX8rBcdEf/mfuZHFcTf8NMfc5H/
G9m/USnE/zrtoRuF9b/sXxP56gx+z3xqKOxu8p750VnYO+o958svrK1/z/mK
CNuuKK4j7PilxgsVduX9wPV3hX47ObYv9Id94Pn3Cvm/hhyK/Wq/9IH5VAD1
7zv7B0Xh/Mv1kf5uIuyr/5H1opnUT8uwj4xXOrHrK1X75Xj+OU8OPij12f3l
I/1TBM+/1k9k/H2t1f3E9afE+T/4E8f7K/0dy9neuU3mc51R7Xvh/P/4if5J
ivqf9TPz+z3O/1qK1wnbB3xmfp0VNpZ8pr8aQ/9J2oOf4fz30x6xFZ//ZP7C
/bdaWK/+heO5ob/fF/ob55U78gvnvy527zH2P/9JWHv7hfl5UtiW4SvjG4Ln
vypfOd5cYVfvr/T/FWFz/lfqPyXsN9k+Ygme/2I5XmyMsD3tN/bfLGxU+kZ/
NxP29CAHf5Hz1zfnG9dXC88/h79xvsV4/nnxjfMdlM/XnP98pz+W4fmvwnf6
N66wN5Qcqglrs8gRo3H+H2D/mOEyvuPpd/prvrR3pfpBe3lhs+wP5lMiYX/n
Hxxv0FDRP/MH+7cWtkfRHtpF1ms8+kF/vxG7J/lPxquusK/UT+pvgOffjj+5
f5bK54/6NNV+4EDRv5vcdqDY3Q9+Uv9WYW+SX7Tfkc8rtRLk8FUyvq39L44/
XNgx+RfXFyns2qHse2V95t1f1Lta9PgT/qb/c4o/rEV/M/4L8PlnG2V/JP2N
8N8cj/q30R4zTdr7bil7R2FL/D/cjw+lvV74D+txMcS/Je2Rv8XuHveH50EV
Wb93s+pfU1iL+cP5YsQftjh/6a900F+QHJoJ+pv9Zb3KL2yOIcdmx+e/G/4y
XpOFrdf+0t8Fhe1/lL2cxMPIr8Ui31sKexqD3ZFdhX0jyc4pwpZ1YCO6rIyn
XwbrxZ8LO3+CrVtbCbvzxEH7oI3C3oZgM1sE9IeBHREW8ZdtNdgankrYcVHZ
G8t+cH3jeLH5hM2ccTHe+S+Ifz2wFrMA+T8UbG3bDvFfATZCWiL/z5FjlyL+
n8G+RiuR/9njYf7Q5sj/OvE4/mfoHxSP/ikoducy1b4C4n+aHDVM2PtB2ecK
a1njc/0+5H/N+BwvAfT3j8/2E4Rdi+PT/9OQ/ycUjxf2v2P/mtSfKQHn92D/
VwObn2ci//uCNS0I+hcm4PzDoT86AeM5VNjyJgHnm4P8T5+Q+RIL/ZUTMn4f
Ef9etNfch/jPA/vCzmP/mwkZ3+TQ/yoh4/FU7I6gRLAf7IL3HxUTcbxLwmZ3
2kNPS376ZyeinmLC1kOJmH8OqU/256r/c2EjdWK0LzgK+V8ebMy5IXZfV9qD
zyP/XWD94RfUv/1sH5Jf2PmE9l0Xpb87ZRL6fzrqXxmwb5VX7FrnJMzPq8K2
GWwfOlnYsTcJ/T1U2PWQ9ggN73+SJaW+XWL3l0zK8fcIWx1JmV9x5f2SfWpS
tf/k/ZOxi+0bZu8v+u+DHU/XC/sSJ8P64leT/pbiYH3abbHr7ZIxnq3F7pyU
jP6qInb3dnLMLZnPeycZ8+sO3n8lTE69NfqIflty6u3RVfS3Ts760lDer7km
JOf6EwibW1X7l/L+zn9Tta8rdmu8FMzH7L1E/78pGI9QsRstUjDfBsv7Os/Y
FMyfb8K+Tezftoisz3KD7UP+6Sf6tZTMpxXCzgIpac8E/U2VvSb0jwabK4Jl
fG1DSuoPg/6rKek/l9gdv1My39IJu/Klot7hwmajVFxvFunvH5FK7S+xW9em
4v7MI2z3Ki4r/jB+sH/wTWFPbgv1roP+Bhb664fYLcMVrxXWV1mYb25h5wVl
DxN2f6W90Xlhb47UXJ9b1qvVS831FBH/2Iak5nqqid3hVvZmwq6zqenfifI+
1fyUWp1P0J/tH/graYSwtfY/9M9maW8f+A/1bRM2lqr2I6S95xT5YUKx+96T
i8ci/lnScP8dFtZrpKG+6cJOp7LPlHxwL0rD8TYKe4+nUfUW+f8uDfWlkHyx
ZQwiLxB2VA1S+SjtXX3A5sevwuaCIOZPQmnvP8r2wbqw9XUQ11dI2J4uLfU+
EDb0tPRnKdm/np5pGc8Bwr65YK1pQez/I+TgXdj/L9m+kUfYmSYd+RXyP0Rx
Junv7ZaOeo6LXZudjvsjNeJ/MB3jk0DY8Yz9V7WFfkt6+qcS9JdLz/17Qtjf
hXbnJmFrRHqeX4nE//Z96an/DuL/mPbwgmL3pMjA9h8R/9IZuN/mid3SKQPj
W0Xs+vQMXP8bYeeeDBx/jLDbl4F6D+L9f9KMXO9wGU8rmZHzHxO2dchIf60W
dkwBa3FjhF07M3L8v8LmvYw8z48L+xNlon/myXzWYplUPUX+t83EejxG8tWY
CPblLI7892TiehYI+26zf+xL7P8EmZlvP6R+6kUysx7vw/5vlZnjL8f9h/Hk
4GvY/1uU/bmwdjMz8w/1xBY3C+tDYtS/Qll4fqEeuJpnoZ7UwqaRheO3xf7f
SHvIfdS/61mYD7VR//5mYX6lR/0Lzsr49UD9b5KV8c2G+jcKrHfqImxZn5V6
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
/0Tk/ybaYy8g/6+DHf/Ekfxz/CWHZhN2BddmvEy8/2lSm/vpB97/jqrN/TgA
7z/X1+b6YvH+50ptrqct8v8X2PE4Cb7/kbcO84PvP+3k8L2ofyPA2phoYX0N
7VsfoP5dAhvzMJ/7O7kS9Hlz1cX6vNXw/qsBuRHeT9mG1WV/7v+VYPfJ1Hj/
db4u872izG9+IUclxfs/az36Iwzvv+rWYz72hv7BYONwH7z/Ws722bbh/deZ
ehxvD+r/R7JFg/5s9aG3dTnor1Wf4zfF+98B9RmvTnj/v6Q+431T7N6T9Zk/
PfD+/319xj8H8j9zA8anFt7/VycHVUD+92vA8Ry4/xjZgOvvjPw/1oDjN0H+
v1X9CyP/MzTk+TUS3/+pQv7cW9jTuyHz64+wbz65+GfUv6MN6Z+32P+xDXle
1UT+p7Vz/C/Y/5XstM9A/vewM37VsP/nkkNHiz9sh1X/D8j/F3bWgwm4//BP
I9bDW7j/UKER178f+R/aiOuPRv7PasT8TAT9BxSXhf6n7J9tC/I/VWPOd1bY
V7Yx13df2NKlMef/ivo/szH3F8Z3Rqn2eaH/UWP6bzzufyRvQv0uxL80OXQz
9HdswnwCO6aRc/uhf3cT6s2E+vegCeOr4f5rkqb0X2Jha4mm3F9/8PzTnhw2
HfonN6W/eiL+O5pyv0Of725T5tMd6E/UjPXwE/QXbUY98aG/TTOurxj0h4P1
0hjPu43to8og/rebcT0O5H/85uzfGvlfuDnnY/63JAdT/zhlzwb9m5tzf8aF
/hhl7474x2lBfbi/YxRswfiFQ38zsJ4U7Buj2scg/zeS2z5G/l8jb+0A/X9a
UM9+6M/fkv3z4PxvTG67Cuf/qJb0fyHcf17XUu0fnH+XaS9eFOf/T2U/ifM/
Tyvac+H+U8NWzM+SuP8U1orx13D/fXUr5nsanH8XWzEeE3H+fVPj4Xzz5WyN
/KochPO/fmv6Pxr3n4e2Zj1/hP2/ojX98Rzn37nW3P/JcP/7s7Jvwv1naxv6
ew3012nD9svx/DOI9uK4L+5a1obnCdZvnm7D/MP9LP8H2qP7CFuztqX+cdBf
E6zFxfOU0b8t17MY+he3pT96Q/+Jtpy/LvT71Xh1cP5nasf5WkF/NcXroL8v
OWQP4r+wHfdTB8T/WDvu//W4//WmHfPnCuKfvj3bJ4D+ymDzNJ43zV7tmd8j
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
XXk/4LN85P46J2wp/5H+mIT3H10/8vweK+yM+Mj9vkvYvQ+snx0j70+8j2kv
Fwfv/1J+Yr4dxvufMp8Yz614/9npE+vZYbz/mU57thnyvsrc84n5eRTvv3y0
n08ldmuyz/Bvi0HC9pKfud9GyHhGh89c/wJhz5TP1J9E3q/5dn6m/mC8/7v/
mfGIj/d/ib9gvFOfZHxnsS9c30hZj7stWNvwTN6neSeC9eIx8r5Y2/6F8egt
bLujxpss7Ejwlf1nbBL9Rb5S3zKxm63AvssFhP3jwcbcW8LWrbQ3GiXvG+03
ybk+rxf9cb+xHj0S9hT6Rvt7YV/zb9TTVOa3jAU7olaKHn0T+wcdE3ZeZ/9V
D8V/7r+0R/8V/3iDv8PfhTPi/XfT72x/WfxlG/2d+ieI3bH+O+M7Wfq7rtDu
PIr4//rOeKWS+f15f9A/bfD+s9EPnjdpEf8RYH3nC2FjzQ/u1xjp77lErnlf
7L7v5MgOeP+Z+yfr/3yx6w1+0j/XEf9hP+m/TcLuleQfM0SP9/xPzlcR+r/+
ZD0qKWzL8QscXAP664L1jna8/x38i/F1CJvLwdatVaH/DNtPHSTxsn76xf20
FO9/s/2mf9+L3aj1m/vZBv0DfnO+Xnj/u4TtI4sKW06p9ucQ//dsn3SZjOfM
/If5HSnsrg52lPkg7O33h/E2hbVF5B9PhG3H/zBfrgo73v7h/jyF/M/wl/mA
+cwqf2k/h/zv/Zf+HI/8X/CX67kpbD/6l3rWCxuxf7me68KetNprcJCM76sE
dqRah/sfPcHWratx/2Muue1Z3P84DHY7awm7X4C14ErC3n/igFvUFf9pIWB9
Zz28/+8G9l028P5/Ftg8nxzxP6Ds8RH/p+RVb2S9/lRxuZ5LiH85sN7xrrC9
C+13fyL+M8Hums0R/yjw/y9M8t33KC71d0L+p4iH+RqZeP9fmrxqqLCzI9iI
PoH6Nw3siEiN9/+741F/Idkfmo/2VJeFbUnjQ2+9NcKOEuTzW7D/24M1Yxn2
/2SwnvSgsH8H2Fr4OOr/PdqnLsT+T5QA431GPTaKgt0Zk8p6PW3AvlzpoD+c
9sjs0O8BO0ITQ/9t2k9FQn/8hGw/HPoLJ6S+NLj/0TIh1xMsrI0HGyFpUf+2
kHtlE3bEgLUNQ4RdcRLBPrcg7n8UJB/6jvOvGdjtjyt2q0F2lsP9n42JVH7h
/s81sBaTAvd//iSiPzPh/MufmPHNLGxpkpj5EU9YHwV2RE2F/nW0b1gF/ZfJ
xgDUv5+JGc9WqH95k9B/H1D/7Emo/xfqXxh57ldh12qwY21e3P+4mIT5mEvu
B/m/gc32/YWtuZIiH8JzCtvrgx1ltgobQ5Oy/U5hz4qknK/2LtF/jvbza4Ut
X9g/Fey6NRn3z1FhZ51kXP82Gc89COybdUXYuwxs7XtKWDsD1lcES3/bx2T0
30qxO7Imx3ibmordVROspe8jbPYnm25h/+LkzM/1wtaTYF/nU8J2P8eL3S5s
ZEoBe1gyeV7zVEvB/bsYz399U7BeVMPzXyTYkTc19B9j/3I5of9NCq6niLA7
fUr4x5ND2Fs5JfMni7DWG6yfnQ3981Myn08LO8yUHD+JzO96lZLxSyefp5lB
qdA+7nRhf8VUrM8Nha09wPrDUrj/MicV9Q4UNg6lop7i+PzvOe2X4+L5P7WF
/fF8b6kANu8Xlb/H9VAL9VbB3/8ushYun++494Md38rg858nHK9nAnz+nSo1
7A1P4f1nWbA5GH/vOzrT/q01/v6fATba4X2VuZftS1bF598PwdYsyfD+I/k/
sC87h89/S/3D/XwCn385wEaVytLeMxWsvYzA51+72P7yP3j/8YDjHS6Gz/+T
pGF9j4/3H8XJl2Lx+Ve7NPRfXnz+PwmsDd0B/TtoL74Hn//fTcP9l0rGcyQM
wvyPN8l6XDbFfnz+1xpsrd5D9PgngB3PRuDz721BrMfQZ7/F/uV+QX+8tGx/
B59//5uW620M/S3Avh9vpL1lHNgY9xqf/20mB6XF5383OF7en9CvpYNeax28
/ylAHjpJWGsG9t3G+1HbmHSM50Ho35CO9Ti72F1X2f7HUmHzN9sn/3pM9OdL
z3y8ive/jcH6QNwfsI9MT71T8f53Ldvrn+V9rsebnvUuRO5L+H7Qrp2V9pY8
GXhe5pb7C3pDcuS/p0T/8AyMZ3y8/16VgeNtkPV4L2TgeZAZ93++kXWH9Lfl
zMj5TNx/qJeR843G/YchYLPeB2HTDdZ3hsr6/WfZ34gj67N+JuvThO3ZM3H8
FTKfUTsTz5Ng6B9Iu5lC7L6lmejfUnj/fToT9T0Vf+sfyAOL4/5HlszIh0/d
JD7uGuRH74W9zsxcz1m8/19MNmYL205kZnziQv87sLvVVrG7MmZhfuF9v1mV
fLI+4t8H7EudXti6kPaIOsL26CzMx3LCxmvay4yU9XnSZQX3WyLs07PSXzOE
Lb2ysr7uE9bnsX2oR8ZzHsnKeDWX9blfKo5A/NNko14r4l8xG/05RtjWPRv9
nUT875jN9noX8b/rINnsKHbzWTa134X9luyMZz5ha3mw+1ZC3H/pSvuzabj/
EkEOLY/478vO+UrKenyPVf/Zos+S0sr1ZRE9ehkr41MO9x86WannvbR3T7cy
Xrh/4d2j2jeF/occb3pi6E+Wg+1PSn9HyRz0nyns6gDWPzZG/KfkoD+uIP47
2T/0LOJ/X7W/iPgnzonxuk2V+BnFwJob8fS0zcl6eh7xn0guHAT929nerA39
d3Jy/Sb0J8jFerAZ8S+Si/VxGfS3In/KifyfkIv1bBTyfyv7O1sLO24qhv9c
cXOj/f7Dsh6zEFgfexv6m9Me1h71byzYmqcK7r9sArtPVRQ2rudmPc8t7PnL
9k9TCfuC8/B8joX+pmC35xb2/2iwUaIR8n892FrHj/hfYftqFuj/BdbWPBC7
li8vxr85XdjWCOz+ZwniPyIv2/+QeLjW0N7Fh/P/EtiInoj7D9/B5oB1OP9z
54N/WqTA++8GYEfjDHj/PQxsxpuN838luWou3H85z/ZtagpbvoJ9lZsL6zny
Q28ZjO+sC3bUxPsx92Dy93t4/lnO9uWSC2tnwcaprDj/P4F9o9Lg/X+2YOjV
t+H9fy2wtVtb6B8A1lu2gP4lYN/jcLz/PwU27jaA/vfkM8mhP3MB9B9cDfqr
gx0ftuD87wfWYlPi/d8isPt8G5z/x2lvu1rY+RZs+uEPd4aCmK8L9HirgHV/
L9z/7QN2X26A938LwOaSztB/FKxF3MX9p1ja496QfDDTFkL/8fWE/ZXAZqNy
wtaeYOuTq7j/NpecP7PYjcNgvdZnsXtecLwxFcTu++df2F/dwfNfCNiXNFjs
ejdyNO6HOGeBtSY2YfcB2jNbhL1Pyaur4PnHUhj+KVcK91/KgR099uD5pwtY
K5UF972iwOYztPc/AvvO4XnLmqII+r9fj3iXBvtyI3+MjmC9zyW8750GNofj
foqe1Ab7zO24z1ECbExMhPsc7cHW+NNwn2My7T9xX13bCXZfrYD3effIZjo8
zycqiv6bVuE+R1GwvuQ9nmfb0L6+HZ5nw8Haws5it3rYft8svM++DTaXTxc2
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
F4d+xdaybPxeMEbje9KzX3ZTUz3fsRK3rmFnexx+L0nQjOPz5xGHm2B7yhL5
fOM3bE7fS74h7Kx4Q77/aPmjBcg37q/Ul6IX+0N/VJ95x/7Qhtj93J98R2Dz
6QjyXYedZgd5Pn5Rj+/xiOfjsZrTPxp1Jt882NyXg/aur77B82zLwc7q1jwf
Xo3da0+kv7nnNF79I/PbZ63/4D2xkcumvsvsh4yuo94Tn+8fg7E/qxrPh1dg
Z1EWno+fwdYEnv9GPmjcjkP/zt6C65f0Hs+HY7B1LCX9ewD2pk+jf5/CZprK
/B72Tr14Oflma0n7ty7B70HVsZW0Ac/D+2K3Ri+eB/+u5YeO5PvWSS1f8CLP
w99ofN958jVb8XknDH4Pq4Kt6Lfk20vdshrtvRB7f3G8eUyPr0N+MS+xH2s6
z8MztubzvszheXhF7DRazfPw7tisuk0cNR97v7zh94Aj2P79Ae0dUcfn9wE3
fRuOL9+E/bDl2+h4xH5ao1sbnV9+pL/PwfbDivTvJ+oSFv07bVvqi5uN+7kM
NlrVpH93Vv+bnf49EzunM9G/PfWWxvTvh+p4z9n/mrod1/NjU+nvUaWxXz21
/D5qdcD2xFHiwDQtX+ut3P/uHvXT+RIP39PyK7uKjZTtOb+p/N4aXRL7r6fK
fnO7rcYTD5B4MIi9H3pI3NuJzdTdxJHb6moPxOZXHSj/xzNxTLEOOl63ZP97
K2xPDotDE7FTv53sh/e3YXP1D7KfPuomdouVlb8nYCXtiPsvk3jgJ2zMbSZx
18bWm13s/x/XUceDY+z/36Llv0so+/ujr2t8TjGxnagTx8ffxv7/gtielULs
NcNmh/jiyGjsWjXk7weYGzWeopz8vYWYq9grPVzsxO/M9d4+VRyKVjf8Rv5e
g99YXau6OGoUdnKkEFsb1INuyPGBy+q/t/D3H+J04fN6z+fvP/ygrtBSzs9o
qB7dh79/MLyLXq+aUp+9FjuFVouDF9Qj/pL6PKMr+d4ZKI7kxn7H6WKznrr4
fXHMUOwVC4qdVdg4v1ocOqvl224k/09aPuEG8s/ZjfITe5J/7W46Pl8h/0HY
6/S32F2O3XfjxeEwtsZnl+OND1pf6R3i6O8DuNZmsV0T+4Wei4P9sX0j3znJ
fwn2ypS+IPn/pc5SQWz+h93FRS9K/lm7c3yB78RONeyeqiPlQ32wlfea2Hex
szKllI86oc52VuLWay2/a5HEA5l7EB/942XJv7J6bb5/JP+e2Eg6QGws1Pie
BOLoP7F/beUVyf8FtjMaVyX/b3tyfLaZYq8Cdpyb1yX/ALbGxfIl/3nqGwP+
lfwPY69AXok7z7S+8wVuSP7pehEfv/CW5F8OWxmui6O6YmPSE7E1G7s7L9+U
/A9oPHdSqd99jM0VlaX+cJrexKfFExtlsH27itQX3Qn7y4dL3J6h5e2MUn9w
H3ZvdZW49wA7s/qKI6n64LSppLz5MzbuJZV4THvspflXroczFdsxf8r1C+3G
7uEeYv8u9ifkE0el6Mv1ODJR8rNKYDdpW4kH2vTV8WDGNcl/srrNBImHd+jx
M0qT/2315p1SX3TyflyvtlukvF0U+2+GSTzYEluDE5D/BOzMjCv5Rrbq8bXT
k/8NjXfrII5J0p/4nllyvZ3C2H4zVeKh5hrP9eC25D8Wu/dO3pX8N2Ov4Oc7
kv+/2AoXuif5JxxA+QN1xW6BAdred+X4cFP1ngMSN0Zj+8omcfQfenyxvmL7
Cvb7/fhA8o83kPPL30Ls5VPb6x9K/o2wverfR5L/SOztS/VY8l+P/bn95Hjn
krreaTm/UOxBHN+8/H3JPy822lYWRzXA5hlLzs8api77QY4PrMHOLUuuj3se
e3e2SPnwl//F25F/7sE6H+SS84mui42pLvkPwW7nteLgSmzWCYq9v7FlX5bz
i3zU8scvic0cQ4gbDeX6xNTC3ph1cn2cgdjNtEMcWobt15nlevmnsVmi3hPJ
/72WH1pEbH03lOvXLUaOD9TARtdiYrcfdkcmEht/YStTWOqPfjtU8/8itrM4
OO57KR+siu0ZntjrjY2NfF5kEfYzt6S9j2MzTTW5njGvsPuysuTvZBrG59ft
RL6Vhul48ZvY74Htwi3lfKIWYC9wUmwdxW7JV+LAc2zEvSx2Mwwnvj6pXJ/w
L8N1vrwucSOA/WSzyH+uxrenkfL2IY13GCTx4FP17enk/80IzudWcYlHymL7
fk+x2UU9t6HUFzNLvTen2NmPrWoVxKFH2Mx6+6nk//VIPq/jV88kfwsbWedJ
3OqInTwlxYHp6tVnpT53L/aOpZTzDd/H7n1t/1SjKL+5kDi6FHZ7FxHb7bDd
fpC0V3AKNlJ0kP7s7VJvqUt/v4OtbD3p71G/cfzSI7R/cewf3k/7t8Zmk3Xi
0CRsXYhIeX+7et48OR8r2Wg+LzMOFMHmuk20d4vROh81lfrC47F3Jh3tvVXj
1y6Qr4/9nwP098RjdH44QHsXGqPjY1Kx9yu2/US09xjstR9Af9+E3aVh7u9r
Wr7jPhkfnARjqe/lCbk+ofzYzFRe4n4T7NVdyvj+m8abHJXx3wphe31VGc8C
/6gzzJb5w407juu1LbM4/OM47a8nmN8aYXPQzzcl/xHYS7+E+W0ddj41l7gX
azzxOWfFkTzYLZVB6jfrY/PDYuZzB/vP97CeWa3Hjx/FeuacHt/prdj/rC62
QRyVawLX585w+TyrDrYTfBEHBmNvWn6xu0J9nc8Pn8HO/XXk+1HjbbuIo7NP
5HyLFSffGGwneS/x4ADsDHvEfL4UGx0+s545hd0vNcXmO62vbxo5n5hsk/DU
6XJ9nOrYqbNBHOqLrRl3pLz/O3YnDRRHncRG9Cmp33qj5f1+4oA5mfrTvWM9
VwVb+9exnumFfZ/1krEI214X1jPHtPz2+KznXmp9BVlPBTMGuV6NOsp6zKsY
1PEzixwf6Y7N+ZdYz87Hfn7ON+YIdkbvpf0j6oSWOJR+CvU/ssV+eWxsuCWO
6oadx9XJf84Und8DEg8cxO5+1nvuE40vuSoOp51KPJBAbJTFdrIG5N8Ze6mw
PVPLl5jBes7T8lt/FHsP1VM+s55PPY3zfUj9ZmlsXZzEer4Dtt83kfLONGzm
Zn0b2oOd7jvE/j3s/ZdIHJVyOvVVfyffJ6yS2P6+FevZtthft0zsBqfrfN6c
9t+JnTth8r+j8YYHyP+rGcQnp5L+aBfD7obO0v+CrbBXm/WoNxEb67uKI9uw
NTMJ9/9Njb/ILuNTTNKZxPN9I3Z+Ui/oSP+3sfPLVvk8fxz2fy8l8agt2J61
VGxdV8+9KvUFEs3i8w6VZD1XEFt3WojDzTTeq7mMn8YYdXHWx9Eb1VuXSNy+
it0jUyQejD8bJ9kicS8a2+X/Ekcaz9b5q47YHKXlY1NfzAbsHKkidi7r8cMb
iv0f5nC+fx+X8T6qIbYrFpL5wBqu8Swe6/e1c3T8Li5x9wI2E05k/WrMpXyj
Xaxf82Aj5zP5vOh62J46nfXrUPWJe6xfV2n59nxe5JO67/diM+c88pt+WBxT
G/uvc8r5OIOwWS7EfLYcOz8UY70exl7NIOv1D9h++ZPM79b38zl+DecbqKlO
P13s9sdOb9bz4SXY6lmD9j2Ffas2+f6HvbGdaN+sC4gP30L7VsPusj20bx+N
vxtH/i42bjAfmyfUPQqT/2ts9eX6O5kXcvyeXOJQZeyuGyKf5/fEdqWJ0n+j
FmIjXny+r/2JzddXmM9fYOe7PlLe/XYRx+e5KA5XwNa7jFLe6K7xEwno3/Ow
n6iAlLcPa/x5FXHwGTaqxJHyXjqXz79ZjPzLYW9pb/Lvip3Zvch/NraD9Bfn
APab96D9H6tT7pb1j5/md65H9GBxVJnftX9PErv7NP4t3y/CD7AxohLr09SL
iX84x3rtZ+xkfsD6tD323zyX9W5wKjYCi8Tebmz+e0gcuavlm5WR9bKZYgnl
e98Ux5RQf58vIvm1wW7ojMRDk5fo59+R+vwd6tMX+D52G5uvevJ9LPlS8o2K
I+v3QFF1+QZSn9sS+8tOyXoyPAHbN67L8cY27FUdK+Wjb2Dz3S2+nyRZhvvP
Jf/C2P31IPk3Vz/MIJ8fGYuN1L+S/2bsV3nI95N/tb5CXC8n4XLOZ/1ivp8U
wN7FwXw/aarx3t/K9Yoaja2jdcTWH9itslkcuIKNlPvlfNx4K/j8vtnF4XzY
yTVDbDTGdr1O4uiRGt9iiYOXsPelF/nGXkn5D7lZn+fFxpb6fB9roP6zNs8f
hqlrxSa/89js9Jrvn1+wO3aJOCr3KvJrfovvn3WxfXmo9OfAEGx0OUX/Xon9
sS34PvK3Hn9rJt9HPmn8akK+f+ZYzefViuH7SC3sTJvD9++B2Np3S+rzlmF/
8Wru39PYPJWS71/vNR64y/373Rpc+DPjdw3svRjB/dsP2815nuEv1njpTsxX
f2Hz7Dmet7zV8o3nyPGBLGs53/dled5UFfvj/2b87o29zImYr1yNDxrP86bj
2Dp9g/H71Vodr8PiYKZ1xFu9Y/yuhP39w5ife2h8C8+zzAXrdP75m/yPYnPb
PPJ/jo2f4sh8FMqwnvL/nGX++kU9YgLzVwCbvzZg/pqLrXRtma8PYbvoL+T/
FPsnGV/D32zg+tT7j/mrHDYyViP/Lth+kpP5eha2xp0i30fYr2WT79chzu9t
YhnPTQs7l4ayHuuI3aNvbkm+0zXedLzEQ3tDej3T8XzxPvZr72K+SvUH9bdo
zHxVCrt5X7Aea/eH3j8fmK+mYDN2DtZju7CdMiHz1V3sLJ/M/FR8I59vc77B
1tip8lHsTcL2x8M3Jd/t2P/zOuvvW9iN9wvfP5JtwuNKiJ0i2B+RS44PtcB2
nV5if7y6+Ha+f27V8usTSNzysXG4rTiQeDOeM0nsFlIX/0sc/hWb37wSG2Ox
U6q6OHoT9uq84/vXNS0f7Un7BBNswbGqkn9+7H7dUBxpom4wj/b+TT3oE+0d
wtac0RJ3/tH6epo8T427lfMpxvrZ/xFbVe/S3o2wX2w5zxtGqHeeoL3XYfdC
D9o31jbqe9hZ4kZebLYbLflE11ff5PuE7WDvTUiuR3A1treeF3vnsN/8V9r7
M7Z+Wyg2c22nfPVxtHcdbHSLR/8evF2vRy5xaIU6nEDsn8HetTzk+1Hri+J5
ipV9B+UndmU9FoP95Lvp3wOwPfKd1Bdeis14P4uN0xofnIz832Hr6/1y/na2
nZxvzny0d3Xs/7KI9u6LzVZZJR75HXuzX5P/SWyXTSfxmDdaXxKD/M1deFdE
yoeqYKvsd+TfS518sThqkZZ/91BsHcPOnxbt/RL7Uboezbib+EKuX7gi9pe9
Iv8e+P8XpBKPnq/lzzKe2EfU+QawHo/s1vluDuvR9Hs4v58XiyPlsVv0Mf29
m8bXsd6OmYPNurlZjx7E9plvWI8/0fItm/D9K+1e4hvH8nytLDarLxBbnbFb
x+X7yExsda/P9xEP+3sDzGcPsZO6FuPb1/son6g86/HS2DlXQGx3wO6YnYx3
07B54hHtvwfb417Q/vewsX2q2EzpUf5DfO73kti5OpL2b4u9z0fp/0HsZtf2
voP96TVo76/2U75RNO3bCpvpOtG+E7E9oDTtu13jewL075vYrV+W+zvpAeLT
y9G/f8L26nM3JT8b+22+Ir9xGq83mPy2YHfCFSkfc13rG7xP7CQ6SL5TwuJQ
QeyPYfz1m2E3+RJx1BiNO9+T70Zs5s0i8cBV7NVeI+OJG/8Q9R+axPPEaOwN
WcHzlCbY3XhOntdEj9L43Jlie4Men2Ow/N4YvIztmk/leU7kh8OcT+c5YrMh
9tL0kvIxww9rey+XuLMWm3M6Szx0ATtz+0rcN45QX+5BEo/Ko76cj+dH9dSZ
zooDQ7F7qSC/h67C1oku4vDZIzo+TZXyxmd1z2vi6JxHySf+A7Fd+6iON8n5
PXwQ9tcW4ffw5Uf1/p5F/mHs7PhXPs/8gM2OjeT5Vcz3f3J83qUSd2pia8l8
8u+P7WS3yH8JdkcmIf9T2Nv7g9j6Dzu3J0r7BLIeo744hcm/2jFt79nk3wd7
9daIjd/V1+uS/wlstPF4H+C11neuqjiY+Tj17Uwv7x94lbGR9fN5yb8nthJX
kPclzIXYbbJOHPOnHp/uW7HzAptJevE+yLcnKH827VnJvwL2550TR3XHxoe7
crw1D1u39ko8cBjbK46K3WcaTzhLyofTneT4JxPERnlsjr8sju6Knf1lxMED
2Gs7QerzHmP3yHref0nzl87vvO9ilsHWvxd4/6UTNvpv4v2XGdhLXl7qC+3D
7sNvyPeBHp9W8019ivIbfiPfn9WhH+R6B9pj85tcYncqdj90Id/d6jEvpD7j
Hna6dhVHpzjN8UMai+0S6ld7xME22H1RlvdfJmPj7BNxZId65mra+zb2Oq+W
84lJHsY3l8r7K05R7I7LKv0n1BKb8cfz/ssEbNedLY7aho3/Nkp91g2tr3xB
iQeSnOF6Ve8h8XBz7D6oKvUb49SVfxJHb8b+sLRi+19sJDoo9QUT/q330w6x
VwDb13vyvk9T7AVP877PaPWJh+KYP7BRKzX5XlGPHsj7PvHO8vkjyM/Ph91H
U8i3MbbuNZPzs0Zi58RE8l2PvWhb4u4lra/sIXE49jmuZ/1u5NsAGzm2ke8w
7NxfJw6uwXa/0tzP59XvrpLvFz2+/N/km/s89R9PRvvWVa/cz/08BLuJnolD
K9XGebH/t7rNG3HUJ2xsKUT75rhAvOs7iQdqYWfJz2J34AWdXyZJ/wwvw8aL
ifTvMLa9S/Tv91p+eiH693cXOd92c+nfNbCXvTj3dz/sNFsqdrJcor59Fbhf
q2IrzPtvfm+NH97O+2ruJb3fT3C/Hsded598XmEnKpr7NdNljj+wlv5bSb04
hvGpJ3bPbSKfBep7PTj/5+p5y8WRX/7h+Fz7GY8C6ttLGI/mYjfPOcajQ9gf
Mo3x9yk2Fzckv2+ucP7ZVpJfOWx/Gcr7eF2w/2Ih/49qFnY28f6hux9bsxLT
Xo+wUTQW7ZXm6v/6H/lZ2OzK+Gl3xMYsj/fxpl/V6/mZ9xH3ajzFGPK/j52R
+8VmqmuUj5oljimFzWIvyL8dNqqnpH2nYOdIEsbjXVr+T8bvqLvqfbyvaEX9
iy+vIP/i2FmP3dbY6nKd9zEnYfsY84exAxuxqS/6lpZvm5T+muw653+B8w0W
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
V7+qDcYvcyx2zmQj/03YPsbvL841jX9bmvwTJOPzardhvMqP/cnjGa+aYvPk
74xXv2n5gYyngRA2rJVi9x/sTFgkDsdNjstu5PedfNguNJb5qhH2qpZnvB6B
jY/9Ga/XYWvfEsbri+qmk/h9J9ZXeH0tft/Ki930TcUx9bHfivHZcbD5+SPj
9Wr1+NPkfw476TeT/xeNJ9X8c0VxflX2k38d7J7m9zN3sMZ/4veq8ApsGdPJ
/2/16Mbk/1GPv1WF9Ur2FJzvluJy/wZjsFNoOvf/AOwtYDyILMXG0dbc/6ex
9UMT7v932J52XOxkS8nn1e3L+Fcd263qMP71VR9ox/i3WJ11AuPfSfVqHHij
9c1uynxlpsLdBzJfV8H2xz8Y/3pjM00Oxr9F6ucW498xddty5P8Se1NLkn/G
1ORXMSP5V1R3vyLjpdkD+yXzkf987Jz6gfyPYKNMFfKPaPmpucg//dd8/pWJ
Ul/UL+qBQ8m/G3ZirST/OditFJ/1ykFsZNzL+P8E+/sekP83aTi+603yL5tG
P89lvuuM/YSjmK9navnXrF89T92f8T7yUI9f94n2/zqtjg9vyb80NvK8JP8O
2O67hfynYa/PYvLfg83hzM9Wym84n+NFWZ+V/Eb7bzPybaveoeuzIHY3VGJ9
ugsbWQ+wv/mO1rfsOvl+lY7Pz3KUfIth935h5vtW2PnC752RidiqhM3tWr7t
Hub7m9j/BztJ0+MBCcWhn7D9+R352th4moP1ynh1qWqsV7Zo+WNVyf+6+sIQ
+nuiDHiNz/qsIHan7CD/X7G5/hPfT8Zg79d9jHcbsRXh9+PgVT3+SzTjffxv
OZ+ko5nvorE5cSHvozXB9m3eT4sZpeUfjWY/zAbsL23GfpjLWr7YavbDxMlI
+Qcn2Q/zo7rS3+xvboitvn+xH2Y4NntfZD/MWuxcuMN+mAt6/JVHvL8QKxPx
Ia/ZD5IHm9my8z5aPWwlSMl+qKEa//pH9kOtyqTzE/vHI2ex4RxlP9RndeEi
NyX/nJk5fnlWsVMbu3EyiEODsDXvLvvBlmPvySzexzuDjRMX2Q/0QX1yL/uh
vjcpX+VP3t+oqV5ym/c3+mM3dIv9YEux1bOefH70KXXiWGL7P+zkpXwwaxbO
f20BiXvV1KsGiyN9sH+V9wnN37G9Px/5n8DG1oTk/1rtzib/zFlxTEDsV86q
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
/u2lXtqF+3chtoY35P79Eztx49O+L7CRuhbz1bc1Of8lT8m/Ivb/TU/+3bGT
6A/yn4etxh79+zA2T/dl//ozPb5qkP3N6WOwXZr9zeXVoXLk31X9e3/2N8/G
zpVk/P24xxovPlFspq1FPN4Z7tcy2HpUVOpzOmEzw3fcrzOwt7QX9+s+7O4t
T36pa1Pf25KMR+2xv7If7TkVm//0pj33YG/GM/rrPT1+P+sBO0Ud6q9F/w6W
wGZ4r9hrg71VT1hvTcZGvby0505shxjvYm5r+TrHWU+1rEv9KXS//UTsl46w
vtiGnWLlGW9vYCtHO/IpXI/6kgS4/2zszytMPuM0/s0a8tms8Tr3yOdf9ULW
N17C+pzv+DD9swA2PP5+mtkMW0s2kc9o7D3Zz/elP9TeLNZTV7BZNAPjT7wG
1Ne2HPlGY3vfBMafxho/VI/xZyR2I4cZf9Zjp76uJy5hazXreyNOQ+Iv+zO/
/oDNkK4nGmD7Yk7G32HYrcP4563Bfjr+3kHkvNa3synjr9GI45uOYfzNjY1z
sVlP1MXelcOsp4Zo+eQTxf5K7DfJJY46q+V9XU990vIF3pB/jsZ8/puT5F9L
vYl8wgOx9+0n8l+OjduDXkj+YS1fbafYfq/x5FvEwe+aEC+zVOzVwG711i8l
/37YDhd7Lfkv0fIzr4tj/sJ+41JvJP+3enyRERIPZWmKaxeQuF8VO6NxVB9s
Vrwv5S0X2116SzxwXD1xt9h9hf0Fid9K/pmakX/+JP9J/pWxMb2kOLqneuwZ
KW8vwE73heLgUY1nLC/2nmu8QB75vEiGX7X/bZS4WQE780xxTEDj8y+Lnbka
P7FGHDqkjqwV+0+xn76tOCpdc/If3kRslcNuk1Ry/oEu2HqcUezOws6BG+Lw
fmz/NZT8H+vxJVuRfxqb6/NjIfK3sBseQ/4dsblgv5T3pmv5yv3Fkb3Yz3pe
bD7AVoE14phULYiXiH4n+ZdSL3soDrVroeeX7L3kPwWbF47K8VG7sfdra/K/
i43Vc8WBqJa4yVmxWxybfkHavzX2x6yV9jImY7fCLYlH78Bev/zyefYtLZ+o
Kvkna0X9Z1PQ/kWw3ed7caQF9sockPrNCVp+VFLafyt2Ht+i//sar56G9k/c
ms/zd9P+hbDzOor8m2v8emyxNVbjKXFgk8bvv6X9r2GrwlDOL25bzm9vkP6Z
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
sXlnO+PXb9jqkfWz5B/S+F8LPlv/B9C0mBo=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
YlW/qoh+6xKu31FN9NdZovZfddE/eImq92LXly/hfn8oducZ1V+rKfo/sn+2
NTVEf9altFtrif5aS+nfXmK3DVjK82u09HcsWUr9w4VdJ5eqfBE2/ap9e2F/
pmXq/BO2Vl/G/CxUW/T3W0Z/7Kov+iOVPbld9B9T/VM2Fv1vlqn5G4n+DMs5
/8eGor/KcsZrptidvWlPekr6u+cvZ3w+NhH9purfpLnoj11O/+UQtqV1q3wU
dlRyc7xELUR/DzfXk6Sl6J/jVvpai/5Dqr/WTvS/oP1zlEP0/7OCdp+wUWEF
x9vXUfSHKrtb2OdawfmXdxH9B1ao+tlN9D/9r31v0Z9qJVmX9u6yKzn+raai
v7Pi4W1E/8yVqj5Af9RK5T/of6TGM8SfruSrWD8SiL/NUqtUvkh7v2OV8q+M
b522ivWyj/jDvlvZV3UQ/Q9WMT47xe5Jspr761170V98NeMTLP6wtF+t9HYS
/ZNX0/8Hxe7cwfaRaO++qzij+NubcI3SK6wVXcP6+lLa29qs4Xk9UtgRTtZs
sj7XtjVqvRJv89Ya5vMEyQd/vLWsJ/naiv7Ca2nPDf0t19If/4rdGLdW+Vf8
5dm8VtV3sftuqPa/xW6Js07FT8bTC65T55+0dzZbp/wj7B6zjv78K+zdoOym
rF+7to7+qyDj2/5wvNDm0t6Rfz3jWxj6G6/neMuFzZHrWf8zCPvXrg/wl/Wy
Ygf0/1yv8kvYyLOB+fRZ4u1puIHzp5P4+IZvYPvswpbVG9T4wvpFxS7JJ+c3
tn8YJuzOuZH5Vhfxr7dRxU/s2tCN9PcPYduKjTzfMkh7x7mNyl+yPtfnjYzH
BWEz+yYVX2F/7U3qPBa2DtrE/NoO/cs2sd5OE38bpzdRX03E/wP5YdJWoj/L
Zta3lBIvS83Nqv4L6/0VTxJ2Lt6s8kn6u09sph5T8tP7ju0f3hbWMm1hvsYI
26ptUfVL+jv6KrbK+K6FW9T5h/yP3sL510l7/+st6nwQtqbfGjCevfJW+juT
sNGLHHRf5vfM28rzqquw78hW7v/twpZXW9V5KqwHbVP7VeqPs+I25mtFYXf3
bfR/R2Hv7G1KTzPRf0ixhvr3fBvzuZacF47UHlU/hV3lPYzfATmvzK4e5u88
YX8E2ztHSb207lf9I4XtTzwqHsJGyu1c/3RZj6fMdtan08K+TtsZr6myPssM
xa+E9b3bqW8s9D9U3F/OK3eyHYzHY+gvuYP+Pozzz0GObSTz2abu4Prcwo5d
yl5Z2HV/B/fPQGEz8U7u11Bhf7Gd9F+UsLXdTq43k8xnn6Tsk4WN7TuVv4Q9
d3YyP5IK+xLsUvVS9Fhsu+iflsJ6611q/0k+OCfs4npnCbu37lL1GPl/cxfX
+0X6a/F2K/8I2/7dreqZtHe02K30CrvGkoN74/zftJvxr476f30383WWjGfV
9gSs315gD/3rEDaa7mH/cGHP6D1c3w1h33r2j5yC/L+6h/OfR/7/Vu0nQn++
vaoeQn+jvZz/DfSP2Eu9V7H/1+5l/z2yH23evfRXadnfjh/k8MVSn1y5o2hH
vTIbRDFer/D8MyyK662N839VlKpvcp7YLyj7d9S/r1FcrxPnf459HC9M2Fd3
n8pHYcuQfRyvtNRr3b1P7V+p186z+1g/mgm7P5E/66j/2fbT33lw/tfez3o9
Xeq1beB+dX4KO5buZ36VwPl3aj/98RPn33s13jycf5kP0N4L9b/GAfafIGx3
HlD5huefRbQ3WijsOX5AxUvY95bjtc0ubMl4kPpbQH/VgyrfcP71of3hfpx/
Cw6q80vYe/Qg15cM59/rg/T3fuhPd4j+ugn9+qGA887V8xDXux7n39xDXM9X
nH+HD3E+L/S/PET/lJT57GkO098HoT8E7IhYCf3dDqv6CP2zDgec75aD7J/t
OvQ/O6z2s+Sv03KE6+km8XCXO6LOB1mPt8uRgPNZizhC/y6H/n1H6M+H0P/4
SIC/XClM5u9wYbO0yXjiecLf0aR/bgpbp7O98zf07zG5fxbg+d+n7G+EPUmP
qv54/i9xlPWsKJ5/O5CD/gjrU9g+LEtn0b/zqIo3nv/vHWU+XBH2JoqmPyaE
iv5iZC1K/p6wtY3m+Tm6h+ifSHtM+e6i3xNNvU2kvXk7Wp03Mp4//jGOp0t7
axFyzBxhe6tjXP98Gd8YT47dLnbPlmP0f3+x+2KOMV7VhC1xj6t6JKwXOq7m
6yn6mx9nPrWWv4fcxnH2b9tX9G88ruq5U/RfV/1tA0T/X8W+QaI/+ATbNxks
+pucUO3Fbo46wflGi92/7gT9U2SI6L+i2i8cJvp/KXuqMNGf96SK13DRbz9J
/xQbIfrDFN8YJfrXKH4xQfRfUmwaov87OfbIONGf6xTHNyaK/vqKb04W/cNO
cT0vp4j+lae4nzRhx3nak0YIu74o+8rpot96mv7JPlP011G8LkL0Dz7NerJt
luhffprrHS1snDmt1jND9H9U7Vu6RH/WM7SPFLbUOsP1eKS/PuAM2/+R+ZxL
zjB/hsp63SfPcL0bw0W/X423EPozn6X+7KLHVv0s1x8pehz9znI/Dpsm+iPP
sp6VFTaPqfbbhP1vaA+ZP1X0ZzjH+fzC9iqKF8p6jN7nuP7kwp75yq5LPH2m
4u5it8QqtowX/WnPc76FEm9npfPUn0fs7h60Bw2RfPHOIcd2E9YOK3sZGd/2
4jzHbzlJ9P9zgfV4suSPq8IFZRc2QxWbwn7XBY4XX/pbDyi7T+z2pxfo7wVi
N1Jd5H4eK/HwlL1Ie12Jn6/zRfr/mbBl5kWOV0vipUddpJ59ws5HbL9qtozn
Tn6J9fqA9PeWusT1nRTWOl5ifVwt8bFNu8T9HFfGc+wmhzrE7npwSdVL6W8m
8XL+McL+4l6eT7UR//Ze6hkodvtkL9fzUtZn7PByPLvYPXe9nN8u/X0JL7Ne
e6G/6GWOf0pYb3OZ40UKO8PZXnMg/7f9xzKf99Zl6ikF/fGv0D4E+7/wFY43
BvFvqexu6e8ad4Xn12Vhc/MV6v8r7L+h2meQ8axxrnJ/9ID+glfZHvvTaEa7
Vg36x1zleZYO8d9AXjVAxrdcU/0fyPr0P+SgxJJfzvzXaK8q+exufI37Kwz7
f+Q1jj9aWFtH+/kMyP/Lqn8H2R+On6q/b5zoz3Od60X9NRte5/pGC/uHK3t3
2X/W1de5Hy8I2y+SI5cKG9/IzlHCnpw3mI8zx4r+eje4vgIyv2Uo7UnTY/+v
uMHzGvXAee4G139A6of78w2Vr8Le7DG015bxtDoxtJcRtg2KYX5Vkvkdy2iP
OSDsOq36bxc2P8Rw//4r/vNnucnxEgtba95k+3fiH3v/m8zv18LG4pvc3yeh
/4Tq7xD2vVP8Q9iS6RbXtwn6q5HPm9Df9xb9cQn1b+Et+isl6l/0LcZ/ndi1
N7c4/kNhW/rb9H+MsKPybe6XQcKuXrfZvrCwOY8cEyTsP3KbepqLP62v1Hgn
xV/2oDuM/wpho+Id9h8p7Ol+h/5BfHyz7zC/KyH+h9heswrrz+/QH9vk+cCZ
+i73Z4sxor/8XZ4PUaNFf1dy0NaRot9Fjp0mbNt/V+W3jOd4cpf1q588j7hS
3qM9m7Q3yyi2Cfs73aO/4kp/64x7XN8Jsdv33uP8X2Q84yHY2ra22D3J7jOf
luL5p6TiI/I8ZXHc5/id5PlJn3qf448Xdu66T//+lucp9/37Kv9lfG/iB/Rv
A9kPWvEH3L/ThG3taA8tJv5zTHpAfwaL/1zbHzBek8Ru3nnA/V1d2J/Ax/zL
IGy1+bi+5dLf3pr2iLXCxgTaz3eS9p6tPvqnovjPd9PH+h8t67fEe0h9D6D/
34fM50XiL2eLh9T7Tdg99iHXnwv6N4GN6FOI/w1yUAPEX3vEfOkp/R0FyNEN
Ef+mj6gngbA5mnz+hqzHv161nyZ261XaP/cVtv9+xPWXlvmMfI85/1TEv9Fj
5kMfxH8E7SHzhS1rH9Pf/YV172P60wv9Px7TX0+gP/cT8g9hb4Mn9FcW6B/+
hOt7LXbbqifM9zhid1xQ9smI/9cn1HdP2MzxlBwh+eOvSw5qIWwdQo4dI2x3
P2V8nmH/n33K/C49TvR/esr8e436n+0Z/ZVX7Jbaz+ifGLHrA59xvo6of0tp
D1+E+nfqGevRFmHv+2eM12Y8/2V5Tv+gHttqPKc9Ac4/53P6f6Wwa9Fz+rsW
zr/jbJ9tLM6/t8/pv2nC1owvyGVR/6u+4PiVUP/7vOB4/VH/F7ygvtvQf/QF
9Q+D/tcv6E8T+tO95PgDxO7UX3I/txB29yQ3eiPsnfuS8fwprB15SX+HC9te
sn1Yd2FHmlf0Tx9hV8grjrdf2Oz2iuO1FvbPYvuYWFmf9eArdb6j/j9T/VG/
DUss9eLvNU+5WMZzkLCvC+1b90B/RCzz5xfOv32x1P8e8X/M/iENxb/uFK+5
voI4/0q/pr/x/KF1ek3/7sT5N121P4bzb4+yO3H++ZQ9HOdf0jdcL553/CXe
0H9Vha0d3tAf54TtU94wP18IGzvfcD3bEP97HC+2nbAv0VuenwOELcXeUn9t
6G/7lnqxHudExfuQ/x7VfgPy//Zb5sdM6E/wjuP3hP4i79i+LfS3Isd0gP7x
76jvBuK/hdwoBvGPecd8WipsjevnfGOF7YX8rBcdEf/mfuZHFcTf8NMfc5H/
G9m/USnE/zrtoRuF9b/sXxP56gx+z3xqKOxu8p750VnYO+o958svrK1/z/mK
CNuuKK4j7PilxgsVduX9wPV3hX47ObYv9Id94Pn3Cvm/hhyK/Wq/9IH5VAD1
7zv7B0Xh/Mv1kf5uIuyr/5H1opnUT8uwj4xXOrHrK1X75Xj+OU8OPij12f3l
I/1TBM+/1k9k/H2t1f3E9afE+T/4E8f7K/0dy9neuU3mc51R7Xvh/P/4if5J
ivqf9TPz+z3O/1qK1wnbB3xmfp0VNpZ8pr8aQ/9J2oOf4fz30x6xFZ//ZP7C
/bdaWK/+heO5ob/fF/ob55U78gvnvy527zH2P/9JWHv7hfl5UtiW4SvjG4Ln
vypfOd5cYVfvr/T/FWFz/lfqPyXsN9k+Ygme/2I5XmyMsD3tN/bfLGxU+kZ/
NxP29CAHf5Hz1zfnG9dXC88/h79xvsV4/nnxjfMdlM/XnP98pz+W4fmvwnf6
N66wN5Qcqglrs8gRo3H+H2D/mOEyvuPpd/prvrR3pfpBe3lhs+wP5lMiYX/n
Hxxv0FDRP/MH+7cWtkfRHtpF1ms8+kF/vxG7J/lPxquusK/UT+pvgOffjj+5
f5bK54/6NNV+4EDRv5vcdqDY3Q9+Uv9WYW+SX7Tfkc8rtRLk8FUyvq39L44/
XNgx+RfXFyns2qHse2V95t1f1Lta9PgT/qb/c4o/rEV/M/4L8PlnG2V/JP2N
8N8cj/q30R4zTdr7bil7R2FL/D/cjw+lvV74D+txMcS/Je2Rv8XuHveH50EV
Wb93s+pfU1iL+cP5YsQftjh/6a900F+QHJoJ+pv9Zb3KL2yOIcdmx+e/G/4y
XpOFrdf+0t8Fhe1/lL2cxMPIr8Ui31sKexqD3ZFdhX0jyc4pwpZ1YCO6rIyn
XwbrxZ8LO3+CrVtbCbvzxEH7oI3C3oZgM1sE9IeBHREW8ZdtNdgankrYcVHZ
G8t+cH3jeLH5hM2ccTHe+S+Ifz2wFrMA+T8UbG3bDvFfATZCWiL/z5FjlyL+
n8G+RiuR/9njYf7Q5sj/OvE4/mfoHxSP/ikoducy1b4C4n+aHDVM2PtB2ecK
a1njc/0+5H/N+BwvAfT3j8/2E4Rdi+PT/9OQ/ycUjxf2v2P/mtSfKQHn92D/
VwObn2ci//uCNS0I+hcm4PzDoT86AeM5VNjyJgHnm4P8T5+Q+RIL/ZUTMn4f
Ef9etNfch/jPA/vCzmP/mwkZ3+TQ/yoh4/FU7I6gRLAf7IL3HxUTcbxLwmZ3
2kNPS376ZyeinmLC1kOJmH8OqU/256r/c2EjdWK0LzgK+V8ebMy5IXZfV9qD
zyP/XWD94RfUv/1sH5Jf2PmE9l0Xpb87ZRL6fzrqXxmwb5VX7FrnJMzPq8K2
GWwfOlnYsTcJ/T1U2PWQ9ggN73+SJaW+XWL3l0zK8fcIWx1JmV9x5f2SfWpS
tf/k/ZOxi+0bZu8v+u+DHU/XC/sSJ8P64leT/pbiYH3abbHr7ZIxnq3F7pyU
jP6qInb3dnLMLZnPeycZ8+sO3n8lTE69NfqIflty6u3RVfS3Ts760lDer7km
JOf6EwibW1X7l/L+zn9Tta8rdmu8FMzH7L1E/78pGI9QsRstUjDfBsv7Os/Y
FMyfb8K+Tezftoisz3KD7UP+6Sf6tZTMpxXCzgIpac8E/U2VvSb0jwabK4Jl
fG1DSuoPg/6rKek/l9gdv1My39IJu/Klot7hwmajVFxvFunvH5FK7S+xW9em
4v7MI2z3Ki4r/jB+sH/wTWFPbgv1roP+Bhb664fYLcMVrxXWV1mYb25h5wVl
DxN2f6W90Xlhb47UXJ9b1qvVS831FBH/2Iak5nqqid3hVvZmwq6zqenfifI+
1fyUWp1P0J/tH/graYSwtfY/9M9maW8f+A/1bRM2lqr2I6S95xT5YUKx+96T
i8ci/lnScP8dFtZrpKG+6cJOp7LPlHxwL0rD8TYKe4+nUfUW+f8uDfWlkHyx
ZQwiLxB2VA1S+SjtXX3A5sevwuaCIOZPQmnvP8r2wbqw9XUQ11dI2J4uLfU+
EDb0tPRnKdm/np5pGc8Bwr65YK1pQez/I+TgXdj/L9m+kUfYmSYd+RXyP0Rx
Junv7ZaOeo6LXZudjvsjNeJ/MB3jk0DY8Yz9V7WFfkt6+qcS9JdLz/17Qtjf
hXbnJmFrRHqeX4nE//Z96an/DuL/mPbwgmL3pMjA9h8R/9IZuN/mid3SKQPj
W0Xs+vQMXP8bYeeeDBx/jLDbl4F6D+L9f9KMXO9wGU8rmZHzHxO2dchIf60W
dkwBa3FjhF07M3L8v8LmvYw8z48L+xNlon/myXzWYplUPUX+t83EejxG8tWY
CPblLI7892TiehYI+26zf+xL7P8EmZlvP6R+6kUysx7vw/5vlZnjL8f9h/Hk
4GvY/1uU/bmwdjMz8w/1xBY3C+tDYtS/Qll4fqEeuJpnoZ7UwqaRheO3xf7f
SHvIfdS/61mYD7VR//5mYX6lR/0Lzsr49UD9b5KV8c2G+jcKrHfqImxZn5V6
V2D/X8lK/9zD/fdfWZmvJcTuzpuNem4Ke+2KV6P+jSA3wvpta7LxfIA+x6Vs
jMcB6P+ejfoHo/7lys586CDsr5+d439D/RsGNoJyIv4r2b54EeT/edoPb0L8
v6j28xF/q5X1fCrqX10r19sF+gdbmX8G6t9yK9eTBvrPWLmf4kH/RyvjVQv6
s+Wg//pAf60cKn7QPyAH47cP+pfkoH816D+Zg/Hoj/j7Vf8B0J85J+PdWdhe
PSf1zEb+98tJf42E/sic9O9vxP8Y+2+NQPzf0h70DOdfhlwY76AD8a+Si/ps
yP/eudj+C/J/fi7mW1qc/0dzcf2phW2xbB99S9o70ubm+TEa538lsO/iEZz/
PXJTb5iwf05u6l2F/D/M/sU3If9f5GZ+/xA2/slDf7xC/lfIE1AffKFg37qc
qH+z2D5iB+rfgTyM/zfUv6d5WH+Qn+5Ueem/Sah/ZfNyvlBhrUte6nsrbJuZ
l+dbuLAjKi/HSy3sesT+EeUQ/+T5uF7mf6l8tI+W9Vo75qN/sqH+T8tHf18X
NnbnY74OlfPC8yAf45Nd2JckP+N3A/pL5Gf+a2LX2+dnfaoi7Jycn/qeCbt3
sH9IfjnvvHdV+0U4/xMF034D51/RYI5/E+dfm2D674L0d4UHM7/wPG5uAzue
FsPz/61g7peiYrfGL4D2V/fi/C9cgHp+4fxvWYD5XwvP/+MKMB6D8Py/uQD9
WU/YEkMOLYHzP05B9m+N879gQZ53YHezgsy/+tA/piDzuybO/40FOZ4F99+u
0R6bWtjxh+OvaiDsyl+I6zGgv3Eh6u0o7B9ZiP5LB/3rClHvJ+i/XIjxPgH9
P9k+zAX9ef6lf9dCf8N/uZ4N0B/2L+e7BP2ryTXxvOa8+C/12KH/27/cH32h
P2dhjj8B8a9fWNVbxH9oYY43AvFfUZj1/x6ef84VVvmL55/PHC9mGp5/shdR
68HzT50i9EctYfugIuwfB3//LSN/Toj8P12E+VsAzz8finC9GVD/stqofzDq
f01yZDDqf38b44vz0L3YxvWNEPaesHH+HvL8oPltjGc0zv9MRVm/iuP8r1ZU
7V/Uv75FuX8+of4tLMr5x6L+RRdlPJ2of2/YP/YQ6l/6YlzfKNS/ysU4/yLU
v17FOH4W1P95xaj/GvSbqn849L9S/bOh/gUV537NhfpXsbjSj/rXvTjXdx7n
3xyw0X0Nzr9Dxen/Pzj/nhenv3E+ulKXoP9mQX/5EtyvJ6G/awn6by/0u0pw
/qHQv78E8yMJzr8naryMOP9SluT+9UJ/GbD11kro71yS/i4rrM8oSf8exfm3
lxy9AfF/WFL5B+d/slK0t4P+UoprQ7+jVEB8HVNLUd9Z6N9VivVgCZ7/7pfi
/sDfb/7Epen/nTj/i5P5/GRvV5rxvAv9k0qr/IP+7aVZr9Ded4f20BsSP0vC
Mhx/IM4/Wxmuvw/i35r2thGI/4QyXC/+/vRuJedcgPPvlrKfx/kXryznz4zn
/3/L0t/4fMHVoiznP4Ln/7Flub6e2P+bynK8i9j/N2gvXxD7Xyun6if2f4Fy
3P8vsP+bluN8R3D+jS7HepkH9W+D4m6of1fJyRuj/v1mf2ccqb/ufOXp/8eo
f43Kc/x+YtdGlmf+xcPnX2vLs17h8yuHtzzzN1w+73L9UDxC7GbuCsyXLvj8
r0EF1tMo3H8eXoF688v7APuqCuwfg89/L7B9dDdhz1fF/fD5Z44Qti+Iz//r
hXC+lvj8c0gI8/OgsNMdQn2X8P7jbAjHe4e/fz+FMB7bxK5lr0j9ifD5f+2K
7H8C978HVmR8v+Hzv6UVmR9r8PnfKdU/Kz7/f1+R+f0Hn39mqYTx3mUXtteo
xPpixef/zkqMZ0N8/rmI9vKJ8Pn/8UrUXxSff75T/X/IevSMOuM1E59/VtXZ
PrX4392H9rCmeP+xQGe+Fcbn/9FgfZqGz/9fk4uvw+ff6SpzP23H+w+9MvWF
4f1Hz8r0z3xh/9zKzL99iP8R1b8IPv9/WZl6xyD+aapQz37EP6QK83Uf3v90
q8L4Bsn7BsvsKqyPtyWf9IPsH1pA3g86n7H/1hy4/2OpynpbHvd/yoF9w2YI
a12rcv7EeP8ZUZX9O+P+z76qqn4Lux6zf9hb3H9LUY357cX9t9LVqH8D7j91
qsb2hXD/aXo1+uNf3H/bU4361gp7fNWYT/3x/jNpdebvQLz/LFmd9gR4/9kB
rF1vgPtvU6qz/uB9jXsn7dpZYe892sOihLXENXh+vBG2FatBuxX3v9qC9ZJP
8P5nYg3G34v3Px72D8H3Ffy3a9DfuB9mTVCT/F3a24vU5HoG4f5Xq5rUVx33
v8bXpP+LQ/8W1f487n/d5HjOeGLX49bi+O9w/6tQLfonFeLfvBbXdx/6jVpc
/0Tk/ybaYy8g/6+DHf/Ekfxz/CWHZhN2BddmvEy8/2lSm/vpB97/jqrN/TgA
7z/X1+b6YvH+50ptrqct8v8X2PE4Cb7/kbcO84PvP+3k8L2ofyPA2phoYX0N
7VsfoP5dAhvzMJ/7O7kS9Hlz1cX6vNXw/qsBuRHeT9mG1WV/7v+VYPfJ1Hj/
db4u872izG9+IUclxfs/az36Iwzvv+rWYz72hv7BYONwH7z/Ws722bbh/deZ
ehxvD+r/R7JFg/5s9aG3dTnor1Wf4zfF+98B9RmvTnj/v6Q+431T7N6T9Zk/
PfD+/319xj8H8j9zA8anFt7/VycHVUD+92vA8Ry4/xjZgOvvjPw/1oDjN0H+
v1X9CyP/MzTk+TUS3/+pQv7cW9jTuyHz64+wbz65+GfUv6MN6Z+32P+xDXle
1UT+p7Vz/C/Y/5XstM9A/vewM37VsP/nkkNHiz9sh1X/D8j/F3bWgwm4//BP
I9bDW7j/UKER178f+R/aiOuPRv7PasT8TAT9BxSXhf6n7J9tC/I/VWPOd1bY
V7Yx13df2NKlMef/ivo/szH3F8Z3Rqn2eaH/UWP6bzzufyRvQv0uxL80OXQz
9HdswnwCO6aRc/uhf3cT6s2E+vegCeOr4f5rkqb0X2Jha4mm3F9/8PzTnhw2
HfonN6W/eiL+O5pyv0Of725T5tMd6E/UjPXwE/QXbUY98aG/TTOurxj0h4P1
0hjPu43to8og/rebcT0O5H/85uzfGvlfuDnnY/63JAdT/zhlzwb9m5tzf8aF
/hhl7474x2lBfbi/YxRswfiFQ38zsJ4U7Buj2scg/zeS2z5G/l8jb+0A/X9a
UM9+6M/fkv3z4PxvTG67Cuf/qJb0fyHcf17XUu0fnH+XaS9eFOf/T2U/ifM/
Tyvac+H+U8NWzM+SuP8U1orx13D/fXUr5nsanH8XWzEeE3H+fVPj4Xzz5WyN
/KochPO/fmv6Pxr3n4e2Zj1/hP2/ojX98Rzn37nW3P/JcP/7s7Jvwv1naxv6
ew3012nD9svx/DOI9uK4L+5a1obnCdZvnm7D/MP9LP8H2qP7CFuztqX+cdBf
E6zFxfOU0b8t17MY+he3pT96Q/+Jtpy/LvT71Xh1cP5nasf5WkF/NcXroL8v
OWQP4r+wHfdTB8T/WDvu//W4//WmHfPnCuKfvj3bJ4D+ymDzNJ43zV7tmd8j
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
XXk/4LN85P46J2wp/5H+mIT3H10/8vweK+yM+Mj9vkvYvQ+snx0j70+8j2kv
Fwfv/1J+Yr4dxvufMp8Yz614/9npE+vZYbz/mU57thnyvsrc84n5eRTvv3y0
n08ldmuyz/Bvi0HC9pKfud9GyHhGh89c/wJhz5TP1J9E3q/5dn6m/mC8/7v/
mfGIj/d/ib9gvFOfZHxnsS9c30hZj7stWNvwTN6neSeC9eIx8r5Y2/6F8egt
bLujxpss7Ejwlf1nbBL9Rb5S3zKxm63AvssFhP3jwcbcW8LWrbQ3GiXvG+03
ybk+rxf9cb+xHj0S9hT6Rvt7YV/zb9TTVOa3jAU7olaKHn0T+wcdE3ZeZ/9V
D8V/7r+0R/8V/3iDv8PfhTPi/XfT72x/WfxlG/2d+ieI3bH+O+M7Wfq7rtDu
PIr4//rOeKWS+f15f9A/bfD+s9EPnjdpEf8RYH3nC2FjzQ/u1xjp77lErnlf
7L7v5MgOeP+Z+yfr/3yx6w1+0j/XEf9hP+m/TcLuleQfM0SP9/xPzlcR+r/+
ZD0qKWzL8QscXAP664L1jna8/x38i/F1CJvLwdatVaH/DNtPHSTxsn76xf20
FO9/s/2mf9+L3aj1m/vZBv0DfnO+Xnj/u4TtI4sKW06p9ucQ//dsn3SZjOfM
/If5HSnsrg52lPkg7O33h/E2hbVF5B9PhG3H/zBfrgo73v7h/jyF/M/wl/mA
+cwqf2k/h/zv/Zf+HI/8X/CX67kpbD/6l3rWCxuxf7me68KetNprcJCM76sE
dqRah/sfPcHWratx/2Muue1Z3P84DHY7awm7X4C14ErC3n/igFvUFf9pIWB9
Zz28/+8G9l028P5/Ftg8nxzxP6Ds8RH/p+RVb2S9/lRxuZ5LiH85sN7xrrC9
C+13fyL+M8Hums0R/yjw/y9M8t33KC71d0L+p4iH+RqZeP9fmrxqqLCzI9iI
PoH6Nw3siEiN9/+741F/Idkfmo/2VJeFbUnjQ2+9NcKOEuTzW7D/24M1Yxn2
/2SwnvSgsH8H2Fr4OOr/PdqnLsT+T5QA431GPTaKgt0Zk8p6PW3AvlzpoD+c
9sjs0O8BO0ITQ/9t2k9FQn/8hGw/HPoLJ6S+NLj/0TIh1xMsrI0HGyFpUf+2
kHtlE3bEgLUNQ4RdcRLBPrcg7n8UJB/6jvOvGdjtjyt2q0F2lsP9n42JVH7h
/s81sBaTAvd//iSiPzPh/MufmPHNLGxpkpj5EU9YHwV2RE2F/nW0b1gF/ZfJ
xgDUv5+JGc9WqH95k9B/H1D/7Emo/xfqXxh57ldh12qwY21e3P+4mIT5mEvu
B/m/gc32/YWtuZIiH8JzCtvrgx1ltgobQ5Oy/U5hz4qknK/2LtF/jvbza4Ut
X9g/Fey6NRn3z1FhZ51kXP82Gc89COybdUXYuwxs7XtKWDsD1lcES3/bx2T0
30qxO7Imx3ibmordVROspe8jbPYnm25h/+LkzM/1wtaTYF/nU8J2P8eL3S5s
ZEoBe1gyeV7zVEvB/bsYz399U7BeVMPzXyTYkTc19B9j/3I5of9NCq6niLA7
fUr4x5ND2Fs5JfMni7DWG6yfnQ3981Myn08LO8yUHD+JzO96lZLxSyefp5lB
qdA+7nRhf8VUrM8Nha09wPrDUrj/MicV9Q4UNg6lop7i+PzvOe2X4+L5P7WF
/fF8b6kANu8Xlb/H9VAL9VbB3/8ushYun++494Md38rg858nHK9nAnz+nSo1
7A1P4f1nWbA5GH/vOzrT/q01/v6fATba4X2VuZftS1bF598PwdYsyfD+I/k/
sC87h89/S/3D/XwCn385wEaVytLeMxWsvYzA51+72P7yP3j/8YDjHS6Gz/+T
pGF9j4/3H8XJl2Lx+Ve7NPRfXnz+PwmsDd0B/TtoL74Hn//fTcP9l0rGcyQM
wvyPN8l6XDbFfnz+1xpsrd5D9PgngB3PRuDz721BrMfQZ7/F/uV+QX+8tGx/
B59//5uW620M/S3Avh9vpL1lHNgY9xqf/20mB6XF5383OF7en9CvpYNeax28
/ylAHjpJWGsG9t3G+1HbmHSM50Ho35CO9Ti72F1X2f7HUmHzN9sn/3pM9OdL
z3y8ive/jcH6QNwfsI9MT71T8f53Ldvrn+V9rsebnvUuRO5L+H7Qrp2V9pY8
GXhe5pb7C3pDcuS/p0T/8AyMZ3y8/16VgeNtkPV4L2TgeZAZ93++kXWH9Lfl
zMj5TNx/qJeR843G/YchYLPeB2HTDdZ3hsr6/WfZ34gj67N+JuvThO3ZM3H8
FTKfUTsTz5Ng6B9Iu5lC7L6lmejfUnj/fToT9T0Vf+sfyAOL4/5HlszIh0/d
JD7uGuRH74W9zsxcz1m8/19MNmYL205kZnziQv87sLvVVrG7MmZhfuF9v1mV
fLI+4t8H7EudXti6kPaIOsL26CzMx3LCxmvay4yU9XnSZQX3WyLs07PSXzOE
Lb2ysr7uE9bnsX2oR8ZzHsnKeDWX9blfKo5A/NNko14r4l8xG/05RtjWPRv9
nUT875jN9noX8b/rINnsKHbzWTa134X9luyMZz5ha3mw+1ZC3H/pSvuzabj/
EkEOLY/478vO+UrKenyPVf/Zos+S0sr1ZRE9ehkr41MO9x86WannvbR3T7cy
Xrh/4d2j2jeF/occb3pi6E+Wg+1PSn9HyRz0nyns6gDWPzZG/KfkoD+uIP47
2T/0LOJ/X7W/iPgnzonxuk2V+BnFwJob8fS0zcl6eh7xn0guHAT929nerA39
d3Jy/Sb0J8jFerAZ8S+Si/VxGfS3In/KifyfkIv1bBTyfyv7O1sLO24qhv9c
cXOj/f7Dsh6zEFgfexv6m9Me1h71byzYmqcK7r9sArtPVRQ2rudmPc8t7PnL
9k9TCfuC8/B8joX+pmC35xb2/2iwUaIR8n892FrHj/hfYftqFuj/BdbWPBC7
li8vxr85XdjWCOz+ZwniPyIv2/+QeLjW0N7Fh/P/EtiInoj7D9/B5oB1OP9z
54N/WqTA++8GYEfjDHj/PQxsxpuN838luWou3H85z/ZtagpbvoJ9lZsL6zny
Q28ZjO+sC3bUxPsx92Dy93t4/lnO9uWSC2tnwcaprDj/P4F9o9Lg/X+2YOjV
t+H9fy2wtVtb6B8A1lu2gP4lYN/jcLz/PwU27jaA/vfkM8mhP3MB9B9cDfqr
gx0ftuD87wfWYlPi/d8isPt8G5z/x2lvu1rY+RZs+uEPd4aCmK8L9HirgHV/
L9z/7QN2X26A938LwOaSztB/FKxF3MX9p1ja496QfDDTFkL/8fWE/ZXAZqNy
wtaeYOuTq7j/NpecP7PYjcNgvdZnsXtecLwxFcTu++df2F/dwfNfCNiXNFjs
ejdyNO6HOGeBtSY2YfcB2jNbhL1Pyaur4PnHUhj+KVcK91/KgR099uD5pwtY
K5UF972iwOYztPc/AvvO4XnLmqII+r9fj3iXBvtyI3+MjmC9zyW8750GNofj
foqe1Ab7zO24z1ECbExMhPsc7cHW+NNwn2My7T9xX13bCXZfrYD3effIZjo8
zycqiv6bVuE+R1GwvuQ9nmfb0L6+HZ5nw8Haws5it3rYft8svM++DTaXTxc2
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
F4d+xdaybPxeMEbje9KzX3ZTUz3fsRK3rmFnexx+L0nQjOPz5xGHm2B7yhL5
fOM3bE7fS74h7Kx4Q77/aPmjBcg37q/Ul6IX+0N/VJ95x/7Qhtj93J98R2Dz
6QjyXYedZgd5Pn5Rj+/xiOfjsZrTPxp1Jt882NyXg/aur77B82zLwc7q1jwf
Xo3da0+kv7nnNF79I/PbZ63/4D2xkcumvsvsh4yuo94Tn+8fg7E/qxrPh1dg
Z1EWno+fwdYEnv9GPmjcjkP/zt6C65f0Hs+HY7B1LCX9ewD2pk+jf5/CZprK
/B72Tr14Oflma0n7ty7B70HVsZW0Ac/D+2K3Ri+eB/+u5YeO5PvWSS1f8CLP
w99ofN958jVb8XknDH4Pq4Kt6Lfk20vdshrtvRB7f3G8eUyPr0N+MS+xH2s6
z8MztubzvszheXhF7DRazfPw7tisuk0cNR97v7zh94Aj2P79Ae0dUcfn9wE3
fRuOL9+E/bDl2+h4xH5ao1sbnV9+pL/PwfbDivTvJ+oSFv07bVvqi5uN+7kM
NlrVpH93Vv+bnf49EzunM9G/PfWWxvTvh+p4z9n/mrod1/NjU+nvUaWxXz21
/D5qdcD2xFHiwDQtX+ut3P/uHvXT+RIP39PyK7uKjZTtOb+p/N4aXRL7r6fK
fnO7rcYTD5B4MIi9H3pI3NuJzdTdxJHb6moPxOZXHSj/xzNxTLEOOl63ZP97
K2xPDotDE7FTv53sh/e3YXP1D7KfPuomdouVlb8nYCXtiPsvk3jgJ2zMbSZx
18bWm13s/x/XUceDY+z/36Llv0so+/ujr2t8TjGxnagTx8ffxv7/gtielULs
NcNmh/jiyGjsWjXk7weYGzWeopz8vYWYq9grPVzsxO/M9d4+VRyKVjf8Rv5e
g99YXau6OGoUdnKkEFsb1INuyPGBy+q/t/D3H+J04fN6z+fvP/ygrtBSzs9o
qB7dh79/MLyLXq+aUp+9FjuFVouDF9Qj/pL6PKMr+d4ZKI7kxn7H6WKznrr4
fXHMUOwVC4qdVdg4v1ocOqvl224k/09aPuEG8s/ZjfITe5J/7W46Pl8h/0HY
6/S32F2O3XfjxeEwtsZnl+OND1pf6R3i6O8DuNZmsV0T+4Wei4P9sX0j3znJ
fwn2ypS+IPn/pc5SQWz+h93FRS9K/lm7c3yB78RONeyeqiPlQ32wlfea2Hex
szKllI86oc52VuLWay2/a5HEA5l7EB/942XJv7J6bb5/JP+e2Eg6QGws1Pie
BOLoP7F/beUVyf8FtjMaVyX/b3tyfLaZYq8Cdpyb1yX/ALbGxfIl/3nqGwP+
lfwPY69AXok7z7S+8wVuSP7pehEfv/CW5F8OWxmui6O6YmPSE7E1G7s7L9+U
/A9oPHdSqd99jM0VlaX+cJrexKfFExtlsH27itQX3Qn7y4dL3J6h5e2MUn9w
H3ZvdZW49wA7s/qKI6n64LSppLz5MzbuJZV4THvspflXroczFdsxf8r1C+3G
7uEeYv8u9ifkE0el6Mv1ODJR8rNKYDdpW4kH2vTV8WDGNcl/srrNBImHd+jx
M0qT/2315p1SX3TyflyvtlukvF0U+2+GSTzYEluDE5D/BOzMjCv5Rrbq8bXT
k/8NjXfrII5J0p/4nllyvZ3C2H4zVeKh5hrP9eC25D8Wu/dO3pX8N2Ov4Oc7
kv+/2AoXuif5JxxA+QN1xW6BAdred+X4cFP1ngMSN0Zj+8omcfQfenyxvmL7
Cvb7/fhA8o83kPPL30Ls5VPb6x9K/o2wverfR5L/SOztS/VY8l+P/bn95Hjn
krreaTm/UOxBHN+8/H3JPy822lYWRzXA5hlLzs8api77QY4PrMHOLUuuj3se
e3e2SPnwl//F25F/7sE6H+SS84mui42pLvkPwW7nteLgSmzWCYq9v7FlX5bz
i3zU8scvic0cQ4gbDeX6xNTC3ph1cn2cgdjNtEMcWobt15nlevmnsVmi3hPJ
/72WH1pEbH03lOvXLUaOD9TARtdiYrcfdkcmEht/YStTWOqPfjtU8/8itrM4
OO57KR+siu0ZntjrjY2NfF5kEfYzt6S9j2MzTTW5njGvsPuysuTvZBrG59ft
RL6Vhul48ZvY74Htwi3lfKIWYC9wUmwdxW7JV+LAc2zEvSx2Mwwnvj6pXJ/w
L8N1vrwucSOA/WSzyH+uxrenkfL2IY13GCTx4FP17enk/80IzudWcYlHymL7
fk+x2UU9t6HUFzNLvTen2NmPrWoVxKFH2Mx6+6nk//VIPq/jV88kfwsbWedJ
3OqInTwlxYHp6tVnpT53L/aOpZTzDd/H7n1t/1SjKL+5kDi6FHZ7FxHb7bDd
fpC0V3AKNlJ0kP7s7VJvqUt/v4OtbD3p71G/cfzSI7R/cewf3k/7t8Zmk3Xi
0CRsXYhIeX+7et48OR8r2Wg+LzMOFMHmuk20d4vROh81lfrC47F3Jh3tvVXj
1y6Qr4/9nwP098RjdH44QHsXGqPjY1Kx9yu2/US09xjstR9Af9+E3aVh7u9r
Wr7jPhkfnARjqe/lCbk+ofzYzFRe4n4T7NVdyvj+m8abHJXx3wphe31VGc8C
/6gzzJb5w407juu1LbM4/OM47a8nmN8aYXPQzzcl/xHYS7+E+W0ddj41l7gX
azzxOWfFkTzYLZVB6jfrY/PDYuZzB/vP97CeWa3Hjx/FeuacHt/prdj/rC62
QRyVawLX585w+TyrDrYTfBEHBmNvWn6xu0J9nc8Pn8HO/XXk+1HjbbuIo7NP
5HyLFSffGGwneS/x4ADsDHvEfL4UGx0+s545hd0vNcXmO62vbxo5n5hsk/DU
6XJ9nOrYqbNBHOqLrRl3pLz/O3YnDRRHncRG9Cmp33qj5f1+4oA5mfrTvWM9
VwVb+9exnumFfZ/1krEI214X1jPHtPz2+KznXmp9BVlPBTMGuV6NOsp6zKsY
1PEzixwf6Y7N+ZdYz87Hfn7ON+YIdkbvpf0j6oSWOJR+CvU/ssV+eWxsuCWO
6oadx9XJf84Und8DEg8cxO5+1nvuE40vuSoOp51KPJBAbJTFdrIG5N8Ze6mw
PVPLl5jBes7T8lt/FHsP1VM+s55PPY3zfUj9ZmlsXZzEer4Dtt83kfLONGzm
Zn0b2oOd7jvE/j3s/ZdIHJVyOvVVfyffJ6yS2P6+FevZtthft0zsBqfrfN6c
9t+JnTth8r+j8YYHyP+rGcQnp5L+aBfD7obO0v+CrbBXm/WoNxEb67uKI9uw
NTMJ9/9Njb/ILuNTTNKZxPN9I3Z+Ui/oSP+3sfPLVvk8fxz2fy8l8agt2J61
VGxdV8+9KvUFEs3i8w6VZD1XEFt3WojDzTTeq7mMn8YYdXHWx9Eb1VuXSNy+
it0jUyQejD8bJ9kicS8a2+X/Ekcaz9b5q47YHKXlY1NfzAbsHKkidi7r8cMb
iv0f5nC+fx+X8T6qIbYrFpL5wBqu8Swe6/e1c3T8Li5x9wI2E05k/WrMpXyj
Xaxf82Aj5zP5vOh62J46nfXrUPWJe6xfV2n59nxe5JO67/diM+c88pt+WBxT
G/uvc8r5OIOwWS7EfLYcOz8UY70exl7NIOv1D9h++ZPM79b38zl+DecbqKlO
P13s9sdOb9bz4SXY6lmD9j2Ffas2+f6HvbGdaN+sC4gP30L7VsPusj20bx+N
vxtH/i42bjAfmyfUPQqT/2ts9eX6O5kXcvyeXOJQZeyuGyKf5/fEdqWJ0n+j
FmIjXny+r/2JzddXmM9fYOe7PlLe/XYRx+e5KA5XwNa7jFLe6K7xEwno3/Ow
n6iAlLcPa/x5FXHwGTaqxJHyXjqXz79ZjPzLYW9pb/Lvip3Zvch/NraD9Bfn
APab96D9H6tT7pb1j5/md65H9GBxVJnftX9PErv7NP4t3y/CD7AxohLr09SL
iX84x3rtZ+xkfsD6tD323zyX9W5wKjYCi8Tebmz+e0gcuavlm5WR9bKZYgnl
e98Ux5RQf58vIvm1wW7ojMRDk5fo59+R+vwd6tMX+D52G5uvevJ9LPlS8o2K
I+v3QFF1+QZSn9sS+8tOyXoyPAHbN67L8cY27FUdK+Wjb2Dz3S2+nyRZhvvP
Jf/C2P31IPk3Vz/MIJ8fGYuN1L+S/2bsV3nI95N/tb5CXC8n4XLOZ/1ivp8U
wN7FwXw/aarx3t/K9Yoaja2jdcTWH9itslkcuIKNlPvlfNx4K/j8vtnF4XzY
yTVDbDTGdr1O4uiRGt9iiYOXsPelF/nGXkn5D7lZn+fFxpb6fB9roP6zNs8f
hqlrxSa/89js9Jrvn1+wO3aJOCr3KvJrfovvn3WxfXmo9OfAEGx0OUX/Xon9
sS34PvK3Hn9rJt9HPmn8akK+f+ZYzefViuH7SC3sTJvD9++B2Np3S+rzlmF/
8Wru39PYPJWS71/vNR64y/373Rpc+DPjdw3svRjB/dsP2815nuEv1njpTsxX
f2Hz7Dmet7zV8o3nyPGBLGs53/dled5UFfvj/2b87o29zImYr1yNDxrP86bj
2Dp9g/H71Vodr8PiYKZ1xFu9Y/yuhP39w5ife2h8C8+zzAXrdP75m/yPYnPb
PPJ/jo2f4sh8FMqwnvL/nGX++kU9YgLzVwCbvzZg/pqLrXRtma8PYbvoL+T/
FPsnGV/D32zg+tT7j/mrHDYyViP/Lth+kpP5eha2xp0i30fYr2WT79chzu9t
YhnPTQs7l4ayHuuI3aNvbkm+0zXedLzEQ3tDej3T8XzxPvZr72K+SvUH9bdo
zHxVCrt5X7Aea/eH3j8fmK+mYDN2DtZju7CdMiHz1V3sLJ/M/FR8I59vc77B
1tip8lHsTcL2x8M3Jd/t2P/zOuvvW9iN9wvfP5JtwuNKiJ0i2B+RS44PtcB2
nV5if7y6+Ha+f27V8usTSNzysXG4rTiQeDOeM0nsFlIX/0sc/hWb37wSG2Ox
U6q6OHoT9uq84/vXNS0f7Un7BBNswbGqkn9+7H7dUBxpom4wj/b+TT3oE+0d
wtac0RJ3/tH6epo8T427lfMpxvrZ/xFbVe/S3o2wX2w5zxtGqHeeoL3XYfdC
D9o31jbqe9hZ4kZebLYbLflE11ff5PuE7WDvTUiuR3A1treeF3vnsN/8V9r7
M7Z+Wyg2c22nfPVxtHcdbHSLR/8evF2vRy5xaIU6nEDsn8HetTzk+1Hri+J5
ipV9B+UndmU9FoP95Lvp3wOwPfKd1Bdeis14P4uN0xofnIz832Hr6/1y/na2
nZxvzny0d3Xs/7KI9u6LzVZZJR75HXuzX5P/SWyXTSfxmDdaXxKD/M1deFdE
yoeqYKvsd+TfS518sThqkZZ/91BsHcPOnxbt/RL7Uboezbib+EKuX7gi9pe9
Iv8e+P8XpBKPnq/lzzKe2EfU+QawHo/s1vluDuvR9Hs4v58XiyPlsVv0Mf29
m8bXsd6OmYPNurlZjx7E9plvWI8/0fItm/D9K+1e4hvH8nytLDarLxBbnbFb
x+X7yExsda/P9xEP+3sDzGcPsZO6FuPb1/son6g86/HS2DlXQGx3wO6YnYx3
07B54hHtvwfb417Q/vewsX2q2EzpUf5DfO73kti5OpL2b4u9z0fp/0HsZtf2
voP96TVo76/2U75RNO3bCpvpOtG+E7E9oDTtu13jewL075vYrV+W+zvpAeLT
y9G/f8L26nM3JT8b+22+Ir9xGq83mPy2YHfCFSkfc13rG7xP7CQ6SL5TwuJQ
QeyPYfz1m2E3+RJx1BiNO9+T70Zs5s0i8cBV7NVeI+OJG/8Q9R+axPPEaOwN
WcHzlCbY3XhOntdEj9L43Jlie4Men2Ow/N4YvIztmk/leU7kh8OcT+c5YrMh
9tL0kvIxww9rey+XuLMWm3M6Szx0ATtz+0rcN45QX+5BEo/Ko76cj+dH9dSZ
zooDQ7F7qSC/h67C1oku4vDZIzo+TZXyxmd1z2vi6JxHySf+A7Fd+6iON8n5
PXwQ9tcW4ffw5Uf1/p5F/mHs7PhXPs/8gM2OjeT5Vcz3f3J83qUSd2pia8l8
8u+P7WS3yH8JdkcmIf9T2Nv7g9j6Dzu3J0r7BLIeo744hcm/2jFt79nk3wd7
9daIjd/V1+uS/wlstPF4H+C11neuqjiY+Tj17Uwv7x94lbGR9fN5yb8nthJX
kPclzIXYbbJOHPOnHp/uW7HzAptJevE+yLcnKH827VnJvwL2550TR3XHxoe7
crw1D1u39ko8cBjbK46K3WcaTzhLyofTneT4JxPERnlsjr8sju6Knf1lxMED
2Gs7QerzHmP3yHref0nzl87vvO9ilsHWvxd4/6UTNvpv4v2XGdhLXl7qC+3D
7sNvyPeBHp9W8019ivIbfiPfn9WhH+R6B9pj85tcYncqdj90Id/d6jEvpD7j
Hna6dhVHpzjN8UMai+0S6ld7xME22H1RlvdfJmPj7BNxZId65mra+zb2Oq+W
84lJHsY3l8r7K05R7I7LKv0n1BKb8cfz/ssEbNedLY7aho3/Nkp91g2tr3xB
iQeSnOF6Ve8h8XBz7D6oKvUb49SVfxJHb8b+sLRi+19sJDoo9QUT/q330w6x
VwDb13vyvk9T7AVP877PaPWJh+KYP7BRKzX5XlGPHsj7PvHO8vkjyM/Ph91H
U8i3MbbuNZPzs0Zi58RE8l2PvWhb4u4lra/sIXE49jmuZ/1u5NsAGzm2ke8w
7NxfJw6uwXa/0tzP59XvrpLvFz2+/N/km/s89R9PRvvWVa/cz/08BLuJnolD
K9XGebH/t7rNG3HUJ2xsKUT75rhAvOs7iQdqYWfJz2J34AWdXyZJ/wwvw8aL
ifTvMLa9S/Tv91p+eiH693cXOd92c+nfNbCXvTj3dz/sNFsqdrJcor59Fbhf
q2IrzPtvfm+NH97O+2ruJb3fT3C/Hsded598XmEnKpr7NdNljj+wlv5bSb04
hvGpJ3bPbSKfBep7PTj/5+p5y8WRX/7h+Fz7GY8C6ttLGI/mYjfPOcajQ9gf
Mo3x9yk2Fzckv2+ucP7ZVpJfOWx/Gcr7eF2w/2Ih/49qFnY28f6hux9bsxLT
Xo+wUTQW7ZXm6v/6H/lZ2OzK+Gl3xMYsj/fxpl/V6/mZ9xH3ajzFGPK/j52R
+8VmqmuUj5oljimFzWIvyL8dNqqnpH2nYOdIEsbjXVr+T8bvqLvqfbyvaEX9
iy+vIP/i2FmP3dbY6nKd9zEnYfsY84exAxuxqS/6lpZvm5T+muw653+B8w0W
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
V7+qDcYvcyx2zmQj/03YPsbvL841jX9bmvwTJOPzardhvMqP/cnjGa+aYvPk
74xXv2n5gYyngRA2rJVi9x/sTFgkDsdNjstu5PedfNguNJb5qhH2qpZnvB6B
jY/9Ga/XYWvfEsbri+qmk/h9J9ZXeH0tft/Ki930TcUx9bHfivHZcbD5+SPj
9Wr1+NPkfw476TeT/xeNJ9X8c0VxflX2k38d7J7m9zN3sMZ/4veq8ApsGdPJ
/2/16Mbk/1GPv1WF9Ur2FJzvluJy/wZjsFNoOvf/AOwtYDyILMXG0dbc/6ex
9UMT7v932J52XOxkS8nn1e3L+Fcd263qMP71VR9ox/i3WJ11AuPfSfVqHHij
9c1uynxlpsLdBzJfV8H2xz8Y/3pjM00Oxr9F6ucW498xddty5P8Se1NLkn/G
1ORXMSP5V1R3vyLjpdkD+yXzkf987Jz6gfyPYKNMFfKPaPmpucg//dd8/pWJ
Ul/UL+qBQ8m/G3ZirST/OditFJ/1ykFsZNzL+P8E+/sekP83aTi+603yL5tG
P89lvuuM/YSjmK9navnXrF89T92f8T7yUI9f94n2/zqtjg9vyb80NvK8JP8O
2O67hfynYa/PYvLfg83hzM9Wym84n+NFWZ+V/Eb7bzPybaveoeuzIHY3VGJ9
ugsbWQ+wv/mO1rfsOvl+lY7Pz3KUfIth935h5vtW2PnC752RidiqhM3tWr7t
Hub7m9j/BztJ0+MBCcWhn7D9+R352th4moP1ynh1qWqsV7Zo+WNVyf+6+sIQ
+nuiDHiNz/qsIHan7CD/X7G5/hPfT8Zg79d9jHcbsRXh9+PgVT3+SzTjffxv
OZ+ko5nvorE5cSHvozXB9m3eT4sZpeUfjWY/zAbsL23GfpjLWr7YavbDxMlI
+Qcn2Q/zo7rS3+xvboitvn+xH2Y4NntfZD/MWuxcuMN+mAt6/JVHvL8QKxPx
Ia/ZD5IHm9my8z5aPWwlSMl+qKEa//pH9kOtyqTzE/vHI2ex4RxlP9RndeEi
NyX/nJk5fnlWsVMbu3EyiEODsDXvLvvBlmPvySzexzuDjRMX2Q/0QX1yL/uh
vjcpX+VP3t+oqV5ym/c3+mM3dIv9YEux1bOefH70KXXiWGL7P+zkpXwwaxbO
f20BiXvV1KsGiyN9sH+V9wnN37G9Px/5n8DG1oTk/1rtzib/zFlxTEDsV86q
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
/u2lXtqF+3chtoY35P79Eztx49O+L7CRuhbz1bc1Of8lT8m/Ivb/TU/+3bGT
6A/yn4etxh79+zA2T/dl//ozPb5qkP3N6WOwXZr9zeXVoXLk31X9e3/2N8/G
zpVk/P24xxovPlFspq1FPN4Z7tcy2HpUVOpzOmEzw3fcrzOwt7QX9+s+7O4t
T36pa1Pf25KMR+2xv7If7TkVm//0pj33YG/GM/rrPT1+P+sBO0Ud6q9F/w6W
wGZ4r9hrg71VT1hvTcZGvby0505shxjvYm5r+TrHWU+1rEv9KXS//UTsl46w
vtiGnWLlGW9vYCtHO/IpXI/6kgS4/2zszytMPuM0/s0a8tms8Tr3yOdf9ULW
N17C+pzv+DD9swA2PP5+mtkMW0s2kc9o7D3Zz/elP9TeLNZTV7BZNAPjT7wG
1Ne2HPlGY3vfBMafxho/VI/xZyR2I4cZf9Zjp76uJy5hazXreyNOQ+Iv+zO/
/oDNkK4nGmD7Yk7G32HYrcP4563Bfjr+3kHkvNa3synjr9GI45uOYfzNjY1z
sVlP1MXelcOsp4Zo+eQTxf5K7DfJJY46q+V9XU990vIF3pB/jsZ8/puT5F9L
vYl8wgOx9+0n8l+OjduDXkj+YS1fbafYfq/x5FvEwe+aEC+zVOzVwG711i8l
/37YDhd7Lfkv0fIzr4tj/sJ+41JvJP+3enyRERIPZWmKaxeQuF8VO6NxVB9s
Vrwv5S0X2116SzxwXD1xt9h9hf0Fid9K/pmakX/+JP9J/pWxMb2kOLqneuwZ
KW8vwE73heLgUY1nLC/2nmu8QB75vEiGX7X/bZS4WQE780xxTEDj8y+Lnbka
P7FGHDqkjqwV+0+xn76tOCpdc/If3kRslcNuk1Ry/oEu2HqcUezOws6BG+Lw
fmz/NZT8H+vxJVuRfxqb6/NjIfK3sBseQ/4dsblgv5T3pmv5yv3Fkb3Yz3pe
bD7AVoE14phULYiXiH4n+ZdSL3soDrVroeeX7L3kPwWbF47K8VG7sfdra/K/
i43Vc8WBqJa4yVmxWxybfkHavzX2x6yV9jImY7fCLYlH78Bev/zyefYtLZ+o
Kvkna0X9Z1PQ/kWw3ed7caQF9sockPrNCVp+VFLafyt2Ht+i//sar56G9k/c
ms/zd9P+hbDzOor8m2v8emyxNVbjKXFgk8bvv6X9r2GrwlDOL25bzm9vkP6Z
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
sXlnO+PXb9jqkfWz5B/S+F8LPlv/B9C0mBo=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.5343648*^9, 3.9686976*^9}, {
              0, 125404.8203125}}, "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
              Rational[1000, 3]}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[1, 3], 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.5343648*^9, 3.9686976*^9}, {0, 125404.8203125}},
            "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
             Rational[1000, 3]}, "Axes" -> {False, False}, "LabelStyle" -> {},
            "AspectRatio" -> Rational[1, 3], "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
YlW/qoh+6xKu31FN9NdZovZfddE/eImq92LXly/hfn8oducZ1V+rKfo/sn+2
NTVEf9altFtrif5aS+nfXmK3DVjK82u09HcsWUr9w4VdJ5eqfBE2/ap9e2F/
pmXq/BO2Vl/G/CxUW/T3W0Z/7Kov+iOVPbld9B9T/VM2Fv1vlqn5G4n+DMs5
/8eGor/KcsZrptidvWlPekr6u+cvZ3w+NhH9purfpLnoj11O/+UQtqV1q3wU
dlRyc7xELUR/DzfXk6Sl6J/jVvpai/5Dqr/WTvS/oP1zlEP0/7OCdp+wUWEF
x9vXUfSHKrtb2OdawfmXdxH9B1ao+tlN9D/9r31v0Z9qJVmX9u6yKzn+raai
v7Pi4W1E/8yVqj5Af9RK5T/of6TGM8SfruSrWD8SiL/NUqtUvkh7v2OV8q+M
b522ivWyj/jDvlvZV3UQ/Q9WMT47xe5Jspr761170V98NeMTLP6wtF+t9HYS
/ZNX0/8Hxe7cwfaRaO++qzij+NubcI3SK6wVXcP6+lLa29qs4Xk9UtgRTtZs
sj7XtjVqvRJv89Ya5vMEyQd/vLWsJ/naiv7Ca2nPDf0t19If/4rdGLdW+Vf8
5dm8VtV3sftuqPa/xW6Js07FT8bTC65T55+0dzZbp/wj7B6zjv78K+zdoOym
rF+7to7+qyDj2/5wvNDm0t6Rfz3jWxj6G6/neMuFzZHrWf8zCPvXrg/wl/Wy
Ygf0/1yv8kvYyLOB+fRZ4u1puIHzp5P4+IZvYPvswpbVG9T4wvpFxS7JJ+c3
tn8YJuzOuZH5Vhfxr7dRxU/s2tCN9PcPYduKjTzfMkh7x7mNyl+yPtfnjYzH
BWEz+yYVX2F/7U3qPBa2DtrE/NoO/cs2sd5OE38bpzdRX03E/wP5YdJWoj/L
Zta3lBIvS83Nqv4L6/0VTxJ2Lt6s8kn6u09sph5T8tP7ju0f3hbWMm1hvsYI
26ptUfVL+jv6KrbK+K6FW9T5h/yP3sL510l7/+st6nwQtqbfGjCevfJW+juT
sNGLHHRf5vfM28rzqquw78hW7v/twpZXW9V5KqwHbVP7VeqPs+I25mtFYXf3
bfR/R2Hv7G1KTzPRf0ixhvr3fBvzuZacF47UHlU/hV3lPYzfATmvzK4e5u88
YX8E2ztHSb207lf9I4XtTzwqHsJGyu1c/3RZj6fMdtan08K+TtsZr6myPssM
xa+E9b3bqW8s9D9U3F/OK3eyHYzHY+gvuYP+Pozzz0GObSTz2abu4Prcwo5d
yl5Z2HV/B/fPQGEz8U7u11Bhf7Gd9F+UsLXdTq43k8xnn6Tsk4WN7TuVv4Q9
d3YyP5IK+xLsUvVS9Fhsu+iflsJ6611q/0k+OCfs4npnCbu37lL1GPl/cxfX
+0X6a/F2K/8I2/7dreqZtHe02K30CrvGkoN74/zftJvxr476f30383WWjGfV
9gSs315gD/3rEDaa7mH/cGHP6D1c3w1h33r2j5yC/L+6h/OfR/7/Vu0nQn++
vaoeQn+jvZz/DfSP2Eu9V7H/1+5l/z2yH23evfRXadnfjh/k8MVSn1y5o2hH
vTIbRDFer/D8MyyK662N839VlKpvcp7YLyj7d9S/r1FcrxPnf459HC9M2Fd3
n8pHYcuQfRyvtNRr3b1P7V+p186z+1g/mgm7P5E/66j/2fbT33lw/tfez3o9
Xeq1beB+dX4KO5buZ36VwPl3aj/98RPn33s13jycf5kP0N4L9b/GAfafIGx3
HlD5huefRbQ3WijsOX5AxUvY95bjtc0ubMl4kPpbQH/VgyrfcP71of3hfpx/
Cw6q80vYe/Qg15cM59/rg/T3fuhPd4j+ugn9+qGA887V8xDXux7n39xDXM9X
nH+HD3E+L/S/PET/lJT57GkO098HoT8E7IhYCf3dDqv6CP2zDgec75aD7J/t
OvQ/O6z2s+Sv03KE6+km8XCXO6LOB1mPt8uRgPNZizhC/y6H/n1H6M+H0P/4
SIC/XClM5u9wYbO0yXjiecLf0aR/bgpbp7O98zf07zG5fxbg+d+n7G+EPUmP
qv54/i9xlPWsKJ5/O5CD/gjrU9g+LEtn0b/zqIo3nv/vHWU+XBH2JoqmPyaE
iv5iZC1K/p6wtY3m+Tm6h+ifSHtM+e6i3xNNvU2kvXk7Wp03Mp4//jGOp0t7
axFyzBxhe6tjXP98Gd8YT47dLnbPlmP0f3+x+2KOMV7VhC1xj6t6JKwXOq7m
6yn6mx9nPrWWv4fcxnH2b9tX9G88ruq5U/RfV/1tA0T/X8W+QaI/+ATbNxks
+pucUO3Fbo46wflGi92/7gT9U2SI6L+i2i8cJvp/KXuqMNGf96SK13DRbz9J
/xQbIfrDFN8YJfrXKH4xQfRfUmwaov87OfbIONGf6xTHNyaK/vqKb04W/cNO
cT0vp4j+lae4nzRhx3nak0YIu74o+8rpot96mv7JPlP011G8LkL0Dz7NerJt
luhffprrHS1snDmt1jND9H9U7Vu6RH/WM7SPFLbUOsP1eKS/PuAM2/+R+ZxL
zjB/hsp63SfPcL0bw0W/X423EPozn6X+7KLHVv0s1x8pehz9znI/Dpsm+iPP
sp6VFTaPqfbbhP1vaA+ZP1X0ZzjH+fzC9iqKF8p6jN7nuP7kwp75yq5LPH2m
4u5it8QqtowX/WnPc76FEm9npfPUn0fs7h60Bw2RfPHOIcd2E9YOK3sZGd/2
4jzHbzlJ9P9zgfV4suSPq8IFZRc2QxWbwn7XBY4XX/pbDyi7T+z2pxfo7wVi
N1Jd5H4eK/HwlL1Ie12Jn6/zRfr/mbBl5kWOV0vipUddpJ59ws5HbL9qtozn
Tn6J9fqA9PeWusT1nRTWOl5ifVwt8bFNu8T9HFfGc+wmhzrE7npwSdVL6W8m
8XL+McL+4l6eT7UR//Ze6hkodvtkL9fzUtZn7PByPLvYPXe9nN8u/X0JL7Ne
e6G/6GWOf0pYb3OZ40UKO8PZXnMg/7f9xzKf99Zl6ikF/fGv0D4E+7/wFY43
BvFvqexu6e8ad4Xn12Vhc/MV6v8r7L+h2meQ8axxrnJ/9ID+glfZHvvTaEa7
Vg36x1zleZYO8d9AXjVAxrdcU/0fyPr0P+SgxJJfzvzXaK8q+exufI37Kwz7
f+Q1jj9aWFtH+/kMyP/Lqn8H2R+On6q/b5zoz3Od60X9NRte5/pGC/uHK3t3
2X/W1de5Hy8I2y+SI5cKG9/IzlHCnpw3mI8zx4r+eje4vgIyv2Uo7UnTY/+v
uMHzGvXAee4G139A6of78w2Vr8Le7DG015bxtDoxtJcRtg2KYX5Vkvkdy2iP
OSDsOq36bxc2P8Rw//4r/vNnucnxEgtba95k+3fiH3v/m8zv18LG4pvc3yeh
/4Tq7xD2vVP8Q9iS6RbXtwn6q5HPm9Df9xb9cQn1b+Et+isl6l/0LcZ/ndi1
N7c4/kNhW/rb9H+MsKPybe6XQcKuXrfZvrCwOY8cEyTsP3KbepqLP62v1Hgn
xV/2oDuM/wpho+Id9h8p7Ol+h/5BfHyz7zC/KyH+h9heswrrz+/QH9vk+cCZ
+i73Z4sxor/8XZ4PUaNFf1dy0NaRot9Fjp0mbNt/V+W3jOd4cpf1q588j7hS
3qM9m7Q3yyi2Cfs73aO/4kp/64x7XN8Jsdv33uP8X2Q84yHY2ra22D3J7jOf
luL5p6TiI/I8ZXHc5/id5PlJn3qf448Xdu66T//+lucp9/37Kv9lfG/iB/Rv
A9kPWvEH3L/ThG3taA8tJv5zTHpAfwaL/1zbHzBek8Ru3nnA/V1d2J/Ax/zL
IGy1+bi+5dLf3pr2iLXCxgTaz3eS9p6tPvqnovjPd9PH+h8t67fEe0h9D6D/
34fM50XiL2eLh9T7Tdg99iHXnwv6N4GN6FOI/w1yUAPEX3vEfOkp/R0FyNEN
Ef+mj6gngbA5mnz+hqzHv161nyZ261XaP/cVtv9+xPWXlvmMfI85/1TEv9Fj
5kMfxH8E7SHzhS1rH9Pf/YV172P60wv9Px7TX0+gP/cT8g9hb4Mn9FcW6B/+
hOt7LXbbqifM9zhid1xQ9smI/9cn1HdP2MzxlBwh+eOvSw5qIWwdQo4dI2x3
P2V8nmH/n33K/C49TvR/esr8e436n+0Z/ZVX7Jbaz+ifGLHrA59xvo6of0tp
D1+E+nfqGevRFmHv+2eM12Y8/2V5Tv+gHttqPKc9Ac4/53P6f6Wwa9Fz+rsW
zr/jbJ9tLM6/t8/pv2nC1owvyGVR/6u+4PiVUP/7vOB4/VH/F7ygvtvQf/QF
9Q+D/tcv6E8T+tO95PgDxO7UX3I/txB29yQ3eiPsnfuS8fwprB15SX+HC9te
sn1Yd2FHmlf0Tx9hV8grjrdf2Oz2iuO1FvbPYvuYWFmf9eArdb6j/j9T/VG/
DUss9eLvNU+5WMZzkLCvC+1b90B/RCzz5xfOv32x1P8e8X/M/iENxb/uFK+5
voI4/0q/pr/x/KF1ek3/7sT5N121P4bzb4+yO3H++ZQ9HOdf0jdcL553/CXe
0H9Vha0d3tAf54TtU94wP18IGzvfcD3bEP97HC+2nbAv0VuenwOELcXeUn9t
6G/7lnqxHudExfuQ/x7VfgPy//Zb5sdM6E/wjuP3hP4i79i+LfS3Isd0gP7x
76jvBuK/hdwoBvGPecd8WipsjevnfGOF7YX8rBcdEf/mfuZHFcTf8NMfc5H/
G9m/USnE/zrtoRuF9b/sXxP56gx+z3xqKOxu8p750VnYO+o958svrK1/z/mK
CNuuKK4j7PilxgsVduX9wPV3hX47ObYv9Id94Pn3Cvm/hhyK/Wq/9IH5VAD1
7zv7B0Xh/Mv1kf5uIuyr/5H1opnUT8uwj4xXOrHrK1X75Xj+OU8OPij12f3l
I/1TBM+/1k9k/H2t1f3E9afE+T/4E8f7K/0dy9neuU3mc51R7Xvh/P/4if5J
ivqf9TPz+z3O/1qK1wnbB3xmfp0VNpZ8pr8aQ/9J2oOf4fz30x6xFZ//ZP7C
/bdaWK/+heO5ob/fF/ob55U78gvnvy527zH2P/9JWHv7hfl5UtiW4SvjG4Ln
vypfOd5cYVfvr/T/FWFz/lfqPyXsN9k+Ygme/2I5XmyMsD3tN/bfLGxU+kZ/
NxP29CAHf5Hz1zfnG9dXC88/h79xvsV4/nnxjfMdlM/XnP98pz+W4fmvwnf6
N66wN5Qcqglrs8gRo3H+H2D/mOEyvuPpd/prvrR3pfpBe3lhs+wP5lMiYX/n
Hxxv0FDRP/MH+7cWtkfRHtpF1ms8+kF/vxG7J/lPxquusK/UT+pvgOffjj+5
f5bK54/6NNV+4EDRv5vcdqDY3Q9+Uv9WYW+SX7Tfkc8rtRLk8FUyvq39L44/
XNgx+RfXFyns2qHse2V95t1f1Lta9PgT/qb/c4o/rEV/M/4L8PlnG2V/JP2N
8N8cj/q30R4zTdr7bil7R2FL/D/cjw+lvV74D+txMcS/Je2Rv8XuHveH50EV
Wb93s+pfU1iL+cP5YsQftjh/6a900F+QHJoJ+pv9Zb3KL2yOIcdmx+e/G/4y
XpOFrdf+0t8Fhe1/lL2cxMPIr8Ui31sKexqD3ZFdhX0jyc4pwpZ1YCO6rIyn
XwbrxZ8LO3+CrVtbCbvzxEH7oI3C3oZgM1sE9IeBHREW8ZdtNdgankrYcVHZ
G8t+cH3jeLH5hM2ccTHe+S+Ifz2wFrMA+T8UbG3bDvFfATZCWiL/z5FjlyL+
n8G+RiuR/9njYf7Q5sj/OvE4/mfoHxSP/ikoducy1b4C4n+aHDVM2PtB2ecK
a1njc/0+5H/N+BwvAfT3j8/2E4Rdi+PT/9OQ/ycUjxf2v2P/mtSfKQHn92D/
VwObn2ci//uCNS0I+hcm4PzDoT86AeM5VNjyJgHnm4P8T5+Q+RIL/ZUTMn4f
Ef9etNfch/jPA/vCzmP/mwkZ3+TQ/yoh4/FU7I6gRLAf7IL3HxUTcbxLwmZ3
2kNPS376ZyeinmLC1kOJmH8OqU/256r/c2EjdWK0LzgK+V8ebMy5IXZfV9qD
zyP/XWD94RfUv/1sH5Jf2PmE9l0Xpb87ZRL6fzrqXxmwb5VX7FrnJMzPq8K2
GWwfOlnYsTcJ/T1U2PWQ9ggN73+SJaW+XWL3l0zK8fcIWx1JmV9x5f2SfWpS
tf/k/ZOxi+0bZu8v+u+DHU/XC/sSJ8P64leT/pbiYH3abbHr7ZIxnq3F7pyU
jP6qInb3dnLMLZnPeycZ8+sO3n8lTE69NfqIflty6u3RVfS3Ts760lDer7km
JOf6EwibW1X7l/L+zn9Tta8rdmu8FMzH7L1E/78pGI9QsRstUjDfBsv7Os/Y
FMyfb8K+Tezftoisz3KD7UP+6Sf6tZTMpxXCzgIpac8E/U2VvSb0jwabK4Jl
fG1DSuoPg/6rKek/l9gdv1My39IJu/Klot7hwmajVFxvFunvH5FK7S+xW9em
4v7MI2z3Ki4r/jB+sH/wTWFPbgv1roP+Bhb664fYLcMVrxXWV1mYb25h5wVl
DxN2f6W90Xlhb47UXJ9b1qvVS831FBH/2Iak5nqqid3hVvZmwq6zqenfifI+
1fyUWp1P0J/tH/graYSwtfY/9M9maW8f+A/1bRM2lqr2I6S95xT5YUKx+96T
i8ci/lnScP8dFtZrpKG+6cJOp7LPlHxwL0rD8TYKe4+nUfUW+f8uDfWlkHyx
ZQwiLxB2VA1S+SjtXX3A5sevwuaCIOZPQmnvP8r2wbqw9XUQ11dI2J4uLfU+
EDb0tPRnKdm/np5pGc8Bwr65YK1pQez/I+TgXdj/L9m+kUfYmSYd+RXyP0Rx
Junv7ZaOeo6LXZudjvsjNeJ/MB3jk0DY8Yz9V7WFfkt6+qcS9JdLz/17Qtjf
hXbnJmFrRHqeX4nE//Z96an/DuL/mPbwgmL3pMjA9h8R/9IZuN/mid3SKQPj
W0Xs+vQMXP8bYeeeDBx/jLDbl4F6D+L9f9KMXO9wGU8rmZHzHxO2dchIf60W
dkwBa3FjhF07M3L8v8LmvYw8z48L+xNlon/myXzWYplUPUX+t83EejxG8tWY
CPblLI7892TiehYI+26zf+xL7P8EmZlvP6R+6kUysx7vw/5vlZnjL8f9h/Hk
4GvY/1uU/bmwdjMz8w/1xBY3C+tDYtS/Qll4fqEeuJpnoZ7UwqaRheO3xf7f
SHvIfdS/61mYD7VR//5mYX6lR/0Lzsr49UD9b5KV8c2G+jcKrHfqImxZn5V6
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
/0Tk/ybaYy8g/6+DHf/Ekfxz/CWHZhN2BddmvEy8/2lSm/vpB97/jqrN/TgA
7z/X1+b6YvH+50ptrqct8v8X2PE4Cb7/kbcO84PvP+3k8L2ofyPA2phoYX0N
7VsfoP5dAhvzMJ/7O7kS9Hlz1cX6vNXw/qsBuRHeT9mG1WV/7v+VYPfJ1Hj/
db4u872izG9+IUclxfs/az36Iwzvv+rWYz72hv7BYONwH7z/Ws722bbh/deZ
ehxvD+r/R7JFg/5s9aG3dTnor1Wf4zfF+98B9RmvTnj/v6Q+431T7N6T9Zk/
PfD+/319xj8H8j9zA8anFt7/VycHVUD+92vA8Ry4/xjZgOvvjPw/1oDjN0H+
v1X9CyP/MzTk+TUS3/+pQv7cW9jTuyHz64+wbz65+GfUv6MN6Z+32P+xDXle
1UT+p7Vz/C/Y/5XstM9A/vewM37VsP/nkkNHiz9sh1X/D8j/F3bWgwm4//BP
I9bDW7j/UKER178f+R/aiOuPRv7PasT8TAT9BxSXhf6n7J9tC/I/VWPOd1bY
V7Yx13df2NKlMef/ivo/szH3F8Z3Rqn2eaH/UWP6bzzufyRvQv0uxL80OXQz
9HdswnwCO6aRc/uhf3cT6s2E+vegCeOr4f5rkqb0X2Jha4mm3F9/8PzTnhw2
HfonN6W/eiL+O5pyv0Of725T5tMd6E/UjPXwE/QXbUY98aG/TTOurxj0h4P1
0hjPu43to8og/rebcT0O5H/85uzfGvlfuDnnY/63JAdT/zhlzwb9m5tzf8aF
/hhl7474x2lBfbi/YxRswfiFQ38zsJ4U7Buj2scg/zeS2z5G/l8jb+0A/X9a
UM9+6M/fkv3z4PxvTG67Cuf/qJb0fyHcf17XUu0fnH+XaS9eFOf/T2U/ifM/
Tyvac+H+U8NWzM+SuP8U1orx13D/fXUr5nsanH8XWzEeE3H+fVPj4Xzz5WyN
/KochPO/fmv6Pxr3n4e2Zj1/hP2/ojX98Rzn37nW3P/JcP/7s7Jvwv1naxv6
ew3012nD9svx/DOI9uK4L+5a1obnCdZvnm7D/MP9LP8H2qP7CFuztqX+cdBf
E6zFxfOU0b8t17MY+he3pT96Q/+Jtpy/LvT71Xh1cP5nasf5WkF/NcXroL8v
OWQP4r+wHfdTB8T/WDvu//W4//WmHfPnCuKfvj3bJ4D+ymDzNJ43zV7tmd8j
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
XXk/4LN85P46J2wp/5H+mIT3H10/8vweK+yM+Mj9vkvYvQ+snx0j70+8j2kv
Fwfv/1J+Yr4dxvufMp8Yz614/9npE+vZYbz/mU57thnyvsrc84n5eRTvv3y0
n08ldmuyz/Bvi0HC9pKfud9GyHhGh89c/wJhz5TP1J9E3q/5dn6m/mC8/7v/
mfGIj/d/ib9gvFOfZHxnsS9c30hZj7stWNvwTN6neSeC9eIx8r5Y2/6F8egt
bLujxpss7Ejwlf1nbBL9Rb5S3zKxm63AvssFhP3jwcbcW8LWrbQ3GiXvG+03
ybk+rxf9cb+xHj0S9hT6Rvt7YV/zb9TTVOa3jAU7olaKHn0T+wcdE3ZeZ/9V
D8V/7r+0R/8V/3iDv8PfhTPi/XfT72x/WfxlG/2d+ieI3bH+O+M7Wfq7rtDu
PIr4//rOeKWS+f15f9A/bfD+s9EPnjdpEf8RYH3nC2FjzQ/u1xjp77lErnlf
7L7v5MgOeP+Z+yfr/3yx6w1+0j/XEf9hP+m/TcLuleQfM0SP9/xPzlcR+r/+
ZD0qKWzL8QscXAP664L1jna8/x38i/F1CJvLwdatVaH/DNtPHSTxsn76xf20
FO9/s/2mf9+L3aj1m/vZBv0DfnO+Xnj/u4TtI4sKW06p9ucQ//dsn3SZjOfM
/If5HSnsrg52lPkg7O33h/E2hbVF5B9PhG3H/zBfrgo73v7h/jyF/M/wl/mA
+cwqf2k/h/zv/Zf+HI/8X/CX67kpbD/6l3rWCxuxf7me68KetNprcJCM76sE
dqRah/sfPcHWratx/2Muue1Z3P84DHY7awm7X4C14ErC3n/igFvUFf9pIWB9
Zz28/+8G9l028P5/Ftg8nxzxP6Ds8RH/p+RVb2S9/lRxuZ5LiH85sN7xrrC9
C+13fyL+M8Hums0R/yjw/y9M8t33KC71d0L+p4iH+RqZeP9fmrxqqLCzI9iI
PoH6Nw3siEiN9/+741F/Idkfmo/2VJeFbUnjQ2+9NcKOEuTzW7D/24M1Yxn2
/2SwnvSgsH8H2Fr4OOr/PdqnLsT+T5QA431GPTaKgt0Zk8p6PW3AvlzpoD+c
9sjs0O8BO0ITQ/9t2k9FQn/8hGw/HPoLJ6S+NLj/0TIh1xMsrI0HGyFpUf+2
kHtlE3bEgLUNQ4RdcRLBPrcg7n8UJB/6jvOvGdjtjyt2q0F2lsP9n42JVH7h
/s81sBaTAvd//iSiPzPh/MufmPHNLGxpkpj5EU9YHwV2RE2F/nW0b1gF/ZfJ
xgDUv5+JGc9WqH95k9B/H1D/7Emo/xfqXxh57ldh12qwY21e3P+4mIT5mEvu
B/m/gc32/YWtuZIiH8JzCtvrgx1ltgobQ5Oy/U5hz4qknK/2LtF/jvbza4Ut
X9g/Fey6NRn3z1FhZ51kXP82Gc89COybdUXYuwxs7XtKWDsD1lcES3/bx2T0
30qxO7Imx3ibmordVROspe8jbPYnm25h/+LkzM/1wtaTYF/nU8J2P8eL3S5s
ZEoBe1gyeV7zVEvB/bsYz399U7BeVMPzXyTYkTc19B9j/3I5of9NCq6niLA7
fUr4x5ND2Fs5JfMni7DWG6yfnQ3981Myn08LO8yUHD+JzO96lZLxSyefp5lB
qdA+7nRhf8VUrM8Nha09wPrDUrj/MicV9Q4UNg6lop7i+PzvOe2X4+L5P7WF
/fF8b6kANu8Xlb/H9VAL9VbB3/8ushYun++494Md38rg858nHK9nAnz+nSo1
7A1P4f1nWbA5GH/vOzrT/q01/v6fATba4X2VuZftS1bF598PwdYsyfD+I/k/
sC87h89/S/3D/XwCn385wEaVytLeMxWsvYzA51+72P7yP3j/8YDjHS6Gz/+T
pGF9j4/3H8XJl2Lx+Ve7NPRfXnz+PwmsDd0B/TtoL74Hn//fTcP9l0rGcyQM
wvyPN8l6XDbFfnz+1xpsrd5D9PgngB3PRuDz721BrMfQZ7/F/uV+QX+8tGx/
B59//5uW620M/S3Avh9vpL1lHNgY9xqf/20mB6XF5383OF7en9CvpYNeax28
/ylAHjpJWGsG9t3G+1HbmHSM50Ho35CO9Ti72F1X2f7HUmHzN9sn/3pM9OdL
z3y8ive/jcH6QNwfsI9MT71T8f53Ldvrn+V9rsebnvUuRO5L+H7Qrp2V9pY8
GXhe5pb7C3pDcuS/p0T/8AyMZ3y8/16VgeNtkPV4L2TgeZAZ93++kXWH9Lfl
zMj5TNx/qJeR843G/YchYLPeB2HTDdZ3hsr6/WfZ34gj67N+JuvThO3ZM3H8
FTKfUTsTz5Ng6B9Iu5lC7L6lmejfUnj/fToT9T0Vf+sfyAOL4/5HlszIh0/d
JD7uGuRH74W9zsxcz1m8/19MNmYL205kZnziQv87sLvVVrG7MmZhfuF9v1mV
fLI+4t8H7EudXti6kPaIOsL26CzMx3LCxmvay4yU9XnSZQX3WyLs07PSXzOE
Lb2ysr7uE9bnsX2oR8ZzHsnKeDWX9blfKo5A/NNko14r4l8xG/05RtjWPRv9
nUT875jN9noX8b/rINnsKHbzWTa134X9luyMZz5ha3mw+1ZC3H/pSvuzabj/
EkEOLY/478vO+UrKenyPVf/Zos+S0sr1ZRE9ehkr41MO9x86WannvbR3T7cy
Xrh/4d2j2jeF/occb3pi6E+Wg+1PSn9HyRz0nyns6gDWPzZG/KfkoD+uIP47
2T/0LOJ/X7W/iPgnzonxuk2V+BnFwJob8fS0zcl6eh7xn0guHAT929nerA39
d3Jy/Sb0J8jFerAZ8S+Si/VxGfS3In/KifyfkIv1bBTyfyv7O1sLO24qhv9c
cXOj/f7Dsh6zEFgfexv6m9Me1h71byzYmqcK7r9sArtPVRQ2rudmPc8t7PnL
9k9TCfuC8/B8joX+pmC35xb2/2iwUaIR8n892FrHj/hfYftqFuj/BdbWPBC7
li8vxr85XdjWCOz+ZwniPyIv2/+QeLjW0N7Fh/P/EtiInoj7D9/B5oB1OP9z
54N/WqTA++8GYEfjDHj/PQxsxpuN838luWou3H85z/ZtagpbvoJ9lZsL6zny
Q28ZjO+sC3bUxPsx92Dy93t4/lnO9uWSC2tnwcaprDj/P4F9o9Lg/X+2YOjV
t+H9fy2wtVtb6B8A1lu2gP4lYN/jcLz/PwU27jaA/vfkM8mhP3MB9B9cDfqr
gx0ftuD87wfWYlPi/d8isPt8G5z/x2lvu1rY+RZs+uEPd4aCmK8L9HirgHV/
L9z/7QN2X26A938LwOaSztB/FKxF3MX9p1ja496QfDDTFkL/8fWE/ZXAZqNy
wtaeYOuTq7j/NpecP7PYjcNgvdZnsXtecLwxFcTu++df2F/dwfNfCNiXNFjs
ejdyNO6HOGeBtSY2YfcB2jNbhL1Pyaur4PnHUhj+KVcK91/KgR099uD5pwtY
K5UF972iwOYztPc/AvvO4XnLmqII+r9fj3iXBvtyI3+MjmC9zyW8750GNofj
foqe1Ab7zO24z1ECbExMhPsc7cHW+NNwn2My7T9xX13bCXZfrYD3effIZjo8
zycqiv6bVuE+R1GwvuQ9nmfb0L6+HZ5nw8Haws5it3rYft8svM++DTaXTxc2
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
F4d+xdaybPxeMEbje9KzX3ZTUz3fsRK3rmFnexx+L0nQjOPz5xGHm2B7yhL5
fOM3bE7fS74h7Kx4Q77/aPmjBcg37q/Ul6IX+0N/VJ95x/7Qhtj93J98R2Dz
6QjyXYedZgd5Pn5Rj+/xiOfjsZrTPxp1Jt882NyXg/aur77B82zLwc7q1jwf
Xo3da0+kv7nnNF79I/PbZ63/4D2xkcumvsvsh4yuo94Tn+8fg7E/qxrPh1dg
Z1EWno+fwdYEnv9GPmjcjkP/zt6C65f0Hs+HY7B1LCX9ewD2pk+jf5/CZprK
/B72Tr14Oflma0n7ty7B70HVsZW0Ac/D+2K3Ri+eB/+u5YeO5PvWSS1f8CLP
w99ofN958jVb8XknDH4Pq4Kt6Lfk20vdshrtvRB7f3G8eUyPr0N+MS+xH2s6
z8MztubzvszheXhF7DRazfPw7tisuk0cNR97v7zh94Aj2P79Ae0dUcfn9wE3
fRuOL9+E/bDl2+h4xH5ao1sbnV9+pL/PwfbDivTvJ+oSFv07bVvqi5uN+7kM
NlrVpH93Vv+bnf49EzunM9G/PfWWxvTvh+p4z9n/mrod1/NjU+nvUaWxXz21
/D5qdcD2xFHiwDQtX+ut3P/uHvXT+RIP39PyK7uKjZTtOb+p/N4aXRL7r6fK
fnO7rcYTD5B4MIi9H3pI3NuJzdTdxJHb6moPxOZXHSj/xzNxTLEOOl63ZP97
K2xPDotDE7FTv53sh/e3YXP1D7KfPuomdouVlb8nYCXtiPsvk3jgJ2zMbSZx
18bWm13s/x/XUceDY+z/36Llv0so+/ujr2t8TjGxnagTx8ffxv7/gtielULs
NcNmh/jiyGjsWjXk7weYGzWeopz8vYWYq9grPVzsxO/M9d4+VRyKVjf8Rv5e
g99YXau6OGoUdnKkEFsb1INuyPGBy+q/t/D3H+J04fN6z+fvP/ygrtBSzs9o
qB7dh79/MLyLXq+aUp+9FjuFVouDF9Qj/pL6PKMr+d4ZKI7kxn7H6WKznrr4
fXHMUOwVC4qdVdg4v1ocOqvl224k/09aPuEG8s/ZjfITe5J/7W46Pl8h/0HY
6/S32F2O3XfjxeEwtsZnl+OND1pf6R3i6O8DuNZmsV0T+4Wei4P9sX0j3znJ
fwn2ypS+IPn/pc5SQWz+h93FRS9K/lm7c3yB78RONeyeqiPlQ32wlfea2Hex
szKllI86oc52VuLWay2/a5HEA5l7EB/942XJv7J6bb5/JP+e2Eg6QGws1Pie
BOLoP7F/beUVyf8FtjMaVyX/b3tyfLaZYq8Cdpyb1yX/ALbGxfIl/3nqGwP+
lfwPY69AXok7z7S+8wVuSP7pehEfv/CW5F8OWxmui6O6YmPSE7E1G7s7L9+U
/A9oPHdSqd99jM0VlaX+cJrexKfFExtlsH27itQX3Qn7y4dL3J6h5e2MUn9w
H3ZvdZW49wA7s/qKI6n64LSppLz5MzbuJZV4THvspflXroczFdsxf8r1C+3G
7uEeYv8u9ifkE0el6Mv1ODJR8rNKYDdpW4kH2vTV8WDGNcl/srrNBImHd+jx
M0qT/2315p1SX3TyflyvtlukvF0U+2+GSTzYEluDE5D/BOzMjCv5Rrbq8bXT
k/8NjXfrII5J0p/4nllyvZ3C2H4zVeKh5hrP9eC25D8Wu/dO3pX8N2Ov4Oc7
kv+/2AoXuif5JxxA+QN1xW6BAdred+X4cFP1ngMSN0Zj+8omcfQfenyxvmL7
Cvb7/fhA8o83kPPL30Ls5VPb6x9K/o2wverfR5L/SOztS/VY8l+P/bn95Hjn
krreaTm/UOxBHN+8/H3JPy822lYWRzXA5hlLzs8api77QY4PrMHOLUuuj3se
e3e2SPnwl//F25F/7sE6H+SS84mui42pLvkPwW7nteLgSmzWCYq9v7FlX5bz
i3zU8scvic0cQ4gbDeX6xNTC3ph1cn2cgdjNtEMcWobt15nlevmnsVmi3hPJ
/72WH1pEbH03lOvXLUaOD9TARtdiYrcfdkcmEht/YStTWOqPfjtU8/8itrM4
OO57KR+siu0ZntjrjY2NfF5kEfYzt6S9j2MzTTW5njGvsPuysuTvZBrG59ft
RL6Vhul48ZvY74Htwi3lfKIWYC9wUmwdxW7JV+LAc2zEvSx2Mwwnvj6pXJ/w
L8N1vrwucSOA/WSzyH+uxrenkfL2IY13GCTx4FP17enk/80IzudWcYlHymL7
fk+x2UU9t6HUFzNLvTen2NmPrWoVxKFH2Mx6+6nk//VIPq/jV88kfwsbWedJ
3OqInTwlxYHp6tVnpT53L/aOpZTzDd/H7n1t/1SjKL+5kDi6FHZ7FxHb7bDd
fpC0V3AKNlJ0kP7s7VJvqUt/v4OtbD3p71G/cfzSI7R/cewf3k/7t8Zmk3Xi
0CRsXYhIeX+7et48OR8r2Wg+LzMOFMHmuk20d4vROh81lfrC47F3Jh3tvVXj
1y6Qr4/9nwP098RjdH44QHsXGqPjY1Kx9yu2/US09xjstR9Af9+E3aVh7u9r
Wr7jPhkfnARjqe/lCbk+ofzYzFRe4n4T7NVdyvj+m8abHJXx3wphe31VGc8C
/6gzzJb5w407juu1LbM4/OM47a8nmN8aYXPQzzcl/xHYS7+E+W0ddj41l7gX
azzxOWfFkTzYLZVB6jfrY/PDYuZzB/vP97CeWa3Hjx/FeuacHt/prdj/rC62
QRyVawLX585w+TyrDrYTfBEHBmNvWn6xu0J9nc8Pn8HO/XXk+1HjbbuIo7NP
5HyLFSffGGwneS/x4ADsDHvEfL4UGx0+s545hd0vNcXmO62vbxo5n5hsk/DU
6XJ9nOrYqbNBHOqLrRl3pLz/O3YnDRRHncRG9Cmp33qj5f1+4oA5mfrTvWM9
VwVb+9exnumFfZ/1krEI214X1jPHtPz2+KznXmp9BVlPBTMGuV6NOsp6zKsY
1PEzixwf6Y7N+ZdYz87Hfn7ON+YIdkbvpf0j6oSWOJR+CvU/ssV+eWxsuCWO
6oadx9XJf84Und8DEg8cxO5+1nvuE40vuSoOp51KPJBAbJTFdrIG5N8Ze6mw
PVPLl5jBes7T8lt/FHsP1VM+s55PPY3zfUj9ZmlsXZzEer4Dtt83kfLONGzm
Zn0b2oOd7jvE/j3s/ZdIHJVyOvVVfyffJ6yS2P6+FevZtthft0zsBqfrfN6c
9t+JnTth8r+j8YYHyP+rGcQnp5L+aBfD7obO0v+CrbBXm/WoNxEb67uKI9uw
NTMJ9/9Njb/ILuNTTNKZxPN9I3Z+Ui/oSP+3sfPLVvk8fxz2fy8l8agt2J61
VGxdV8+9KvUFEs3i8w6VZD1XEFt3WojDzTTeq7mMn8YYdXHWx9Eb1VuXSNy+
it0jUyQejD8bJ9kicS8a2+X/Ekcaz9b5q47YHKXlY1NfzAbsHKkidi7r8cMb
iv0f5nC+fx+X8T6qIbYrFpL5wBqu8Swe6/e1c3T8Li5x9wI2E05k/WrMpXyj
Xaxf82Aj5zP5vOh62J46nfXrUPWJe6xfV2n59nxe5JO67/diM+c88pt+WBxT
G/uvc8r5OIOwWS7EfLYcOz8UY70exl7NIOv1D9h++ZPM79b38zl+DecbqKlO
P13s9sdOb9bz4SXY6lmD9j2Ffas2+f6HvbGdaN+sC4gP30L7VsPusj20bx+N
vxtH/i42bjAfmyfUPQqT/2ts9eX6O5kXcvyeXOJQZeyuGyKf5/fEdqWJ0n+j
FmIjXny+r/2JzddXmM9fYOe7PlLe/XYRx+e5KA5XwNa7jFLe6K7xEwno3/Ow
n6iAlLcPa/x5FXHwGTaqxJHyXjqXz79ZjPzLYW9pb/Lvip3Zvch/NraD9Bfn
APab96D9H6tT7pb1j5/md65H9GBxVJnftX9PErv7NP4t3y/CD7AxohLr09SL
iX84x3rtZ+xkfsD6tD323zyX9W5wKjYCi8Tebmz+e0gcuavlm5WR9bKZYgnl
e98Ux5RQf58vIvm1wW7ojMRDk5fo59+R+vwd6tMX+D52G5uvevJ9LPlS8o2K
I+v3QFF1+QZSn9sS+8tOyXoyPAHbN67L8cY27FUdK+Wjb2Dz3S2+nyRZhvvP
Jf/C2P31IPk3Vz/MIJ8fGYuN1L+S/2bsV3nI95N/tb5CXC8n4XLOZ/1ivp8U
wN7FwXw/aarx3t/K9Yoaja2jdcTWH9itslkcuIKNlPvlfNx4K/j8vtnF4XzY
yTVDbDTGdr1O4uiRGt9iiYOXsPelF/nGXkn5D7lZn+fFxpb6fB9roP6zNs8f
hqlrxSa/89js9Jrvn1+wO3aJOCr3KvJrfovvn3WxfXmo9OfAEGx0OUX/Xon9
sS34PvK3Hn9rJt9HPmn8akK+f+ZYzefViuH7SC3sTJvD9++B2Np3S+rzlmF/
8Wru39PYPJWS71/vNR64y/373Rpc+DPjdw3svRjB/dsP2815nuEv1njpTsxX
f2Hz7Dmet7zV8o3nyPGBLGs53/dled5UFfvj/2b87o29zImYr1yNDxrP86bj
2Dp9g/H71Vodr8PiYKZ1xFu9Y/yuhP39w5ife2h8C8+zzAXrdP75m/yPYnPb
PPJ/jo2f4sh8FMqwnvL/nGX++kU9YgLzVwCbvzZg/pqLrXRtma8PYbvoL+T/
FPsnGV/D32zg+tT7j/mrHDYyViP/Lth+kpP5eha2xp0i30fYr2WT79chzu9t
YhnPTQs7l4ayHuuI3aNvbkm+0zXedLzEQ3tDej3T8XzxPvZr72K+SvUH9bdo
zHxVCrt5X7Aea/eH3j8fmK+mYDN2DtZju7CdMiHz1V3sLJ/M/FR8I59vc77B
1tip8lHsTcL2x8M3Jd/t2P/zOuvvW9iN9wvfP5JtwuNKiJ0i2B+RS44PtcB2
nV5if7y6+Ha+f27V8usTSNzysXG4rTiQeDOeM0nsFlIX/0sc/hWb37wSG2Ox
U6q6OHoT9uq84/vXNS0f7Un7BBNswbGqkn9+7H7dUBxpom4wj/b+TT3oE+0d
wtac0RJ3/tH6epo8T427lfMpxvrZ/xFbVe/S3o2wX2w5zxtGqHeeoL3XYfdC
D9o31jbqe9hZ4kZebLYbLflE11ff5PuE7WDvTUiuR3A1treeF3vnsN/8V9r7
M7Z+Wyg2c22nfPVxtHcdbHSLR/8evF2vRy5xaIU6nEDsn8HetTzk+1Hri+J5
ipV9B+UndmU9FoP95Lvp3wOwPfKd1Bdeis14P4uN0xofnIz832Hr6/1y/na2
nZxvzny0d3Xs/7KI9u6LzVZZJR75HXuzX5P/SWyXTSfxmDdaXxKD/M1deFdE
yoeqYKvsd+TfS518sThqkZZ/91BsHcPOnxbt/RL7Uboezbib+EKuX7gi9pe9
Iv8e+P8XpBKPnq/lzzKe2EfU+QawHo/s1vluDuvR9Hs4v58XiyPlsVv0Mf29
m8bXsd6OmYPNurlZjx7E9plvWI8/0fItm/D9K+1e4hvH8nytLDarLxBbnbFb
x+X7yExsda/P9xEP+3sDzGcPsZO6FuPb1/son6g86/HS2DlXQGx3wO6YnYx3
07B54hHtvwfb417Q/vewsX2q2EzpUf5DfO73kti5OpL2b4u9z0fp/0HsZtf2
voP96TVo76/2U75RNO3bCpvpOtG+E7E9oDTtu13jewL075vYrV+W+zvpAeLT
y9G/f8L26nM3JT8b+22+Ir9xGq83mPy2YHfCFSkfc13rG7xP7CQ6SL5TwuJQ
QeyPYfz1m2E3+RJx1BiNO9+T70Zs5s0i8cBV7NVeI+OJG/8Q9R+axPPEaOwN
WcHzlCbY3XhOntdEj9L43Jlie4Men2Ow/N4YvIztmk/leU7kh8OcT+c5YrMh
9tL0kvIxww9rey+XuLMWm3M6Szx0ATtz+0rcN45QX+5BEo/Ko76cj+dH9dSZ
zooDQ7F7qSC/h67C1oku4vDZIzo+TZXyxmd1z2vi6JxHySf+A7Fd+6iON8n5
PXwQ9tcW4ffw5Uf1/p5F/mHs7PhXPs/8gM2OjeT5Vcz3f3J83qUSd2pia8l8
8u+P7WS3yH8JdkcmIf9T2Nv7g9j6Dzu3J0r7BLIeo744hcm/2jFt79nk3wd7
9daIjd/V1+uS/wlstPF4H+C11neuqjiY+Tj17Uwv7x94lbGR9fN5yb8nthJX
kPclzIXYbbJOHPOnHp/uW7HzAptJevE+yLcnKH827VnJvwL2550TR3XHxoe7
crw1D1u39ko8cBjbK46K3WcaTzhLyofTneT4JxPERnlsjr8sju6Knf1lxMED
2Gs7QerzHmP3yHref0nzl87vvO9ilsHWvxd4/6UTNvpv4v2XGdhLXl7qC+3D
7sNvyPeBHp9W8019ivIbfiPfn9WhH+R6B9pj85tcYncqdj90Id/d6jEvpD7j
Hna6dhVHpzjN8UMai+0S6ld7xME22H1RlvdfJmPj7BNxZId65mra+zb2Oq+W
84lJHsY3l8r7K05R7I7LKv0n1BKb8cfz/ssEbNedLY7aho3/Nkp91g2tr3xB
iQeSnOF6Ve8h8XBz7D6oKvUb49SVfxJHb8b+sLRi+19sJDoo9QUT/q330w6x
VwDb13vyvk9T7AVP877PaPWJh+KYP7BRKzX5XlGPHsj7PvHO8vkjyM/Ph91H
U8i3MbbuNZPzs0Zi58RE8l2PvWhb4u4lra/sIXE49jmuZ/1u5NsAGzm2ke8w
7NxfJw6uwXa/0tzP59XvrpLvFz2+/N/km/s89R9PRvvWVa/cz/08BLuJnolD
K9XGebH/t7rNG3HUJ2xsKUT75rhAvOs7iQdqYWfJz2J34AWdXyZJ/wwvw8aL
ifTvMLa9S/Tv91p+eiH693cXOd92c+nfNbCXvTj3dz/sNFsqdrJcor59Fbhf
q2IrzPtvfm+NH97O+2ruJb3fT3C/Hsded598XmEnKpr7NdNljj+wlv5bSb04
hvGpJ3bPbSKfBep7PTj/5+p5y8WRX/7h+Fz7GY8C6ttLGI/mYjfPOcajQ9gf
Mo3x9yk2Fzckv2+ucP7ZVpJfOWx/Gcr7eF2w/2Ih/49qFnY28f6hux9bsxLT
Xo+wUTQW7ZXm6v/6H/lZ2OzK+Gl3xMYsj/fxpl/V6/mZ9xH3ajzFGPK/j52R
+8VmqmuUj5oljimFzWIvyL8dNqqnpH2nYOdIEsbjXVr+T8bvqLvqfbyvaEX9
iy+vIP/i2FmP3dbY6nKd9zEnYfsY84exAxuxqS/6lpZvm5T+muw653+B8w0W
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
V7+qDcYvcyx2zmQj/03YPsbvL841jX9bmvwTJOPzardhvMqP/cnjGa+aYvPk
74xXv2n5gYyngRA2rJVi9x/sTFgkDsdNjstu5PedfNguNJb5qhH2qpZnvB6B
jY/9Ga/XYWvfEsbri+qmk/h9J9ZXeH0tft/Ki930TcUx9bHfivHZcbD5+SPj
9Wr1+NPkfw476TeT/xeNJ9X8c0VxflX2k38d7J7m9zN3sMZ/4veq8ApsGdPJ
/2/16Mbk/1GPv1WF9Ur2FJzvluJy/wZjsFNoOvf/AOwtYDyILMXG0dbc/6ex
9UMT7v932J52XOxkS8nn1e3L+Fcd263qMP71VR9ox/i3WJ11AuPfSfVqHHij
9c1uynxlpsLdBzJfV8H2xz8Y/3pjM00Oxr9F6ucW498xddty5P8Se1NLkn/G
1ORXMSP5V1R3vyLjpdkD+yXzkf987Jz6gfyPYKNMFfKPaPmpucg//dd8/pWJ
Ul/UL+qBQ8m/G3ZirST/OditFJ/1ykFsZNzL+P8E+/sekP83aTi+603yL5tG
P89lvuuM/YSjmK9navnXrF89T92f8T7yUI9f94n2/zqtjg9vyb80NvK8JP8O
2O67hfynYa/PYvLfg83hzM9Wym84n+NFWZ+V/Eb7bzPybaveoeuzIHY3VGJ9
ugsbWQ+wv/mO1rfsOvl+lY7Pz3KUfIth935h5vtW2PnC752RidiqhM3tWr7t
Hub7m9j/BztJ0+MBCcWhn7D9+R352th4moP1ynh1qWqsV7Zo+WNVyf+6+sIQ
+nuiDHiNz/qsIHan7CD/X7G5/hPfT8Zg79d9jHcbsRXh9+PgVT3+SzTjffxv
OZ+ko5nvorE5cSHvozXB9m3eT4sZpeUfjWY/zAbsL23GfpjLWr7YavbDxMlI
+Qcn2Q/zo7rS3+xvboitvn+xH2Y4NntfZD/MWuxcuMN+mAt6/JVHvL8QKxPx
Ia/ZD5IHm9my8z5aPWwlSMl+qKEa//pH9kOtyqTzE/vHI2ex4RxlP9RndeEi
NyX/nJk5fnlWsVMbu3EyiEODsDXvLvvBlmPvySzexzuDjRMX2Q/0QX1yL/uh
vjcpX+VP3t+oqV5ym/c3+mM3dIv9YEux1bOefH70KXXiWGL7P+zkpXwwaxbO
f20BiXvV1KsGiyN9sH+V9wnN37G9Px/5n8DG1oTk/1rtzib/zFlxTEDsV86q
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
/u2lXtqF+3chtoY35P79Eztx49O+L7CRuhbz1bc1Of8lT8m/Ivb/TU/+3bGT
6A/yn4etxh79+zA2T/dl//ozPb5qkP3N6WOwXZr9zeXVoXLk31X9e3/2N8/G
zpVk/P24xxovPlFspq1FPN4Z7tcy2HpUVOpzOmEzw3fcrzOwt7QX9+s+7O4t
T36pa1Pf25KMR+2xv7If7TkVm//0pj33YG/GM/rrPT1+P+sBO0Ud6q9F/w6W
wGZ4r9hrg71VT1hvTcZGvby0505shxjvYm5r+TrHWU+1rEv9KXS//UTsl46w
vtiGnWLlGW9vYCtHO/IpXI/6kgS4/2zszytMPuM0/s0a8tms8Tr3yOdf9ULW
N17C+pzv+DD9swA2PP5+mtkMW0s2kc9o7D3Zz/elP9TeLNZTV7BZNAPjT7wG
1Ne2HPlGY3vfBMafxho/VI/xZyR2I4cZf9Zjp76uJy5hazXreyNOQ+Iv+zO/
/oDNkK4nGmD7Yk7G32HYrcP4563Bfjr+3kHkvNa3synjr9GI45uOYfzNjY1z
sVlP1MXelcOsp4Zo+eQTxf5K7DfJJY46q+V9XU990vIF3pB/jsZ8/puT5F9L
vYl8wgOx9+0n8l+OjduDXkj+YS1fbafYfq/x5FvEwe+aEC+zVOzVwG711i8l
/37YDhd7Lfkv0fIzr4tj/sJ+41JvJP+3enyRERIPZWmKaxeQuF8VO6NxVB9s
Vrwv5S0X2116SzxwXD1xt9h9hf0Fid9K/pmakX/+JP9J/pWxMb2kOLqneuwZ
KW8vwE73heLgUY1nLC/2nmu8QB75vEiGX7X/bZS4WQE780xxTEDj8y+Lnbka
P7FGHDqkjqwV+0+xn76tOCpdc/If3kRslcNuk1Ry/oEu2HqcUezOws6BG+Lw
fmz/NZT8H+vxJVuRfxqb6/NjIfK3sBseQ/4dsblgv5T3pmv5yv3Fkb3Yz3pe
bD7AVoE14phULYiXiH4n+ZdSL3soDrVroeeX7L3kPwWbF47K8VG7sfdra/K/
i43Vc8WBqJa4yVmxWxybfkHavzX2x6yV9jImY7fCLYlH78Bev/zyefYtLZ+o
Kvkna0X9Z1PQ/kWw3ed7caQF9sockPrNCVp+VFLafyt2Ht+i//sar56G9k/c
ms/zd9P+hbDzOor8m2v8emyxNVbjKXFgk8bvv6X9r2GrwlDOL25bzm9vkP6Z
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
sXlnO+PXb9jqkfWz5B/S+F8LPlv/B9C0mBo=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.5343648*^9, 3.9686976*^9}, {0, 125404.8203125}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
          Rational[1000, 3]}, "Axes" -> {False, False}, "LabelStyle" -> {}, 
        "AspectRatio" -> Rational[1, 3], "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5343648*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DefaultBaseStyle->{"PlotGraphics", "Graphics"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{All, All}, {
     Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}], 
     Charting`DateTicksFunction[All, DateTicksFormat -> {Automatic}]}},
  FrameTicksStyle->Directive[{16}],
  GridLines->{{
    3.4712928*^9, 3.4739712*^9, 3.4763904*^9, 3.4790688*^9, 3.4816608*^9, 
     3.4843392*^9, 3.4869312*^9, 3.4896096*^9, 3.492288*^9, 3.49488*^9, 
     3.4975584*^9, 3.5001504*^9, 3.5028288*^9, 3.5055072*^9, 3.5079264*^9, 
     3.5106048*^9, 3.5131968*^9, 3.5158752*^9, 3.5184672*^9, 3.5211456*^9, 
     3.523824*^9, 3.526416*^9, 3.5290944*^9, 3.5316864*^9, 3.5343648*^9, 
     3.5370432*^9, 3.5395488*^9, 3.5422272*^9, 3.5448192*^9, 3.5474976*^9, 
     3.5500896*^9, 3.552768*^9, 3.5554464*^9, 3.5580384*^9, 3.5607168*^9, 
     3.5633088*^9, 3.5659872*^9, 3.5686656*^9, 3.5710848*^9, 3.5737632*^9, 
     3.5763552*^9, 3.5790336*^9, 3.5816256*^9, 3.584304*^9, 3.5869824*^9, 
     3.5895744*^9, 3.5922528*^9, 3.5948448*^9, 3.5975232*^9, 3.6002016*^9, 
     3.6026208*^9, 3.6052992*^9, 3.6078912*^9, 3.6105696*^9, 3.6131616*^9, 
     3.61584*^9, 3.6185184*^9, 3.6211104*^9, 3.6237888*^9, 3.6263808*^9, 
     3.6290592*^9, 3.6317376*^9, 3.6341568*^9, 3.6368352*^9, 3.6394272*^9, 
     3.6421056*^9, 3.6446976*^9, 3.647376*^9, 3.6500544*^9, 3.6526464*^9, 
     3.6553248*^9, 3.6579168*^9, 3.6605952*^9, 3.6632736*^9, 3.6657792*^9, 
     3.6684576*^9, 3.6710496*^9, 3.673728*^9, 3.67632*^9, 3.6789984*^9, 
     3.6816768*^9, 3.6842688*^9, 3.6869472*^9, 3.6895392*^9, 3.6922176*^9, 
     3.694896*^9, 3.6973152*^9, 3.6999936*^9, 3.7025856*^9, 3.705264*^9, 
     3.707856*^9, 3.7105344*^9, 3.7132128*^9, 3.7158048*^9, 3.7184832*^9, 
     3.7210752*^9, 3.7237536*^9, 3.726432*^9, 3.7288512*^9, 3.7315296*^9, 
     3.7341216*^9, 3.7368*^9, 3.739392*^9, 3.7420704*^9, 3.7447488*^9, 
     3.7473408*^9, 3.7500192*^9, 3.7526112*^9, 3.7552896*^9, 3.757968*^9, 
     3.7603872*^9, 3.7630656*^9, 3.7656576*^9, 3.768336*^9, 3.770928*^9, 
     3.7736064*^9, 3.7762848*^9, 3.7788768*^9, 3.7815552*^9, 3.7841472*^9, 
     3.7868256*^9, 3.789504*^9, 3.7920096*^9, 3.794688*^9, 3.79728*^9, 
     3.7999584*^9, 3.8025504*^9, 3.8052288*^9, 3.8079072*^9, 3.8104992*^9, 
     3.8131776*^9, 3.8157696*^9, 3.818448*^9, 3.8211264*^9, 3.8235456*^9, 
     3.826224*^9, 3.828816*^9, 3.8314944*^9, 3.8340864*^9, 3.8367648*^9, 
     3.8394432*^9, 3.8420352*^9, 3.8447136*^9, 3.8473056*^9, 3.849984*^9, 
     3.8526624*^9, 3.8550816*^9, 3.85776*^9, 3.860352*^9, 3.8630304*^9, 
     3.8656224*^9, 3.8683008*^9, 3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 
     3.8788416*^9, 3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 
     3.891888*^9, 3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 
     3.9051072*^9, 3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 
     3.91824*^9, 3.9209184*^9, 3.9235104*^9, 3.9261888*^9, 3.9287808*^9, 
     3.9314592*^9, 3.9341376*^9, 3.9367296*^9, 3.939408*^9, 3.942*^9, 
     3.9446784*^9, 3.9473568*^9, 3.949776*^9, 3.9524544*^9, 3.9550464*^9, 
     3.9577248*^9, 3.9603168*^9, 3.9629952*^9, 3.9656736*^9, 3.9682656*^9, 
     3.970944*^9, 3.973536*^9, 3.9762144*^9, 3.9788928*^9, 3.981312*^9, 
     3.9839904*^9, 3.9865824*^9, 3.9892608*^9, 3.9918528*^9, 3.9945312*^9, 
     3.9972096*^9, 3.9998016*^9, 4.00248*^9, 4.005072*^9, 4.0077504*^9, 
     4.0104288*^9, 4.012848*^9, 4.0155264*^9, 4.0181184*^9, 4.0207968*^9, 
     4.0233888*^9, 4.0260672*^9, 4.0287456*^9, 4.0313376*^9, 4.034016*^9, 
     4.036608*^9, 4.0392864*^9, 4.0419648*^9, 4.0444704*^9, 4.0471488*^9, 
     4.0497408*^9, 4.0524192*^9, 4.0550112*^9, 4.0576896*^9, 4.060368*^9, 
     4.06296*^9, 4.0656384*^9, 4.0682304*^9, 4.0709088*^9, 4.0735872*^9, 
     4.0760064*^9, 4.0786848*^9, 4.0812768*^9, 4.0839552*^9, 4.0865472*^9, 
     4.0892256*^9, 4.091904*^9, 4.094496*^9, 4.0971744*^9, 4.0997664*^9, 
     4.1024448*^9, {3.4712928*^9, 
      Thickness[Large]}, {3.5028288*^9, 
      Thickness[Large]}, {3.5343648*^9, 
      Thickness[Large]}, {3.5659872*^9, 
      Thickness[Large]}, {3.5975232*^9, 
      Thickness[Large]}, {3.6290592*^9, 
      Thickness[Large]}, {3.6605952*^9, 
      Thickness[Large]}, {3.6922176*^9, 
      Thickness[Large]}, {3.7237536*^9, 
      Thickness[Large]}, {3.7552896*^9, 
      Thickness[Large]}, {3.7868256*^9, 
      Thickness[Large]}, {3.818448*^9, 
      Thickness[Large]}, {3.849984*^9, 
      Thickness[Large]}, {3.88152*^9, 
      Thickness[Large]}, {3.913056*^9, 
      Thickness[Large]}, {3.9446784*^9, 
      Thickness[Large]}, {3.9762144*^9, 
      Thickness[Large]}, {4.0077504*^9, 
      Thickness[Large]}, {4.0392864*^9, 
      Thickness[Large]}, {4.0709088*^9, 
      Thickness[Large]}, {4.1024448*^9, 
      Thickness[Large]}}, {
    0, 5000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 
     55000, 60000, 65000, 70000, 75000, 80000, 85000, 90000, 95000, 100000, 
     105000, 110000, 115000, 120000, 125000, 130000, 135000, 140000, 145000, 
     150000, 155000, 160000, 165000, 170000, 175000, 180000, 185000, 190000, 
     195000, 200000, 205000, 210000, 215000, 220000, 225000, 230000, 235000, 
     240000, 245000, 250000, 255000, 260000, 265000, 270000, 275000, 280000, 
     285000, 290000, 295000, 300000, 305000, 310000, 315000, 320000, 325000, 
     330000, 335000, 340000, 345000, 350000, 355000, 360000, 365000, 370000, 
     375000, 380000, 385000, 390000, 395000, 400000, 405000, 410000, 415000, 
     420000, 425000, 430000, 435000, 440000, 445000, 450000, 455000, 460000, 
     465000, 470000, 475000, 480000, 485000, 490000, 495000, 500000, 505000, 
     510000, 515000, 520000, 525000, 530000, 535000, 540000, 545000, 550000, 
     555000, 560000, 565000, 570000, 575000, 580000, 585000, 590000, 595000, 
     600000, 605000, 610000, 615000, 620000, 625000, 630000, 635000, 640000, 
     645000, 650000, 655000, 660000, 665000, 670000, 675000, 680000, 685000, 
     690000, 695000, 700000, 705000, 710000, 715000, 720000, 725000, 730000, 
     735000, 740000, 745000, 750000, 755000, 760000, 765000, 770000, 775000, 
     780000, 785000, 790000, 795000, 800000, 805000, 810000, 815000, 820000, 
     825000, 830000, 835000, 840000, 845000, 850000, 855000, 860000, 865000, 
     870000, 875000, 880000, 885000, 890000, 895000, 900000, 905000, 910000, 
     915000, 920000, 925000, 930000, 935000, 940000, 945000, 950000, 955000, 
     960000, 965000, 970000, 975000, 980000, 985000, 990000, 995000, 
     1000000, {0, 
      Thickness[Large]}, {20000, 
      Thickness[Large]}, {40000, 
      Thickness[Large]}, {60000, 
      Thickness[Large]}, {80000, 
      Thickness[Large]}, {100000, 
      Thickness[Large]}, {120000, 
      Thickness[Large]}, {140000, 
      Thickness[Large]}, {160000, 
      Thickness[Large]}, {180000, 
      Thickness[Large]}, {200000, 
      Thickness[Large]}, {220000, 
      Thickness[Large]}, {240000, 
      Thickness[Large]}, {260000, 
      Thickness[Large]}, {280000, 
      Thickness[Large]}, {300000, 
      Thickness[Large]}, {320000, 
      Thickness[Large]}, {340000, 
      Thickness[Large]}, {360000, 
      Thickness[Large]}, {380000, 
      Thickness[Large]}, {400000, 
      Thickness[Large]}, {420000, 
      Thickness[Large]}, {440000, 
      Thickness[Large]}, {460000, 
      Thickness[Large]}, {480000, 
      Thickness[Large]}, {500000, 
      Thickness[Large]}, {520000, 
      Thickness[Large]}, {540000, 
      Thickness[Large]}, {560000, 
      Thickness[Large]}, {580000, 
      Thickness[Large]}, {600000, 
      Thickness[Large]}, {620000, 
      Thickness[Large]}, {640000, 
      Thickness[Large]}, {660000, 
      Thickness[Large]}, {680000, 
      Thickness[Large]}, {700000, 
      Thickness[Large]}, {720000, 
      Thickness[Large]}, {740000, 
      Thickness[Large]}, {760000, 
      Thickness[Large]}, {780000, 
      Thickness[Large]}, {800000, 
      Thickness[Large]}, {820000, 
      Thickness[Large]}, {840000, 
      Thickness[Large]}, {860000, 
      Thickness[Large]}, {880000, 
      Thickness[Large]}, {900000, 
      Thickness[Large]}, {920000, 
      Thickness[Large]}, {940000, 
      Thickness[Large]}, {960000, 
      Thickness[Large]}, {980000, 
      Thickness[Large]}, {1000000, 
      Thickness[Large]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1000,
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> Automatic, "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotInteractivity:>True,
  PlotLabel->FormBox[
    TagBox[
     GridBox[{{
        StyleBox["\"BTC Price (USD)\"", {20, 
          RGBColor[1, 0, 0]}, StripOnInput -> False]}, {
        StyleBox[
         InterpretationBox["\"Latest: 125405.\"", 
          StringForm["Latest: ``", "125405."], Editable -> False], {15}, 
         StripOnInput -> False]}, {
        StyleBox[
        "\"(updated: Mon 6 Oct 2025 14:39:56)\"", {15}, StripOnInput -> 
         False]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
      DefaultBaseStyle -> "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
    TraditionalForm],
  PlotRange->{{3.5343648*^9, 3.9686976*^9}, {0, 125404.8203125}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.934471660122868*^9, 3.934471678531561*^9}, 
   3.934471709366077*^9, 3.934471985381893*^9, {3.934472051304407*^9, 
   3.93447206162788*^9}, 3.9344721372679787`*^9, 3.934472173776424*^9, 
   3.9344722654179783`*^9, 3.934755303434444*^9, 3.934755971591324*^9, 
   3.93475602852437*^9, 3.9349255923053226`*^9, 3.935338292693122*^9, 
   3.935771498218734*^9, 3.9360387202052107`*^9, 3.9363527972859707`*^9, 
   3.937429256325437*^9, 3.93827107628996*^9, 3.939056935777109*^9, 
   3.939222650098179*^9, 3.939298474253096*^9, 3.939588472826434*^9, 
   3.9405463713800583`*^9, 3.940852913034976*^9, 3.940852988346077*^9, 
   3.941749743729651*^9, 3.942008466835103*^9, 3.94257939551548*^9, 
   3.942663209469174*^9, 3.943365197487537*^9, 3.944668826239531*^9, 
   3.945075547485483*^9, 3.945972859637501*^9, 3.94629955298562*^9, 
   3.9463044034054537`*^9, 3.946309060433361*^9, 3.946309103250428*^9, 
   3.946310261619594*^9, 3.946310313374352*^9, 3.946312469769679*^9, 
   3.946312614260828*^9, 3.946312763943021*^9, {3.946314246369421*^9, 
   3.946314261430131*^9}, 3.9463143012725143`*^9, 3.946315353319756*^9, 
   3.946315694908105*^9, {3.946315727849683*^9, 3.946315759405257*^9}, 
   3.946315805553459*^9, 3.946315881330431*^9, {3.946315937908695*^9, 
   3.94631594443468*^9}, 3.9463161487473707`*^9, {3.946418857557959*^9, 
   3.946418877109508*^9}, 3.94701041517411*^9, 3.94797487950176*^9, 
   3.9503771615172653`*^9, 3.950377353160287*^9, 3.951729950422347*^9, 
   3.9517301219880877`*^9, 3.951731099868379*^9, 3.951762008413622*^9, 
   3.9518363814654922`*^9, 3.9524211794588127`*^9, 3.952458837437142*^9, 
   3.952458879038945*^9, 3.952459248056014*^9, 3.953056489154475*^9, 
   3.953150946357306*^9, 3.953151304264933*^9, 3.953151443967309*^9, 
   3.95320847913494*^9, 3.95320854033442*^9, 3.9532086108473454`*^9, 
   3.953566284578828*^9, 3.9541036559419603`*^9, 3.954273199084289*^9, 
   3.955127404359713*^9, 3.955649254758153*^9, 3.956506796503785*^9, 
   3.95669529729713*^9, 3.9566955051234207`*^9, 3.957003702492813*^9, 
   3.958544486366913*^9, 3.958902471069339*^9, 3.959373333509626*^9, 
   3.9598908380098963`*^9, 3.960542011177055*^9, 3.960816355172678*^9, 
   3.961069285253097*^9, 3.9612443444149523`*^9, 3.962017529612094*^9, 
   3.962543343067891*^9, 3.962624580724443*^9, 3.9628775138313103`*^9, 
   3.963241859352972*^9, 3.963399000289147*^9, 3.963859644166912*^9, 
   3.965326598218956*^9, 3.968764796578824*^9},
 CellLabel->
  "Out[299]=",ExpressionUUID->"c6d6a0a2-22a7-43e8-8ad4-e37834daf9da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intermediate", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"Today", "-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\"\<Years\>\""}], "]"}], 
         ",", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"price", " ", "-", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]]}]}], "}"}], "&"}], "/@", 
      RowBox[{"Normal", "[", "btc", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"roi", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"QuantityMagnitude", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], "-", 
          "1"}]}], "}"}], "&"}], "/@", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"intermediate", ",", 
        RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotdata", " ", "=", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{"roi", ",", 
       RowBox[{"-", 
        RowBox[{"settings", "[", "drop", "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overallmean", "=", 
     RowBox[{
      RowBox[{"Last", "/@", "plotdata"}], "//", "Mean"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"btcroiperformance", "=", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{"plotdata", "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<BTC-USD annualized ROI since date until today\>\"", 
              ",", 
              RowBox[{"settings", "[", "titlestyle", "]"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\<Overall mean ROI: ``\>\"", ",", 
                RowBox[{"PercentForm", "[", "overallmean", "]"}]}], "]"}], ",", 
              RowBox[{"settings", "[", "subtitlestyle", "]"}]}], "]"}], 
            "\[IndentingNewLine]", ",", "updatedstr"}], "\[IndentingNewLine]",
            "}"}], "\[IndentingNewLine]", ",", "Center"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "->", 
        RowBox[{"settings", "[", "aspectratio", "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Background", "->", 
        RowBox[{"settings", "[", "plotbackground", "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"GridLines", "->", 
        RowBox[{"{", 
         RowBox[{"gridlinesx", ",", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"-", "5"}], ",", "50", ",", "0.1"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "50", ",", "0.5"}], "]"}]}]}], "]"}]}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"ImageSize", "->", 
        RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageMargins", "->", 
        RowBox[{"settings", "[", "imagemargins", "]"}]}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"PlotRange", "->", "Full"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicks", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"PercentForm", "[", "x", "]"}], ",", 
                RowBox[{"{", "16", "}"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
         "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameTicksStyle", "->", " ", 
        RowBox[{"settings", "[", "ticksstyle", "]"}]}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"Ticks", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "2", ",", "0.01"}], "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"filename", " ", "=", " ", "\"\<BTC-ROI-Performance.jpg\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"filename", ",", "btcroiperformance"}], "]"}], ";"}], "\[IndentingNewLine]",
    "btcroiperformance", "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.934387752185452*^9, 3.9343877766979237`*^9}, {
   3.934387828429563*^9, 3.934387870527706*^9}, {3.934388331908565*^9, 
   3.934388333062323*^9}, {3.934388378006991*^9, 3.9343884287097588`*^9}, {
   3.934471715016848*^9, 3.9344717336016083`*^9}, {3.934471813278263*^9, 
   3.9344718632221527`*^9}, {3.934471918584424*^9, 3.934471923707014*^9}, {
   3.934478063193688*^9, 3.9344781333993196`*^9}, {3.934755588083599*^9, 
   3.9347556068067617`*^9}, {3.934755651004134*^9, 3.934755665604083*^9}, {
   3.934755795383317*^9, 3.93475582509942*^9}, {3.936352923977982*^9, 
   3.936352926884015*^9}, {3.9392985390227423`*^9, 3.9392985603728848`*^9}, {
   3.939298653515523*^9, 3.939298679751606*^9}, {3.9392987906199207`*^9, 
   3.939298793216814*^9}, {3.9395885998351517`*^9, 3.9395886024980717`*^9}, {
   3.942579418324395*^9, 3.9425794501656218`*^9}, {3.942663249489394*^9, 
   3.942663428092967*^9}, {3.942663471271839*^9, 3.94266347817133*^9}, {
   3.94266351164624*^9, 3.942663543001616*^9}, {3.9426635737373962`*^9, 
   3.942663574701276*^9}, {3.942663632743779*^9, 3.942663635060171*^9}, {
   3.946299687470169*^9, 3.94629969043528*^9}, {3.9463142683157873`*^9, 
   3.946314270861767*^9}, {3.946315000100506*^9, 3.946315079470072*^9}, {
   3.946315208699148*^9, 3.946315224244094*^9}, {3.9463152553390293`*^9, 
   3.9463152814212303`*^9}, {3.946315346292159*^9, 3.946315347198888*^9}, {
   3.946315461249434*^9, 3.946315465273561*^9}, {3.94631558534475*^9, 
   3.946315675840042*^9}, {3.951729972302535*^9, 3.951729992524086*^9}, {
   3.951730201737874*^9, 3.951730207279723*^9}, {3.9517309568863897`*^9, 
   3.951730966961627*^9}, {3.951731024730763*^9, 3.951731055785837*^9}, 
   3.951761974792315*^9, {3.951762072422937*^9, 3.951762096407218*^9}, {
   3.952458859931493*^9, 3.952458872115296*^9}, {3.952459068532415*^9, 
   3.952459069657812*^9}, {3.9524591469219933`*^9, 3.952459158213533*^9}, {
   3.952459233563079*^9, 3.952459233903163*^9}, {3.953151467754719*^9, 
   3.953151515724441*^9}, {3.9532084474909697`*^9, 3.95320844788792*^9}, {
   3.9535662205064087`*^9, 3.953566245378573*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"e502aed4-b579-4540-ba7f-de883c36cbdb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[0.003666666666666667], 
         AbsoluteThickness[2], LineBox[CompressedData["
1:eJws3H9cC38cB/BJkpBJQlITkiTj60cStpCQJElCJkkSJiFJhiRJVkglGVJJ
NFQIWUn0AyskSYYUlUwSknxf3Tv/eDwfd7vudZ+fd/vchrptdlirwmKxYrVY
rI7/8Y89a0kdv2r56E8DY77NgHmb4OC9Jw9krWEsjIZLvzZ+bHVnLMmFA0+5
ts+ZyVjeAEvErIyLwxmzBjjV8aunyJPm3VJ2mMuHI6vNjF1/MxZsgJ1shucM
usJYfAIWV9VnXTrNWHYPNt8efXvQW8bKzx3bDw4KVT3OmKO9tI7vMSZmo8VZ
xvbT4eEzTh1PfsJY5AlbHD4+3+8hY2kkHJWUumrER8aKO7Dfvl7y/jGM2bUw
e+aMtEPxjHl9nfH3f3xreKhG+afCane08j9LmO2StXDW1dsxfb4zlh+F6zLc
4uykjFlZMHeFd8LBHMpfDau3xI78IqP8msvq+OUXiv78qaD85vAkv7BQwSvK
7wbvE6gZHvxG+cPgGhWvrHtzmPPh3IBVb/fdFWrA2P4drLsrom5EBGNRTxdc
f2XT7cD5jKUTYctZ/XrkUnkpVsHDfUJODlrLmB0KW8fXmt0cQeWfDs9zXug0
tZ35+8Iq+ImH3qjAv5RffTmu59OYeMNhVP7jYU3l53Fqc6n8V8KR4xZusZ7H
mHsQZpd46Z/kMxZchQPLl2X6jmUsfg3nn5m/9YQZY1m3FXX8WUP+Gr/nMlaO
hV1uDLtUvJzyu8AD33f93oOObx8Em33gd7eYTvmvwBXXPh/wv0j5y+HpRYcG
mD2g/CorUZ6r1e3s31L+MfD2mJgvuwop/1LYxvtKUIFGE5N/L5yyJLCl8gfV
/0tw6ZTy8XsbKf8LOMtq6bLelZSf5Yry7bf7yKhaym8CcyU2us8OU35H2DWi
rlfyFcofCGv59ukaRecrS4btim7mrL9M+UvhUtnohQZJlP8vHLp3dMnrO5R/
5Ko6fvwk/3hVKeVfBBuFTZJpkKW74Ce7+r09UUz5L8CS30afHykovxzWd7uV
GErbea2wSKh+M5H+vnC4oI7vc+zmlT63KL8drPDP+fJARvn9YL/XQuuXNyj/
eVi1imcguE/5H8O+qg72a8iCn7DtGsnPLncp/9DVdfxi41WaJ+5R/vlwr+in
/WNiKf82OGHhSEnAGcovgfVj6wpEkZS/EA6xL11nfZ7yN8PbfScMO0rtQarv
Vsc3kZT860vXT2EDa3dpvxj8hvJvhRP/+PqNqqb8p2GXILdTpk8p/0M4U2dU
7o8yyv8NthYZjvD9TPkHr0H9mHkvVpc+z7KG9V/cGjG+N1N/uEJYx/FR+ahm
yh8LGx1clnK7hvLnwSqLVX5Oo/oja4TZGn23rKLjKwe6o70mtexa/5Hyz4S1
bx0NGkx/z34jzHKc2v0uHU90EvZ4Nqr/leeUPwcOXb5Ddw0dX1EPa0y12Tvs
NeXXWYv2ZvKx2126HjwerPlG+9JSqh9CL7i14MKCCepMHslxOHH1VM3lXRjL
s+GAeR/X9FRlzPoMh0103H2mncq/nweu39+fezSUlH8a7HXyv7V9yOJ18PN2
tWFrvlH+iI7t8y8sf0LtS3kb9v8xOnxGA+WvgZ1sxf2qaLs9ex3qa8SctnF0
PJEFLLVOyk6qoPzusGveXkkWtXdFOGxW0ai/I5fy34K9crc736TrxfsAsz5d
9b1WRfl7e9bx7RWtCVGd7X8yHHX6y81LdD7y1XBY39H23nT9WWFw++en2WPa
KH8mHPCsf0UefV6ggM10reeo0vUUa6yv4wt631+0vAdj2QTYXHvEjS90/ZSu
8IqilLEmdH05h+BIn6bnit+U/zrMafxUOqSF8r+BAwK/Jc3+Q/m7e+H6tlWc
82Uxn1eMgy1MPHZfovNjr4CjFs5yekXlyQuGFV/mrtXsTv2fFI5OFvfy6Cz/
Cvic266DfkOo/FU3oL8t9J81WZvKfyxsdj9FWK5L9X8ZrOpummAxkLFgP8wZ
YzS0hraLL8Pv8w/dihtE+V/CNUWjd1n0Yazs4l3Hb2Qv4pn0o/ym8LVeSQ59
NBnbO8GCA08dPGl/kQiekH7nc11/xtIU2PT61P9K2ZT/OTwv/GRZPJ0P+x8c
1cV37w/azhu1sY5f+CDvWQ4dT7gY7nUpz3KKDuXfDc+7+u9RJX1engT/Wl7i
PJnysErhCbkPdSMHU/42WBm+PLJwAOU32oT+6OkBawc6P7E9/ElsfvytFuX3
h2Uqag+U1H8oE+BScVyMZmf+p7CDUbbBerre9r/hmz8u2v7rS/mHba7j564Y
OOQVlbd0ARzQoBLt8pfq/w64LDnszFpqL+xzsGuQ53q3T1T/i+H04VtCulD9
ErbAFtW2ZqFUPyQcYR1fWOz6/DvVN/k8+Nq4zA+W76n+b4NNq2a7p5dS/T8D
h4z6EX+a+lNBARz5qmfqBOrfxd/hljez64LjqP0P2YL+9cfWv1vTqf7PgZ1F
nw8cofGD4wN/2notwucU1f842GHf0ngWja+ifDh9T/W7hWFU/5Vw5gHbvL00
Xih0fer4eq8/ud04S/lnw8py78HayZR/MzzPLXpTDo1nwhg4c9VenwwanyX3
YXdBd9+2c5T/Czzp1MgiOxp/WAO31vGDnAoyz9F2rhVc8TKjjU3nK/CGA3d4
d59zgfJHwXpRQ/re6swvg5XsjQXf0ih/Heyz4afL7KuUv78v/p67f/YFOr79
DFjYMGtNcwLlXw9zu0Udq6K80mPwdr89w5tofq+4C99Z58t3Okj5P8Eu7LvB
N3ZRfq1tmP9c6JUv3kH5LeHINTMj1y+i/B5weHVRnwwHyi+GJ41YVuu5lPLf
7ti//+opLDL3IyyLuP9Adwjl77Md4+X4KXdX96T8U+Dgatm5mnqa/67p8IOT
9Z40/1QegcN6+7zZPYDy34SjGrZ8WadC+d/DnEndu0UMpvy9dtTx4+53nd+d
TfknwZU9MlTkfSi/AL7WPiDitSblPwyHyarC1NQpfwaszCz5vaMr5X8LezZG
SA26UP4efijfHkkbH9Hn5f/BHoFzqvr+ofm/K8ztsU6Z/Ynm/yHwI6PgWK8q
mv9fgx1PX9JdRPcT4ko4e+BU3ythlF9tJ+ZHLvudw+l+RMmFo20nmFQco/uf
5fCstJHdtx6h+58DsJuYt/kHbReldWxPDYiYfJDuf17BYTplWm/Jiq7+aM/x
gT6/t9P9jxm8qbjb5Epfuv9xhs+xy6NVhDT/3wc3LFxrlbSc5v+p8HjX7lMG
zaP7nzJY+8y2p4dHUP4uu9DehYOOOPWj/KPh4au6PVXjU/4lcNNI0Y9T9PfE
e+DUPcX3/tL8XnYR9uq1JoX1lPI/gxMPi3R7PqL87bCPovfKOS8pv3FAHT/v
T8+rV59Tfgc4uvfd5r/3KH8A7P5z85eeGZQ/EXa4WDtqUj7lL4EHrnU/0J5C
+f/ALQV2NivPUP4RuzEfsly5cvdlyr8QfrRhb0pAJuXfCVt39xhf84LyJ8Dc
yTqeJrWU/wkc1tbdzoTOV/ALbuuT2nqI7g/FhoH4+6aHevrQ/avMFi4rOJj1
+SLl3w7XqWcnbSBzzsLFbvM5A+h87Yvgm6l+v5/R/bToB8x7UTZtTxrlN9iD
/r26fLjoGuWfC4ceL0vbT/uzfWFR3imdf3R8Xjzc4HDGg3OO8j+CP0XceD4q
mvI3wR7fvf9ZRFJ+PRHG5zjXn/VUf1lzYH9Wt5icEMq/BbZdvnpFfjDlPwXH
Tf0b4uND+R/AbPU/c2XbKP9X2KXP99mpuyj/oL0d9+eDCw7S8TizYOWvabfT
yfabYI3KHqvvh1P+aJgz+vV5AzpfaS4sX33Wbuleyt8AXxng2h5CZg/YV8dv
Fu2+cmEP5efDvN6NJh9ElH8DrNP80t7qAOU/Acszew1OD6X89+B9X+ZPG0l5
WHWwavThvx4elF97P+pT3MM9pn6UfzqcG7Mm5E8A5feEYy8m/1Hsp/yRHdvj
D25d2ln+d2DvTZpOYipPTi1sbrxuUUoc5e8bhP70SPjsS2LKPxX+1Vj78wU9
35CuhX3tT/OtL1D+o3BmcXOP6XR8dhbsenruwQdUv3nVsPNatzQzqt9CzQO4
v7t44M8U2l9iDk+PNDJLSqX8brDjmLz3s6l+sY7AKYJe6dIsyn8DjlepPltO
7VHwDn40PKv3Vznl7xmM/vxyrecRat+yibCpee93D/Io/yq4XHhv6HjanxMK
SxK3uLyj/tk+HdYoXqAcZ0z9fxX86bmo4Ftv6v/VD2L8uzd8/hrq3xXjYcHC
xrR8eh7FXgm7rdaN7+y/eQdhwwlDi9yVlP8qPO9rUL+d/yj/a1j3T0/xG3o+
JO8Wgv1VtnR5SMdHh4/+6ewcGzsa37gucFlI9aHeqjT+BcHte5cmPupO498V
WOeORtPmbtT/lcOFf/L2DKXjK1UOYb5wb4RPDzo+Zwxc9d+i2bfJ9kvhFtsB
zht7UP69sHfAsSEZdHzpJZjd8nWJCm1XvIBrjD3+2NH5sFmhqB/hv/+Vs2j8
M4FnbTx8d0Ed5Xfs2M56ZOFCz88kgXD14MqzGrRdngwPPH961KYPVP7PYEPT
lztvVlP5/4UbElRefyALRh7G/eSXPdOCO59/LYInbNlUEltM5b8LjlQ+a+pX
QOV/ARa+zFphSs/zOHLY9/Oe6oXUX9q3wtZ8hyXRZVT/h4eh/70QW/qUxg+p
HezgqTt6KB1P4Qfnz3/UwqPjsc/D6vcaxTaPqfwfw3aBNQnOhZT/J5xZy4uc
mkv5hx7p6M+bA9Wpfsrnw03bF/G2J1L+7bCCP/Fy8CnKL4GDtA9oXKbxXlAI
u8zS7bOZ+ldxMxx7Z5SEk0T59cPr+CqyVO5nstIGNkq/PvEuHZ+zFS6/Lyuc
1Pn88zQsGjW/rgdZ9BD202oZVUTHl36Db55427KKxgvF4KPY7vTlncZVym8N
r/jcb91DGh95QvjRX8mzQ9R+hbEwK1K2fB+NF5K8ju0H9IOnUnuXN8LJ+/aH
fKL9WYPEmG/1Zc8fd4fyz4QnLSg6sr3z+edGOGjSp0Dru5T/JOzDefeOnU35
c+DY5T4KR7reynp4n1T95xkyRycC/U+24dVPdP3teXD7Qye/iWSRF6w/aO/s
QBrfpcdhoZlqcdEDyp8Nh01bn6hN/Q37M/xkdnrcW6ovvH6RmN989+o2iuqj
cBocrXt/sS/VD8k6uFdypvwe9UfyCJirt/9az1LKfwfO/yePfEnbuTWwavNe
g6X3KT/7GMq3OvdCNl0PsQXs0tr1Vle6vjJ3WNFUc9mW+ntlOBzW/W+3B1Q+
nFvwpOqhbSp0PPsPcKyNXrt/5/jf+zj67+qJswwuUf7JcMihIL4DPV9XrIY3
2fTKNven/GGwcYp673gav3iZHZ8/fdHiE42/QgVs6LFBbSCNXxKNExg/+y+8
UbCQ8k+AM3PcTo4bR/lXwRYV6hcqTCn/oQ4PzF3/ZSLlvw7Hp1WYZoyl/G/g
1usj5n3nUv7uUXV8y7r81wZmlH8cfM3m1KwRPSj/Cthj8+TnETVfmfzB8PGK
UX9WvmcsksJqW2YOvniesbQC1vW80F3lMmOF6knM501MDDxKGLPHwinu3XKT
MhjzlsEmjkbtPjcYC/fDGhfTZFb0ecllOP6TcbZ5FGP5S9joyaf/tnoyZqlE
I6/Vt6KvMxhzTeFiww/NFwYzFjjBkU5vnwT/a2Tyi+Agn+JvvX8wlqXAmonz
Ha4kM1Y+h4+3sF4k5TLm/Os4Xnasf5M9Y/tRMZgPLJjxsmQtY9FiOHzyHsEP
2i7dDW/vdrdk9QbGiiRY3SDWa7+QMbsUNl06+oOBKmNeG+zH9TKIafjC5DeK
Rf+8a6VvVSNjiT1sfvzgmv0KxnJ/uGz2zkMv1ZjPsy7AwXWTjn5rZ7Zzn8JW
zo7ntWsYC37DN4Oe1Ko8ZiwedgrjSehV1Rf5jGULYN3947zWbGWs3AHnrw1N
srJnzDkHz7K8ukoiYGxfDDcMPr/s4grGohZYyt05+HtfxlJOXB1fq60kOTWs
gck/D9YuGda+TMCYvQ2eXqAnn7iNMe8MrOYQmHlsKmNhAWwl8hyUwGIs+Q63
NjkZyvozlg85jfulslMPzhTWM/lt4BS/mePGGzHbuT6wr8vofb2/MtsFcXDg
0bY6bhNjcT68b/Ocmyd/MJYpO/b/mPW66g9jpW486sfS/HO/lIw5s+FHg64f
Xn6Bsf1muKJ07JO9b+uY/DFw4fC9i64GMZbeh7My66rOtX5m8n+BG+WssHXD
mO3sgWfQvh2GV08SM+ZZwePP/vryZihjoTc8oeiBmv5z5vOSKFjHMmZVcDhj
uQzWSxxb87kXY1Y9nDhy/oK/Axlz+0swX+76eM/e7owFM+DcyQZvVzR+YvKv
hx9Nn3nCIZux7BgcsvHGhLMrGSvvwhWsKVl3P9cy+T/B5eE2lvPnMrbXOovy
SD776SaPscgSLr+41e67BmOpB+xwQ2LP6sdYIYZttkqH33GvYfLfhlW3B8Zm
fPjI5P94tuP7JGOvmf+qmfx9zmF8Gqq3rXI3s79kCuzu5m7xz4/yr4Et2O9X
rpnCnC8rHG76d87JWJPy34QTJmxPLNah/O/h1MWKy7M0mesr7nUe4+Wl733T
tjKWTYKV+5SCLqOZ/ZUCuNeF/Y/XzWOOzzncYZ34oEctlD8Dbqpq8Iq4QPnf
wuxqx42nv1L+Hgmo7+cin2XlUv7/YKnef6mfFjBmu8Lbn7gZvG9i8vFC4Fn7
euyVj2a2C6/BxkuvHlM6MJZUwrJzy54dPs1YrnYB48X+1VlT1zFmjYOzZveb
6DqSMXc5bP2ucNeJWYwFBy50fJ840d2rP5V/GpxdKA6wC6TyfwXn19/t8vAD
lX/XRNw/roqcuWEW5TeDe32L1rHTZ2zvDDez5mppz2Es2gcnDHi2Z+haxtJU
OPbuz409rRkrymDnq3eNJjsyZndJQv0P/qzQ1mXMGw1P+Ps4YqE5Y+ES2Dyl
Z9TRGYwle2DjqDmbXcYzll+EgwxZkT0iqfyfwxrb8l4+pDzcdtgpSWTr78BY
YJyM8VvyV2hInxc7wMmzzPYfNaT8AXCA2qqHE6g+KRPhWfMevV84mfKXwCr8
g24p4yj/H3jCNmVd4jDKP+Ii6le/2HXzflH5L4QtDnaffvQxlf9OmFXjNqSm
mMo/AdaKKzJuKGDMe3Kxo/96ataX2pvwV8f+fb9qVX2h8jdMwf5JYd4JD6n8
beHAkrvFPNqftQOWm+UGdHtH5X8Wbp/TY5D6ayr/IvjR2JlXW/tS/h+wdsTk
JY/IMoNLqI+8+5YPTSn/XDi8uCJfZEz5feGA5A+RJXzKHw9rfh1w4Pwpyv8I
lvbWcW1KpvJvgq8lHIlI70P9n14qjj81oUD6nsp/DixtsrU5kEPlvwUOX3ps
FLeEyv8U3PJr5sj7Xaj/ewCHbJdUNRpR+/8KN7gMdv88jPo/3cu4n311InQt
befOgqszfZfkc6j9b4IfLQptFnb2f9GwStnx/5prKX8uzFpn/e4Z9ZfKBrjp
SOop/X6MOQOuoP/01tttbsLYng9vunG+z/SRjEUb4DzxQDunCYylJ2CPCQcG
6i+g/Pfg8a0/dcN5jNl1sJ9ypv4OAWOedlodn/fqVkV0OmPhdLhtiW2f7fcp
vyfcnmr0uu0u5Y+EKybtML7fjem/WHfhqq8LN6SWUf5amG395XuKH7Nd0FeK
/jpOJcF+KfV/U+HSBWsbGk1o/FsLSxdpDGiZTOPfUVilsfXhkHRmf04WLDEr
3PHuCmP7arg4tfF7bSKNf5pXUT9HRX4O/Uf5zeEnwS1yi2bK7waXVjnnPCum
/Edgr+0Ba15lUf4b8MDp3ftJSin/O7jlW4KqzXnK3/NaHd/xV5cF83Mp/0TY
6rzQX1lE5S+A3Q4d/zhPjzkfbijs3O+VUWUvyp8OK4x5s17R+Cuugqvf/zS9
qUv9v/p1zEfu1ZZdNWCsHA+nj2/pHteH8q/s2P5lbsLkNir/g3Berkl5XQ2V
/1XYvYf7orH1lP91x/aIxIh7VD6Kbumov5eGpEYUUn4uLDTlLr1E5ctzgR+9
m3Cj72nKHwRzrrg8LzxE+a/ATwYdvrVUQvnL4V5NSZfbLlH+rhkYb5Wj1mRf
pfIfA9sbpPeZfJHq/1J4uoRd6BDDWLwXlnz7p8yNYyy7BGv87F5nlkj1/wV8
rShe0nl9OazMOn7crCGmU95TfhP410YrqzuvKL8j7Hj+s6MZzVekgbDRMtXp
LQ+o/JNhDT3umnsJlP8ZXNfN7conOh/eXzgsNKTGhs5XOPIG7hd03+5YQ5Ys
gqu5MQYbaX/5LrghwHPPGroerEQ4r4u7a8YOyi+HQ5uKduu4Uf5WuPhowMTo
EZR/+E2MD8qJ6nUTKb8dbFu8qIe+DeX3g1PqvmZsnEL5z8MavmO2OrEp/2PY
rKtxqrkB5f8JB5+o4cto/JQOvYXxb99WUddqGv/mwzU5+bOfvKX+bzvs+nXv
Hs3z1P9JYLOTG85NOEj9XyGsfVD2eLeQxr9mOHd+zEwDPxr/9LMwnuUnyEr3
0vg3Fw6OXL9mfj6Nf1thVR01c8sHNP6dhv0rIpcvZlH+h7BZpI5XKPXHsm/w
vG+T0w41U/8/+HYd37vqv37vn1P/bw0PLPDb31BK/b8Qdu7+eBhLQv1/LJye
mDL3eyrlz4OtcoPseOcofyPc/qB0WEUu5R90B+Ol7+hhy+9Q/plw/N9M50MZ
lH8jHPcmRnf6Vcp/EjbLdCx1vUb5c2D7qT5Wjk8pfwOsMdplZsIbyq9zF9cn
Ym7liwrKz4NT2ioLRFXU/3vBko8L1g2pofzHYfbbQYu/v6b82bB44tIez6k8
OZ9h45wYP4syyt8vG+WXu3Hm2/uUfxpskphadrmA8q+D9ewXvBj4kPJHwOos
sx18OeW/A+e/LTlYQdt5NbCi36Uh26l/E7Lv4f7uhZGutinVfwvYJ25/i6oK
1X93uFVNXLy0J9X/o7COa+K4tVS+3Ftw8GWr+mG/KP8HmJN2+NaJ75S/twzl
U6J3oIjqp2wy7MwZcKcPXR/lari9NXfIZrp+nDA4qGF51vPO/JmwadIPZxsq
b5GiY/+4iPftJyi/Rg7q6ymHv+OcKf8E2GPmgMslwZR/FWz1POlnV5qf8Q7B
2bPEM9b3pPK/DquPPhjxM4XmP2/gSWlHt4Ul0/yney7mX3on40/QfJo1Hj5e
GRNR25fmPytgx+QTNg+ymfm1IBi2zduVP6iNsVjasf84rxuNJsz+sgpYNsJq
+BQXxkrV+7ify1FNOsKi+5+xcKVG7eg9NF+3XwZbFDR0U+YxFu2HnzTYTnZV
MpZehuP7xgSpPmWseAlrqqUcf1pO9z8qeZjfvm2f9b6Q5v+msGjuNpW9aYyF
TnCUzPmjylK6/xHBvNX2I9g9GMtTYIeJMxMzLzP3T6wXMCfl84fJloy5/+Am
14MNfc8y91OCUQ9wf7vs2VxBKGPxYnhety5/BxUylu2GHfOXeCQEMVYmwUKl
9eIQN8acUjhg1w7HlcoPTP42OCR1adPCq4xFRvm4nr1bXPvKGEvt4XaBsqQ0
iLHCHzb3iBn31oAx+wJcrB835vO1d0z+p7BPSop61vn3TP7f8KbI4IoEE8aS
YQ8xH+k2I8rJk9lfvgAW8DxX7mUxZvnBdc0OXVa/UDD5z8FBjW8sbdoYC4rh
UPO996bXMBa3wDo7550aKWQs4zxC/9FHMG6jJWPlPDivVpelrcGYsw0WJHtk
6I57y+Q/A/PM5pwxmMdYVAAbLxky8u08Zn/pd/jO/sIBnhXMdsWQAnxeeefu
piLGbBtY8s8kxcqSMc8HdnnnK2V3Zz4vjIOfaNd+Pf2TsSQfns59MG3yBcqv
hLUW82b2NaD8gwvr+FcmODeciqT8s+HWzeKDtlMp/2ZYdF27JP0y5Y+Bzcwr
9y+9Sfnvw4E3uraXJVH+L4Ud93eNlyufUf6BRSgvu0T21IeM7a3gUM9NP7em
M39f5A3rDP0gsCxhLI2CG3fdSJ7zhSk/hQwOfjgw7n4Os51dDw+PMvj3lsds
5/UvRn2LiL+3bCWV/wzYzHHbuWfTqfzXw7ZNS1wUPyn/MbhKevbMsDbKnw1P
P+06UO8ZY+4n2HCbwcSQjYwFWo87nhdWpT0+zlhsCe/7z7toyhnGMg/YbsXQ
5wOPMFaK4abWPQ+r9jLm3H7cMX96ws0/xNj+I1xdl/Gwdj3l7/ME44HDg6/2
VpR/CuwweaTd9aGMFWtgs+E3hck9KH84nL3h47+FVB68m3Cg+b+3baep/N/D
NxNu3ro9m9lf0utpx/d90Y8j+lP+SXD7pHYfAzJrNdxQNGjYhyYq/8Ow646s
m2+zqfwzYJftJoKR1F7Eb5923L+cvrhJj/L3kHc8r1U/WmlE+f+DK8bVrovu
Tvld4emX7h73H035Q2Avb8dNaTMp/zW4LPNX2bP/KH8lfM30QsGGnpRfraTj
ef254EV0Pdjj4E9qG8p7Daf2vxx2KOkRKjNlLDwA7wtzbt4/mfKnwXnWGjtG
uFP+V7Cy4LBqK4/yq5ZiPMl74pxG+3PNYHuVmfJLR6n8nWGHv4+e8F0p/z64
l8nWKM2llD8Vti5U77vXnvKXweMbs42yFlD+Ls8w3hmVvVnCp/yj4fS/nG/W
9PdFS2CXHc2h3HmUfw9sp2c6aPBiyn8RbntTbrtaSPmfwzqVD6I2Hab87XDe
8s1ea6spv/FzjHc3duaH96L67wCbuBleqlBhLA+A23d8vhrYlTErCXao8+22
bBBjbgl8/E7i8UF8xoI/sP2JwKk/oxiLR7xA+azJ8PccyVi2EFYsu6bMoPam
3Albq9mKDwQw5iTA8vV3r+5fx9j+CWzW87PD6q2MRb9g3zHLLtfsYiw1LEP7
WBXFLv1G7d8W1q5MPNb7MWP2Dpj3MXqv0Ulq/2dhgfafrL8x1P6L4DvDeMPP
jWHGC8kPWHq4d+sQLmO5wUtcz17S26nFlH8eLOw/J2lNKeX3hY1bLp317svs
L4iHneQ3XA98p/yP4E9WkwrX/6T8TS877jfnps7jUn69cvSnz6XFLlMo/xw4
eLnFgmszKP8W+PiOluv36fqKTsFmVZfuq+6j/A/g4v41C6bEUv6vsIXbt+Sd
Oym/7quO503q5VPCKP8s2MkpsOezEMq/CdbzibFtDKbyj+7Yv/mKY5o/lX8u
LFyXWnE+kvJ/gT8Ncl6++CDlH1CB+UyG087boVT+fDgxcNqjueco/wZ4/JDo
xNTrlP8E7Fz5X21lFuW/Bx+PN7Pt/5ny18EqTQ+yT/Sm8V/7dcfzg2yF80Aa
/6fDxrYq6X2H0fjvCfvVFN6t7Sz/SLhhV1W14gflvwubdTs8/2075a+FY3ed
TAioZj4v7FtZxw/n3TQMTqLynwrnmofLtGh+IV8L23U9UV3MZuYnLDHcFHto
9N0BjLlZcPMH/2nBH6j8q2HVJKvKRhua/2i+wfw+1zCiaQzNf8zhZLuZ8bGm
NP9xg8dfafryshfNf47Asel9Q9ro+PY33nTkna95zoKx6B28YucBgcyMsbRn
FfqL8O3N02wZKybCXLU73cPHMfMztgDedCGjNo7mW7xQWL6/on+YiJ5/p8Nm
rQG262IYS6rg0Fl1oh1GjOXqb+v4CSrWR78dZ/Kx/oO1/T8E3zvAmLsSDs+I
XTC6iPIfhBM3X52b8Z2x+Cqsf/pM/4YcxrLXcPypKEXXx4yV3RSYf4ztX/vv
OWMOF85yKd2x4hOVvwtc05hpXUwWBcFaWnsd3zyh8r8Cy+rC34QbUv5yWOVf
kW7UZMbsru9Qv6Y22IWFUP4xsIpw6O80L8q/FM6PV2i+WUH598ItdYqHi5ZS
/kuwjl9606HpVP5lcJ1kt23sYip/1nv0Pwsc8i/50/zXBHZXmgoy6PqKHWGF
xaoNX8Op/ANho+vub7dGU/knw5uU7lu37KLyfwbb9Iy9V7GXyv/v+471r8sv
OND8WDTyA8rvVeh/x5yo/BfBdUsmjKgPpvy7YMuSo86X6fPsRLjp+UTX7Yco
vxxuf/LtgRn9PWErLGjOXxu6k/IPr8Z49faL+v4dlN8Ojm5f4L1zK+XfCWtL
z3x4F0D5z8PZTs8CRtDxBI/h4KJzOb2p/op/wk27c8L+9KT8Qz+iPBY/bB59
m8p/Pmza5/Xw1cVU/tvhqrTFW6JzqfwlsHpGr8GJa6n8C2HbJ/V5OQ5U/s1w
5Evj2h7raP6vX4PxuXSOWfMymv/PhdPvfrFdtZkxbyvs8Hj2wJXUXwtPwyou
/2ad7Ebt/yFcpjwWnqtC7f8b7PR06ceNRdT/6dVi/m684uOMe9T/Wdd2vK9i
uHUY9fcCIZy6+U/3fjQ+iGNh7r7N37i11P/lwSa2J3ZNqKT+rxE2vPMrbttr
6v8GfUL/seTeu7ZG6v9nwtF9/W92WrQRDrRd9X0O3d9IT8K92H2eFe6n/Dmw
5YX3Y26spPwN8LmFi1hLj1B+nc91fDcdtcIFbpSfBzfuCb61yovye8FeAyV3
18+h/MdhS5dp7PWzqf3fg7nzZow6s4ba/2e4dXiXV3xvav/96nC/3PXs2tNk
8TRYmx0jmLqc2v862C7aaM5IXyr/CLhwi3cXSQSV/x1Yq9Fu8OU0Kv8a2O3n
pkerD1L5s+vR35x6v+voaspvAYfVZK4P3kb53eHQsnXs6x6U/yhsaPypMHsw
5b8FZ3r2NZDS9RN+gF0dbXa296T8vRuQj3XVdHV/yj8ZTj5i23/1ZMrvBjsV
ba54+B/lD4ODV1zZsW8c5c+ETa51cXC1pvwK+JHV12HvrCi/xpc6vqeVVNdt
PuWfAK9QXXL14BLKvwoWxnfr9x/9PftD8K/jwh4G4yn/dbg5ev/HOzzK/wYu
K6/dvoQ+r+jeWMdPuZxe83kR5R8PBxQdOWxP9YG3Aq6+H3XynD3lD4azpzx9
0oPOVyKFf4W6BC6i85NXwLbfM0taqb2xun1F+6zftu/jCso/Fq7+uuZpI5WH
YBlc+Tjjw2GqX+L9sCDN4EI/Gi9kl+Es9dlLPIMp/0tYc3RJ5Jgoyq+ixPWx
bs6Ii6f8pnDZP3ObocmU3wkOt17iEUnPA6QiuOp64Y3uCsqfAkc+MDgou0H5
X8Ahzr6/LeIo/z/YZ9z8RbwrlH/UN4w/xleU2pmUfzGccGrR8PPXKP9uWJEV
H6J9n/Inw9F3294+o/6JWwqn/1qmE3KX8rfB4Z+6ZmndpPxGTbieq9fkPrpF
+e1hdmb+FA2y0h/2HPTAcWUl5b8AX1uypvx35/j3FK582C4J16L+/zes96yt
YRT1x9Jh33F/vz+ie95+6v8XwNcK26PeOFD/7wdHJRud54mp/z8HT2h7emNJ
MfX/xXB11cYDHvT8RtICy2pejwx0p/6f04z6fMG6euxq6v/nw6XzHwgmbKH+
fxu8wqfk+dnT1P+fgbV+TrF7TPMNcQHc7sN/dYT+vuw7zD7pe6A/jTfKIT/q
+P6He7Hr9tD4ZwMn6mcahIfR+OcDNxU8tutD45coDtbMyNGJiaP8+bBHfbKJ
vIzyK+F9z+f+WvWO8g9uwfV7cCs4upryz4Zr1n1v0qql/JvhZtXqlO/3KX8M
/PyY8vcr+rz8PhyUdu5maBXlb4QTx1dHRNPnuQN/Yr750ePHFlpPILCCJ9Tz
rXp/p/zecLVbWk1aHeWPgme5TfIxb6T8MljY8+Poxy2Uvx7W2CCIUdJ2+/6/
OtZrlCSF/aT8M+Dth9yaVnVn5nfS9fCvoG2S0oGMFcdglu6j56mTaf6XDTts
NFrcGETrHz7B7X0HGzq/YyzU+o35ZhefHQduMJZYwq3bbpwZ+ZKx3AM2jguv
dXtFz/8i4HRDr+Pt7vT87zbM07/6MvwEY8FHuPlyovBODmNxn1Zcn789Y1ue
M5ZNgWXjE3KaFYyVa+C8KsufYycwzxs54XDcJvd/XlPp+edNOH/04uYoNXr+
+R5mrxDIdnPo+WevP6h/x84O1ZtFzz8nwWp6j6akB9Dzz9Ww5FiJpPQ9Pf88
DH/q8lJoMJa+/86AqzZd7v+GnqdK3sJaCzZELKum55892jD+uG4MqTjDmDUB
bvqp/UZnG2OuKzx89PuFI0T0/DcE1tayETT40/Pfa20d7+tO33ttBmNZJbzd
6HeviX0ZK9X+4v7vkE7OlFbmenDGwdwH138tH0D5l8OFMW/MJk2n/Afgct6M
sIRplD8NtrjRv8HCgPK/gp34VRMjR1F+1Xa03xHHuiXNpvxmsPd/k889mUTP
f53h5EEX9ffMpPz7YNsVi29eSKD8qbDx0P8euFyg/C/hsPvXK3bLKH+Xfxg/
THou7JtO+UfDpc07nIdkUP4l8JXrw87WXqf8e+CmWY8//aDn28qLcHHCizLz
Sir/53Bw2MKY3s2Uvx227Z9TeJhL61+MWfX8XwPnew2l9StSB1gl/aJ/1iha
/xAAX+u516rEkNY/JMGFn24tHNNK+Utgz4D8MxeeUf4/sMuQATpbWyj/iC71
fF9O7zuHP1L+hXC5UdRCbzp/ln/H9h2OsnfRlD8BrlK/n/MnlvI/gfPDnQys
mqn+/4Ld9cwt9dup/huq4POjiheYU/1W2sKe9r9lUw5Q/h2whZ6fpH4l5T8L
q8xI3vxMQOVfBFt91vsVdojK/wes8fhe1u5QKn+DrvV8M9Pi4ubnVP7zYKup
ZosrGii/L5y+RjtfRO1BGA+Pr9d9U5ZE+R/BnjEvqrLjKH8T3MobkH+D8rKG
qNbzXQcbDNufQ/nnwG2v+21beZvyb4HD76w8VXCWyv8U7CeX/Rx0jsr/ASyz
qAq9TvVJ+RU2nu7XZ8N5yq/breP8FaEfqL3Zz4JlrZssWpMp/ybY6fLTBv8H
lD8a1tw+wnP1VcqfCwec3dKcROXF/gIHqe9eepC+7+ANUEP5/Bsd3f6C8vNh
RV77yW5s+v5nA5zd/c6ugwb0/c8J2P24dUSrHn3/I1PruH4JhzRof24dLK5L
S2rUpfUv2t3r+Tavvy5eNJWxeHqHH6b4DxpO3/94wjX+ob9N1tL3P5FwlPKe
ZmkYff9zF45dIXPb+YDWf9XCyXVpW/+cp/rfV72e791m/a9gD9X/qbBV/J+r
9qlU/9fCgpfu0wYKqf6L4eZNQ3gRtH6LlwXbRF2cM5PWdwmr4dbj2vprMim/
Zo96fuCWO9/lBym/Oaxp+aS65hblXwOvaP81fcJtyn8EduqxdOZXOeW/AWfX
OGuufkn538HvLcX6ogzK31Ojni85pzZmexHlnwgLLt2a8pTWK3EE8Hj1z8HT
ab2XfSh807Bt06Is+v4vHU7dMfqh01H6/q8KbnpdPefdOvr+T71nPT/y1Izz
Nyzp+7//4HmXW9TcaL0hbyXs3PYyfLMFff93EJZFK4+b0fEkV+FNdxdHhtL3
wfLXcOkRVoDxdfr+V60XrsdBv167t9H3n1zY8H7v2Zm0vkXgAg98HRY6qDet
/wiCfeSy51f1af3HFXiTys4561fS+o9yOLowUjNTm9Z/dO2N7Z+/jf1O6zvs
x8Bc8wl/jvej9S9L4ex1Swu+X6b1D3vh3JHlmUUnaf3DJbgpJ42df5TWP5TB
Tuq+51Qsaf0DS7OeX61mP/oJrU8QmsDcRbc0He9SfkfYPk3NUtr5/W8gzA44
r9Cn9TSsi7DPmhlzFtDxuc9gj08ua9i0XkjwFw581y1hG60PEo/sU88XvT3h
XUDrM2SLYNXi+HmRtN5CuQtWm/1a6wKtz+Ekwoaxs/lnKim/HHZqFaWMoesp
aoVD6raWD1dS/uFsHC9q2NpTtN5FYQfv2zPmg/IL5d8JWw/yNZKwaP3refhK
5rr6Aaq0/vUxLL65oqSSji/5CfvXXR2iSfvLh/at53+KNbueTefLsoXDXZrS
To+j/NvhFdGRu8zvUX4JXJfkUmyZTfkL4Suho3ovpvU1smZ40wrDvqa3KL++
Fuwcmr6mM/9cWE19flTn/vZb4ajDZw1aQmn9x2nYcLKotCSP8j+EQzk/Dh6k
+qD4BqsHLYorpPVdbL1+9XxHPzv+GDo/njWs72e9K4mul1AI+yYH7PXfQt//
x8LVc78cerWJyj8Pls89ff3Vcsr/FfaaUrE0m9YDcwdp43qYN+zUpe/3BTNh
jo/JqO8DKP9GOD7Ub+5IXcp/Ep63MzU7l7Yrc+DqnXVrCmg9HKcBbl7hedms
c/2LTv96fvtVjdrttF5CxINtZs5ffZnWQ0i94Jurzb4bp1P7Pw4PzzneOqmI
2v89OHun8ueQb9T+P8NuJdaF22n9ibCfTj0/8av33AEfqf5Pg20iDjrXlVP7
XwdXDnpXrvqD2n8kHDlSsyh+H+W/A+f28cn9FELlX8N83vpFwUbKzx5Qz7cs
OeBxcyflt4CzvNZGpy2k/O6wauiq40EulP8o7HyjdmG/HMp/C/ZIsK/n0foo
0QfYbvWJfbZUntLeA9Fegz/c3kjbFZNhU5ftOXNofRbbDTaLKWAXfaXyD4PV
0tlb1j6j8s+EnWbmtXp9pvJXwD6Bta33FFT+GoNgbXMrPzof1kTY5kTbiZZM
yr8KbtialXae6rvgEJz9b7jp8JuU/zpsWTbDPvg65X8D+x+YWvGEzl/ZXbee
Lx2UI03/SfnHw4W7F21p6kLr/1bAoUZztu4aS+0/GL7j7aO7kEfr36WwqdN6
WyltV1TAlkFpu8ccoPXv3Qajv1CPsF16k9r/WDi4rOp0+jFq/8vgO55GOis8
qf3vh58vvsLpQtvll2E7TT3TjRG0/rEcVo5aUNL1LK3/U9HD+LXde1TCUVr/
Zwo3uH/o5+xI/b8TPLzfrYNbBdT/i2CLwWMzomm7MgW2PuHWbeBm6v9fwJvO
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
6DWsFaF1147Wg3G7ba3n30kenr6ILBgL8xp5xdPo74mXwZsmW8Yl0f2YbD+s
wVPrPYz2V16GLbal9wmn+0dOecfxeuwbaEDnY6/ii/HurKrrD9ouMoVnbZ8w
oYjySp3g6GTe4I+PKL8I1vf/eOEC7c++BFdx15XspPtV3gtY637l14Gd65/+
wePda6Rx1F9IRm1D+fWuOe56hvIvhkU3j6lM6Sz/QFhjeXLfwM7yT4Y/jb0W
NYbar6AUdhX9qZ9J5Sdug+NaHqlk0HaZ0XaUzyYTo1VUfkr77R3fb/a3PUzr
4zi74Gs3Eqb55lP+C7Bwk2pfY7qeoqdw5i936Qk6X+lvuKGm9picrBi2A/On
wd3aUmn+xLaDrcMO2z7tfP7rB+uEHtk4m34PTHgOHr/S/MYZR8pfDPfSjPWI
n0f5W2DVmUlfzen3HllD/TCfXmZZOYmeZ3Hnwx7jT+tMnkz5t8Hq85tqWzrn
P2fgc7+vuH2to/6/APbvV5ryg/pb5XfYarPPvi30+0gc/Z2Yf/fMKPw3k/Lb
wGpay3q+6vz9Mx9YsGha0Uf6e9I4mFPUU4VPz+MU+fA85fmpt+h82d9gVYFi
40j6PTXeYH/cf380fXXCmPLPhn9dXFzURHklm/07ns9zxKJFlD8GzkoQeT+l
7aw8OPrEzkmXO/M3dnze+My1AppfCgbuQn0eUuNxmH4vR2wFq5frfT/WRPm9
4Umc4uQoWo+mjIIrFRYbQykfJwf23zKrS8L/NN1/XEvfHwfwSRKlUiEVpqKQ
TIUQtpBKMkqSaBSKYhKSZIhCMoQkrB9IkiFJkiGEZFJJkqmkFIYQku+r+/58
/3w+7n69ds4995xz7z1Xn/I3wyYfTXa3Uf9S1Ceimad/ftWx/r0p/xS4PneH
hXgg5Q+Ez4y9Z+1J1omHs4ZNM/rBofwFsC3v6QIuzWcKG+HY6Lk3j9L/KdHd
gvb6aun0+WMpvz1s1q9fcn9a3461onP7P7ePUjo/wTkA+3/0qxQ00vH/Bizz
9PlmTb9X/G5L53jarPFRB+XXjkR/RdaleQZdD6gcDxf8GhUR15Py+8N2qhp+
bX+p/xMH7zk98vx//WtRLvz1o9ayuv/mP2thy/bZ7Hd0PZ9Ccyv6S7G/mq92
pfzjYMuNGa/W0npE3CWwt2ajLOy/6//2wgl2M/VY9H2Sq3BJ32VlB6g85W/g
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
4Wl+iyx5B/s0r3kV6sdYrp2B8jleZutjSvknwBYuYY+TzSm/P5wwmxde845Z
X1UQB+uovd4yfT1jcS5sZpHrXW1C+WvhUpcNdbZmlF/zPNqL2Dvsk0co/zg4
XTDd1Xw15V8CtyjevGAPofx7YaenuUa36fulV+Gk9vFTPfdR/jew4c4Tth37
KX/PTIw/lv2r0cym/LZwVsF6m4/0fwkXZ3beXxY7vuYx5Y+BQ0R9bi12pPK/
DAs9vhha03qprNdwzE1liwmtJ8npfgH73585bcojtP7laFilqGdtX1rvVLwQ
zug/z1r8hfLvhO/kuGR7jqf1Ly/CLtzZclM3Wv+yCrb9/tH3ay6tf6ma1cyb
dmJo+5e7tP6lVVbn/dY9tizdROtfesH2F+2OijOp/m+Hhy6Ju2JF64XqXIA9
C1uOj5tL9f8F7HZ0WXi3Ksrf5SL+r5j+/VprKf8IWDw85+fBj1T+8+BsbxfT
sEtU/iK4YGWNq1oqlX8GPPxel8j6k1T/y+Cq9Aj1uzeo/nfAFZL3WvPfUn4L
KdrvDTNdzt6l8p8LR45aPqZcSuW/BZ7W9NdvXBKV/1nYs8EqJmwplf8zWDFx
ztDdI6j8/8COizOefLah8h9yqZmXv/XPjsEDqPz5cHZZ1OmY4homfzjcMjN7
SuJixsI0WPSy5NFvXcaSErj1oabP07mM5W2wx8TlP7dZM2aZXsb4/4nhhcwY
xpxZMHfYMePnhxkLNsI6JWeteZ6Mxclwvtckf/6910z+x3DS195jPW4yVn6H
Ywu7ft1ZxpjNvoJ8OTdTTbSZ9/Nd4IQSh1/tRYxFobBwa9d+/vT50pOd26+V
Xt3Qg7GiCPafHp4y2I2xzjeYm6p8vH8F5R+Qjfana/SgukPM9wlnwK3hSitO
GmPJWrjo1OiRU7UZy4/DSf3OKp/tqmby34fjrXQ8D/RizFHCaUcz7ZuLXzH5
Da8289rqsx9OiGYsngZLJFdav0Yxlq2GQw0nzhoyhnm/MgG2C21O6PKN2c6+
C7eP0tFuDmLM/wh7Pfxn++wPY1G/nGYeZ+qxisdvmfdLebDTGl/nOk/m9ypW
wbGjWq6UcSn/EbhyeSJrvDqznSuDLcscxvb4xLxf+AH2uLJ0sbaM+XyJ/jW0
t9oxW0s/VjH5J8Nejw0nF9gx21mBcPoy49vHtRlzDsHtdbfjCq8zrxfchMMS
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
Oi+6/vUb7PWTPzDxIPV/Bmi28KriPj1w+a//MwMuGOofu8yRnn+0ttPTtpS+
sqX8x+H6O3vWpZLZ9+EI1o3eniMovxJO2DGNvXEs5Tfshe9rVJ+YQPmk02Bx
qN1DBV2fqFgNGycYP55I1xPqHINz/2zan0zPQ+Teha3bBx3cQ3mEH+EJo30c
Gun5jZJ+Wi28st0Xt6yk52nJebB+qkQ7jp4fyQqCKzOP7ZEvpPxH4MkHBlsE
OlN+GVx4XfnDwobyf4CdTI/odX1G1//pa7fwEh92ZEw+R9f/TYZdagxaE+j5
mOxAWD62WeBKz8fkH4LVyhO7muXR9Y834aL1BxbwN9H1j+9hpa7Qdt8Yyt9b
B/Vt/e2lhW3U/7WH3SyW/xz5g/r/y+GCJT9+6tlT/1cM5zpo6mYvov5/Hmz9
beu1ofR8ZXl95+uzv5rvUaH+v3bvFp6F34UWDQ/q/4+Ht+8b6VVcQ/1/Pzhn
qrl58x/q/++Dldwsy2waH8muwWnbgtviJ1P//y3s5acoKf3v+i9N3ZbO663r
zqRQ/38s3LddXvSBnscsEsB70rveCKTxjnQPrPsg7aE/PY9ZkQ1bT15n9t/1
WDpvYK1Jd+69p+eVc3vooX0pvTn2/jka/9nANTFqq0Zfo/HfIjjB/furfv89
/zoaTtLa0dJIz3tnXYat1rkvCaug8W81rBCGze5L128J1PTRfpSOCDhBz9MW
c+DE6qCxE+h6Npk3HFbsJ1t2nPJHwXElek+7HqP8F2G7v8qnPvS8b/5L2Gls
37dDt1D+rn2wv5h0G/HuIeUfCadI1ok4QZR/PhyfYRysjKbx33bYYOgMp64z
qfwzYXav/Yt96f8XVsC/WTOKJWWUn9UX+1+96YXZV2j8PxwudfFpC0yk/PPg
2oJjQSu9KP9WOEiqvro2mvKfgzsqwj/e9KXx/3PYpcG0scOSxv9/4eKD5ry/
s2j+z7wfjve2D2ZUZtH851y4aL9xZX0ozX9GwDoWdqXjx9D85xm47V0oa6Yj
zX/K4QB2u+6Gejr/9Rsubrp+4XYfOv83xKCF53OtdVHCIeb8CHc2HHBz1b9L
o2n+cxPcvmrzRO0LdP4jFVaNGR/x/Cud/3gCJ3FcTU6n0fxnG+wkvJGrMpjO
f5j0x/EwcEnLgPE0/+kKizfWfxqyiuY/N8A+l2/uPDWQ5n8lcFTGlFVFz+n8
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
u/Y6meJthIXZB/fG6FJ7i7bg873w8Z6RT+2tDWuFrA00ekHtvQoOf2+9eIsz
9feDcE+4zXizLIrvNdzsJK4VZPmViW9YK+afd5r3TLnHWEYLFlI78JbFY8x2
hGUUhD0aNXqY+IJbBfsfRYYXz2KcfA0O6G545/CeeX11LWzeVmYtNo85LjQE
hy1pc3k+g7HOjLYu0+JpPw03mjJ2c2gT3O88dsjBjHHkfjg+8Or3fAfGRWmw
8Yhz4vvzGPe8hDlvJ1l+ymLMGoRNDAZ97gQz5qh9FOw397rS7844mAOvNth1
4MNOxpmBsJGsRk1vIGNeClyqfFvSbR9jmRewssIEOZH7jNm/YK3LPkf0LlP8
U9u7TNuW/jkjRe+fvAz2MlJrNVrMuHoXzBk7U2+3HcV/CbaPqVBysaf4K+F7
b3zVD1lQ/D/hnwlPLdfbUvysT8gnRoyKCdlA8dvA5gYzfqw4RPEHwI6JYc+v
cSn+C7BZitukDyso/qewzJrjtk+cKP7vsPDqZk/9tRT/pA5cL+KjNwsdoPgX
w0u9zrVUjqP4/WHfFyfOfcig9k+Ed9Y2TlxhQ/GXwrGXG6Un5VP8PXDNC77C
uNcUv9Jn9I92pzV9VRS/BZw6/MrHB18p/q2wR+KVV1LVFH8c3PbkXlx2HcX/
GBZujvAsFv3GxM+HG27cEml/S/ErdHaZSpx8Mz6kheI3g2sG3ugk0ftzfOHQ
d079Jd0U/1m4Y/AkP380836ZRYLXL7cZv2oiY14nLD1XI2myJmOZcV/QHqXa
u3hsxuyF8DWO/94Dxoy53nDAGdHT700ZJ5+Bw3+8/j1Gh3F14RfBenL29o+W
jHVku/B9zjX6M5uOuxnDGWf2NYfpMY707BKsByz13zOd4o2Ezw/9mbBdm3HP
Pbh3zvXxP9sp3o/wlJu3dGN6Kd7RfPQ/scei1nyK1xBW/2s8Ikec2nsDnJXZ
rBkdQuf7Sfj3fM6nCXV8Jt48wd/HmWZZPGTMbuEL7kcQS758jjFXqhvznZKI
abr7GCcbwBnfz0+/8ZZxtRtcNSfoz/7vjIWOw26j+x97+zHWuQMPVhz9Y3aJ
xrf38Gz3Zx4PftL4NuIr8huzp7p9bTS+zYHLJwX/Xj2cxvO1MGf0dm1zVxrP
w+GgFZJinWI0nmfBUWN+jN/SQtezJrh5vbbke7oeZYr3IL91nzI9/hyN5zrw
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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
r9Cn9TSsi7DPmhlzFtDxuc9gj08ua9i0XkjwFw581y1hG60PEo/sU88XvT3h
XUDrM2SLYNXi+HmRtN5CuQtWm/1a6wKtz+Ekwoaxs/lnKim/HHZqFaWMoesp
aoVD6raWD1dS/uFsHC9q2NpTtN5FYQfv2zPmg/IL5d8JWw/yNZKwaP3refhK
5rr6Aaq0/vUxLL65oqSSji/5CfvXXR2iSfvLh/at53+KNbueTefLsoXDXZrS
To+j/NvhFdGRu8zvUX4JXJfkUmyZTfkL4Suho3ovpvU1smZ40wrDvqa3KL++
Fuwcmr6mM/9cWE19flTn/vZb4ajDZw1aQmn9x2nYcLKotCSP8j+EQzk/Dh6k
+qD4BqsHLYorpPVdbL1+9XxHPzv+GDo/njWs72e9K4mul1AI+yYH7PXfQt//
x8LVc78cerWJyj8Pls89ff3Vcsr/FfaaUrE0m9YDcwdp43qYN+zUpe/3BTNh
jo/JqO8DKP9GOD7Ub+5IXcp/Ep63MzU7l7Yrc+DqnXVrCmg9HKcBbl7hedms
c/2LTv96fvtVjdrttF5CxINtZs5ffZnWQ0i94Jurzb4bp1P7Pw4PzzneOqmI
2v89OHun8ueQb9T+P8NuJdaF22n9ibCfTj0/8av33AEfqf5Pg20iDjrXlVP7
XwdXDnpXrvqD2n8kHDlSsyh+H+W/A+f28cn9FELlX8N83vpFwUbKzx5Qz7cs
OeBxcyflt4CzvNZGpy2k/O6wauiq40EulP8o7HyjdmG/HMp/C/ZIsK/n0foo
0QfYbvWJfbZUntLeA9Fegz/c3kjbFZNhU5ftOXNofRbbDTaLKWAXfaXyD4PV
0tlb1j6j8s+EnWbmtXp9pvJXwD6Bta33FFT+GoNgbXMrPzof1kTY5kTbiZZM
yr8KbtialXae6rvgEJz9b7jp8JuU/zpsWTbDPvg65X8D+x+YWvGEzl/ZXbee
Lx2UI03/SfnHw4W7F21p6kLr/1bAoUZztu4aS+0/GL7j7aO7kEfr36WwqdN6
WyltV1TAlkFpu8ccoPXv3Qajv1CPsF16k9r/WDi4rOp0+jFq/8vgO55GOis8
qf3vh58vvsLpQtvll2E7TT3TjRG0/rEcVo5aUNL1LK3/U9HD+LXde1TCUVr/
Zwo3uH/o5+xI/b8TPLzfrYNbBdT/i2CLwWMzomm7MgW2PuHWbeBm6v9fwJvO
r7A+GU75/8FeTxINez6l/KOGYPzp8bZnryOUfzHcWloeNSOe8u+Gxwfe0ciL
pPzJcOI9r/MsZ8pfCmvPuqV6Yw/lb4M5r2/9WLaF8hvp1/NZxj/kyXR+cns4
619SbRGdP2sXbLa3i36lkPJfgI0LJ96O2Ev5n8LFt9nsQ2so/2/Yptpciz+T
8g8zqOdPTzd/9mgu5V8AB6bOXWK2ivL7wSovxj95tIzyn4MlW9JHZJBFxbBt
0gbNLF/K3wLr/H46dtIuys/hoL+aPGCejPKx58MuvLGROw5R/m2wWmupqSCY
8p+B9fym2dSdpvwF8Pi+F47NP0/5v8Ns89Bvm6Ipv/5QXP/7g15FUP3g2sAB
9b8/RYsovw+c1SX1fBP9PXEcnDfN7emHQMqfDw8f6hZ0KI7yK2FvTxXpTSo/
zmDDer7u3OE3/tDft58NB5XWH7Cl8xNthlmjDRe30HZpDCwu39zjSzblvw8/
z+PX9nlJ+Rvh/Isn3lz+Q/kHDqvnpwRkXrD9SPmt4PIe3e/v/0b5vWHl43+1
9/5R/ig4cv67a+X0eVYO3P44KXgYbefWwzfPzNH62IvmP/2Ho/yWPRpQ/YXy
z4BdVfZ38fhA+dfDqbVjZmV8p/zHYGnxD+FX2p+TDUd7fdlQ0kj5P8G8SOPR
Ye8ov9YI9I8n5Ql6tZTfEta6XnvJu5jye8BNC6vfz6TyYEd07B/dOMLqJOW/
DRc3lymuhlH+j/C1zWNcNyZR/j5GqN+/l532o/XG8inwOSut7ppplN8dbhdO
PsCl+sANh0P8BOP60HplwU240mVN9Lp8yv8edmMv3q6dQ/l7jcTxtfpfDLhD
+SfBuq+v7OwdSvlXw6Fv9r//R+VtfxjWv1mxbCHVZ1EG3KayOs3NnvK/hV1Y
Ozzdqf0qehjX83udlNS6Uv1mT4ATQmcYjaX2yXOF5wnPG+h7U/4QWN13Adth
EuW/BvOWv+C+M6T8lbBSfeehl9QfsLqPqufPut09rhu1Z+442Hz0nAMZsyj/
cjjI/Vdsdgv1/wdgnxOCZz9pvJGlwcHm84ftofeLlK/g8pc3S7ZVUf+valLP
d8hfPmJUd8pvBusn2ES8/k7jnzM8/mlzz55cyr8PDk5/Mbia1lsrUmHfoD5L
dv5H+V/C7E0tvV9Oo/xdRqM8R2ctvUzbhaPhFUfHn5rSmX8JHHbu5/DnlpR/
T4c/HPioyqf8KbCpXbXDPRXK/xy21l7bP4Hmk4J2WLY6VUeD1qOLjU3RH4gf
TGPVUn4H2Cti6qDvTZQ/ANb6775hLq0f5yTBwuWjLH4OovwlcJNnV63Vo6n8
/3R8nlezOH865R8xBnmi18cbWlD+hbD4k/2xRVMpvz/sWltseGYc5U+AS/eG
jzazpvxP4GJFwwYF9b+SXx2f/6b34D8aL+SGZqif8uaD01Io/wL42r8qDR9q
H9wdsHvjdH2ra5T/LOyyQHo4ncYfcRGcnKd4pUbtRfajw8f09V5ep/pvMBb9
YavjNzv6PGcebBU9gRslp/y+cNSGDabJDZQ/HlbbI7ypRv2F9BHs1JiZozOP
6X8UTXCKUFvlxA3G7CHcev6vgPVpD30Y8+bALtN/RB4IYizcAkcJk9W3RjGW
nILDDSNjOJcZyx/AvCC7AK4h874fSwkHr5jkOv4Vs52rOw73t35Km5b71P/N
gue1pr39Q+8LijfBVo5jDpmepfcfouHqk13rNtym9x9yYYn7XL44h97/+wKz
XboMHZ5O7/8NGI/yPZS2t42OL+LDT7q+/XpKxli6Ac4+/+/1zjeU/wQsGrNB
WX+L8stgjmLLwKBoyl8Hmy6bsbc8gPJr/4fj3Ss46RlI+afDeQNUi0s2U35P
WHffe8Xt4/T+4zFY9c+rAJ0zlP8uXDZIp+H7UcpfC0uMchx3pVH+vhPQHy1S
dB33lvJPhY1nDYlOKqP8a+Hg7Ild/SspvxiOu5K2cFED5c+Ca8zX6z+TU/5q
OPPWaedxZKnmRIwf39/9KntH+c3h9hGl+55/ofxrYPsZFiXhavT+5xE4hM/+
E0/HF96AK8JPL5vdTPnfwXWpU4c9qKL8PSeh/3Ld4ix6TvknweFtF16PfU35
BbBvhJ/h1M73P0PhtuIXk1zyKX86nBV2OpdXSvmrYFeNHxVi+rxSfTLO71Rp
WgVt5/wHWzhrzql5RvlXwqmhbmNan1L+g3DgIY2xt19S/quwv7WbfhkdT/Ea
ft/z6vfYRMqvZo72bnL0yeY7VP5cOHroqFeTqP4IXWDp7zeTZ9B2SRAcueHh
+xFUf+RXYIWPO6flHuV/BY9nO+kZ36T8Xaegv49e9jDmEuUf02GNN4POUH0R
L4Vj+2RVhkdQ/r3whA0eC/4JKP8l+Ir+/BVXZ1D+MrjiSbdXs3dTfpYFxgMd
4e1btL/IBA7xieuqP53yO8K/VDNj7BZS/kDYOnzG7jlmlP8ifG7JF56RLuV/
Bn/aMtfv/TDK/xeWmDafDa2n/m/kVPz9yrWs5p/U/y2CW30WR76g+QUrAJZp
d9Euk1D/lwjb2/F9X9F4KpDD1rxXOx+Pp/6vFX5uamQn2E/933BL3J+Myzs3
lsYTpR3semPo0ZXnaPzbCUcWLFje3Jvu/87DbvIR6pWGNP49hnNXVaVvnkH3
fz/h7EjWn5zddP83dBr6V/YzdQ8Huv+zhY11rr2dTPenvO1wYPzAhia63xdK
4Cdiq0vfzCl/IVzd5Hp4SCHlb4Z1/RZlas6h/AbTcbzbf19k0/jLnQtbZmzI
TJpN+bfCcZEmXU9QXvFpmPVn9vrniyn/Q/iKZOPonRMo/zc4r69cEjuD+n+9
GZiPW69a0kjzFXtr+Gbyl/wJ9L6zSAgLLNhVI3ZS/x8L22lcunyP3m9W5MGN
uokLr3fOf77CliFvVANjaPwbxMN8/f3fvyV0/yKcCc9b6PpGSfMNyUaYpXll
XPYvuv89CRvzg7X1Ot9/y4Xzlj7W7F1C978NsMcks15nOt9/0uFj/7bbv+bU
0fjPg+9oTf4w+A+N/17wvrRX08bS/Eh5HG6OveYcQvfnnHswpyJv5+rjVP6f
YY+p2sEJ+6n8+1l1jA8Ldr6l94+k02DekZyIcH8q/3XwvAkfTnPHUPlHwlan
L63J7Xz+dwfWVXlq8vQePf+o6fCGzVMjf9PzD/ZM3B8eW+ni20LPPyzgVs/q
a2vp/UXWWliu0nvOuDh6/+Vox/ZT8QmZdDzBLdj7ddCur/Q8UfwBTjVdcdWF
3teU9Z6F9lprtvmilN7/mAwbBRiYnfhK73+4wemKkGU+9HzJPgxO2fYvN57e
txZlwsM3sUeY/qTnPwq4OPhmyGl6P0ehMRvjUURW03p6v5M9ES5vKxtnuYzy
r4Kj3fJnGMyn+n8InlTh9jvFlp5/XIfPfd+75A69Xyl/A1tNWxHWbEHPP9St
cf9Zv2/m5c7nf+Nh58OCyXqjqPxXwCozHRzE5lT+wXB7V+2HjtReZdIOx64d
s4net1FWwFmrEu1CaX9Otzko3wkz7UKnUf6xsGLFR5sauj6iZXBYoUdswR/K
vx+2OnmIW0Pvryouw965YY3Ng6j8y+GQS+99r9LzNJ6KDfq7/N2F8+n5m9AU
tkqevPv4XMrvBJfPs91+0Ynyi+D4SsdyyVqq/5c6Pv++bfx6eh7NfQGfW+Rn
P7QHtf9/cOvDKTecaT4sHjUX/QknQj628/n3YvicZnVLn2jKvxsuT5W1a3Y+
/0yGG0+ojNUcTO2/FL6iWvg4gp4Hidpg9wr2fZ0Kqv9G83B9nmml96D2pbCH
7Rv9BXKaX7N3wQ05G3MTybwLsPORuePUxlD7fwrn3t+lDDOl9v8bDjfrczWd
7gfkw+ajvRs9rtZfQfntYLu1Fgb9O+9//ODhEbkRL6h/FJyDVW0/K3rS/Zi4
GNZwvdT7hxHlb4Ft/niZraXjKzm22H7pzU8P+j6AMx9uPdn79jl6fmK/DdY/
9tqlhq6/6AwsTH2geoXer5UWwFVV0UFzab6u+A5rb41xmGlD/Z/+AswP7ldq
TaL7GZ4N7C07PX4S9fdCH/haVl+LVb+p/OPgzLayepUhlD8fLtTNKr9B76Oy
vsGibb/yJ9H7l9zBdh33Vyt5jY+p/s+Gm/Ymd/2P7vfEm+FJ89Ub3Kg/k8XA
URuNrCZEUfnfh3ludzIH0fuhnEY4fdWZie70/NF+4MJ6vuN6t9+f5dT+reBN
vhrOKi+p/L3hoHlqzpfoeaMiCm7/YrRwIX0fwc7p2D5ovuV0en7Jq4d9vmj3
7i6l+t/fHuXlcLptAz1Pl8yAn/fN9Imm+1H5ejjgqdbgwm+U/zi86cMp7bN0
f8zNhj3/poTl0v2U4BM8fvoi9ZlU3mKtRSjPAV3nJdH3OzJLWKXW292H2oPS
A45O9E7Wp/eBORFwZmS22eG+VP63YW13z/s71an8P8KWg9z+vKf7QWkfB5yf
/Q110Ugq/ynw9Fk5v5aPoPJ3h22mK1cp6fc+eOFwSH6/7LccKv+bcHiM3m0T
ep9Z8h5ufpxswaXxXN5rMc4n3qvgKN3fsybDn/YETdxDz1+5q+GG6R6VLGoP
gsNw+fM56acmUv4M2Lv8QTdDM8r/Fs5v6WHc1ln/eziif7h80EY0mfJP6PCe
u47BVF/tXeFK381fNOl6iUJgnQ+chS7GlP8abJ7n5fuczldRCYcXG8zosZDy
d1+C8Wpx6ZUn8yn/OLhtwhStXfMo/3JY0zaOY2pF+Q/AxzNZuY8cKH8aXPba
+upvOj6rAmapHBPOpfkKV9UJ8zf+Y8MRnfnN4LInt/59s6X8zrCJi3XzDmqv
sn1wpLn5uJH0PFOZCn/if/8x043yv4T13CwvdF1A+bssxfjJ4lxPpuOLRsOW
n+7kuFEe6RLYasvGgd3tKP8e+LlUbVkcPe9gp8CRlm/zd3U+/3gOb9q99MUe
V8rfDiff+7tenc5XYuzc8fy+p51pZ//nAHsMG6kRTPWDtRsu80i3f03fj3GT
YJOBh+qn0vvrghK4RTZeqk7zJfEf2LdbRZt75/OPEcuwv9mRbevo+0HlQjj9
1IUy9RfU/v1hjRsuaW2dzz8SYM0jbqLNAyn/E9j76s+2DzQeSH/BHuEepdpU
vxWGLvV8szEj1OqoPbEXwLFmfc9LaL7J2wHbec357zd9XyA8C/MOnVgSQM9H
JEVwkHZ02wgaD+Q/YN+uU/PqelJ+znLU3+IyQT3l5c6Dze4W/Umh8VDgC1vp
LxXc6fz+Nx7OU8vY5U31W/YIVnd6ZbSI2oOyCTbkaX0tovrMGbIC7fVwZkM9
9R/2c2Cz5pKgX53Pf7bAzt5Hg+Nou/TUio76MGXmOnqepXgAT5rW67FjZ/kr
YcMhCeZDqb3ydFeifVx8GbuPfq9BOAs2STSt8l9P+TfB/ie+K17R9yHyaDj6
dUlPDj1/ZN2HBQYJbAsa37hf4DruI4d1XpR/gCvK/1DXwuTVlJ8P5zlbqHeh
8VO2AVYbuCZV0Z/yn+jYf2uW0Gs7lb8MrnYd6NxA44F9HZzS+2FtpZD6f+1V
6N9Ov5cGeVL/Px2OH9xV6kzzFYUn7JFmUhNLv9/DPgYbJkSWutH7yry7sHX/
lT+2D6H+vxa2jFnFXdg5/+0rwPzCONWlgd6fl0+FPfqubPOk+SbLA36iqWja
Q+9zc8Vw6bqa5aU0HxNkwepRbVPUWmn+Ww23OfHGV3e+/665GtdjAXtAn4E0
/zWHRZGLm1X/0fqHNbDrhAW/9/yl9R9H4CdKo/AHn2j9xw14wo7/1na5SOs/
3sFhs628T+yj9R893dD/1uQ6nveh9R+TYIFk7ygPD1r/IYD1XDStI2k9iTAU
bj7b7V2VLeVPhxvG8dq/0PvY8irYaE68iwG9r83qsaae7+JX4GhE6zO4/8E3
Z815qT6X8q+EOftjTEbQ7w2ID8L2bm3RUfT7ArKrMLfHqQLT7ZT/NWw5cof+
v2ia/6u543oVSN+n0vHsuTCrXKNgGa3nELnA6U91d77sQvPfILhsoUlilxU0
/78CN52bOHYX/b4P+xVs6lp0+/ES+v6369qO7wscC5bS+QvHwFcyQlwe0vvx
kqWwc8hAFw9aTyLfCw+8xXaU0f0LKxWOvGQh30e/B8Qtg4d3X26WQxawPDDe
2B525tP76GITuHnqOc/juyi/I+xpPfi9Hv1+kDIQzi15mrGfrgfnItxe5a/a
lbbbP4MfBcyaUUb5RH9hnryRf9qd8o9cV88X3y5SjPOi/IvgKqXWXf/dlD8A
DpxyTWVAEOVPhOsMdy9ff4nyy+ErJpbfv8ZT/lbYO2XI3/nHKf9wT7SvDV+M
zej3FVgL4eL2MpU9dD24O2FDu+b331Mo/3m4RjgsbTK9ry9+DHus1lH6XaH8
P+FmtV6ZG2g9jXLoevRvC/1fPflC+W3hX123nVw3ntr/dtj0aKV3nyjq/ySw
/UKNBY30+x7SQtjI7MQI3V3U/pthh14fHy86Qe3fwAvX42l8aVfqL3hzYU8/
j6KGDdT+t8I+zrEDjm6m+d9pePobj98xIpr/PYR1rv3cf9+L5n9NsGEf+ZTL
gTT/1duA63lhQ78pQTT/tYYFhxuzntD6DbEQrjwYEFJO809ZLJy+t8plOv0e
izIP9jboW37gAvV/X2F9jbbFtbcp/yBv9AfN3XV20vxWNBOWi5Y/1qLt0o1w
ruvdyW9TKf9J2Of2R5UZnd//58I6X47N3ETXi9cA+717c8qDfs9FqLOxnp8o
37j01A3Kz4OHR10cMpa+z5d7we+jjz+3uEP5T8ABrNWRIbQ+h3sPdlp+zNaB
xnPB540dzwuDV1uXU/5+mzB/6VKffeEJ5Z8Ge4/8Yt3jLeVfBwu2NGcso997
4UTCOntKBzd1zv/vwF6Lnuh8pN9fEdXAvfrr3W4XU372ZtwP9TP1+ElWWMC+
HmPHhx2k/GthXc6idxk0HvCOwsM/DsrnraL8t2DNwRynSipfyQfYpm1dyBKq
H/LeQuTZdcOgGz2fY5nDlqt/DNkeS/ndYFXNH5Ym9HsxgjDYJ+S3jYK2izM7
tr/IelVF11+mgF0mG7wQdf7+jcaWev4+xZQ95+l+hDMR7vXCbcmps5R/FTwv
q19acArlPwQb16x1v3yF8l+HVxRUb7el51GKN7B04oyQI1QebHWfen5Cz/F3
Tj2k/OPhK2vOFHjRehHhClifs2RLNd2vSYLh4lG2XZKpfsmlsFXo7N09On//
6DWsFaF1147Wg3G7ba3n30kenr6ILBgL8xp5xdPo74mXwZsmW8Yl0f2YbD+s
wVPrPYz2V16GLbal9wmn+0dOecfxeuwbaEDnY6/ii/HurKrrD9ouMoVnbZ8w
oYjySp3g6GTe4I+PKL8I1vf/eOEC7c++BFdx15XspPtV3gtY637l14Gd65/+
wePda6Rx1F9IRm1D+fWuOe56hvIvhkU3j6lM6Sz/QFhjeXLfwM7yT4Y/jb0W
NYbar6AUdhX9qZ9J5Sdug+NaHqlk0HaZ0XaUzyYTo1VUfkr77R3fb/a3PUzr
4zi74Gs3Eqb55lP+C7Bwk2pfY7qeoqdw5i936Qk6X+lvuKGm9picrBi2A/On
wd3aUmn+xLaDrcMO2z7tfP7rB+uEHtk4m34PTHgOHr/S/MYZR8pfDPfSjPWI
n0f5W2DVmUlfzen3HllD/TCfXmZZOYmeZ3Hnwx7jT+tMnkz5t8Hq85tqWzrn
P2fgc7+vuH2to/6/APbvV5ryg/pb5XfYarPPvi30+0gc/Z2Yf/fMKPw3k/Lb
wGpay3q+6vz9Mx9YsGha0Uf6e9I4mFPUU4VPz+MU+fA85fmpt+h82d9gVYFi
40j6PTXeYH/cf380fXXCmPLPhn9dXFzURHklm/07ns9zxKJFlD8GzkoQeT+l
7aw8OPrEzkmXO/M3dnze+My1AppfCgbuQn0eUuNxmH4vR2wFq5frfT/WRPm9
4Umc4uQoWo+mjIIrFRYbQykfJwf23zKrS8L/NN1/XEvfHwfwSRKlUiEVpqKQ
TIUQtpBKMkqSaBSKYhKSZIhCMoQkrB9IkiFJkiGEZFJJkqmkFIYQku+r+/58
/3w+7n69ds4995xz7z1Xn/I3wyYfTXa3Uf9S1Ceimad/ftWx/r0p/xS4PneH
hXgg5Q+Ez4y9Z+1J1omHs4ZNM/rBofwFsC3v6QIuzWcKG+HY6Lk3j9L/KdHd
gvb6aun0+WMpvz1s1q9fcn9a3461onP7P7ePUjo/wTkA+3/0qxQ00vH/Bizz
9PlmTb9X/G5L53jarPFRB+XXjkR/RdaleQZdD6gcDxf8GhUR15Py+8N2qhp+
bX+p/xMH7zk98vx//WtRLvz1o9ayuv/mP2thy/bZ7Hd0PZ9Ccyv6S7G/mq92
pfzjYMuNGa/W0npE3CWwt2ajLOy/6//2wgl2M/VY9H2Sq3BJ32VlB6g85W/g
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
4Wl+iyx5B/s0r3kV6sdYrp2B8jleZutjSvknwBYuYY+TzSm/P5wwmxde845Z
X1UQB+uovd4yfT1jcS5sZpHrXW1C+WvhUpcNdbZmlF/zPNqL2Dvsk0co/zg4
XTDd1Xw15V8CtyjevGAPofx7YaenuUa36fulV+Gk9vFTPfdR/jew4c4Tth37
KX/PTIw/lv2r0cym/LZwVsF6m4/0fwkXZ3beXxY7vuYx5Y+BQ0R9bi12pPK/
DAs9vhha03qprNdwzE1liwmtJ8npfgH73585bcojtP7laFilqGdtX1rvVLwQ
zug/z1r8hfLvhO/kuGR7jqf1Ly/CLtzZclM3Wv+yCrb9/tH3ay6tf6ma1cyb
dmJo+5e7tP6lVVbn/dY9tizdROtfesH2F+2OijOp/m+Hhy6Ju2JF64XqXIA9
C1uOj5tL9f8F7HZ0WXi3Ksrf5SL+r5j+/VprKf8IWDw85+fBj1T+8+BsbxfT
sEtU/iK4YGWNq1oqlX8GPPxel8j6k1T/y+Cq9Aj1uzeo/nfAFZL3WvPfUn4L
KdrvDTNdzt6l8p8LR45aPqZcSuW/BZ7W9NdvXBKV/1nYs8EqJmwplf8zWDFx
ztDdI6j8/8COizOefLah8h9yqZmXv/XPjsEDqPz5cHZZ1OmY4homfzjcMjN7
SuJixsI0WPSy5NFvXcaSErj1oabP07mM5W2wx8TlP7dZM2aZXsb4/4nhhcwY
xpxZMHfYMePnhxkLNsI6JWeteZ6Mxclwvtckf/6910z+x3DS195jPW4yVn6H
Ywu7ft1ZxpjNvoJ8OTdTTbSZ9/Nd4IQSh1/tRYxFobBwa9d+/vT50pOd26+V
Xt3Qg7GiCPafHp4y2I2xzjeYm6p8vH8F5R+Qjfana/SgukPM9wlnwK3hSitO
GmPJWrjo1OiRU7UZy4/DSf3OKp/tqmby34fjrXQ8D/RizFHCaUcz7ZuLXzH5
Da8289rqsx9OiGYsngZLJFdav0Yxlq2GQw0nzhoyhnm/MgG2C21O6PKN2c6+
C7eP0tFuDmLM/wh7Pfxn++wPY1G/nGYeZ+qxisdvmfdLebDTGl/nOk/m9ypW
wbGjWq6UcSn/EbhyeSJrvDqznSuDLcscxvb4xLxf+AH2uLJ0sbaM+XyJ/jW0
t9oxW0s/VjH5J8Nejw0nF9gx21mBcPoy49vHtRlzDsHtdbfjCq8zrxfchMMS
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
Oi+6/vUb7PWTPzDxIPV/Bmi28KriPj1w+a//MwMuGOofu8yRnn+0ttPTtpS+
sqX8x+H6O3vWpZLZ9+EI1o3eniMovxJO2DGNvXEs5Tfshe9rVJ+YQPmk02Bx
qN1DBV2fqFgNGycYP55I1xPqHINz/2zan0zPQ+Teha3bBx3cQ3mEH+EJo30c
Gun5jZJ+Wi28st0Xt6yk52nJebB+qkQ7jp4fyQqCKzOP7ZEvpPxH4MkHBlsE
OlN+GVx4XfnDwobyf4CdTI/odX1G1//pa7fwEh92ZEw+R9f/TYZdagxaE+j5
mOxAWD62WeBKz8fkH4LVyhO7muXR9Y834aL1BxbwN9H1j+9hpa7Qdt8Yyt9b
B/Vt/e2lhW3U/7WH3SyW/xz5g/r/y+GCJT9+6tlT/1cM5zpo6mYvov5/Hmz9
beu1ofR8ZXl95+uzv5rvUaH+v3bvFp6F34UWDQ/q/4+Ht+8b6VVcQ/1/Pzhn
qrl58x/q/++Dldwsy2waH8muwWnbgtviJ1P//y3s5acoKf3v+i9N3ZbO663r
zqRQ/38s3LddXvSBnscsEsB70rveCKTxjnQPrPsg7aE/PY9ZkQ1bT15n9t/1
WDpvYK1Jd+69p+eVc3vooX0pvTn2/jka/9nANTFqq0Zfo/HfIjjB/furfv89
/zoaTtLa0dJIz3tnXYat1rkvCaug8W81rBCGze5L128J1PTRfpSOCDhBz9MW
c+DE6qCxE+h6Npk3HFbsJ1t2nPJHwXElek+7HqP8F2G7v8qnPvS8b/5L2Gls
37dDt1D+rn2wv5h0G/HuIeUfCadI1ok4QZR/PhyfYRysjKbx33bYYOgMp64z
qfwzYXav/Yt96f8XVsC/WTOKJWWUn9UX+1+96YXZV2j8PxwudfFpC0yk/PPg
2oJjQSu9KP9WOEiqvro2mvKfgzsqwj/e9KXx/3PYpcG0scOSxv9/4eKD5ry/
s2j+z7wfjve2D2ZUZtH851y4aL9xZX0ozX9GwDoWdqXjx9D85xm47V0oa6Yj
zX/K4QB2u+6Gejr/9Rsubrp+4XYfOv83xKCF53OtdVHCIeb8CHc2HHBz1b9L
o2n+cxPcvmrzRO0LdP4jFVaNGR/x/Cud/3gCJ3FcTU6n0fxnG+wkvJGrMpjO
f5j0x/EwcEnLgPE0/+kKizfWfxqyiuY/N8A+l2/uPDWQ5n8lcFTGlFVFz+n8
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
u/Y6meJthIXZB/fG6FJ7i7bg873w8Z6RT+2tDWuFrA00ekHtvQoOf2+9eIsz
9feDcE+4zXizLIrvNdzsJK4VZPmViW9YK+afd5r3TLnHWEYLFlI78JbFY8x2
hGUUhD0aNXqY+IJbBfsfRYYXz2KcfA0O6G545/CeeX11LWzeVmYtNo85LjQE
hy1pc3k+g7HOjLYu0+JpPw03mjJ2c2gT3O88dsjBjHHkfjg+8Or3fAfGRWmw
8Yhz4vvzGPe8hDlvJ1l+ymLMGoRNDAZ97gQz5qh9FOw397rS7844mAOvNth1
4MNOxpmBsJGsRk1vIGNeClyqfFvSbR9jmRewssIEOZH7jNm/YK3LPkf0LlP8
U9u7TNuW/jkjRe+fvAz2MlJrNVrMuHoXzBk7U2+3HcV/CbaPqVBysaf4K+F7
b3zVD1lQ/D/hnwlPLdfbUvysT8gnRoyKCdlA8dvA5gYzfqw4RPEHwI6JYc+v
cSn+C7BZitukDyso/qewzJrjtk+cKP7vsPDqZk/9tRT/pA5cL+KjNwsdoPgX
w0u9zrVUjqP4/WHfFyfOfcig9k+Ed9Y2TlxhQ/GXwrGXG6Un5VP8PXDNC77C
uNcUv9Jn9I92pzV9VRS/BZw6/MrHB18p/q2wR+KVV1LVFH8c3PbkXlx2HcX/
GBZujvAsFv3GxM+HG27cEml/S/ErdHaZSpx8Mz6kheI3g2sG3ugk0ftzfOHQ
d079Jd0U/1m4Y/AkP380836ZRYLXL7cZv2oiY14nLD1XI2myJmOZcV/QHqXa
u3hsxuyF8DWO/94Dxoy53nDAGdHT700ZJ5+Bw3+8/j1Gh3F14RfBenL29o+W
jHVku/B9zjX6M5uOuxnDGWf2NYfpMY707BKsByz13zOd4o2Ezw/9mbBdm3HP
Pbh3zvXxP9sp3o/wlJu3dGN6Kd7RfPQ/scei1nyK1xBW/2s8Ikec2nsDnJXZ
rBkdQuf7Sfj3fM6nCXV8Jt48wd/HmWZZPGTMbuEL7kcQS758jjFXqhvznZKI
abr7GCcbwBnfz0+/8ZZxtRtcNSfoz/7vjIWOw26j+x97+zHWuQMPVhz9Y3aJ
xrf38Gz3Zx4PftL4NuIr8huzp7p9bTS+zYHLJwX/Xj2cxvO1MGf0dm1zVxrP
w+GgFZJinWI0nmfBUWN+jN/SQtezJrh5vbbke7oeZYr3IL91nzI9/hyN5zrw
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

              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{3.5343648*^9, 3.952368*^9}, {
              0, 1.228063314174329}}, "Frame" -> {{True, True}, {True, True}},
             "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
              Rational[1000, 3]}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> Rational[1, 3], 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.003666666666666667], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (DateString[
                 Identity[#], "DateShort"]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            DateListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{3.5343648*^9, 3.952368*^9}, {
             0, 1.228063314174329}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
             Rational[1000, 3]}, "Axes" -> {False, False}, "LabelStyle" -> {},
            "AspectRatio" -> Rational[1, 3], "DefaultStyle" -> {
             Directive[
              PointSize[0.003666666666666667], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (DateString[
                Identity[#], "DateShort"]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           DateListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.003666666666666667], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
r9Cn9TSsi7DPmhlzFtDxuc9gj08ua9i0XkjwFw581y1hG60PEo/sU88XvT3h
XUDrM2SLYNXi+HmRtN5CuQtWm/1a6wKtz+Ekwoaxs/lnKim/HHZqFaWMoesp
aoVD6raWD1dS/uFsHC9q2NpTtN5FYQfv2zPmg/IL5d8JWw/yNZKwaP3refhK
5rr6Aaq0/vUxLL65oqSSji/5CfvXXR2iSfvLh/at53+KNbueTefLsoXDXZrS
To+j/NvhFdGRu8zvUX4JXJfkUmyZTfkL4Suho3ovpvU1smZ40wrDvqa3KL++
Fuwcmr6mM/9cWE19flTn/vZb4ajDZw1aQmn9x2nYcLKotCSP8j+EQzk/Dh6k
+qD4BqsHLYorpPVdbL1+9XxHPzv+GDo/njWs72e9K4mul1AI+yYH7PXfQt//
x8LVc78cerWJyj8Pls89ff3Vcsr/FfaaUrE0m9YDcwdp43qYN+zUpe/3BTNh
jo/JqO8DKP9GOD7Ub+5IXcp/Ep63MzU7l7Yrc+DqnXVrCmg9HKcBbl7hedms
c/2LTv96fvtVjdrttF5CxINtZs5ffZnWQ0i94Jurzb4bp1P7Pw4PzzneOqmI
2v89OHun8ueQb9T+P8NuJdaF22n9ibCfTj0/8av33AEfqf5Pg20iDjrXlVP7
XwdXDnpXrvqD2n8kHDlSsyh+H+W/A+f28cn9FELlX8N83vpFwUbKzx5Qz7cs
OeBxcyflt4CzvNZGpy2k/O6wauiq40EulP8o7HyjdmG/HMp/C/ZIsK/n0foo
0QfYbvWJfbZUntLeA9Fegz/c3kjbFZNhU5ftOXNofRbbDTaLKWAXfaXyD4PV
0tlb1j6j8s+EnWbmtXp9pvJXwD6Bta33FFT+GoNgbXMrPzof1kTY5kTbiZZM
yr8KbtialXae6rvgEJz9b7jp8JuU/zpsWTbDPvg65X8D+x+YWvGEzl/ZXbee
Lx2UI03/SfnHw4W7F21p6kLr/1bAoUZztu4aS+0/GL7j7aO7kEfr36WwqdN6
WyltV1TAlkFpu8ccoPXv3Qajv1CPsF16k9r/WDi4rOp0+jFq/8vgO55GOis8
qf3vh58vvsLpQtvll2E7TT3TjRG0/rEcVo5aUNL1LK3/U9HD+LXde1TCUVr/
Zwo3uH/o5+xI/b8TPLzfrYNbBdT/i2CLwWMzomm7MgW2PuHWbeBm6v9fwJvO
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
6DWsFaF1147Wg3G7ba3n30kenr6ILBgL8xp5xdPo74mXwZsmW8Yl0f2YbD+s
wVPrPYz2V16GLbal9wmn+0dOecfxeuwbaEDnY6/ii/HurKrrD9ouMoVnbZ8w
oYjySp3g6GTe4I+PKL8I1vf/eOEC7c++BFdx15XspPtV3gtY637l14Gd65/+
wePda6Rx1F9IRm1D+fWuOe56hvIvhkU3j6lM6Sz/QFhjeXLfwM7yT4Y/jb0W
NYbar6AUdhX9qZ9J5Sdug+NaHqlk0HaZ0XaUzyYTo1VUfkr77R3fb/a3PUzr
4zi74Gs3Eqb55lP+C7Bwk2pfY7qeoqdw5i936Qk6X+lvuKGm9picrBi2A/On
wd3aUmn+xLaDrcMO2z7tfP7rB+uEHtk4m34PTHgOHr/S/MYZR8pfDPfSjPWI
n0f5W2DVmUlfzen3HllD/TCfXmZZOYmeZ3Hnwx7jT+tMnkz5t8Hq85tqWzrn
P2fgc7+vuH2to/6/APbvV5ryg/pb5XfYarPPvi30+0gc/Z2Yf/fMKPw3k/Lb
wGpay3q+6vz9Mx9YsGha0Uf6e9I4mFPUU4VPz+MU+fA85fmpt+h82d9gVYFi
40j6PTXeYH/cf380fXXCmPLPhn9dXFzURHklm/07ns9zxKJFlD8GzkoQeT+l
7aw8OPrEzkmXO/M3dnze+My1AppfCgbuQn0eUuNxmH4vR2wFq5frfT/WRPm9
4Umc4uQoWo+mjIIrFRYbQykfJwf23zKrS8L/NN1/XEvfHwfwSRKlUiEVpqKQ
TIUQtpBKMkqSaBSKYhKSZIhCMoQkrB9IkiFJkiGEZFJJkqmkFIYQku+r+/58
/3w+7n69ds4995xz7z1Xn/I3wyYfTXa3Uf9S1Ceimad/ftWx/r0p/xS4PneH
hXgg5Q+Ez4y9Z+1J1omHs4ZNM/rBofwFsC3v6QIuzWcKG+HY6Lk3j9L/KdHd
gvb6aun0+WMpvz1s1q9fcn9a3461onP7P7ePUjo/wTkA+3/0qxQ00vH/Bizz
9PlmTb9X/G5L53jarPFRB+XXjkR/RdaleQZdD6gcDxf8GhUR15Py+8N2qhp+
bX+p/xMH7zk98vx//WtRLvz1o9ayuv/mP2thy/bZ7Hd0PZ9Ccyv6S7G/mq92
pfzjYMuNGa/W0npE3CWwt2ajLOy/6//2wgl2M/VY9H2Sq3BJ32VlB6g85W/g
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
4Wl+iyx5B/s0r3kV6sdYrp2B8jleZutjSvknwBYuYY+TzSm/P5wwmxde845Z
X1UQB+uovd4yfT1jcS5sZpHrXW1C+WvhUpcNdbZmlF/zPNqL2Dvsk0co/zg4
XTDd1Xw15V8CtyjevGAPofx7YaenuUa36fulV+Gk9vFTPfdR/jew4c4Tth37
KX/PTIw/lv2r0cym/LZwVsF6m4/0fwkXZ3beXxY7vuYx5Y+BQ0R9bi12pPK/
DAs9vhha03qprNdwzE1liwmtJ8npfgH73585bcojtP7laFilqGdtX1rvVLwQ
zug/z1r8hfLvhO/kuGR7jqf1Ly/CLtzZclM3Wv+yCrb9/tH3ay6tf6ma1cyb
dmJo+5e7tP6lVVbn/dY9tizdROtfesH2F+2OijOp/m+Hhy6Ju2JF64XqXIA9
C1uOj5tL9f8F7HZ0WXi3Ksrf5SL+r5j+/VprKf8IWDw85+fBj1T+8+BsbxfT
sEtU/iK4YGWNq1oqlX8GPPxel8j6k1T/y+Cq9Aj1uzeo/nfAFZL3WvPfUn4L
KdrvDTNdzt6l8p8LR45aPqZcSuW/BZ7W9NdvXBKV/1nYs8EqJmwplf8zWDFx
ztDdI6j8/8COizOefLah8h9yqZmXv/XPjsEDqPz5cHZZ1OmY4homfzjcMjN7
SuJixsI0WPSy5NFvXcaSErj1oabP07mM5W2wx8TlP7dZM2aZXsb4/4nhhcwY
xpxZMHfYMePnhxkLNsI6JWeteZ6Mxclwvtckf/6910z+x3DS195jPW4yVn6H
Ywu7ft1ZxpjNvoJ8OTdTTbSZ9/Nd4IQSh1/tRYxFobBwa9d+/vT50pOd26+V
Xt3Qg7GiCPafHp4y2I2xzjeYm6p8vH8F5R+Qjfana/SgukPM9wlnwK3hSitO
GmPJWrjo1OiRU7UZy4/DSf3OKp/tqmby34fjrXQ8D/RizFHCaUcz7ZuLXzH5
Da8289rqsx9OiGYsngZLJFdav0Yxlq2GQw0nzhoyhnm/MgG2C21O6PKN2c6+
C7eP0tFuDmLM/wh7Pfxn++wPY1G/nGYeZ+qxisdvmfdLebDTGl/nOk/m9ypW
wbGjWq6UcSn/EbhyeSJrvDqznSuDLcscxvb4xLxf+AH2uLJ0sbaM+XyJ/jW0
t9oxW0s/VjH5J8Nejw0nF9gx21mBcPoy49vHtRlzDsHtdbfjCq8zrxfchMMS
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
Oi+6/vUb7PWTPzDxIPV/Bmi28KriPj1w+a//MwMuGOofu8yRnn+0ttPTtpS+
sqX8x+H6O3vWpZLZ9+EI1o3eniMovxJO2DGNvXEs5Tfshe9rVJ+YQPmk02Bx
qN1DBV2fqFgNGycYP55I1xPqHINz/2zan0zPQ+Teha3bBx3cQ3mEH+EJo30c
Gun5jZJ+Wi28st0Xt6yk52nJebB+qkQ7jp4fyQqCKzOP7ZEvpPxH4MkHBlsE
OlN+GVx4XfnDwobyf4CdTI/odX1G1//pa7fwEh92ZEw+R9f/TYZdagxaE+j5
mOxAWD62WeBKz8fkH4LVyhO7muXR9Y834aL1BxbwN9H1j+9hpa7Qdt8Yyt9b
B/Vt/e2lhW3U/7WH3SyW/xz5g/r/y+GCJT9+6tlT/1cM5zpo6mYvov5/Hmz9
beu1ofR8ZXl95+uzv5rvUaH+v3bvFp6F34UWDQ/q/4+Ht+8b6VVcQ/1/Pzhn
qrl58x/q/++Dldwsy2waH8muwWnbgtviJ1P//y3s5acoKf3v+i9N3ZbO663r
zqRQ/38s3LddXvSBnscsEsB70rveCKTxjnQPrPsg7aE/PY9ZkQ1bT15n9t/1
WDpvYK1Jd+69p+eVc3vooX0pvTn2/jka/9nANTFqq0Zfo/HfIjjB/furfv89
/zoaTtLa0dJIz3tnXYat1rkvCaug8W81rBCGze5L128J1PTRfpSOCDhBz9MW
c+DE6qCxE+h6Npk3HFbsJ1t2nPJHwXElek+7HqP8F2G7v8qnPvS8b/5L2Gls
37dDt1D+rn2wv5h0G/HuIeUfCadI1ok4QZR/PhyfYRysjKbx33bYYOgMp64z
qfwzYXav/Yt96f8XVsC/WTOKJWWUn9UX+1+96YXZV2j8PxwudfFpC0yk/PPg
2oJjQSu9KP9WOEiqvro2mvKfgzsqwj/e9KXx/3PYpcG0scOSxv9/4eKD5ry/
s2j+z7wfjve2D2ZUZtH851y4aL9xZX0ozX9GwDoWdqXjx9D85xm47V0oa6Yj
zX/K4QB2u+6Gejr/9Rsubrp+4XYfOv83xKCF53OtdVHCIeb8CHc2HHBz1b9L
o2n+cxPcvmrzRO0LdP4jFVaNGR/x/Cud/3gCJ3FcTU6n0fxnG+wkvJGrMpjO
f5j0x/EwcEnLgPE0/+kKizfWfxqyiuY/N8A+l2/uPDWQ5n8lcFTGlFVFz+n8
xyM4wLjH4DlP6fzPd5htvfq1ylY6/zPIEO8fMvaZnx6d/3CG7Wyv5IzsRde/
rYM1o7uaHaL5XMUJONd/5KN6TcpfBOc/6/nLooDm/77C0zSjG849pPOfxkb4
vNdpqvvofILEEc6pfqgS4EjlL4SDJj1/LDOh+b/jsP6BpgHOfJr/uwez2Fd1
S7rQ/N9nWP416O6QaTT/198Y+/eETKfsTJr/nQqLZXKnnVY0/xMMa72d79hA
38dOgH8oj250tKX5nzswd9uum0Po/IKopfPzXL25WnE0/9V3APpv5S72N+l8
hoIL2zn3D9i9l/b/VXD2h9khPTbT/n8Y5sbzu6v1p/3/Fsye8HD3Xzq/IGmC
7XsZJY+n8zNyvYEtvBhL39Rac8o/GU7zc7pfRPPbnABYdcSHptWvmf9fcBDm
Gq0ts+JT+efDATr9pVvofJesAc58XZuXcJLKX2dQC89y2FblCTofx54IW5g8
viFIpvq/DE67dPPPb2eq//thYXxQ5eydVP7X4bKsSx/uTaXzH3Vww++OhyOn
UX4tNvaHWD29STqU3w4uM/k0MJfOvwiXwionrZdsouuLJbFw/IzSO8vpfIw8
B87nauzXnkH538KNM8z36e+g8tcY3MITOZga755C+/8YWFp0d9I4+n6xLxxq
c0xeoUn7/2647G5WoAePyv8KnDD75c2P/5V/DZwzzH6k/wwqf3UT/L7Wuh7D
aH5VZA17e3FPu9B8vdQHdphcFHyNridX7ILt1E0HPqb5ZZ1LcINozgE/uv6a
+woOC7ptpP2J5r+7maJ+DFoYXMmi/KPgD5JDA5PpfJ18ASwbNNE/ZQK1f1Gm
nf3j8OXrqf5wsmD2KfUuEcMofyUc9kQ3UsSl/CpmaN+H6K/KX0X5LeGVm4Im
KOh8mtKzc/tgGx2V0ZR/GzxwxvqGRZMp/3n4yJYdtr/p/xKVd3pN62iJG+X/
B5fN3TbScAHlHzYE9Wfzs/ZuKym/B9ye6zFwNc0/cyPhDXGy8xn/zX+nw4v/
PMntoOvNJaVwXEX6kV3+lL8d1r8xoto7nPKbD0V7E3Wzdg0dXzlz4MmtC4fs
oeODYDO83Lyufq2C8p+Gdf4eKpBW0vHvKXz/wNmD0u70/ONf8IRe6prhy+n+
BzNzjA9W+F774kL3P7jBSfWXo+pm0P0PYbDV6a7RFqF0/0MKXNFN2GsHbVcU
w/G2I4/vH0f9n5/wBLWFDgetaf5vsAX+L4cx9z57U/9nJvzDV6Xq6Aqa/1sP
C2UvjU2FdP/TKbgg69Df3xl0/fsjOM1JK7CN5hM5rbCx6bR6lWV0/9PAYWiP
JJl72vrR/R9OcFHydtdj0+j5zyHwtC9z31Y5U/4kWGdOSchNW8r/AI78FGMV
5075v8CrfexjTodRfqPh+D/OjRjtmE35p8NV2r//JSRS/jXw8vOPpywsovyJ
cHVpwugROZS/EFbhHOu54DTl/wRPrvjp6hhD+Q1GoH+hd8t2AFnuABdcyxj5
2ZXu/wmG54ZMqfKg+504R+HEsuEZi6n8BLfhnnsfa5VfpP5PM1yZfTjKlUfl
38cS5V85+9DcbdT/mQKHd40xHhlL/Z+VsEtr9ycTCqj/Ew8bF7h8P0X3E4gK
YBPfEssHV6j/0whr5R11DD5M/R/dkWhfXZ4eeFFI/Z9JsOrObUY7U6n/swLe
s7agPOoo9X8OwAbaL9XcT1P/9wac7jFMWpZD/b93sMfEG89OGFH561ihfDYv
L/Mzo/KfAA81tT7W1Ej9X3+4pULw/uRYKu9cOOTT0MRCKyrvWjjvm8e+Bjcq
716j8H98nvg2h+6v44+Dg9yeBU0ji5bAy2syEiODqbz3wo3WwT+epVB59uSg
P7FD+mxmLN3PZAsrT8dMDexN45nFsE5NqaZzM81nx8Ch8bd3RevReOZK5/tl
CYMu9aDxzGv4MjfZJNeAxjPdR6O8P0iUvVPofrbRMGuX6am/9Dxx2UJYtXde
VfBaGs/shC1MD8cPKqDxjBQ+Ez88bnYXGs9VwcXhOb4fu9F4TtW6hef6O7Pb
pw80nrGC3Sz97jyqovGMF6zul+0/9w/dz7UDXj17yY18Gu9xL8BFE3/VWd2j
/C/gkhfzrFML6X6uLjb4v80neji2UP4RcMXqlJGaNL5kecKK1c7f4kdRfhGs
cj/R8xrdvynIgOubBcEfrGg8Vwa3h1+utKX7SWUdsDI525ATSONZC1vsb9GG
L1pW0njWHZZd3fYt9g3l3wIfXNN27eRTyn8WZt94ZmROr+fyx2B/3LIhL1mD
xqfhsINh9owhLlSeaXCYa5fvn5bS+LQE9mp6fshlKuX5BackvE7ikzmmY1t4
Jz8fm2PpQHlmwRlB84zXDKE8G2H5nSMZBfR5smTYuqg0sG8k5XkMF+Qu+3d7
I+X5Ad/38t91gH4/nz0Ox4PSv8cHzaM8LrCahXHS1Tk0Pg+F+6ZNuDvHkuYn
TsIrJ+h3+cCm8flDOOXfeNYHeh439xvs2vfKsSFbqDwH2GF/Dz33TKeCynMG
LExdvWPnGSrPtbD6z3NupnupfUqCt/s2jDtN9ZNzH25LHm88Skz35yk73Th+
XQLdLyo2HI//o89Tp4N0P6hsGrw9pnLVKDWqz6vh8OpNGeef0f56DDaRzU8y
JvPvwsYTlrgN0qXx+cfO1w98PceJnh8v7TcB9eVa1XwDY6rPPLhsypVQ7b5U
n4Ngp9SSup90vyf3COw2zLrw0WzKL4Mn8N8dFoRT/g+w8L3jFO5Eyq8/sYUn
UPN+u4nuP2RNgQ33J827QL+PEwhX2whD54mofT4Ez22zd3xG7bX4JrwnrOCD
/CDlfw9HvTSJmbWV2qve9vj9/YeX+G2g/Pbwnj6seX1OUf7lcIJrQf7Cq9Re
iWFbu6UdXeZSe5UHO/WZPEtjCh2f6uG2qx1e5WPo+KQ9qXO8ali/axi1Z+Ph
sDrrrf/aqH32g61X/nFaR+2nZB+cJ+s1xL6O2udrsLrwcFAL3c/IqoWPLJGe
2k7bOZqT0T+90PvEu3Jqn8fCFlO37VbYUH4B/LWnbZUR9Tdke+D4xQuke6l/
ocyGd0WX/EoeRfnfdG63mntCg0X5e0xB/yElZsixeMpvA4cv+hK+fRXlXwT/
bjbreoD+f0U0rDz5+N9u+j6dyzDfQffiyQTKXw17H0wI8y6m47Mat4Un6XB7
PJbu35VwYJW5fSv+OlD5e8O/W6Y23jlB5b8TTkkb8FuNjgeci3CrZdqiVJo/
EryE09XH/S2n+5fFXXktvBqzL6d27KD6Ph+utNxh22pK7fd2OD7AaKOfFc1H
ZcL1w1O3BdH96aIKmDN4TsF9aq+kLAeU/6Nlm/Qv0P4+HP467nr89320v8+D
vWrsnJz/Ox+5Fbaoerdy5neajz0HKx6svqaVRutxPIdFR44f2Man9Xj+whMa
ho3xWUXrcVhMxXbfUCWvB61HNRf23GRx+u4ZWo8jAo6aJRe30vMgxWfgfE1J
3m0HWm9hyDT8vm5Ljs33oPUmZsOXQ1Oq6mpovnkTvPh84pz9dD5Imgo76YZl
/FpI881P4Pv1JqECP5pvboO9grzT2v9bb8FkegvPrDZvdr05rTfhCoe9qV8z
bxqdX5HAq0+tNT3+3/O0v8Natu5hx9/R+bRBjnh/99wLH31pPtkZdrr6JVdA
5xtk6+AcwxLrR/T97CI4slePsgN0PpD/Fc6zeDl3czqdPzSegfZi2MwthfS8
d6kjnLXmjf53Or+mEMJmxfkhK1ZQnuMwZ1mIVvw/On9yD/aZkq8j3Erl9RkO
mLdi1xs6Hyfp74Txy0avr72O0Pz5VFinuMly83CaP18NJ/RY1TuF5vM5CfCn
uw+fZ9ZS3jud758tiDH4QedPW+BpiV2+u9J6F7K+ziiv08YONSF0/oALO8zQ
CbpAz0tnr4Kt854e35lJ+Q/Dug02atfofLboFjz248ssX1pvQtoE1zb7RapG
0/lTPReML9zkGUdW0PnTybDtU164lgflD4C3q3vz5DPo+HwQFg60FMQMpuNz
PnxZa1C/P9RfkDfAhofj3XtR/4fVeybGXz6TzlTQ6zkTYd3dqfO20vUFgmVw
3uiOIb+N6Pi8H/7h4yhWpf1Xdh3umerwqi/d/6+sg6dJVr7T0qP9VcsV9S9N
HBtF/XW+HbxhgUbD60N0fF4KZzU/DetL8/3SWLjm+N7QiUNpf82Bf0d+u7ZF
i/bXt3DFjZtrNGm+masxC///RfOddqfo+DQGrrnhaetG89cSX/iTQCcunNor
+W44Vp4zS01E7VM2/KF+3Yk5EdQ+1cBDR513sLpO7ZO6Wwsvomm++/0BlN8a
dow4s/Ad9f9kPnDCaa/gLdTeKHfBqr5ehzQmUv/kEpzxtEJTGEr9k1fwXHvX
BZE03y/qNhvjJS3eycGGlH8UrFZ/sbBPKR2fF8AZk9j9al7R8TkKdsrfs2/k
XcqfBW/YvPvd10eUvxIuke1pL71F+VX42H8u752t+ZLyW8IfLGfxTt6h/PPh
iv7Xnyw+RPm3wQZ9sy3vU/9acB7WPXZl3l/qv4rLYRHPaZTBR8r/D06sHDTe
4xqV/7A5qA/zwzk1V6n8PWCfqoWTN5+n8o+EPUtEbsaUV5QOa/U7OsxVk/KX
wvwuycFe1B9XtMPGk553qaLzQzrmc/F7Q8Nfsql+cud0mrPSgkOvF26GXSYV
ntUzpvp/Gs75flb3vinV/6dwSN7bx0snUf3/Dad0NAo2e1D9N3Nv4fnf++za
aE/13w1W/8R2TNGm8g+Di+eufvjzF+VPgVvXvaxdQ/1NZTEcMdpgur4Plf9P
ONE6a14DlTd/sAeOd45CnV/xlH8mnLN3vFFQHOVfD/fV2zmOf4Lyn4Lze+5v
2v3f8eoR7FEUfvIL1SduK1y1fpMvl45vwoHzsP+1X1isJaX8TrBOYUr60EuU
PwRWMRSdrS6k/Cfgkw9szq0VUf4H8FffMVlxsZT/C1zrOS9eJYjyG3li/5hq
7Fx5hPrn0zu9oul8Oq03o1zj2dkfrTMMT6P8iXCoWomw93/nDwvh2FCesjiJ
8n+C8y6FnnxBv09qMB/js29fT767RvkdYGPZygVXSil/MLzrJPvDznLKfxQu
OxZgZldC+W/DHpWb6i/Q+EbSDEf46BWF0uvlfbzw+Uotzmj6vSwunD3w5uHl
9Ps4K+FpO67MsafxkyAe9q6LOD6Lxh/igs7X63JFG+j/kDXCc0Ua+QHUXil1
F6C9G/h71r2FVP8nwap/fr5wof4Lf8WCzvOZAscXH6l/dgCuTdi82HwI7e/v
YJN7R5I6kqg/puON77+c0jOURfv7BLjMPTtpG62nI/SHk443l3v2oP09Dq6q
U+hOPkPzJblwyMreiuZomi+ogznJ0fyo69Qf77UQn//qXv6OC9QfHwc3btlo
aVBI/dElMLfHpIcp9H7ZXrhmsWJMCI1PlFdh8YvdV6bS+iBsBewQ+/rAfRrP
8Hv6tPDi3vo9iqXfI7KFs58LCz5QPuliWPW96cqlydQfjYHNTtnHv51E+a/A
kxP29hJHUH/0NRzZb4XzgVzK330Rtr+scX5D82HyhfCEgN2rlc2Udxfsssdg
7YI6yiuFdSPGm4wrobxVcIK5+uVqWv9ErLoY4+OsqLhPvWj/toJdbnB7zXSi
9s0Lru5YqFrZm8p3B+z1Ov1Stg6V7wV4+yqrC79+Ut4XizvPj0/enNNEebv4
ony9TBZG0fhEMQIuqX26e84Mat89YemWx25mdH6WK4Kr1z8fGEfjY2EGnDT/
qvHJZVS/y2DNwYbz85ZQ/e6AIzblj26i6/FYwwRor7wHNNdS/eW4wyGbvW5p
rKD6vQU+8+LJZAWdDxefhVXdhqzxEVD9fgbHapwK7+dO9fsPHDmGY2/03/h7
6BL8n093yEu70/7NhyNPmL9s+k798XB4bullt803qH6XwCv9+s7UaKC8v+Cl
huIJJfmU13Qp9t+YHy1nvtHxbBYccEXTvzyA8m6E7fOTpDsXUd5kOK+nhm8D
nf9nFcN9XQ/Z/7SmvD9g1vQXn6eMo7xsPxx/ztvob/xvvsEFTrSPjS8cSXlD
4cq+Pu5RlEd5EpauW6q6YzrlfQgvH8FL7fnf9QDf4JzZ87RfBVN7NsAf/2f7
9TVrVlN7NgMu+vTFpZDaE8Va2OxI07YXy6k9S4IVfQatr6L5FO592G3uh5eF
dDwSKuHKhEPT3ejzJYbLcDx68f72/49n0+DEq188rOn4x1oDtzbxtC/R/BPn
GKwTFDN/902q3x+Xdfbne2kMKqL63W856l/Z/mfu1D9Q8uCVZkEne9N2dhDs
ZNNucrCG6vcROGfLnaHvab0lkQw+88P4riddHyD9ACuz3T8/ofkPhf4K9D/7
XJV9ovWkdKbAoV1Dsh6epf05EB546YBz0Bbanw/Bao+Dy8fn0fj6Juy2Y+3x
U+G0f7+Hf3h8cPQT0/6tG4DtYzj7I+jzOPawU0W6YQjNhwqWw7Jdm6XnaL0x
sRi240dNDqD5eFkeLG+8elFO1+sq6+FPm7qNXK9D7Zl2IOrLyZm7Jvam9mw8
XLL+YBiHxssiP/jDxNuvl5vS/r0PDl+icljvE83/XoO1Zqy+N2E2zf/Wwlnb
Rv2bTtd7czVXYjzotvx6pCXNL4yFJ/f2yxj3lc5/CDp98aLq1+E0v7AHDlj9
6PCCYTS/cBVWNU3uUfTf9e9v4A2KbcHNdL2/oMcqtNct7t2m0/UGYhtYJ2pc
RPxDOv+zCG53XT5oEJ3PUkbDZovkfx1pvST2ZVjZbfF1Lzr/yK+GW/qO6P+C
zpeL1ILQ3qzqvu0Hl+5/4sC2Wi8sdmfT/a/ecNl5Xc7ybXT+dyecrtcxrvU+
3f92EW7VLMz9/Y/O/76EJReq5701pfPfXYPR/j2Z2bR6Kp3/HglH3bHXqqLz
QSwvOO9rzbcNCyn/djjmd8PzuJt0/jcTZm0eu3jfIjr/WwFze3d8ejuczn+z
VuP/SAsf4E7nL5XD4cqbgsvVQjr/Pw8uklW0mAyi859b4ZYH095+2ErnP8/B
YbNHPlsQSOc/n8Pq19jRd5dT/r+wvb1p/6Q1lN9iDby53PTCf/f/zoXlYZdH
HaPfJ4yA2eVTmg8F0/nfM7DPx2ZDozt0/lcOR63TiB5tTOc//8AG1zQPdqXf
zxkiRP/cslRl/346/z8bFjSx1wXPo/O/m2BXnY+HBg+g87+psL+N9ejv0+j+
1ydwYz/Pe8/o/l12GxzDrSk+F0n3v5qsRb4Ro+bXHaL7X13h3Ka2WT6OdP/3
BjhB06Nw/wu6/1UCh/rdsu8jpftfH8OqwzVvTWii+7+/wwafvSQ9ZtD9r4NC
sH+aX3hVa0D3vzvDUfdd9o73Y+6Pl6+DPfzD/o2yofv/T8JKh+5ff0Yz5hTB
FkmbT4YH0/oPX+EyXj9dbTta/8F4Her7ufoO81fM+hEyR7gobrK1ooHWvxDC
tppGu8ZX0voXx2H5t5B/7/Np/Yt7sCJ5N/vfRWa76DMsXBJ54XASs76GtH8o
fq/z4SuOnsx6JYqpsPq9B7ZWgxnrrIbllrPFx/sx5ibA9ncSri3SZtbrEN6B
DVTm21xqpPU/WuA0E+PbeseYz5f3Xd9ZHjkPkmsZs3iw/4ARtdJs5vM4q+Ci
CPXyQYG0/slhuHXRd4Ndz5nPF99a3zmf6b3m0g5mu6wJbjRftnlEJK3/orcB
+5va5G8a75nXsyfDhWfVjkm+0vonAbD0gNuErbdp/Y+DsOKge89lkxhL82Hj
V206g0No/Y8GuF40qPZ1Eq3/0Xsj6sO6J8KFe2n9k4lwe8qzwweiaP2TZXDx
s/luxaeY8pHsh9t2z824t57ZLr8O1/P9di6tpvz1sFPs2H2OQczncbTC0L7U
lJnZBTKvF9jBdsM2vf0rpfVflsKFdyIbH5nR+iexcEJKx6CLQyh/Dsw29R+z
R48x+y2sdPUKffqQ+T/4GptQ/3L/xYbR/y0aA0trs9WWpNP6N75wu0v9mrEJ
cib/brgoKmzK9sklTP5sWO7Xficp8imTvwZON2krHn/xCZNfPRyvt1R9nraT
scQaZu/I9t9pybxf7gPH+O5vXPClmMkfDTc2+ExcrsG8nnMJZsWJSlasYCx4
BVs07Fu2UeMxk7/bZvT/38k83xQ/YvKPgnW8InT3mz9k8i+A1f/sUGHnP2Dy
R8HC8XKzZ9sY87NgxcVk7rtbzPtFlXBAYMH1qduZ3ydViUB5RDZ7nV3J/D6F
JSw8/aDnigDGOvNhhe0Fdkoj8/u422AvtZX5nzyY9wvPw5X9/JL+RjP/n6Qc
jhnJD+4+i3m9/F+ni1yyltxlzBq+BXl/hN/6OYfJx/HY0nk9rkmdLJzyR8Kc
ecq++1YzFqd3bl9UZ+KbxFhWCsvdz6sVypn3K9vhBPsyXV4FY7Z5JH5P3MuF
ZxTM/8OfA8vnvzQaMrmIyb8ZFudNbne0ZSw9DTu5jwpvusn8X4qnMLu34s3P
RfeZ/L9hdWfBLbMdjLlmW1F+7pODEu4y7xe6wfzu+QdV6xlLwmD2c2OrTabM
97OewE79tVy/aDCfz/kJq7fwnS68ZD5PMFiE978YnvFdi3m/eCYcNmqUXncv
xrL1sFPDWdcM+nzlKdjgee6iFc8Zsx91vv6X98EfMUx+fiss/zxhz5JJVN4D
t+H/kRiGni2jvE6w+g/OmPZrjBUhsF25meucK8zv0zkBG9SeGlo3gTH3ASy4
/OLlNR3Gwi8w1zltxgBbxhKj7Xj/jiOuru1MHvl0WFFlFbmQtrOEMP+HoOl3
LOVPhMPchRt86fWCQrjte+jFJdnMdvEnWPgu7OWDp5TfYAdef/7Gx9U9Kb8D
HGD60jXmEdX3YDg9+tmL/oXM5/GPworDdYmfOhiLbsPyn/evlygYS5thdntt
v+0G95j8faJQP8276iR9LGTyc2F+cffGW6uZ7dyVcOX9uON5VYyF8bCyj1lf
K3fm8yQFnf67yOFBMlPe8kZYodT333iJyl9vJ+rzr3u5x7cy5kyCG2dFu20X
MRasgKUa6a2B65nyEh+AK72XO0s8qL7fgA2y9ofxNjJWvtvZef7FXseZz5it
swv/R3OXKO1wKv8JnR6Tv+XlaCp/f1iwu+BRI5+xNA6W+uya4jSbeb0it3P7
SZPqpmHM7+H2ikZ/xNY62s6GsXAcrFTvO26Fgsp7CawTsKyeX8F8nnwvLFef
qqKfypQPKwe2G8Mp1vnNmKOAw+4ViAc7MBb0jMHnPRzHDqyj8raFE5zmXXUq
pPJeDLMPfUocUEzlHQO3TTnr3yWK+T3sK53bb3w1UvFjvp//Gvaq00tbcZ1p
j0Tdd+P/TRt54cho5v+RjoZj3i0eOXg7034rFsKSr5X2Jx2Y9kpnF6xZHV8/
4xUd36WwtG4ZJzKQ1jergv0bHccMameOFxLVPTg+V2u/O7Oeju9WcPqoj0e6
vKL1vRbAUuO7J5v86Pi2A/Y3+rPvvg31by7AoRtLM/s70fGsy14cv5seRtS9
oOPZCJilbanQpfXL2J6weMqASx0m1J8RwaGry9yeWTLHW1EGnOnl9yx+Jh3P
y2B/H7c1g0ppPbMOWHlgsIvBEDqeD4vF/nVnvXn/6XQ8d4cTQl12lhYx3yfc
Arfsr5r+IIX6M2dhg+PGWbEOdDx/BpstH5JqN4Exqx0WfdXefWAXY87QfRi/
NTn/cKD1kgR8WLVhXuSgr3Q8D4eV9oOqP3djXi9Lg9PDtzta0PpqyhK4UhxZ
P436b+xfsP0Ri6BbtbSenWkc+muiQUMbvWk9t1lwwGLdMxbTqD+3Ma5z/Luy
vUSX8ifD/OW/DBJ2MtYpjuusX1szP09nPp/7AxYdEF3umUH9GfZ+/H+5305t
c6D+jAts3LKx/79MWs8qFK4f6XMr9QWt53cKZtd1X5/6k9bzewirlujvnDiV
1vP7Bid8HbT0Qm+mvyseIEZ/xHn+P7NExrIZcNTOBZaLaP1A5Vo4dryNlcVe
5v3sJJhdyToyhPpn/PvizuvbzrRMvELlr4SDAp7k1LvTemaGB7DdwrPrwFG0
ntU0WJH0Qcg/xLxeZw3cWrf1zvn+jLnH4IRVk38es6D13O7CjQMyvNg9aD2v
j7BFmXdV3wvM6+X9DuL/uHb7xL4blN+h0y9rvbO9aT23IDh2RZTlcF8q/yOw
+vx9aR19qD8vg4PExdqrjtN6bh86398W9q4HrR+m1D/UwstuCN+1sYLWc5sC
e5SlXPz+itbzCoRdFzc/fT+P1vM6BMu69RH50Ppi0ptwUZ9PfyY+ofXc3sPs
vUN922cy4xMd3XjsX3e/G8b2ofGMPcxu7p0vD6D1vJbD4u7G3s48xhIxrP/U
t6owlMYzebCIu+jUCDXK/w7O/1InPGpM+bUP4/tT9256vJmpb4Lxhzvvr7sS
dtqGKT+x3+HO+2lGL5T9pv78Pjj93pWdCyyo/l+DJcGOV1oP0XimFtYXLihO
ofaGr3kE5VU+ruJvNNX/sbBB3KQn6va0np8A9v8Qwtvzj+r/HthpwY9BZSFU
/6/CHqp5159r0P7/Bm59d3TVpFc0nulxFMerlJ+PrKKovbOBYzKmu4xdxli+
CA69Pyw8KIppH1kxsOqcxk8vX9N45jIseTRx4rnZjAXVMOtM3SudGTSeUUvA
/u+WfW7qDGa7jAPne02WXh7DWOkNC7t67i9IYczeCVusm2p7W8CYfxHObKha
ueYS9edfwk5ZO45mpNP4beQx1L/q607zQ6l994LD+vwezjJhzN0O29t8+OG7
g7EwE/b/VcYqpe2SCrjFe99q5RXGclYi/m+W4fE7YsasEXDbeeEDFS7lnQe7
jvObb3+N2S7Y2rl9iLZSup6x+Bys3NF9KfcYY+VfuKVGGvuBxpdsi+MtvAjH
+R+3n2S28+fCSSPDisfzGYsi4Bjx2JQXT5jjl/QM3BYTI5zjTOMVOdwiXT/M
X43y/oHTP72dtbQXjVeGJGH8tOe5In4FHc9mw5XRKiEBN2i9zk2w+vWVWTr+
tF5nKpxk1W3JeRat11kCp015/TmfzGmDLVu6OIV9pPI1OYHjvWHXtIajVL6u
cLX0HN/+PJXvBjgi8ge7pZ3yS+D4AQeD+9lT/sdwi8253rddqXy/w2FV1l1z
VKl8B53E93895pKyiLHUGVaInrQGvGO+T7EO9i9YsaehnNYrPQlzfBO3nl7C
mFsEt+yu+eaXQPX768nO6+sXqVr+YrZLjE+hvTtT6r/9OB3PHWF7/02+mxfQ
eHXtqc7+Qkej8Tpar/Q4XPTk71uz2bR/34Ntn/xyWjWejm+f4eosi8Bh/43X
+0tQP+PmL4gIo/o9VdLZX4wY2tWJ8q+GpVe4N/n/5U+AW257Z0VrUf47sEzS
O11vC/P/SVvgdFvXd8lrmf6Nom8y6of0TXF4GWMdHmzn8a9n79s0Hr3V6Yry
l8n3mP6evAkuGsP91/0BjUf1U9CfU2pnbFZlzJncabNu/ZM+Mq8XBMDSLydH
sscx/S/xQdhpUbaX8gxjWT6sftE3c/hmGo82wDHO7ke7Kmh80ju1sz3hWU82
ZMyfCAt6D83L9KD++TLYbvZ1UaAdjU/2w0LzGx6fA5nPU1yHA544LVy3jbFO
PcwS6CcYqTP9P65WGtqHhSOnp/Si8ZhdWmf5imKTPtB4bClst+6HW8J36q/G
wrKFngfXxFH//BrcdvtWiO916q++hSVjht3qdYj65xqn8Xtn+HqdaqP8Y053
3p/yta7wAeX3hUVzA3O09am/uht2OqvxQqZO/dVsmBM2YcKjVBqP1sB2HU1f
X1cxFqmfQX2fe/ansyb1z61hi4LwpXv/19K9xkPVRXEAlluSJAmpNEoSEoUi
aQih0qBQSZKEpEm6qYRUukmiXEslVCohUZQkJElCkjQhSUaSolLe/5z1fnx+
Z4xZs/fZZ689+6zznfIzF1gxrqsx8xXlo0fg4D4Lv0f0/bFvwz21H0Le7qb8
5C3s1rp/+nh/mq+LpeHzFM5tGdRn3q96Fuy8svSG1m3Kz1YLXOwmF/GZ8rMw
gVXvVblMpXy0Ac6723Z6TSitPwinY/yQ0jv8xY7pLz1a8O6ajZ+txzNmOcFC
m7ft3KXKmBMCc22jF8/QY/pTZh2srraavfU+rTcMwW67FjbnzaP+q3EV53dS
wVBdAPN69go4faWs9Pm/tN4QBBdpLbI9f4xxcjrMzbEQ9jdkxrvqGnie09eL
Lj+Zvxf6C7MbtQ9epP6uM/0avk+rSRwTT8ZudnBP/zGb6ztpvWEvzIvfwhl2
inn/oiuwjvKN+dcH6Px9AXsNs/q29gKdv7/hnLwMJ88KOn9Vr2M+0R5WPvst
jd+2cHotq0CfrneZu2Gp2uMrlKfS+HUJXirptvCNFWOZ53Bw8ZHSi12Uj/TD
eT73JbvNaPxWycDftyTaheyh6/MSmCtqrzOD1v+qd8C8cGP++rs0fifDsQ8W
9kqY0fhdAUd/fyu/p43qDffBHduXRb8YoPFb+Qbm96mmbT/qqN60FTxPtENi
2DLKT/zhFVuMxx+ZQuuNSbC6VpbqJEVabyuDM+MdWD5eNH59E7xfbiD3iCzF
P+Emri/+m0LfmND12gJ2Drky8Uowrbdy4TbZhF+RdXS9joclriW+/BJF43cJ
rDp442T2HYq/G9aaKC3vV0LxK94SzCeLW0rEafxeBOf1D8sddZ/i3wIreiVv
duFR/Odg9VGzFi6aT+P1F3jA8N+db7co3nGZeP2G+N0j5SkfYcMFk2SV9bNp
Pu4DS6WezAp1oPl4NNwW0hJTcIvysQdw3uAIaSd95jivA67U9R/gHaR8bOxt
fB+ahh0yTTQfWwA3DZva182hfGQTXKBQ+Pw05XfJp2Gro6tmP2RRPnYfTp5s
09BqSflYu+C4wR/Ja9W0nmqUhetjf6LTgS6af3rA0fZKR208Kf+KgNu2vzIL
F6N6unlZgv3hIr4liVRPsxUuf8H5PFaWfk8YlY3vW+FoqM00+j1hLlz09yMr
6iPNv9fDxuoBTqJHaf59HI5NGZHLPkrz79xswXp6m7Uz1V9n8+C22aP4itdp
/i2Zg/MreqivfB/Nv/VyBOvN3qXPdGn+7Qob90Tm8OjzCh0VuPB+whOq96uT
DZccOvw42pnq6b6DdRT72EuVKP8YfgfzRxHjMte99HuCLjxRvv26xjbGPWvg
2t5JDxeMovY+DJ9Iq0p79YDaOxOuXvNh+StNWk9vhD2+TLLjnaT5t2gu8s1R
Wk/OHKH1dG24Sc7HRIu+f5lVcNeomwsbDCn/OghnqsTuHBrLmHsDVhd/OzfJ
ldp32F2Mp3LvcodHUv1sLdhrMHvxpXTKNxwFniZjdCGO8q1gmHdbP9+6hPLN
a7DxKz+LP1QfuagWXipecVBhAfP99PwTvP9MEbvtfKqfPCMP5+NqlSoVP2pv
Bzgg48qbKH/Kt/bDKfG3oj9bU3unwem9fqkXA6m9X8J6ii8221K+JzMIq9ef
PihRRfm2Wj7e39z03Nrr1L85cM59/aeNgZRvB8Lqvjlz1TdRvp0Ch727abLD
kdr7BewyXLkvhPJnnV+C4wGTctmi1N5T76F9nCs/WNDniVwGq3vbmMy4T+29
C96X2io87Cz194uwUFv2GuF6ir8SLnk6986MG5Rv/oTD1riuKX5F8bPu4/vc
NnZbHH1fmTbwxOG1f79Q/skLgLsmNfdFyVH97Auw1k2RVLGHVD/6KZyTKBJi
vYby7e+wzntbWXcW5duTCjCez9PnVR+g+BfD0ZsLnnWWU77pD0t8jZzeVEHr
DYmC4y9XLw5oofWGUlhvmmny6pGMI3vg6kKRI2Z8Ot+VCnE+rp+msbCDcY85
rGi7v+ZJPPX3rTB3bEt6zFJab4mDaw+wFcM59PvZYzgv6M9q603U3/lw2ETh
l8V61N8VHuD6l7pgQdZw6u9mMHfnPYuwfhrffOHEn53v5H8x5p6FOz7wP19a
RuNbESxkb73slz71/044IPakhvx+6v/jHmK8e+k0x/80xb8QHvA7L/ToGsXv
DRsf/H2w3ITO9zOwh1WK3GxazygqhIPr5tz5zqb2/wSztW5Mv/+I2l+2CN+P
11GFPbOp/Y1h56YGn4Pvqf094UE5sW2WEdT+kUWC379uGUo/ofb+CE80SZFv
MaHxbfQjtMe6swZ7WTSebYA5a2U5q1uofU/CWg4Vq3Q3M68XyoOrd1p7BM6i
+ugtguNm6u/3b6f+LVWM68FEm5iOXVQf3QAOf3jG+SytZxS5wYpvzlv3VtD5
fQzu0P+d0GTMmHUHjnzh7fZWmc7v97De4CP55UtpPB/xGOfHq7tBxUZUH3kO
HNva4bzSgn4fXgvnXF6lEnSEfh8Oh73mV+3UaaB4s+Bw7hqZoeVUH7oJNnc5
njV6OHM/erJ4SZep7xzrCwmGVB9ZBw475W5yKJPq46+Bm9qM5ti9o/uDD8Fa
s2s+KI6m/RG34KIZFzOEY2l/xBu4K/7Rc116/k7PzCddpvcmjoqyoPoLLGf4
7B8FB126X5UTCvcsGlU5X4HuB8yAE+VPb1hC9Qsz6+FI/X0zmv+vByFU2mV6
06L5jhbVJ5TRhP2OLHsVvZHuB1wJ1040+XRWnvaDHIDd8qdKxnTSfpCrsHty
cqUFPY+q+hUc5N+tdM+c9oP8g2VrvC++m0L3m6iX4fv53LDaS4XuN7GHefKN
oxbR85Ei98FV93/3OB6i+yFT4fo4gx02znQ/ZDXs6qPkMpriYf2BK/vzU55K
UvzTytGeaazkZVR/Mng57JmofWF1O8W/B/ZLyuHULab4L8M3b6hNyqXvQ6YK
1lB7tf417W9hD8CltiEO6f/XA57yFP8vtVJXWofuh1wKSwekKhyg+h/VO+FI
p/KYjL+0H+QinGG2dZfdbYr/meDvZeJ2bhCj/UA/4NlrG+cr0P6dyMkV+H6e
2RYktdP+L2tYfovCFSu6H6Fne4Xg9yyJLi96fibrPKzmkpIwSPWtOOVwUOWS
ryV0/0ZwL3xYix84/wE9D3nisy5T/9RxN97PouchW8IVZQEjDaPoeaDb4MqA
bT6md+n+jATYOGneyYbbdH/GE9jnXHxaJz3fN/krXPM1SdFXku7XGF+J8eNw
77gR4+l5oOZwfd2uU14f6H4Gv0rB+or036/0vNHIYlgtdqodi54vW9QFX5P0
4Ii+pee/yj/vMlW6u1ZuXwY9/9UU5qmryDY/pue/boaLdOJO532h57/GwKpX
Z2mu9KN4H8I1MzcGmSVSvJ/hWNVn2dWDFK9cFd7P23txx2Z6/qkJ7NgYY/p/
fTCuFzz7XXzUsT66fyMK1go9zv//eczVBfBNrx/jF9HzyIU+CZyQ73XlAD3/
dswLtH/rkGNMLN1vMx+22hFhXmhJ99tshOXrIkXn0POai07Bhx2N5onS88J7
8mHJVUM9c+j5tKw2mLNyvXN1GbW3dDXa50DmTymq7xU8D47wXtJplE/3b7jD
ziZxd3KpnhTvBOzbfiV5iO43kbkLJzcVP1hK7cP+AJcExyQJh1H8I1+iv0yt
X12mQvGug+vPVfZIlFK9u2Mwa+aIHXVvqd5dDtyUI3lmxwDdr9IMV+bcDNRZ
QPfnSNRgfD/ZecqR6nEVza4R7F/+V3rlEN2v4gKnF14PeEj1EFlHBK+/v23j
A6pXxbkNu36oMmtvoXjfCo7v1Np6gOp/ZYq9wv+TVv5TdZTinQXL7Z0vbhVD
8a6Gry3vubGM6k2xw2DL+ouS6+n5z9ybsPiDqmwdaWrvBphrKfO3+xnVOxOu
xfjw68S8HPq+dZzgpvCXrWM7KN4Q2Ex/efeIH3R/znV4SphMpS/Vgyyqg4X+
Bm3vS6R4h2BRo6e3Uq9TvBp16A/Oa0uEJ1P/XgE7VxbcOrSJ+ncQrOy/WDNw
MfXvdDj86L1/chupf9fAQW8W+G9eTs83/wu7Gg/o26nQ852n12P88PfOY62h
5zvbwbVznv/iDGfuD0veCw8o+1sO3WZcfQWeYrpVjnWPsVA1fCy07YzHXrqf
7Dest6N66/nJnUz8qq+7TFvu+V30eMIcj7SFTYziClpnMMeLdsPHtM+w3Z8x
x4NVGjBeVtn2j7NgjmcugUsro7yfjP/CxLMDjoj+o7CglTkukwznqVabWn6j
eCrg+OthUpPbKZ4+mJW5wzWOni+drPwG57vk+A8di+j+OCvYR2nBrH9BFM92
OCvyzZgUJeb9dZJg7vOovvz1jCO/vRHcX2g8z2kh4x6LRrx+i4T7LX3m87G4
8MS8zP7jLow58bBXwZUTlbMZB5fAv/mxejlBjDO74c54f82aJxSf4lvE80Dc
TCyQscwiWCeCJzrsBmP2FrhgvOKEimjG3HPwvadH+Q8vME5+BM+usL+QTp+n
+gvst3HmurLFjIXkmwT3N2y8u1OGsQ4b9jTpTXI6xNjNBz57vP3HlxTGkdGw
zZA0r8iXcdEDuOD5XLvHHRR/B5x+d/LXT3cZs8a+Q/sEDYs+2MmYswA+9vD7
wsEEin8TrFx9izX5IMV/GnaZ8l4sJorivw8HsRQ3bh2g+NvhAqOp5huEu5j4
ZZoxfvrNNPwrz5hr1CxYn9M+KMtinOwBD/xM9p7Op/gjYLcJ19vZGsxxoXzY
XXirXv4sxjqtcDtnRtnP1xT/qPeCz7P32s8/FP9cOGDTgoQNpszri9bDofLb
X4yyYdxzHBa/dLP581rGrFzYxnzmC2Enxhwe7Lz1wmZLD8bBkrwu06iuG4qt
9owz9eDcXd+UOjIofld438hL530+U/8+Cpu3Wt/eN5naPxsO/n6q/qcItf87
ODVU5+tTOh+Sh39Af5m2MtJHm+LXhQemxnj7baH2d4EDjivPXbeN4s2Ed3+w
u/Y6meJthIXZB/fG6FJ7i7bg873w8Z6RT+2tDWuFrA00ekHtvQoOf2+9eIsz
9feDcE+4zXizLIrvNdzsJK4VZPmViW9YK+afd5r3TLnHWEYLFlI78JbFY8x2
hGUUhD0aNXqY+IJbBfsfRYYXz2KcfA0O6G545/CeeX11LWzeVmYtNo85LjQE
hy1pc3k+g7HOjLYu0+JpPw03mjJ2c2gT3O88dsjBjHHkfjg+8Or3fAfGRWmw
8Yhz4vvzGPe8hDlvJ1l+ymLMGoRNDAZ97gQz5qh9FOw397rS7844mAOvNth1
4MNOxpmBsJGsRk1vIGNeClyqfFvSbR9jmRewssIEOZH7jNm/YK3LPkf0LlP8
U9u7TNuW/jkjRe+fvAz2MlJrNVrMuHoXzBk7U2+3HcV/CbaPqVBysaf4K+F7
b3zVD1lQ/D/hnwlPLdfbUvysT8gnRoyKCdlA8dvA5gYzfqw4RPEHwI6JYc+v
cSn+C7BZitukDyso/qewzJrjtk+cKP7vsPDqZk/9tRT/pA5cL+KjNwsdoPgX
w0u9zrVUjqP4/WHfFyfOfcig9k+Ed9Y2TlxhQ/GXwrGXG6Un5VP8PXDNC77C
uNcUv9Jn9I92pzV9VRS/BZw6/MrHB18p/q2wR+KVV1LVFH8c3PbkXlx2HcX/
GBZujvAsFv3GxM+HG27cEml/S/ErdHaZSpx8Mz6kheI3g2sG3ugk0ftzfOHQ
d079Jd0U/1m4Y/AkP380836ZRYLXL7cZv2oiY14nLD1XI2myJmOZcV/QHqXa
u3hsxuyF8DWO/94Dxoy53nDAGdHT700ZJ5+Bw3+8/j1Gh3F14RfBenL29o+W
jHVku/B9zjX6M5uOuxnDGWf2NYfpMY707BKsByz13zOd4o2Ezw/9mbBdm3HP
Pbh3zvXxP9sp3o/wlJu3dGN6Kd7RfPQ/scei1nyK1xBW/2s8Ikec2nsDnJXZ
rBkdQuf7Sfj3fM6nCXV8Jt48wd/HmWZZPGTMbuEL7kcQS758jjFXqhvznZKI
abr7GCcbwBnfz0+/8ZZxtRtcNSfoz/7vjIWOw26j+x97+zHWuQMPVhz9Y3aJ
xrf38Gz3Zx4PftL4NuIr8huzp7p9bTS+zYHLJwX/Xj2cxvO1MGf0dm1zVxrP
w+GgFZJinWI0nmfBUWN+jN/SQtezJrh5vbbke7oeZYr3IL91nzI9/hyN5zrw
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

          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{3.5343648*^9, 3.952368*^9}, {0, 1.228063314174329}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {3.5343648*^9, 0}, "ImageSize" -> {1000, 
          Rational[1000, 3]}, "Axes" -> {False, False}, "LabelStyle" -> {}, 
        "AspectRatio" -> Rational[1, 3], "DefaultStyle" -> {
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (DateString[
             Identity[#], "DateShort"]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        DateListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5343648*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DefaultBaseStyle->{"PlotGraphics", "Graphics"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0%\"", ShowStringCharacters -> False], 0., AutoDelete -> 
           True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"10%\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"20%\"", ShowStringCharacters -> False], 0.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.30000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"30%\"", ShowStringCharacters -> False], 
           0.30000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"40%\"", ShowStringCharacters -> False], 0.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"50%\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.6000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"60%\"", ShowStringCharacters -> False], 
           0.6000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.7000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"70%\"", ShowStringCharacters -> False], 
           0.7000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"80%\"", ShowStringCharacters -> False], 0.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"90%\"", ShowStringCharacters -> False], 0.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"110%\"", ShowStringCharacters -> False], 1.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.2000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"120%\"", ShowStringCharacters -> False], 
           1.2000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"130%\"", ShowStringCharacters -> False], 1.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.4000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"140%\"", ShowStringCharacters -> False], 
           1.4000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"150%\"", ShowStringCharacters -> False], 1.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"160%\"", ShowStringCharacters -> False], 1.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.7000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"170%\"", ShowStringCharacters -> False], 
           1.7000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"180%\"", ShowStringCharacters -> False], 1.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.9000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"190%\"", ShowStringCharacters -> False], 
           1.9000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"200%\"", ShowStringCharacters -> False], 2., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"210%\"", ShowStringCharacters -> False], 2.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"220%\"", ShowStringCharacters -> False], 2.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"230%\"", ShowStringCharacters -> False], 
           2.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"240%\"", ShowStringCharacters -> False], 
           2.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"250%\"", ShowStringCharacters -> False], 2.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"260%\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"270%\"", ShowStringCharacters -> False], 2.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"280%\"", ShowStringCharacters -> False], 
           2.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"290%\"", ShowStringCharacters -> False], 
           2.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"300%\"", ShowStringCharacters -> False], 3., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"310%\"", ShowStringCharacters -> False], 3.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"320%\"", ShowStringCharacters -> False], 3.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"330%\"", ShowStringCharacters -> False], 
           3.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"340%\"", ShowStringCharacters -> False], 
           3.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"350%\"", ShowStringCharacters -> False], 3.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"360%\"", ShowStringCharacters -> False], 3.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"370%\"", ShowStringCharacters -> False], 3.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"380%\"", ShowStringCharacters -> False], 
           3.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"390%\"", ShowStringCharacters -> False], 
           3.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"400%\"", ShowStringCharacters -> False], 4., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.1000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"410%\"", ShowStringCharacters -> False], 
           4.1000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"420%\"", ShowStringCharacters -> False], 4.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"430%\"", ShowStringCharacters -> False], 4.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"440%\"", ShowStringCharacters -> False], 4.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"450%\"", ShowStringCharacters -> False], 4.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.6000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"460%\"", ShowStringCharacters -> False], 
           4.6000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"470%\"", ShowStringCharacters -> False], 4.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.800000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"480%\"", ShowStringCharacters -> False], 
           4.800000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"490%\"", ShowStringCharacters -> False], 4.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {5., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"500%\"", ShowStringCharacters -> False], 5., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}}, {{0., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0%\"", ShowStringCharacters -> False], 0., AutoDelete -> 
           True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"10%\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"20%\"", ShowStringCharacters -> False], 0.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.30000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"30%\"", ShowStringCharacters -> False], 
           0.30000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"40%\"", ShowStringCharacters -> False], 0.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"50%\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.6000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"60%\"", ShowStringCharacters -> False], 
           0.6000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.7000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"70%\"", ShowStringCharacters -> False], 
           0.7000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"80%\"", ShowStringCharacters -> False], 0.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"90%\"", ShowStringCharacters -> False], 0.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"110%\"", ShowStringCharacters -> False], 1.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.2000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"120%\"", ShowStringCharacters -> False], 
           1.2000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"130%\"", ShowStringCharacters -> False], 1.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.4000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"140%\"", ShowStringCharacters -> False], 
           1.4000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"150%\"", ShowStringCharacters -> False], 1.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"160%\"", ShowStringCharacters -> False], 1.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.7000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"170%\"", ShowStringCharacters -> False], 
           1.7000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"180%\"", ShowStringCharacters -> False], 1.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.9000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"190%\"", ShowStringCharacters -> False], 
           1.9000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"200%\"", ShowStringCharacters -> False], 2., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"210%\"", ShowStringCharacters -> False], 2.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"220%\"", ShowStringCharacters -> False], 2.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"230%\"", ShowStringCharacters -> False], 
           2.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"240%\"", ShowStringCharacters -> False], 
           2.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"250%\"", ShowStringCharacters -> False], 2.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"260%\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"270%\"", ShowStringCharacters -> False], 2.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"280%\"", ShowStringCharacters -> False], 
           2.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"290%\"", ShowStringCharacters -> False], 
           2.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"300%\"", ShowStringCharacters -> False], 3., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"310%\"", ShowStringCharacters -> False], 3.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"320%\"", ShowStringCharacters -> False], 3.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"330%\"", ShowStringCharacters -> False], 
           3.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"340%\"", ShowStringCharacters -> False], 
           3.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"350%\"", ShowStringCharacters -> False], 3.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"360%\"", ShowStringCharacters -> False], 3.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"370%\"", ShowStringCharacters -> False], 3.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"380%\"", ShowStringCharacters -> False], 
           3.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"390%\"", ShowStringCharacters -> False], 
           3.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"400%\"", ShowStringCharacters -> False], 4., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.1000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"410%\"", ShowStringCharacters -> False], 
           4.1000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"420%\"", ShowStringCharacters -> False], 4.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"430%\"", ShowStringCharacters -> False], 4.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"440%\"", ShowStringCharacters -> False], 4.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"450%\"", ShowStringCharacters -> False], 4.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.6000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"460%\"", ShowStringCharacters -> False], 
           4.6000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"470%\"", ShowStringCharacters -> False], 4.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.800000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"480%\"", ShowStringCharacters -> False], 
           4.800000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"490%\"", ShowStringCharacters -> False], 4.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {5., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"500%\"", ShowStringCharacters -> False], 5., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}}}, {
     Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
     Charting`DateTicksFunction[
     Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
  FrameTicksStyle->Directive[{16}],
  GridLines->{{
    3.4712928*^9, 3.4739712*^9, 3.4763904*^9, 3.4790688*^9, 3.4816608*^9, 
     3.4843392*^9, 3.4869312*^9, 3.4896096*^9, 3.492288*^9, 3.49488*^9, 
     3.4975584*^9, 3.5001504*^9, 3.5028288*^9, 3.5055072*^9, 3.5079264*^9, 
     3.5106048*^9, 3.5131968*^9, 3.5158752*^9, 3.5184672*^9, 3.5211456*^9, 
     3.523824*^9, 3.526416*^9, 3.5290944*^9, 3.5316864*^9, 3.5343648*^9, 
     3.5370432*^9, 3.5395488*^9, 3.5422272*^9, 3.5448192*^9, 3.5474976*^9, 
     3.5500896*^9, 3.552768*^9, 3.5554464*^9, 3.5580384*^9, 3.5607168*^9, 
     3.5633088*^9, 3.5659872*^9, 3.5686656*^9, 3.5710848*^9, 3.5737632*^9, 
     3.5763552*^9, 3.5790336*^9, 3.5816256*^9, 3.584304*^9, 3.5869824*^9, 
     3.5895744*^9, 3.5922528*^9, 3.5948448*^9, 3.5975232*^9, 3.6002016*^9, 
     3.6026208*^9, 3.6052992*^9, 3.6078912*^9, 3.6105696*^9, 3.6131616*^9, 
     3.61584*^9, 3.6185184*^9, 3.6211104*^9, 3.6237888*^9, 3.6263808*^9, 
     3.6290592*^9, 3.6317376*^9, 3.6341568*^9, 3.6368352*^9, 3.6394272*^9, 
     3.6421056*^9, 3.6446976*^9, 3.647376*^9, 3.6500544*^9, 3.6526464*^9, 
     3.6553248*^9, 3.6579168*^9, 3.6605952*^9, 3.6632736*^9, 3.6657792*^9, 
     3.6684576*^9, 3.6710496*^9, 3.673728*^9, 3.67632*^9, 3.6789984*^9, 
     3.6816768*^9, 3.6842688*^9, 3.6869472*^9, 3.6895392*^9, 3.6922176*^9, 
     3.694896*^9, 3.6973152*^9, 3.6999936*^9, 3.7025856*^9, 3.705264*^9, 
     3.707856*^9, 3.7105344*^9, 3.7132128*^9, 3.7158048*^9, 3.7184832*^9, 
     3.7210752*^9, 3.7237536*^9, 3.726432*^9, 3.7288512*^9, 3.7315296*^9, 
     3.7341216*^9, 3.7368*^9, 3.739392*^9, 3.7420704*^9, 3.7447488*^9, 
     3.7473408*^9, 3.7500192*^9, 3.7526112*^9, 3.7552896*^9, 3.757968*^9, 
     3.7603872*^9, 3.7630656*^9, 3.7656576*^9, 3.768336*^9, 3.770928*^9, 
     3.7736064*^9, 3.7762848*^9, 3.7788768*^9, 3.7815552*^9, 3.7841472*^9, 
     3.7868256*^9, 3.789504*^9, 3.7920096*^9, 3.794688*^9, 3.79728*^9, 
     3.7999584*^9, 3.8025504*^9, 3.8052288*^9, 3.8079072*^9, 3.8104992*^9, 
     3.8131776*^9, 3.8157696*^9, 3.818448*^9, 3.8211264*^9, 3.8235456*^9, 
     3.826224*^9, 3.828816*^9, 3.8314944*^9, 3.8340864*^9, 3.8367648*^9, 
     3.8394432*^9, 3.8420352*^9, 3.8447136*^9, 3.8473056*^9, 3.849984*^9, 
     3.8526624*^9, 3.8550816*^9, 3.85776*^9, 3.860352*^9, 3.8630304*^9, 
     3.8656224*^9, 3.8683008*^9, 3.8709792*^9, 3.8735712*^9, 3.8762496*^9, 
     3.8788416*^9, 3.88152*^9, 3.8841984*^9, 3.8866176*^9, 3.889296*^9, 
     3.891888*^9, 3.8945664*^9, 3.8971584*^9, 3.8998368*^9, 3.9025152*^9, 
     3.9051072*^9, 3.9077856*^9, 3.9103776*^9, 3.913056*^9, 3.9157344*^9, 
     3.91824*^9, 3.9209184*^9, 3.9235104*^9, 3.9261888*^9, 3.9287808*^9, 
     3.9314592*^9, 3.9341376*^9, 3.9367296*^9, 3.939408*^9, 3.942*^9, 
     3.9446784*^9, 3.9473568*^9, 3.949776*^9, 3.9524544*^9, 3.9550464*^9, 
     3.9577248*^9, 3.9603168*^9, 3.9629952*^9, 3.9656736*^9, 3.9682656*^9, 
     3.970944*^9, 3.973536*^9, 3.9762144*^9, 3.9788928*^9, 3.981312*^9, 
     3.9839904*^9, 3.9865824*^9, 3.9892608*^9, 3.9918528*^9, 3.9945312*^9, 
     3.9972096*^9, 3.9998016*^9, 4.00248*^9, 4.005072*^9, 4.0077504*^9, 
     4.0104288*^9, 4.012848*^9, 4.0155264*^9, 4.0181184*^9, 4.0207968*^9, 
     4.0233888*^9, 4.0260672*^9, 4.0287456*^9, 4.0313376*^9, 4.034016*^9, 
     4.036608*^9, 4.0392864*^9, 4.0419648*^9, 4.0444704*^9, 4.0471488*^9, 
     4.0497408*^9, 4.0524192*^9, 4.0550112*^9, 4.0576896*^9, 4.060368*^9, 
     4.06296*^9, 4.0656384*^9, 4.0682304*^9, 4.0709088*^9, 4.0735872*^9, 
     4.0760064*^9, 4.0786848*^9, 4.0812768*^9, 4.0839552*^9, 4.0865472*^9, 
     4.0892256*^9, 4.091904*^9, 4.094496*^9, 4.0971744*^9, 4.0997664*^9, 
     4.1024448*^9, {3.4712928*^9, 
      Thickness[Large]}, {3.5028288*^9, 
      Thickness[Large]}, {3.5343648*^9, 
      Thickness[Large]}, {3.5659872*^9, 
      Thickness[Large]}, {3.5975232*^9, 
      Thickness[Large]}, {3.6290592*^9, 
      Thickness[Large]}, {3.6605952*^9, 
      Thickness[Large]}, {3.6922176*^9, 
      Thickness[Large]}, {3.7237536*^9, 
      Thickness[Large]}, {3.7552896*^9, 
      Thickness[Large]}, {3.7868256*^9, 
      Thickness[Large]}, {3.818448*^9, 
      Thickness[Large]}, {3.849984*^9, 
      Thickness[Large]}, {3.88152*^9, 
      Thickness[Large]}, {3.913056*^9, 
      Thickness[Large]}, {3.9446784*^9, 
      Thickness[Large]}, {3.9762144*^9, 
      Thickness[Large]}, {4.0077504*^9, 
      Thickness[Large]}, {4.0392864*^9, 
      Thickness[Large]}, {4.0709088*^9, 
      Thickness[Large]}, {4.1024448*^9, 
      Thickness[
      Large]}}, {-5., -4.9, -4.8, -4.7, -4.6, -4.5, -4.4, -4.3, -4.2, -4.1, \
-4., -3.9, -3.8, -3.6999999999999997`, -3.6, -3.5, -3.4, -3.3, \
-3.1999999999999997`, -3.1, -3., -2.9, -2.8, -2.6999999999999997`, \
-2.5999999999999996`, -2.5, -2.4, -2.3, -2.1999999999999997`, \
-2.0999999999999996`, -1.9999999999999998`, -1.9, -1.7999999999999998`, \
-1.6999999999999997`, -1.5999999999999999`, -1.4999999999999998`, -1.4, \
-1.2999999999999998`, -1.1999999999999997`, -1.0999999999999999`, \
-0.9999999999999998, -0.8999999999999998, -0.7999999999999998, \
-0.6999999999999997, -0.5999999999999998, -0.4999999999999998, \
-0.39999999999999974`, -0.2999999999999997, -0.19999999999999973`, \
-0.09999999999999973, 2.7755575615628914`*^-16, 0.10000000000000028`, 
     0.2000000000000003, 0.30000000000000027`, 0.4000000000000003, 
     0.5000000000000003, 0.6000000000000003, 0.7000000000000003, 
     0.8000000000000003, 0.9000000000000004, 1.0000000000000004`, 
     1.1000000000000003`, 1.2000000000000004`, 1.3000000000000003`, 
     1.4000000000000004`, 1.5000000000000004`, 1.6000000000000003`, 
     1.7000000000000004`, 1.8000000000000003`, 1.9000000000000004`, 
     2.0000000000000004`, 2.1000000000000005`, 2.2, 2.3000000000000003`, 
     2.4000000000000004`, 2.5000000000000004`, 2.6000000000000005`, 
     2.7000000000000006`, 2.8000000000000003`, 2.9000000000000004`, 
     3.0000000000000004`, 3.1000000000000005`, 3.2000000000000006`, 
     3.3000000000000003`, 3.4000000000000004`, 3.5000000000000004`, 
     3.6000000000000005`, 3.7000000000000006`, 3.8000000000000007`, 
     3.9000000000000004`, 4.000000000000001, 4.1000000000000005`, 4.2, 
     4.300000000000001, 4.4, 4.500000000000001, 4.6000000000000005`, 4.7, 
     4.800000000000001, 4.9, 5.000000000000001, 5.1000000000000005`, 5.2, 
     5.300000000000001, 5.4, 5.500000000000001, 5.6000000000000005`, 5.7, 
     5.800000000000001, 5.9, 6.000000000000001, 6.1000000000000005`, 
     6.200000000000001, 6.300000000000001, 6.4, 6.500000000000001, 
     6.6000000000000005`, 6.700000000000001, 6.800000000000001, 6.9, 
     7.000000000000001, 7.1000000000000005`, 7.200000000000001, 
     7.300000000000001, 7.4, 7.500000000000001, 7.6000000000000005`, 
     7.700000000000001, 7.800000000000001, 7.9, 8., 8.100000000000001, 
     8.200000000000001, 8.3, 8.4, 8.5, 8.600000000000001, 8.700000000000001, 
     8.8, 8.9, 9., 9.100000000000001, 9.200000000000001, 9.3, 9.4, 9.5, 
     9.600000000000001, 9.700000000000001, 9.8, 9.9, 10., 10.100000000000001`,
      10.200000000000001`, 10.3, 10.4, 10.5, 10.600000000000001`, 
     10.700000000000001`, 10.8, 10.9, 11., 11.100000000000001`, 
     11.200000000000001`, 11.3, 11.4, 11.500000000000002`, 
     11.600000000000001`, 11.700000000000001`, 11.8, 11.9, 
     12.000000000000002`, 12.100000000000001`, 12.200000000000001`, 12.3, 
     12.4, 12.500000000000002`, 12.600000000000001`, 12.700000000000001`, 
     12.8, 12.9, 13.000000000000002`, 13.100000000000001`, 
     13.200000000000001`, 13.3, 13.4, 13.500000000000002`, 
     13.600000000000001`, 13.700000000000001`, 13.8, 13.9, 
     14.000000000000002`, 14.100000000000001`, 14.200000000000001`, 14.3, 
     14.4, 14.500000000000002`, 14.600000000000001`, 14.700000000000001`, 
     14.8, 14.9, 15.000000000000002`, 15.100000000000001`, 
     15.200000000000001`, 15.3, 15.4, 15.500000000000002`, 
     15.600000000000001`, 15.700000000000001`, 15.8, 15.9, 16., 16.1, 
     16.200000000000003`, 16.3, 16.400000000000002`, 16.5, 16.6, 
     16.700000000000003`, 16.8, 16.900000000000002`, 17., 17.1, 
     17.200000000000003`, 17.3, 17.400000000000002`, 17.5, 17.6, 
     17.700000000000003`, 17.8, 17.900000000000002`, 18., 18.1, 
     18.200000000000003`, 18.3, 18.400000000000002`, 18.5, 18.6, 
     18.700000000000003`, 18.8, 18.900000000000002`, 19., 19.1, 
     19.200000000000003`, 19.3, 19.400000000000002`, 19.5, 19.6, 
     19.700000000000003`, 19.8, 19.900000000000002`, 20., 20.1, 
     20.200000000000003`, 20.3, 20.400000000000002`, 20.5, 20.6, 
     20.700000000000003`, 20.8, 20.900000000000002`, 21., 21.1, 
     21.200000000000003`, 21.3, 21.400000000000002`, 21.5, 21.6, 
     21.700000000000003`, 21.8, 21.900000000000002`, 22., 22.1, 
     22.200000000000003`, 22.3, 22.400000000000002`, 22.5, 22.6, 
     22.700000000000003`, 22.8, 22.900000000000002`, 23., 23.1, 
     23.200000000000003`, 23.3, 23.400000000000002`, 23.5, 23.6, 
     23.700000000000003`, 23.8, 23.900000000000002`, 24., 24.1, 
     24.200000000000003`, 24.3, 24.400000000000002`, 24.5, 24.6, 
     24.700000000000003`, 24.8, 24.900000000000002`, 25., 25.1, 
     25.200000000000003`, 25.3, 25.400000000000002`, 25.5, 25.6, 
     25.700000000000003`, 25.8, 25.900000000000002`, 26., 26.1, 
     26.200000000000003`, 26.3, 26.400000000000002`, 26.5, 26.6, 
     26.700000000000003`, 26.8, 26.900000000000002`, 27., 27.1, 
     27.200000000000003`, 27.3, 27.400000000000002`, 27.500000000000004`, 
     27.6, 27.700000000000003`, 27.8, 27.900000000000002`, 
     28.000000000000004`, 28.1, 28.200000000000003`, 28.3, 
     28.400000000000002`, 28.500000000000004`, 28.6, 28.700000000000003`, 
     28.8, 28.900000000000002`, 29.000000000000004`, 29.1, 
     29.200000000000003`, 29.3, 29.400000000000002`, 29.500000000000004`, 
     29.6, 29.700000000000003`, 29.8, 29.900000000000002`, 
     30.000000000000004`, 30.1, 30.200000000000003`, 30.3, 
     30.400000000000002`, 30.500000000000004`, 30.6, 30.700000000000003`, 
     30.8, 30.900000000000002`, 31.000000000000004`, 31.1, 
     31.200000000000003`, 31.3, 31.400000000000002`, 31.500000000000004`, 
     31.6, 31.700000000000003`, 31.8, 31.900000000000002`, 32., 32.1, 32.2, 
     32.300000000000004`, 32.4, 32.5, 32.6, 32.7, 32.800000000000004`, 32.9, 
     33., 33.1, 33.2, 33.300000000000004`, 33.400000000000006`, 33.5, 33.6, 
     33.7, 33.800000000000004`, 33.900000000000006`, 34., 34.1, 34.2, 
     34.300000000000004`, 34.400000000000006`, 34.5, 34.6, 34.7, 
     34.800000000000004`, 34.900000000000006`, 35., 35.1, 35.2, 
     35.300000000000004`, 35.400000000000006`, 35.5, 35.6, 35.7, 
     35.800000000000004`, 35.900000000000006`, 36., 36.1, 36.2, 
     36.300000000000004`, 36.400000000000006`, 36.5, 36.6, 36.7, 
     36.800000000000004`, 36.900000000000006`, 37., 37.1, 37.2, 
     37.300000000000004`, 37.400000000000006`, 37.5, 37.6, 37.7, 
     37.800000000000004`, 37.900000000000006`, 38., 38.1, 38.2, 
     38.300000000000004`, 38.400000000000006`, 38.5, 38.6, 38.7, 
     38.800000000000004`, 38.900000000000006`, 39., 39.1, 39.2, 
     39.300000000000004`, 39.400000000000006`, 39.5, 39.6, 39.7, 
     39.800000000000004`, 39.900000000000006`, 40., 40.1, 40.2, 
     40.300000000000004`, 40.400000000000006`, 40.5, 40.6, 40.7, 
     40.800000000000004`, 40.900000000000006`, 41., 41.1, 41.2, 
     41.300000000000004`, 41.400000000000006`, 41.5, 41.6, 41.7, 
     41.800000000000004`, 41.900000000000006`, 42., 42.1, 42.2, 
     42.300000000000004`, 42.400000000000006`, 42.5, 42.6, 42.7, 
     42.800000000000004`, 42.900000000000006`, 43., 43.1, 43.2, 
     43.300000000000004`, 43.400000000000006`, 43.5, 43.6, 43.7, 
     43.800000000000004`, 43.900000000000006`, 44., 44.1, 44.2, 
     44.300000000000004`, 44.400000000000006`, 44.5, 44.6, 44.7, 
     44.800000000000004`, 44.900000000000006`, 45., 45.1, 45.2, 
     45.300000000000004`, 45.400000000000006`, 45.5, 45.6, 45.7, 
     45.800000000000004`, 45.900000000000006`, 46., 46.1, 46.2, 
     46.300000000000004`, 46.400000000000006`, 46.5, 46.6, 46.7, 
     46.800000000000004`, 46.900000000000006`, 47., 47.1, 47.2, 
     47.300000000000004`, 47.400000000000006`, 47.5, 47.6, 47.7, 
     47.800000000000004`, 47.900000000000006`, 48., 48.1, 48.2, 
     48.300000000000004`, 48.400000000000006`, 48.5, 48.6, 48.7, 
     48.800000000000004`, 48.900000000000006`, 49., 49.1, 49.2, 
     49.300000000000004`, 49.400000000000006`, 49.5, 49.6, 49.7, 
     49.800000000000004`, 49.900000000000006`, 50., {0., 
      Thickness[Large]}, {0.5, 
      Thickness[Large]}, {1., 
      Thickness[Large]}, {1.5, 
      Thickness[Large]}, {2., 
      Thickness[Large]}, {2.5, 
      Thickness[Large]}, {3., 
      Thickness[Large]}, {3.5, 
      Thickness[Large]}, {4., 
      Thickness[Large]}, {4.5, 
      Thickness[Large]}, {5., 
      Thickness[Large]}, {5.5, 
      Thickness[Large]}, {6., 
      Thickness[Large]}, {6.5, 
      Thickness[Large]}, {7., 
      Thickness[Large]}, {7.5, 
      Thickness[Large]}, {8., 
      Thickness[Large]}, {8.5, 
      Thickness[Large]}, {9., 
      Thickness[Large]}, {9.5, 
      Thickness[Large]}, {10., 
      Thickness[Large]}, {10.5, 
      Thickness[Large]}, {11., 
      Thickness[Large]}, {11.5, 
      Thickness[Large]}, {12., 
      Thickness[Large]}, {12.5, 
      Thickness[Large]}, {13., 
      Thickness[Large]}, {13.5, 
      Thickness[Large]}, {14., 
      Thickness[Large]}, {14.5, 
      Thickness[Large]}, {15., 
      Thickness[Large]}, {15.5, 
      Thickness[Large]}, {16., 
      Thickness[Large]}, {16.5, 
      Thickness[Large]}, {17., 
      Thickness[Large]}, {17.5, 
      Thickness[Large]}, {18., 
      Thickness[Large]}, {18.5, 
      Thickness[Large]}, {19., 
      Thickness[Large]}, {19.5, 
      Thickness[Large]}, {20., 
      Thickness[Large]}, {20.5, 
      Thickness[Large]}, {21., 
      Thickness[Large]}, {21.5, 
      Thickness[Large]}, {22., 
      Thickness[Large]}, {22.5, 
      Thickness[Large]}, {23., 
      Thickness[Large]}, {23.5, 
      Thickness[Large]}, {24., 
      Thickness[Large]}, {24.5, 
      Thickness[Large]}, {25., 
      Thickness[Large]}, {25.5, 
      Thickness[Large]}, {26., 
      Thickness[Large]}, {26.5, 
      Thickness[Large]}, {27., 
      Thickness[Large]}, {27.5, 
      Thickness[Large]}, {28., 
      Thickness[Large]}, {28.5, 
      Thickness[Large]}, {29., 
      Thickness[Large]}, {29.5, 
      Thickness[Large]}, {30., 
      Thickness[Large]}, {30.5, 
      Thickness[Large]}, {31., 
      Thickness[Large]}, {31.5, 
      Thickness[Large]}, {32., 
      Thickness[Large]}, {32.5, 
      Thickness[Large]}, {33., 
      Thickness[Large]}, {33.5, 
      Thickness[Large]}, {34., 
      Thickness[Large]}, {34.5, 
      Thickness[Large]}, {35., 
      Thickness[Large]}, {35.5, 
      Thickness[Large]}, {36., 
      Thickness[Large]}, {36.5, 
      Thickness[Large]}, {37., 
      Thickness[Large]}, {37.5, 
      Thickness[Large]}, {38., 
      Thickness[Large]}, {38.5, 
      Thickness[Large]}, {39., 
      Thickness[Large]}, {39.5, 
      Thickness[Large]}, {40., 
      Thickness[Large]}, {40.5, 
      Thickness[Large]}, {41., 
      Thickness[Large]}, {41.5, 
      Thickness[Large]}, {42., 
      Thickness[Large]}, {42.5, 
      Thickness[Large]}, {43., 
      Thickness[Large]}, {43.5, 
      Thickness[Large]}, {44., 
      Thickness[Large]}, {44.5, 
      Thickness[Large]}, {45., 
      Thickness[Large]}, {45.5, 
      Thickness[Large]}, {46., 
      Thickness[Large]}, {46.5, 
      Thickness[Large]}, {47., 
      Thickness[Large]}, {47.5, 
      Thickness[Large]}, {48., 
      Thickness[Large]}, {48.5, 
      Thickness[Large]}, {49., 
      Thickness[Large]}, {49.5, 
      Thickness[Large]}, {50., 
      Thickness[Large]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImageSize->1000,
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> Automatic, "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotInteractivity:>True,
  PlotLabel->FormBox[
    TagBox[
     GridBox[{{
        StyleBox["\"BTC-USD annualized ROI since date until today\"", {20, 
          RGBColor[1, 0, 0]}, StripOnInput -> False]}, {
        StyleBox[
         InterpretationBox[
         "\"Overall mean ROI: \
\\!\\(\\*FormBox[\\\"\\\\\\\"68.72%\\\\\\\"\\\", TraditionalForm]\\)\"", 
          StringForm["Overall mean ROI: ``", 
           PercentForm[0.6871688779725695]], Editable -> False], {15}, 
         StripOnInput -> False]}, {
        StyleBox[
        "\"(updated: Mon 6 Oct 2025 14:39:56)\"", {15}, StripOnInput -> 
         False]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
      DefaultBaseStyle -> "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
    TraditionalForm],
  PlotRange->{{3.5343648*^9, 3.952368*^9}, {0, 1.228063314174329}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, {{0., 
      FormBox["0.`", TraditionalForm]}, {0.01, 
      FormBox["0.01`", TraditionalForm]}, {0.02, 
      FormBox["0.02`", TraditionalForm]}, {0.03, 
      FormBox["0.03`", TraditionalForm]}, {0.04, 
      FormBox["0.04`", TraditionalForm]}, {0.05, 
      FormBox["0.05`", TraditionalForm]}, {0.06, 
      FormBox["0.06`", TraditionalForm]}, {0.07, 
      FormBox["0.07`", TraditionalForm]}, {0.08, 
      FormBox["0.08`", TraditionalForm]}, {0.09, 
      FormBox["0.09`", TraditionalForm]}, {0.1, 
      FormBox["0.1`", TraditionalForm]}, {0.11, 
      FormBox["0.11`", TraditionalForm]}, {0.12, 
      FormBox["0.12`", TraditionalForm]}, {0.13, 
      FormBox["0.13`", TraditionalForm]}, {0.14, 
      FormBox["0.14`", TraditionalForm]}, {0.15, 
      FormBox["0.15`", TraditionalForm]}, {0.16, 
      FormBox["0.16`", TraditionalForm]}, {0.17, 
      FormBox["0.17`", TraditionalForm]}, {0.18, 
      FormBox["0.18`", TraditionalForm]}, {0.19, 
      FormBox["0.19`", TraditionalForm]}, {0.2, 
      FormBox["0.2`", TraditionalForm]}, {0.21, 
      FormBox["0.21`", TraditionalForm]}, {0.22, 
      FormBox["0.22`", TraditionalForm]}, {0.23, 
      FormBox["0.23`", TraditionalForm]}, {0.24, 
      FormBox["0.24`", TraditionalForm]}, {0.25, 
      FormBox["0.25`", TraditionalForm]}, {0.26, 
      FormBox["0.26`", TraditionalForm]}, {0.27, 
      FormBox["0.27`", TraditionalForm]}, {0.28, 
      FormBox["0.28`", TraditionalForm]}, {0.29, 
      FormBox["0.29`", TraditionalForm]}, {0.3, 
      FormBox["0.3`", TraditionalForm]}, {0.31, 
      FormBox["0.31`", TraditionalForm]}, {0.32, 
      FormBox["0.32`", TraditionalForm]}, {0.33, 
      FormBox["0.33`", TraditionalForm]}, {0.34, 
      FormBox["0.34`", TraditionalForm]}, {0.35000000000000003`, 
      FormBox["0.35000000000000003`", TraditionalForm]}, {0.36, 
      FormBox["0.36`", TraditionalForm]}, {0.37, 
      FormBox["0.37`", TraditionalForm]}, {0.38, 
      FormBox["0.38`", TraditionalForm]}, {0.39, 
      FormBox["0.39`", TraditionalForm]}, {0.4, 
      FormBox["0.4`", TraditionalForm]}, {0.41000000000000003`, 
      FormBox["0.41000000000000003`", TraditionalForm]}, {0.42, 
      FormBox["0.42`", TraditionalForm]}, {0.43, 
      FormBox["0.43`", TraditionalForm]}, {0.44, 
      FormBox["0.44`", TraditionalForm]}, {0.45, 
      FormBox["0.45`", TraditionalForm]}, {0.46, 
      FormBox["0.46`", TraditionalForm]}, {0.47000000000000003`, 
      FormBox["0.47000000000000003`", TraditionalForm]}, {0.48, 
      FormBox["0.48`", TraditionalForm]}, {0.49, 
      FormBox["0.49`", TraditionalForm]}, {0.5, 
      FormBox["0.5`", TraditionalForm]}, {0.51, 
      FormBox["0.51`", TraditionalForm]}, {0.52, 
      FormBox["0.52`", TraditionalForm]}, {0.53, 
      FormBox["0.53`", TraditionalForm]}, {0.54, 
      FormBox["0.54`", TraditionalForm]}, {0.55, 
      FormBox["0.55`", TraditionalForm]}, {0.56, 
      FormBox["0.56`", TraditionalForm]}, {0.5700000000000001, 
      FormBox["0.5700000000000001`", TraditionalForm]}, {0.58, 
      FormBox["0.58`", TraditionalForm]}, {0.59, 
      FormBox["0.59`", TraditionalForm]}, {0.6, 
      FormBox["0.6`", TraditionalForm]}, {0.61, 
      FormBox["0.61`", TraditionalForm]}, {0.62, 
      FormBox["0.62`", TraditionalForm]}, {0.63, 
      FormBox["0.63`", TraditionalForm]}, {0.64, 
      FormBox["0.64`", TraditionalForm]}, {0.65, 
      FormBox["0.65`", TraditionalForm]}, {0.66, 
      FormBox["0.66`", TraditionalForm]}, {0.67, 
      FormBox["0.67`", TraditionalForm]}, {0.68, 
      FormBox["0.68`", TraditionalForm]}, {0.6900000000000001, 
      FormBox["0.6900000000000001`", TraditionalForm]}, {0.7000000000000001, 
      FormBox["0.7000000000000001`", TraditionalForm]}, {0.71, 
      FormBox["0.71`", TraditionalForm]}, {0.72, 
      FormBox["0.72`", TraditionalForm]}, {0.73, 
      FormBox["0.73`", TraditionalForm]}, {0.74, 
      FormBox["0.74`", TraditionalForm]}, {0.75, 
      FormBox["0.75`", TraditionalForm]}, {0.76, 
      FormBox["0.76`", TraditionalForm]}, {0.77, 
      FormBox["0.77`", TraditionalForm]}, {0.78, 
      FormBox["0.78`", TraditionalForm]}, {0.79, 
      FormBox["0.79`", TraditionalForm]}, {0.8, 
      FormBox["0.8`", TraditionalForm]}, {0.81, 
      FormBox["0.81`", TraditionalForm]}, {0.8200000000000001, 
      FormBox["0.8200000000000001`", TraditionalForm]}, {0.8300000000000001, 
      FormBox["0.8300000000000001`", TraditionalForm]}, {0.84, 
      FormBox["0.84`", TraditionalForm]}, {0.85, 
      FormBox["0.85`", TraditionalForm]}, {0.86, 
      FormBox["0.86`", TraditionalForm]}, {0.87, 
      FormBox["0.87`", TraditionalForm]}, {0.88, 
      FormBox["0.88`", TraditionalForm]}, {0.89, 
      FormBox["0.89`", TraditionalForm]}, {0.9, 
      FormBox["0.9`", TraditionalForm]}, {0.91, 
      FormBox["0.91`", TraditionalForm]}, {0.92, 
      FormBox["0.92`", TraditionalForm]}, {0.93, 
      FormBox["0.93`", TraditionalForm]}, {0.9400000000000001, 
      FormBox["0.9400000000000001`", TraditionalForm]}, {0.9500000000000001, 
      FormBox["0.9500000000000001`", TraditionalForm]}, {0.96, 
      FormBox["0.96`", TraditionalForm]}, {0.97, 
      FormBox["0.97`", TraditionalForm]}, {0.98, 
      FormBox["0.98`", TraditionalForm]}, {0.99, 
      FormBox["0.99`", TraditionalForm]}, {1., 
      FormBox["1.`", TraditionalForm]}, {1.01, 
      FormBox["1.01`", TraditionalForm]}, {1.02, 
      FormBox["1.02`", TraditionalForm]}, {1.03, 
      FormBox["1.03`", TraditionalForm]}, {1.04, 
      FormBox["1.04`", TraditionalForm]}, {1.05, 
      FormBox["1.05`", TraditionalForm]}, {1.06, 
      FormBox["1.06`", TraditionalForm]}, {1.07, 
      FormBox["1.07`", TraditionalForm]}, {1.08, 
      FormBox["1.08`", TraditionalForm]}, {1.09, 
      FormBox["1.09`", TraditionalForm]}, {1.1, 
      FormBox["1.1`", TraditionalForm]}, {1.11, 
      FormBox["1.11`", TraditionalForm]}, {1.12, 
      FormBox["1.12`", TraditionalForm]}, {1.1300000000000001`, 
      FormBox["1.1300000000000001`", TraditionalForm]}, {
     1.1400000000000001`, 
      FormBox["1.1400000000000001`", TraditionalForm]}, {
     1.1500000000000001`, 
      FormBox["1.1500000000000001`", TraditionalForm]}, {1.16, 
      FormBox["1.16`", TraditionalForm]}, {1.17, 
      FormBox["1.17`", TraditionalForm]}, {1.18, 
      FormBox["1.18`", TraditionalForm]}, {1.19, 
      FormBox["1.19`", TraditionalForm]}, {1.2, 
      FormBox["1.2`", TraditionalForm]}, {1.21, 
      FormBox["1.21`", TraditionalForm]}, {1.22, 
      FormBox["1.22`", TraditionalForm]}, {1.23, 
      FormBox["1.23`", TraditionalForm]}, {1.24, 
      FormBox["1.24`", TraditionalForm]}, {1.25, 
      FormBox["1.25`", TraditionalForm]}, {1.26, 
      FormBox["1.26`", TraditionalForm]}, {1.27, 
      FormBox["1.27`", TraditionalForm]}, {1.28, 
      FormBox["1.28`", TraditionalForm]}, {1.29, 
      FormBox["1.29`", TraditionalForm]}, {1.3, 
      FormBox["1.3`", TraditionalForm]}, {1.31, 
      FormBox["1.31`", TraditionalForm]}, {1.32, 
      FormBox["1.32`", TraditionalForm]}, {1.33, 
      FormBox["1.33`", TraditionalForm]}, {1.34, 
      FormBox["1.34`", TraditionalForm]}, {1.35, 
      FormBox["1.35`", TraditionalForm]}, {1.36, 
      FormBox["1.36`", TraditionalForm]}, {1.37, 
      FormBox["1.37`", TraditionalForm]}, {1.3800000000000001`, 
      FormBox["1.3800000000000001`", TraditionalForm]}, {
     1.3900000000000001`, 
      FormBox["1.3900000000000001`", TraditionalForm]}, {
     1.4000000000000001`, 
      FormBox["1.4000000000000001`", TraditionalForm]}, {1.41, 
      FormBox["1.41`", TraditionalForm]}, {1.42, 
      FormBox["1.42`", TraditionalForm]}, {1.43, 
      FormBox["1.43`", TraditionalForm]}, {1.44, 
      FormBox["1.44`", TraditionalForm]}, {1.45, 
      FormBox["1.45`", TraditionalForm]}, {1.46, 
      FormBox["1.46`", TraditionalForm]}, {1.47, 
      FormBox["1.47`", TraditionalForm]}, {1.48, 
      FormBox["1.48`", TraditionalForm]}, {1.49, 
      FormBox["1.49`", TraditionalForm]}, {1.5, 
      FormBox["1.5`", TraditionalForm]}, {1.51, 
      FormBox["1.51`", TraditionalForm]}, {1.52, 
      FormBox["1.52`", TraditionalForm]}, {1.53, 
      FormBox["1.53`", TraditionalForm]}, {1.54, 
      FormBox["1.54`", TraditionalForm]}, {1.55, 
      FormBox["1.55`", TraditionalForm]}, {1.56, 
      FormBox["1.56`", TraditionalForm]}, {1.57, 
      FormBox["1.57`", TraditionalForm]}, {1.58, 
      FormBox["1.58`", TraditionalForm]}, {1.59, 
      FormBox["1.59`", TraditionalForm]}, {1.6, 
      FormBox["1.6`", TraditionalForm]}, {1.61, 
      FormBox["1.61`", TraditionalForm]}, {1.62, 
      FormBox["1.62`", TraditionalForm]}, {1.6300000000000001`, 
      FormBox["1.6300000000000001`", TraditionalForm]}, {
     1.6400000000000001`, 
      FormBox["1.6400000000000001`", TraditionalForm]}, {
     1.6500000000000001`, 
      FormBox["1.6500000000000001`", TraditionalForm]}, {
     1.6600000000000001`, 
      FormBox["1.6600000000000001`", TraditionalForm]}, {1.67, 
      FormBox["1.67`", TraditionalForm]}, {1.68, 
      FormBox["1.68`", TraditionalForm]}, {1.69, 
      FormBox["1.69`", TraditionalForm]}, {1.7, 
      FormBox["1.7`", TraditionalForm]}, {1.71, 
      FormBox["1.71`", TraditionalForm]}, {1.72, 
      FormBox["1.72`", TraditionalForm]}, {1.73, 
      FormBox["1.73`", TraditionalForm]}, {1.74, 
      FormBox["1.74`", TraditionalForm]}, {1.75, 
      FormBox["1.75`", TraditionalForm]}, {1.76, 
      FormBox["1.76`", TraditionalForm]}, {1.77, 
      FormBox["1.77`", TraditionalForm]}, {1.78, 
      FormBox["1.78`", TraditionalForm]}, {1.79, 
      FormBox["1.79`", TraditionalForm]}, {1.8, 
      FormBox["1.8`", TraditionalForm]}, {1.81, 
      FormBox["1.81`", TraditionalForm]}, {1.82, 
      FormBox["1.82`", TraditionalForm]}, {1.83, 
      FormBox["1.83`", TraditionalForm]}, {1.84, 
      FormBox["1.84`", TraditionalForm]}, {1.85, 
      FormBox["1.85`", TraditionalForm]}, {1.86, 
      FormBox["1.86`", TraditionalForm]}, {1.87, 
      FormBox["1.87`", TraditionalForm]}, {1.8800000000000001`, 
      FormBox["1.8800000000000001`", TraditionalForm]}, {
     1.8900000000000001`, 
      FormBox["1.8900000000000001`", TraditionalForm]}, {
     1.9000000000000001`, 
      FormBox["1.9000000000000001`", TraditionalForm]}, {
     1.9100000000000001`, 
      FormBox["1.9100000000000001`", TraditionalForm]}, {1.92, 
      FormBox["1.92`", TraditionalForm]}, {1.93, 
      FormBox["1.93`", TraditionalForm]}, {1.94, 
      FormBox["1.94`", TraditionalForm]}, {1.95, 
      FormBox["1.95`", TraditionalForm]}, {1.96, 
      FormBox["1.96`", TraditionalForm]}, {1.97, 
      FormBox["1.97`", TraditionalForm]}, {1.98, 
      FormBox["1.98`", TraditionalForm]}, {1.99, 
      FormBox["1.99`", TraditionalForm]}, {2., 
      FormBox["2.`", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.934387778622635*^9, {3.934387843589375*^9, 3.934387871602428*^9}, 
   3.934388126560011*^9, {3.934388368623242*^9, 3.93438843126435*^9}, 
   3.9344717351026382`*^9, 3.934471818632337*^9, 3.9344718646206913`*^9, 
   3.934471925367827*^9, 3.934478135839533*^9, 3.934755307466013*^9, 
   3.934755609656344*^9, 3.934755826860248*^9, 3.9347559720528708`*^9, 
   3.9347560290940247`*^9, 3.9349255965690527`*^9, 3.935338293130953*^9, 
   3.935771502143544*^9, 3.9360387230976954`*^9, 3.936352799177217*^9, 
   3.936352934576367*^9, 3.937429259964842*^9, 3.938271078728449*^9, 
   3.939056939451174*^9, 3.939222653973607*^9, 3.939298477675963*^9, {
   3.9392985441082087`*^9, 3.939298561738385*^9}, 3.939298681343762*^9, 
   3.939298794811297*^9, 3.939588475986215*^9, 3.939588605871776*^9, 
   3.9405463754964447`*^9, 3.940852917224166*^9, 3.941749746926602*^9, 
   3.942008468612492*^9, {3.942579397981593*^9, 3.942579451196699*^9}, 
   3.9426632096690273`*^9, {3.942663257164053*^9, 3.9426632849159803`*^9}, {
   3.942663315919434*^9, 3.942663390228621*^9}, 3.942663431148278*^9, 
   3.9426634805382633`*^9, {3.942663527654154*^9, 3.9426635439671183`*^9}, 
   3.9426635759272223`*^9, 3.942663638471685*^9, 3.94336520894449*^9, 
   3.9446688374690742`*^9, 3.945075550607874*^9, 3.945972867598082*^9, 
   3.94629955357003*^9, 3.946299694722815*^9, 3.946304412912122*^9, 
   3.9463091090111237`*^9, 3.946310261714155*^9, 3.946310313579588*^9, 
   3.946312469988296*^9, 3.946312614468368*^9, 3.946312764159384*^9, 
   3.9463143014906483`*^9, 3.946315085191992*^9, 3.9463152255924473`*^9, {
   3.9463152669391108`*^9, 3.9463152823966923`*^9}, 3.946315353538334*^9, 
   3.9463154659198217`*^9, 3.946315586538884*^9, 3.9463157014158382`*^9, 
   3.946315759652131*^9, 3.946315805776258*^9, 3.946315944667355*^9, 
   3.9463161489730997`*^9, {3.946418858169684*^9, 3.9464188776969423`*^9}, 
   3.947010429916564*^9, 3.9479748899571657`*^9, 3.950377168596424*^9, 
   3.95037735338586*^9, 3.951729950667322*^9, 3.9517300054572353`*^9, 
   3.95173026399794*^9, 3.951731058178812*^9, 3.9517311002369328`*^9, 
   3.951761976907125*^9, 3.951762008850069*^9, 3.9517620987412024`*^9, 
   3.95183638187313*^9, 3.9524211799635277`*^9, 3.952458838644207*^9, 
   3.952458879970364*^9, 3.952459249859902*^9, 3.953056490885923*^9, 
   3.9531509475751657`*^9, 3.953151313792451*^9, 3.953151481423872*^9, 
   3.953151517664768*^9, 3.953208479838657*^9, 3.953208540967444*^9, 
   3.953208611499435*^9, 3.953566285476419*^9, 3.9541036577057343`*^9, 
   3.954273200994219*^9, 3.955127406849638*^9, 3.955649256711708*^9, 
   3.956506796932198*^9, 3.9566952977352943`*^9, 3.957003702954611*^9, 
   3.9585444870595818`*^9, 3.9589024815510902`*^9, 3.959373333944798*^9, 
   3.9598908384740973`*^9, 3.960542011704404*^9, 3.960816355763151*^9, 
   3.961069285779235*^9, 3.961244344927409*^9, 3.96201753017727*^9, 
   3.962543343729334*^9, 3.962624581287759*^9, 3.962877514410665*^9, 
   3.963241860808428*^9, 3.963399000892456*^9, 3.963859644543921*^9, 
   3.965326598651322*^9, 3.968764797057225*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"8c6bbd97-b1f4-4ff4-91a5-19e0c42df476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yrs", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"plotdata", ",", 
     RowBox[{
      RowBox[{"DateValue", "[", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], ",", "\"\<Year\>\""}], "]"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yravg", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DateObject", "[", 
        RowBox[{"{", "#", "}"}], "]"}], "&"}], "/@", 
      RowBox[{"Keys", "[", "yrs", "]"}]}], " ", "->", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "/@", " ", 
         RowBox[{"yrs", "[", "yr", "]"}]}], "//", "Mean"}], ",", 
       RowBox[{"{", 
        RowBox[{"yr", ",", 
         RowBox[{"Keys", "[", "yrs", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btcyearlyroiperformance", "=", 
   RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Callout", "[", 
        RowBox[{"#", ",", 
         RowBox[{"PercentForm", "[", 
          RowBox[{"Last", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
      RowBox[{"KeyValueMap", "[", 
       RowBox[{"List", ",", "yravg"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           
           RowBox[{"\"\<BTC-USD average ROI, bought year to today\>\"", ",", 
            " ", 
            RowBox[{"settings", "[", "titlestyle", "]"}]}], "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Overall mean ROI: ``\>\"", ",", 
              RowBox[{"PercentForm", "[", "overallmean", "]"}]}], "]"}], ",", 
            
            RowBox[{"settings", "[", "subtitlestyle", "]"}]}], "]"}], 
          "\[IndentingNewLine]", ",", "updatedstr"}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", "Center"}], "\[IndentingNewLine]",
        "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"AspectRatio", "->", 
      RowBox[{"settings", "[", "aspectratio", "]"}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"Background", "->", 
      RowBox[{"settings", "[", "plotbackground", "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"PercentForm", "[", "x", "]"}], ",", 
              RowBox[{"{", "16", "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "5", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"FrameTicksStyle", "->", " ", 
      RowBox[{"settings", "[", "ticksstyle", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DateRange", "[", 
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2010", ",", "1", ",", "1"}], "}"}], "]"}], ",", 
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2030", ",", "1", ",", "1"}], "}"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "\"\<Year\>\""}], "}"}]}], "]"}], " ", 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "50", ",", "0.1"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", "Thick"}], "}"}], "&"}], "/@", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "50", ",", "0.1"}], "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"Frame", "->", "True"}], "\[IndentingNewLine]", ",", 
     RowBox[{"ImageSize", "->", 
      RowBox[{"settings", "[", "imagesize", "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"ImageMargins", "->", 
      RowBox[{"settings", "[", "imagemargins", "]"}]}], "\[IndentingNewLine]",
      ",", 
     RowBox[{"Joined", "->", "False"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotRange", "->", "Full"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", "\"\<BTC-Yearly-ROI-Performance.jpg\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"filename", ",", "btcyearlyroiperformance"}], "]"}], 
  ";"}], "\[IndentingNewLine]", "btcyearlyroiperformance", \
"\[IndentingNewLine]"}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.94631141182504*^9, 3.946311528931031*^9}, {
   3.946311616545682*^9, 3.9463116733750896`*^9}, {3.946311743881616*^9, 
   3.946311746168252*^9}, {3.946311827348371*^9, 3.946311869875164*^9}, {
   3.946311942446286*^9, 3.9463119517611437`*^9}, {3.946312010246235*^9, 
   3.946312022563446*^9}, {3.946312089718843*^9, 3.9463121235049257`*^9}, {
   3.946312186072043*^9, 3.94631227107493*^9}, {3.946312341089219*^9, 
   3.946312370005563*^9}, 3.946312603932988*^9, {3.946312739474769*^9, 
   3.946312789804413*^9}, {3.946313050797917*^9, 3.946313093989214*^9}, {
   3.946314080448646*^9, 3.946314102449312*^9}, {3.946314276090885*^9, 
   3.946314279563087*^9}, {3.94631529004463*^9, 3.9463153413717527`*^9}, {
   3.946315445254107*^9, 3.946315576116816*^9}, 3.946315709703882*^9, {
   3.946316129637848*^9, 3.946316131132895*^9}, {3.946316235076133*^9, 
   3.946316339564301*^9}, {3.9463163766236057`*^9, 3.946316452413259*^9}, {
   3.951730016917287*^9, 3.951730042511003*^9}, {3.951730230933744*^9, 
   3.951730242298779*^9}, {3.951730550074374*^9, 3.9517305867842627`*^9}, {
   3.951730626466022*^9, 3.9517306683966217`*^9}, {3.951730787957452*^9, 
   3.951730834023868*^9}, {3.9517311735349703`*^9, 3.951731211755851*^9}, {
   3.95176184677365*^9, 3.951761850159604*^9}, {3.95245880698308*^9, 
   3.952458808118973*^9}, {3.953151333689828*^9, 3.953151340426722*^9}, {
   3.953208457350566*^9, 3.953208457713834*^9}, {3.953566256052752*^9, 
   3.953566272802278*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"a81dae0e-52a1-41ad-8eb4-09661b97ca59"],

Cell[BoxData[
 GraphicsBox[{{}, {
    TagBox[
     {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
      AbsoluteThickness[2], 
      PointBox[{{3.5343648*^9, 1.0774839166884067`}, {3.5659872*^9, 
       0.7830830439342038}, {3.5975232*^9, 0.6329119424963305}, {3.6290592*^9,
        0.8210257194785529}, {3.6605952*^9, 0.796588625058828}, {3.6922176*^9,
        0.5934407525586716}, {3.7237536*^9, 0.4879873977700273}, {
       3.7552896*^9, 0.5908605012986142}, {3.7868256*^9, 
       0.6004003853240788}, {3.818448*^9, 0.2650078058515399}, {3.849984*^9, 
       0.6492901042477269}, {3.88152*^9, 0.9372698889987094}, {3.913056*^9, 
       0.696986219291273}, {3.9446784*^9, 0.6476622509814739}}]},
     Annotation[#, "Charting`Private`Tag#1"]& ], {
     TagBox[
      {Opacity[0.], PointBox[{{3.5343648*^9, 1.0774839166884067`}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.5659872*^9, 0.7830830439342038}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.5975232*^9, 0.6329119424963305}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.6290592*^9, 0.8210257194785529}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.6605952*^9, 0.796588625058828}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.6922176*^9, 0.5934407525586716}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.7237536*^9, 0.4879873977700273}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.7552896*^9, 0.5908605012986142}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {8}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.7868256*^9, 0.6004003853240788}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {9}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.818448*^9, 0.2650078058515399}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {10}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.849984*^9, 0.6492901042477269}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {11}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.88152*^9, 0.9372698889987094}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {12}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.913056*^9, 0.696986219291273}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {13}}]& ], 
     TagBox[
      {Opacity[0.], PointBox[{{3.9446784*^9, 0.6476622509814739}}]},
      Annotation[#, {{Callout}, Charting`Private`Tag, {14}}]& ]}}, {{{{}, {
       GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.9468503868071733`*^9, 0.6648957185523329}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.9468503868071733`*^9, 0.6648957185523329}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.9468503868071733`*^9, 0.6648957185523329}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"64.77%\"\>",
               ShowStringCharacters->False],
              0.6476622509814739,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.9468503868071733*^9, 0.6648957185523329}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.9108840131928267`*^9, 0.714219686862132}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-44.656854249492376`, -1.5431457505076231`}, {
             3.9108840131928267`*^9, 0.714219686862132}], 
            Offset[{-44.65685424949238, 16.456854249492377`}, {
             3.9108840131928267`*^9, 0.714219686862132}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"69.7%\"\>",
               ShowStringCharacters->False],
              0.696986219291273,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-27.15685424949238, 7.45685424949238}, \
{3.9108840131928267*^9, 0.714219686862132}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8836919868071733`*^9, 0.9545033565695684}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.8836919868071733`*^9, 0.9545033565695684}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.8836919868071733`*^9, 0.9545033565695684}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"93.73%\"\>",
               ShowStringCharacters->False],
              0.9372698889987094,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.8836919868071733*^9, 0.9545033565695684}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8521559868071733`*^9, 0.6665235718185859}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.8521559868071733`*^9, 0.6665235718185859}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.8521559868071733`*^9, 0.6665235718185859}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"64.93%\"\>",
               ShowStringCharacters->False],
              0.6492901042477269,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.8521559868071733*^9, 0.6665235718185859}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.8206199868071733`*^9, 0.2822412734223989}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{44.656854249492376`, 16.456854249492384`}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{44.65685424949238, -1.543145750507617}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.8206199868071733`*^9, 0.2822412734223989}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.8206199868071733`*^9, 0.2822412734223989}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"26.5%\"\>",
               ShowStringCharacters->False],
              0.2650078058515399,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{27.15685424949238, 7.4568542494923795}, \
{3.8206199868071733*^9, 0.2822412734223989}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.7889975868071733`*^9, 0.6176338528949378}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.7889975868071733`*^9, 0.6176338528949378}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.7889975868071733`*^9, 0.6176338528949378}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"60.04%\"\>",
               ShowStringCharacters->False],
              0.6004003853240788,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.7889975868071733*^9, 0.6176338528949378}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7531176131928267`*^9, 0.6080939688694732}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-49.656854249492376`, -1.5431457505076231`}, {
             3.7531176131928267`*^9, 0.6080939688694732}], 
            Offset[{-49.65685424949238, 16.456854249492377`}, {
             3.7531176131928267`*^9, 0.6080939688694732}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"59.09%\"\>",
               ShowStringCharacters->False],
              0.5908605012986142,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-29.65685424949238, 7.45685424949238}, \
{3.7531176131928267*^9, 0.6080939688694732}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.7215816131928267`*^9, 0.5052208653408863}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-44.656854249492376`, -1.5431457505076231`}, {
             3.7215816131928267`*^9, 0.5052208653408863}], 
            Offset[{-44.65685424949238, 16.456854249492377`}, {
             3.7215816131928267`*^9, 0.5052208653408863}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"48.8%\"\>",
               ShowStringCharacters->False],
              0.4879873977700273,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-27.15685424949238, 7.45685424949238}, \
{3.7215816131928267*^9, 0.5052208653408863}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6900456131928267`*^9, 0.6106742201295305}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-49.656854249492376`, -1.5431457505076231`}, {
             3.6900456131928267`*^9, 0.6106742201295305}], 
            Offset[{-49.65685424949238, 16.456854249492377`}, {
             3.6900456131928267`*^9, 0.6106742201295305}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"59.34%\"\>",
               ShowStringCharacters->False],
              0.5934407525586716,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-29.65685424949238, 7.45685424949238}, \
{3.6900456131928267*^9, 0.6106742201295305}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.6627671868071733`*^9, 0.813822092629687}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.6627671868071733`*^9, 0.813822092629687}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.6627671868071733`*^9, 0.813822092629687}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"79.66%\"\>",
               ShowStringCharacters->False],
              0.796588625058828,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.6627671868071733*^9, 0.813822092629687}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.6268872131928267`*^9, 0.8382591870494118}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-44.656854249492376`, -1.5431457505076231`}, {
             3.6268872131928267`*^9, 0.8382591870494118}], 
            Offset[{-44.65685424949238, 16.456854249492377`}, {
             3.6268872131928267`*^9, 0.8382591870494118}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"82.1%\"\>",
               ShowStringCharacters->False],
              0.8210257194785529,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-27.15685424949238, 7.45685424949238}, \
{3.6268872131928267*^9, 0.8382591870494118}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{-2.1213203435596424`, 2.121320343559643}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-5.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-7.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-9.65685424949238, 5.656854249492381}, {
             3.5953512131928267`*^9, 0.6501454100671895}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{-9.656854249492383, 16.456854249492384`}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-9.656854249492376, -1.543145750507616}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-49.656854249492376`, -1.5431457505076231`}, {
             3.5953512131928267`*^9, 0.6501454100671895}], 
            Offset[{-49.65685424949238, 16.456854249492377`}, {
             3.5953512131928267`*^9, 0.6501454100671895}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"63.29%\"\>",
               ShowStringCharacters->False],
              0.6329119424963305,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{-29.65685424949238, 7.45685424949238}, \
{3.5953512131928267*^9, 0.6501454100671895}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5681591868071733`*^9, 0.8003165115050628}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.5681591868071733`*^9, 0.8003165115050628}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.5681591868071733`*^9, 0.8003165115050628}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"78.31%\"\>",
               ShowStringCharacters->False],
              0.7830830439342038,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.5681591868071733*^9, 0.8003165115050628}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{2.121320343559643, 2.1213203435596424`}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{5.656854249492381, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{7.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.65685424949238, 5.65685424949238}, {
             3.5365367868071733`*^9, 1.0947173842592657`}]}]}, 
         {EdgeForm[None], FaceForm[{LightDarkSwitched[
           RGBColor[0.9625, 0.9625, 0.9625]], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{49.656854249492376`, 16.456854249492384`}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{49.65685424949238, -1.543145750507617}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.656854249492383, -1.543145750507624}, {
             3.5365367868071733`*^9, 1.0947173842592657`}], 
            Offset[{9.656854249492376, 16.456854249492377`}, {
             3.5365367868071733`*^9, 1.0947173842592657`}]}]}, 
         {LightDarkSwitched[
           RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox[
            TagBox[
             InterpretationBox[
              StyleBox["\<\"107.7%\"\>",
               ShowStringCharacters->False],
              1.0774839166884067`,
              AutoDelete->True],
             PercentForm],
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{29.65685424949238, 7.4568542494923795}, \
{3.5365367868071733*^9, 1.0947173842592657}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.5343648*^9, 0},
  Background->RGBColor[0.9625, 0.9625, 0.9625],
  DefaultBaseStyle->{"PlotGraphics", "Graphics"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{0., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0%\"", ShowStringCharacters -> False], 0., AutoDelete -> 
           True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"10%\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"20%\"", ShowStringCharacters -> False], 0.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.30000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"30%\"", ShowStringCharacters -> False], 
           0.30000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"40%\"", ShowStringCharacters -> False], 0.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"50%\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.6000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"60%\"", ShowStringCharacters -> False], 
           0.6000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.7000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"70%\"", ShowStringCharacters -> False], 
           0.7000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"80%\"", ShowStringCharacters -> False], 0.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"90%\"", ShowStringCharacters -> False], 0.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"110%\"", ShowStringCharacters -> False], 1.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.2000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"120%\"", ShowStringCharacters -> False], 
           1.2000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"130%\"", ShowStringCharacters -> False], 1.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.4000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"140%\"", ShowStringCharacters -> False], 
           1.4000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"150%\"", ShowStringCharacters -> False], 1.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"160%\"", ShowStringCharacters -> False], 1.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.7000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"170%\"", ShowStringCharacters -> False], 
           1.7000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"180%\"", ShowStringCharacters -> False], 1.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.9000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"190%\"", ShowStringCharacters -> False], 
           1.9000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"200%\"", ShowStringCharacters -> False], 2., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"210%\"", ShowStringCharacters -> False], 2.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"220%\"", ShowStringCharacters -> False], 2.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"230%\"", ShowStringCharacters -> False], 
           2.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"240%\"", ShowStringCharacters -> False], 
           2.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"250%\"", ShowStringCharacters -> False], 2.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"260%\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"270%\"", ShowStringCharacters -> False], 2.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"280%\"", ShowStringCharacters -> False], 
           2.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"290%\"", ShowStringCharacters -> False], 
           2.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"300%\"", ShowStringCharacters -> False], 3., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"310%\"", ShowStringCharacters -> False], 3.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"320%\"", ShowStringCharacters -> False], 3.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"330%\"", ShowStringCharacters -> False], 
           3.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"340%\"", ShowStringCharacters -> False], 
           3.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"350%\"", ShowStringCharacters -> False], 3.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"360%\"", ShowStringCharacters -> False], 3.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"370%\"", ShowStringCharacters -> False], 3.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"380%\"", ShowStringCharacters -> False], 
           3.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"390%\"", ShowStringCharacters -> False], 
           3.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"400%\"", ShowStringCharacters -> False], 4., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.1000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"410%\"", ShowStringCharacters -> False], 
           4.1000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"420%\"", ShowStringCharacters -> False], 4.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"430%\"", ShowStringCharacters -> False], 4.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"440%\"", ShowStringCharacters -> False], 4.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"450%\"", ShowStringCharacters -> False], 4.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.6000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"460%\"", ShowStringCharacters -> False], 
           4.6000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"470%\"", ShowStringCharacters -> False], 4.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.800000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"480%\"", ShowStringCharacters -> False], 
           4.800000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"490%\"", ShowStringCharacters -> False], 4.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {5., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"500%\"", ShowStringCharacters -> False], 5., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}}, {{0., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0%\"", ShowStringCharacters -> False], 0., AutoDelete -> 
           True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"10%\"", ShowStringCharacters -> False], 0.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"20%\"", ShowStringCharacters -> False], 0.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.30000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"30%\"", ShowStringCharacters -> False], 
           0.30000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"40%\"", ShowStringCharacters -> False], 0.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"50%\"", ShowStringCharacters -> False], 0.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.6000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"60%\"", ShowStringCharacters -> False], 
           0.6000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.7000000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"70%\"", ShowStringCharacters -> False], 
           0.7000000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {0.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"80%\"", ShowStringCharacters -> False], 0.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {0.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"90%\"", ShowStringCharacters -> False], 0.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"110%\"", ShowStringCharacters -> False], 1.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.2000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"120%\"", ShowStringCharacters -> False], 
           1.2000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"130%\"", ShowStringCharacters -> False], 1.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.4000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"140%\"", ShowStringCharacters -> False], 
           1.4000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"150%\"", ShowStringCharacters -> False], 1.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"160%\"", ShowStringCharacters -> False], 1.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.7000000000000002`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"170%\"", ShowStringCharacters -> False], 
           1.7000000000000002`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {1.8, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"180%\"", ShowStringCharacters -> False], 1.8, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {1.9000000000000001`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"190%\"", ShowStringCharacters -> False], 
           1.9000000000000001`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"200%\"", ShowStringCharacters -> False], 2., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"210%\"", ShowStringCharacters -> False], 2.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"220%\"", ShowStringCharacters -> False], 2.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"230%\"", ShowStringCharacters -> False], 
           2.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"240%\"", ShowStringCharacters -> False], 
           2.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"250%\"", ShowStringCharacters -> False], 2.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"260%\"", ShowStringCharacters -> False], 2.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"270%\"", ShowStringCharacters -> False], 2.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {2.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"280%\"", ShowStringCharacters -> False], 
           2.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {2.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"290%\"", ShowStringCharacters -> False], 
           2.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"300%\"", ShowStringCharacters -> False], 3., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.1, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"310%\"", ShowStringCharacters -> False], 3.1, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"320%\"", ShowStringCharacters -> False], 3.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.3000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"330%\"", ShowStringCharacters -> False], 
           3.3000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.4000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"340%\"", ShowStringCharacters -> False], 
           3.4000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"350%\"", ShowStringCharacters -> False], 3.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.6, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"360%\"", ShowStringCharacters -> False], 3.6, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"370%\"", ShowStringCharacters -> False], 3.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {3.8000000000000003`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"380%\"", ShowStringCharacters -> False], 
           3.8000000000000003`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {3.9000000000000004`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"390%\"", ShowStringCharacters -> False], 
           3.9000000000000004`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"400%\"", ShowStringCharacters -> False], 4., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.1000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"410%\"", ShowStringCharacters -> False], 
           4.1000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.2, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"420%\"", ShowStringCharacters -> False], 4.2, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.3, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"430%\"", ShowStringCharacters -> False], 4.3, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.4, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"440%\"", ShowStringCharacters -> False], 4.4, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.5, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"450%\"", ShowStringCharacters -> False], 4.5, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.6000000000000005`, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"460%\"", ShowStringCharacters -> False], 
           4.6000000000000005`, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.7, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"470%\"", ShowStringCharacters -> False], 4.7, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {4.800000000000001, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"480%\"", ShowStringCharacters -> False], 
           4.800000000000001, AutoDelete -> True], PercentForm], {16}, 
         StripOnInput -> False], TraditionalForm]}, {4.9, 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"490%\"", ShowStringCharacters -> False], 4.9, 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}, {5., 
       FormBox[
        StyleBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"500%\"", ShowStringCharacters -> False], 5., 
           AutoDelete -> True], PercentForm], {16}, StripOnInput -> False], 
        TraditionalForm]}}}, {
     Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
     Charting`DateTicksFunction[
     Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
  FrameTicksStyle->Directive[{16}],
  GridLines->{{3.4712928*^9, 3.5028288*^9, 3.5343648*^9, 3.5659872*^9, 
    3.5975232*^9, 3.6290592*^9, 3.6605952*^9, 3.6922176*^9, 3.7237536*^9, 
    3.7552896*^9, 3.7868256*^9, 3.818448*^9, 3.849984*^9, 3.88152*^9, 
    3.913056*^9, 3.9446784*^9, 3.9762144*^9, 4.0077504*^9, 4.0392864*^9, 
    4.0709088*^9, 
    4.1024448*^9}, {-5., -4.9, -4.8, -4.7, -4.6, -4.5, -4.4, -4.3, -4.2, \
-4.1, -4., -3.9, -3.8, -3.6999999999999997`, -3.6, -3.5, -3.4, -3.3, \
-3.1999999999999997`, -3.1, -3., -2.9, -2.8, -2.6999999999999997`, \
-2.5999999999999996`, -2.5, -2.4, -2.3, -2.1999999999999997`, \
-2.0999999999999996`, -1.9999999999999998`, -1.9, -1.7999999999999998`, \
-1.6999999999999997`, -1.5999999999999999`, -1.4999999999999998`, -1.4, \
-1.2999999999999998`, -1.1999999999999997`, -1.0999999999999999`, \
-0.9999999999999998, -0.8999999999999998, -0.7999999999999998, \
-0.6999999999999997, -0.5999999999999998, -0.4999999999999998, \
-0.39999999999999974`, -0.2999999999999997, -0.19999999999999973`, \
-0.09999999999999973, 2.7755575615628914`*^-16, 0.10000000000000028`, 
     0.2000000000000003, 0.30000000000000027`, 0.4000000000000003, 
     0.5000000000000003, 0.6000000000000003, 0.7000000000000003, 
     0.8000000000000003, 0.9000000000000004, 1.0000000000000004`, 
     1.1000000000000003`, 1.2000000000000004`, 1.3000000000000003`, 
     1.4000000000000004`, 1.5000000000000004`, 1.6000000000000003`, 
     1.7000000000000004`, 1.8000000000000003`, 1.9000000000000004`, 
     2.0000000000000004`, 2.1000000000000005`, 2.2, 2.3000000000000003`, 
     2.4000000000000004`, 2.5000000000000004`, 2.6000000000000005`, 
     2.7000000000000006`, 2.8000000000000003`, 2.9000000000000004`, 
     3.0000000000000004`, 3.1000000000000005`, 3.2000000000000006`, 
     3.3000000000000003`, 3.4000000000000004`, 3.5000000000000004`, 
     3.6000000000000005`, 3.7000000000000006`, 3.8000000000000007`, 
     3.9000000000000004`, 4.000000000000001, 4.1000000000000005`, 4.2, 
     4.300000000000001, 4.4, 4.500000000000001, 4.6000000000000005`, 4.7, 
     4.800000000000001, 4.9, 5.000000000000001, 5.1000000000000005`, 5.2, 
     5.300000000000001, 5.4, 5.500000000000001, 5.6000000000000005`, 5.7, 
     5.800000000000001, 5.9, 6.000000000000001, 6.1000000000000005`, 
     6.200000000000001, 6.300000000000001, 6.4, 6.500000000000001, 
     6.6000000000000005`, 6.700000000000001, 6.800000000000001, 6.9, 
     7.000000000000001, 7.1000000000000005`, 7.200000000000001, 
     7.300000000000001, 7.4, 7.500000000000001, 7.6000000000000005`, 
     7.700000000000001, 7.800000000000001, 7.9, 8., 8.100000000000001, 
     8.200000000000001, 8.3, 8.4, 8.5, 8.600000000000001, 8.700000000000001, 
     8.8, 8.9, 9., 9.100000000000001, 9.200000000000001, 9.3, 9.4, 9.5, 
     9.600000000000001, 9.700000000000001, 9.8, 9.9, 10., 10.100000000000001`,
      10.200000000000001`, 10.3, 10.4, 10.5, 10.600000000000001`, 
     10.700000000000001`, 10.8, 10.9, 11., 11.100000000000001`, 
     11.200000000000001`, 11.3, 11.4, 11.500000000000002`, 
     11.600000000000001`, 11.700000000000001`, 11.8, 11.9, 
     12.000000000000002`, 12.100000000000001`, 12.200000000000001`, 12.3, 
     12.4, 12.500000000000002`, 12.600000000000001`, 12.700000000000001`, 
     12.8, 12.9, 13.000000000000002`, 13.100000000000001`, 
     13.200000000000001`, 13.3, 13.4, 13.500000000000002`, 
     13.600000000000001`, 13.700000000000001`, 13.8, 13.9, 
     14.000000000000002`, 14.100000000000001`, 14.200000000000001`, 14.3, 
     14.4, 14.500000000000002`, 14.600000000000001`, 14.700000000000001`, 
     14.8, 14.9, 15.000000000000002`, 15.100000000000001`, 
     15.200000000000001`, 15.3, 15.4, 15.500000000000002`, 
     15.600000000000001`, 15.700000000000001`, 15.8, 15.9, 16., 16.1, 
     16.200000000000003`, 16.3, 16.400000000000002`, 16.5, 16.6, 
     16.700000000000003`, 16.8, 16.900000000000002`, 17., 17.1, 
     17.200000000000003`, 17.3, 17.400000000000002`, 17.5, 17.6, 
     17.700000000000003`, 17.8, 17.900000000000002`, 18., 18.1, 
     18.200000000000003`, 18.3, 18.400000000000002`, 18.5, 18.6, 
     18.700000000000003`, 18.8, 18.900000000000002`, 19., 19.1, 
     19.200000000000003`, 19.3, 19.400000000000002`, 19.5, 19.6, 
     19.700000000000003`, 19.8, 19.900000000000002`, 20., 20.1, 
     20.200000000000003`, 20.3, 20.400000000000002`, 20.5, 20.6, 
     20.700000000000003`, 20.8, 20.900000000000002`, 21., 21.1, 
     21.200000000000003`, 21.3, 21.400000000000002`, 21.5, 21.6, 
     21.700000000000003`, 21.8, 21.900000000000002`, 22., 22.1, 
     22.200000000000003`, 22.3, 22.400000000000002`, 22.5, 22.6, 
     22.700000000000003`, 22.8, 22.900000000000002`, 23., 23.1, 
     23.200000000000003`, 23.3, 23.400000000000002`, 23.5, 23.6, 
     23.700000000000003`, 23.8, 23.900000000000002`, 24., 24.1, 
     24.200000000000003`, 24.3, 24.400000000000002`, 24.5, 24.6, 
     24.700000000000003`, 24.8, 24.900000000000002`, 25., 25.1, 
     25.200000000000003`, 25.3, 25.400000000000002`, 25.5, 25.6, 
     25.700000000000003`, 25.8, 25.900000000000002`, 26., 26.1, 
     26.200000000000003`, 26.3, 26.400000000000002`, 26.5, 26.6, 
     26.700000000000003`, 26.8, 26.900000000000002`, 27., 27.1, 
     27.200000000000003`, 27.3, 27.400000000000002`, 27.500000000000004`, 
     27.6, 27.700000000000003`, 27.8, 27.900000000000002`, 
     28.000000000000004`, 28.1, 28.200000000000003`, 28.3, 
     28.400000000000002`, 28.500000000000004`, 28.6, 28.700000000000003`, 
     28.8, 28.900000000000002`, 29.000000000000004`, 29.1, 
     29.200000000000003`, 29.3, 29.400000000000002`, 29.500000000000004`, 
     29.6, 29.700000000000003`, 29.8, 29.900000000000002`, 
     30.000000000000004`, 30.1, 30.200000000000003`, 30.3, 
     30.400000000000002`, 30.500000000000004`, 30.6, 30.700000000000003`, 
     30.8, 30.900000000000002`, 31.000000000000004`, 31.1, 
     31.200000000000003`, 31.3, 31.400000000000002`, 31.500000000000004`, 
     31.6, 31.700000000000003`, 31.8, 31.900000000000002`, 32., 32.1, 32.2, 
     32.300000000000004`, 32.4, 32.5, 32.6, 32.7, 32.800000000000004`, 32.9, 
     33., 33.1, 33.2, 33.300000000000004`, 33.400000000000006`, 33.5, 33.6, 
     33.7, 33.800000000000004`, 33.900000000000006`, 34., 34.1, 34.2, 
     34.300000000000004`, 34.400000000000006`, 34.5, 34.6, 34.7, 
     34.800000000000004`, 34.900000000000006`, 35., 35.1, 35.2, 
     35.300000000000004`, 35.400000000000006`, 35.5, 35.6, 35.7, 
     35.800000000000004`, 35.900000000000006`, 36., 36.1, 36.2, 
     36.300000000000004`, 36.400000000000006`, 36.5, 36.6, 36.7, 
     36.800000000000004`, 36.900000000000006`, 37., 37.1, 37.2, 
     37.300000000000004`, 37.400000000000006`, 37.5, 37.6, 37.7, 
     37.800000000000004`, 37.900000000000006`, 38., 38.1, 38.2, 
     38.300000000000004`, 38.400000000000006`, 38.5, 38.6, 38.7, 
     38.800000000000004`, 38.900000000000006`, 39., 39.1, 39.2, 
     39.300000000000004`, 39.400000000000006`, 39.5, 39.6, 39.7, 
     39.800000000000004`, 39.900000000000006`, 40., 40.1, 40.2, 
     40.300000000000004`, 40.400000000000006`, 40.5, 40.6, 40.7, 
     40.800000000000004`, 40.900000000000006`, 41., 41.1, 41.2, 
     41.300000000000004`, 41.400000000000006`, 41.5, 41.6, 41.7, 
     41.800000000000004`, 41.900000000000006`, 42., 42.1, 42.2, 
     42.300000000000004`, 42.400000000000006`, 42.5, 42.6, 42.7, 
     42.800000000000004`, 42.900000000000006`, 43., 43.1, 43.2, 
     43.300000000000004`, 43.400000000000006`, 43.5, 43.6, 43.7, 
     43.800000000000004`, 43.900000000000006`, 44., 44.1, 44.2, 
     44.300000000000004`, 44.400000000000006`, 44.5, 44.6, 44.7, 
     44.800000000000004`, 44.900000000000006`, 45., 45.1, 45.2, 
     45.300000000000004`, 45.400000000000006`, 45.5, 45.6, 45.7, 
     45.800000000000004`, 45.900000000000006`, 46., 46.1, 46.2, 
     46.300000000000004`, 46.400000000000006`, 46.5, 46.6, 46.7, 
     46.800000000000004`, 46.900000000000006`, 47., 47.1, 47.2, 
     47.300000000000004`, 47.400000000000006`, 47.5, 47.6, 47.7, 
     47.800000000000004`, 47.900000000000006`, 48., 48.1, 48.2, 
     48.300000000000004`, 48.400000000000006`, 48.5, 48.6, 48.7, 
     48.800000000000004`, 48.900000000000006`, 49., 49.1, 49.2, 
     49.300000000000004`, 49.400000000000006`, 49.5, 49.6, 49.7, 
     49.800000000000004`, 49.900000000000006`, 50., {0., 
      Thickness[Large]}, {0.1, 
      Thickness[Large]}, {0.2, 
      Thickness[Large]}, {0.30000000000000004`, 
      Thickness[Large]}, {0.4, 
      Thickness[Large]}, {0.5, 
      Thickness[Large]}, {0.6000000000000001, 
      Thickness[Large]}, {0.7000000000000001, 
      Thickness[Large]}, {0.8, 
      Thickness[Large]}, {0.9, 
      Thickness[Large]}, {1., 
      Thickness[Large]}, {1.1, 
      Thickness[Large]}, {1.2000000000000002`, 
      Thickness[Large]}, {1.3, 
      Thickness[Large]}, {1.4000000000000001`, 
      Thickness[Large]}, {1.5, 
      Thickness[Large]}, {1.6, 
      Thickness[Large]}, {1.7000000000000002`, 
      Thickness[Large]}, {1.8, 
      Thickness[Large]}, {1.9000000000000001`, 
      Thickness[Large]}, {2., 
      Thickness[Large]}, {2.1, 
      Thickness[Large]}, {2.2, 
      Thickness[Large]}, {2.3000000000000003`, 
      Thickness[Large]}, {2.4000000000000004`, 
      Thickness[Large]}, {2.5, 
      Thickness[Large]}, {2.6, 
      Thickness[Large]}, {2.7, 
      Thickness[Large]}, {2.8000000000000003`, 
      Thickness[Large]}, {2.9000000000000004`, 
      Thickness[Large]}, {3., 
      Thickness[Large]}, {3.1, 
      Thickness[Large]}, {3.2, 
      Thickness[Large]}, {3.3000000000000003`, 
      Thickness[Large]}, {3.4000000000000004`, 
      Thickness[Large]}, {3.5, 
      Thickness[Large]}, {3.6, 
      Thickness[Large]}, {3.7, 
      Thickness[Large]}, {3.8000000000000003`, 
      Thickness[Large]}, {3.9000000000000004`, 
      Thickness[Large]}, {4., 
      Thickness[Large]}, {4.1000000000000005`, 
      Thickness[Large]}, {4.2, 
      Thickness[Large]}, {4.3, 
      Thickness[Large]}, {4.4, 
      Thickness[Large]}, {4.5, 
      Thickness[Large]}, {4.6000000000000005`, 
      Thickness[Large]}, {4.7, 
      Thickness[Large]}, {4.800000000000001, 
      Thickness[Large]}, {4.9, 
      Thickness[Large]}, {5., 
      Thickness[Large]}, {5.1000000000000005`, 
      Thickness[Large]}, {5.2, 
      Thickness[Large]}, {5.300000000000001, 
      Thickness[Large]}, {5.4, 
      Thickness[Large]}, {5.5, 
      Thickness[Large]}, {5.6000000000000005`, 
      Thickness[Large]}, {5.7, 
      Thickness[Large]}, {5.800000000000001, 
      Thickness[Large]}, {5.9, 
      Thickness[Large]}, {6., 
      Thickness[Large]}, {6.1000000000000005`, 
      Thickness[Large]}, {6.2, 
      Thickness[Large]}, {6.300000000000001, 
      Thickness[Large]}, {6.4, 
      Thickness[Large]}, {6.5, 
      Thickness[Large]}, {6.6000000000000005`, 
      Thickness[Large]}, {6.7, 
      Thickness[Large]}, {6.800000000000001, 
      Thickness[Large]}, {6.9, 
      Thickness[Large]}, {7., 
      Thickness[Large]}, {7.1000000000000005`, 
      Thickness[Large]}, {7.2, 
      Thickness[Large]}, {7.300000000000001, 
      Thickness[Large]}, {7.4, 
      Thickness[Large]}, {7.5, 
      Thickness[Large]}, {7.6000000000000005`, 
      Thickness[Large]}, {7.7, 
      Thickness[Large]}, {7.800000000000001, 
      Thickness[Large]}, {7.9, 
      Thickness[Large]}, {8., 
      Thickness[Large]}, {8.1, 
      Thickness[Large]}, {8.200000000000001, 
      Thickness[Large]}, {8.3, 
      Thickness[Large]}, {8.4, 
      Thickness[Large]}, {8.5, 
      Thickness[Large]}, {8.6, 
      Thickness[Large]}, {8.700000000000001, 
      Thickness[Large]}, {8.8, 
      Thickness[Large]}, {8.9, 
      Thickness[Large]}, {9., 
      Thickness[Large]}, {9.1, 
      Thickness[Large]}, {9.200000000000001, 
      Thickness[Large]}, {9.3, 
      Thickness[Large]}, {9.4, 
      Thickness[Large]}, {9.5, 
      Thickness[Large]}, {9.600000000000001, 
      Thickness[Large]}, {9.700000000000001, 
      Thickness[Large]}, {9.8, 
      Thickness[Large]}, {9.9, 
      Thickness[Large]}, {10., 
      Thickness[Large]}, {10.100000000000001`, 
      Thickness[Large]}, {10.200000000000001`, 
      Thickness[Large]}, {10.3, 
      Thickness[Large]}, {10.4, 
      Thickness[Large]}, {10.5, 
      Thickness[Large]}, {10.600000000000001`, 
      Thickness[Large]}, {10.700000000000001`, 
      Thickness[Large]}, {10.8, 
      Thickness[Large]}, {10.9, 
      Thickness[Large]}, {11., 
      Thickness[Large]}, {11.100000000000001`, 
      Thickness[Large]}, {11.200000000000001`, 
      Thickness[Large]}, {11.3, 
      Thickness[Large]}, {11.4, 
      Thickness[Large]}, {11.5, 
      Thickness[Large]}, {11.600000000000001`, 
      Thickness[Large]}, {11.700000000000001`, 
      Thickness[Large]}, {11.8, 
      Thickness[Large]}, {11.9, 
      Thickness[Large]}, {12., 
      Thickness[Large]}, {12.100000000000001`, 
      Thickness[Large]}, {12.200000000000001`, 
      Thickness[Large]}, {12.3, 
      Thickness[Large]}, {12.4, 
      Thickness[Large]}, {12.5, 
      Thickness[Large]}, {12.600000000000001`, 
      Thickness[Large]}, {12.700000000000001`, 
      Thickness[Large]}, {12.8, 
      Thickness[Large]}, {12.9, 
      Thickness[Large]}, {13., 
      Thickness[Large]}, {13.100000000000001`, 
      Thickness[Large]}, {13.200000000000001`, 
      Thickness[Large]}, {13.3, 
      Thickness[Large]}, {13.4, 
      Thickness[Large]}, {13.5, 
      Thickness[Large]}, {13.600000000000001`, 
      Thickness[Large]}, {13.700000000000001`, 
      Thickness[Large]}, {13.8, 
      Thickness[Large]}, {13.9, 
      Thickness[Large]}, {14., 
      Thickness[Large]}, {14.100000000000001`, 
      Thickness[Large]}, {14.200000000000001`, 
      Thickness[Large]}, {14.3, 
      Thickness[Large]}, {14.4, 
      Thickness[Large]}, {14.5, 
      Thickness[Large]}, {14.600000000000001`, 
      Thickness[Large]}, {14.700000000000001`, 
      Thickness[Large]}, {14.8, 
      Thickness[Large]}, {14.9, 
      Thickness[Large]}, {15., 
      Thickness[Large]}, {15.100000000000001`, 
      Thickness[Large]}, {15.200000000000001`, 
      Thickness[Large]}, {15.3, 
      Thickness[Large]}, {15.4, 
      Thickness[Large]}, {15.5, 
      Thickness[Large]}, {15.600000000000001`, 
      Thickness[Large]}, {15.700000000000001`, 
      Thickness[Large]}, {15.8, 
      Thickness[Large]}, {15.9, 
      Thickness[Large]}, {16., 
      Thickness[Large]}, {16.1, 
      Thickness[Large]}, {16.2, 
      Thickness[Large]}, {16.3, 
      Thickness[Large]}, {16.400000000000002`, 
      Thickness[Large]}, {16.5, 
      Thickness[Large]}, {16.6, 
      Thickness[Large]}, {16.7, 
      Thickness[Large]}, {16.8, 
      Thickness[Large]}, {16.900000000000002`, 
      Thickness[Large]}, {17., 
      Thickness[Large]}, {17.1, 
      Thickness[Large]}, {17.2, 
      Thickness[Large]}, {17.3, 
      Thickness[Large]}, {17.400000000000002`, 
      Thickness[Large]}, {17.5, 
      Thickness[Large]}, {17.6, 
      Thickness[Large]}, {17.7, 
      Thickness[Large]}, {17.8, 
      Thickness[Large]}, {17.900000000000002`, 
      Thickness[Large]}, {18., 
      Thickness[Large]}, {18.1, 
      Thickness[Large]}, {18.2, 
      Thickness[Large]}, {18.3, 
      Thickness[Large]}, {18.400000000000002`, 
      Thickness[Large]}, {18.5, 
      Thickness[Large]}, {18.6, 
      Thickness[Large]}, {18.7, 
      Thickness[Large]}, {18.8, 
      Thickness[Large]}, {18.900000000000002`, 
      Thickness[Large]}, {19., 
      Thickness[Large]}, {19.1, 
      Thickness[Large]}, {19.200000000000003`, 
      Thickness[Large]}, {19.3, 
      Thickness[Large]}, {19.400000000000002`, 
      Thickness[Large]}, {19.5, 
      Thickness[Large]}, {19.6, 
      Thickness[Large]}, {19.700000000000003`, 
      Thickness[Large]}, {19.8, 
      Thickness[Large]}, {19.900000000000002`, 
      Thickness[Large]}, {20., 
      Thickness[Large]}, {20.1, 
      Thickness[Large]}, {20.200000000000003`, 
      Thickness[Large]}, {20.3, 
      Thickness[Large]}, {20.400000000000002`, 
      Thickness[Large]}, {20.5, 
      Thickness[Large]}, {20.6, 
      Thickness[Large]}, {20.700000000000003`, 
      Thickness[Large]}, {20.8, 
      Thickness[Large]}, {20.900000000000002`, 
      Thickness[Large]}, {21., 
      Thickness[Large]}, {21.1, 
      Thickness[Large]}, {21.200000000000003`, 
      Thickness[Large]}, {21.3, 
      Thickness[Large]}, {21.400000000000002`, 
      Thickness[Large]}, {21.5, 
      Thickness[Large]}, {21.6, 
      Thickness[Large]}, {21.700000000000003`, 
      Thickness[Large]}, {21.8, 
      Thickness[Large]}, {21.900000000000002`, 
      Thickness[Large]}, {22., 
      Thickness[Large]}, {22.1, 
      Thickness[Large]}, {22.200000000000003`, 
      Thickness[Large]}, {22.3, 
      Thickness[Large]}, {22.400000000000002`, 
      Thickness[Large]}, {22.5, 
      Thickness[Large]}, {22.6, 
      Thickness[Large]}, {22.700000000000003`, 
      Thickness[Large]}, {22.8, 
      Thickness[Large]}, {22.900000000000002`, 
      Thickness[Large]}, {23., 
      Thickness[Large]}, {23.1, 
      Thickness[Large]}, {23.200000000000003`, 
      Thickness[Large]}, {23.3, 
      Thickness[Large]}, {23.400000000000002`, 
      Thickness[Large]}, {23.5, 
      Thickness[Large]}, {23.6, 
      Thickness[Large]}, {23.700000000000003`, 
      Thickness[Large]}, {23.8, 
      Thickness[Large]}, {23.900000000000002`, 
      Thickness[Large]}, {24., 
      Thickness[Large]}, {24.1, 
      Thickness[Large]}, {24.200000000000003`, 
      Thickness[Large]}, {24.3, 
      Thickness[Large]}, {24.400000000000002`, 
      Thickness[Large]}, {24.5, 
      Thickness[Large]}, {24.6, 
      Thickness[Large]}, {24.700000000000003`, 
      Thickness[Large]}, {24.8, 
      Thickness[Large]}, {24.900000000000002`, 
      Thickness[Large]}, {25., 
      Thickness[Large]}, {25.1, 
      Thickness[Large]}, {25.200000000000003`, 
      Thickness[Large]}, {25.3, 
      Thickness[Large]}, {25.400000000000002`, 
      Thickness[Large]}, {25.5, 
      Thickness[Large]}, {25.6, 
      Thickness[Large]}, {25.700000000000003`, 
      Thickness[Large]}, {25.8, 
      Thickness[Large]}, {25.900000000000002`, 
      Thickness[Large]}, {26., 
      Thickness[Large]}, {26.1, 
      Thickness[Large]}, {26.200000000000003`, 
      Thickness[Large]}, {26.3, 
      Thickness[Large]}, {26.400000000000002`, 
      Thickness[Large]}, {26.5, 
      Thickness[Large]}, {26.6, 
      Thickness[Large]}, {26.700000000000003`, 
      Thickness[Large]}, {26.8, 
      Thickness[Large]}, {26.900000000000002`, 
      Thickness[Large]}, {27., 
      Thickness[Large]}, {27.1, 
      Thickness[Large]}, {27.200000000000003`, 
      Thickness[Large]}, {27.3, 
      Thickness[Large]}, {27.400000000000002`, 
      Thickness[Large]}, {27.5, 
      Thickness[Large]}, {27.6, 
      Thickness[Large]}, {27.700000000000003`, 
      Thickness[Large]}, {27.8, 
      Thickness[Large]}, {27.900000000000002`, 
      Thickness[Large]}, {28., 
      Thickness[Large]}, {28.1, 
      Thickness[Large]}, {28.200000000000003`, 
      Thickness[Large]}, {28.3, 
      Thickness[Large]}, {28.400000000000002`, 
      Thickness[Large]}, {28.5, 
      Thickness[Large]}, {28.6, 
      Thickness[Large]}, {28.700000000000003`, 
      Thickness[Large]}, {28.8, 
      Thickness[Large]}, {28.900000000000002`, 
      Thickness[Large]}, {29., 
      Thickness[Large]}, {29.1, 
      Thickness[Large]}, {29.200000000000003`, 
      Thickness[Large]}, {29.3, 
      Thickness[Large]}, {29.400000000000002`, 
      Thickness[Large]}, {29.5, 
      Thickness[Large]}, {29.6, 
      Thickness[Large]}, {29.700000000000003`, 
      Thickness[Large]}, {29.8, 
      Thickness[Large]}, {29.900000000000002`, 
      Thickness[Large]}, {30., 
      Thickness[Large]}, {30.1, 
      Thickness[Large]}, {30.200000000000003`, 
      Thickness[Large]}, {30.3, 
      Thickness[Large]}, {30.400000000000002`, 
      Thickness[Large]}, {30.5, 
      Thickness[Large]}, {30.6, 
      Thickness[Large]}, {30.700000000000003`, 
      Thickness[Large]}, {30.8, 
      Thickness[Large]}, {30.900000000000002`, 
      Thickness[Large]}, {31., 
      Thickness[Large]}, {31.1, 
      Thickness[Large]}, {31.200000000000003`, 
      Thickness[Large]}, {31.3, 
      Thickness[Large]}, {31.400000000000002`, 
      Thickness[Large]}, {31.5, 
      Thickness[Large]}, {31.6, 
      Thickness[Large]}, {31.700000000000003`, 
      Thickness[Large]}, {31.8, 
      Thickness[Large]}, {31.900000000000002`, 
      Thickness[Large]}, {32., 
      Thickness[Large]}, {32.1, 
      Thickness[Large]}, {32.2, 
      Thickness[Large]}, {32.300000000000004`, 
      Thickness[Large]}, {32.4, 
      Thickness[Large]}, {32.5, 
      Thickness[Large]}, {32.6, 
      Thickness[Large]}, {32.7, 
      Thickness[Large]}, {32.800000000000004`, 
      Thickness[Large]}, {32.9, 
      Thickness[Large]}, {33., 
      Thickness[Large]}, {33.1, 
      Thickness[Large]}, {33.2, 
      Thickness[Large]}, {33.300000000000004`, 
      Thickness[Large]}, {33.4, 
      Thickness[Large]}, {33.5, 
      Thickness[Large]}, {33.6, 
      Thickness[Large]}, {33.7, 
      Thickness[Large]}, {33.800000000000004`, 
      Thickness[Large]}, {33.9, 
      Thickness[Large]}, {34., 
      Thickness[Large]}, {34.1, 
      Thickness[Large]}, {34.2, 
      Thickness[Large]}, {34.300000000000004`, 
      Thickness[Large]}, {34.4, 
      Thickness[Large]}, {34.5, 
      Thickness[Large]}, {34.6, 
      Thickness[Large]}, {34.7, 
      Thickness[Large]}, {34.800000000000004`, 
      Thickness[Large]}, {34.9, 
      Thickness[Large]}, {35., 
      Thickness[Large]}, {35.1, 
      Thickness[Large]}, {35.2, 
      Thickness[Large]}, {35.300000000000004`, 
      Thickness[Large]}, {35.4, 
      Thickness[Large]}, {35.5, 
      Thickness[Large]}, {35.6, 
      Thickness[Large]}, {35.7, 
      Thickness[Large]}, {35.800000000000004`, 
      Thickness[Large]}, {35.9, 
      Thickness[Large]}, {36., 
      Thickness[Large]}, {36.1, 
      Thickness[Large]}, {36.2, 
      Thickness[Large]}, {36.300000000000004`, 
      Thickness[Large]}, {36.4, 
      Thickness[Large]}, {36.5, 
      Thickness[Large]}, {36.6, 
      Thickness[Large]}, {36.7, 
      Thickness[Large]}, {36.800000000000004`, 
      Thickness[Large]}, {36.9, 
      Thickness[Large]}, {37., 
      Thickness[Large]}, {37.1, 
      Thickness[Large]}, {37.2, 
      Thickness[Large]}, {37.300000000000004`, 
      Thickness[Large]}, {37.4, 
      Thickness[Large]}, {37.5, 
      Thickness[Large]}, {37.6, 
      Thickness[Large]}, {37.7, 
      Thickness[Large]}, {37.800000000000004`, 
      Thickness[Large]}, {37.9, 
      Thickness[Large]}, {38., 
      Thickness[Large]}, {38.1, 
      Thickness[Large]}, {38.2, 
      Thickness[Large]}, {38.300000000000004`, 
      Thickness[Large]}, {38.400000000000006`, 
      Thickness[Large]}, {38.5, 
      Thickness[Large]}, {38.6, 
      Thickness[Large]}, {38.7, 
      Thickness[Large]}, {38.800000000000004`, 
      Thickness[Large]}, {38.900000000000006`, 
      Thickness[Large]}, {39., 
      Thickness[Large]}, {39.1, 
      Thickness[Large]}, {39.2, 
      Thickness[Large]}, {39.300000000000004`, 
      Thickness[Large]}, {39.400000000000006`, 
      Thickness[Large]}, {39.5, 
      Thickness[Large]}, {39.6, 
      Thickness[Large]}, {39.7, 
      Thickness[Large]}, {39.800000000000004`, 
      Thickness[Large]}, {39.900000000000006`, 
      Thickness[Large]}, {40., 
      Thickness[Large]}, {40.1, 
      Thickness[Large]}, {40.2, 
      Thickness[Large]}, {40.300000000000004`, 
      Thickness[Large]}, {40.400000000000006`, 
      Thickness[Large]}, {40.5, 
      Thickness[Large]}, {40.6, 
      Thickness[Large]}, {40.7, 
      Thickness[Large]}, {40.800000000000004`, 
      Thickness[Large]}, {40.900000000000006`, 
      Thickness[Large]}, {41., 
      Thickness[Large]}, {41.1, 
      Thickness[Large]}, {41.2, 
      Thickness[Large]}, {41.300000000000004`, 
      Thickness[Large]}, {41.400000000000006`, 
      Thickness[Large]}, {41.5, 
      Thickness[Large]}, {41.6, 
      Thickness[Large]}, {41.7, 
      Thickness[Large]}, {41.800000000000004`, 
      Thickness[Large]}, {41.900000000000006`, 
      Thickness[Large]}, {42., 
      Thickness[Large]}, {42.1, 
      Thickness[Large]}, {42.2, 
      Thickness[Large]}, {42.300000000000004`, 
      Thickness[Large]}, {42.400000000000006`, 
      Thickness[Large]}, {42.5, 
      Thickness[Large]}, {42.6, 
      Thickness[Large]}, {42.7, 
      Thickness[Large]}, {42.800000000000004`, 
      Thickness[Large]}, {42.900000000000006`, 
      Thickness[Large]}, {43., 
      Thickness[Large]}, {43.1, 
      Thickness[Large]}, {43.2, 
      Thickness[Large]}, {43.300000000000004`, 
      Thickness[Large]}, {43.400000000000006`, 
      Thickness[Large]}, {43.5, 
      Thickness[Large]}, {43.6, 
      Thickness[Large]}, {43.7, 
      Thickness[Large]}, {43.800000000000004`, 
      Thickness[Large]}, {43.900000000000006`, 
      Thickness[Large]}, {44., 
      Thickness[Large]}, {44.1, 
      Thickness[Large]}, {44.2, 
      Thickness[Large]}, {44.300000000000004`, 
      Thickness[Large]}, {44.400000000000006`, 
      Thickness[Large]}, {44.5, 
      Thickness[Large]}, {44.6, 
      Thickness[Large]}, {44.7, 
      Thickness[Large]}, {44.800000000000004`, 
      Thickness[Large]}, {44.900000000000006`, 
      Thickness[Large]}, {45., 
      Thickness[Large]}, {45.1, 
      Thickness[Large]}, {45.2, 
      Thickness[Large]}, {45.300000000000004`, 
      Thickness[Large]}, {45.400000000000006`, 
      Thickness[Large]}, {45.5, 
      Thickness[Large]}, {45.6, 
      Thickness[Large]}, {45.7, 
      Thickness[Large]}, {45.800000000000004`, 
      Thickness[Large]}, {45.900000000000006`, 
      Thickness[Large]}, {46., 
      Thickness[Large]}, {46.1, 
      Thickness[Large]}, {46.2, 
      Thickness[Large]}, {46.300000000000004`, 
      Thickness[Large]}, {46.400000000000006`, 
      Thickness[Large]}, {46.5, 
      Thickness[Large]}, {46.6, 
      Thickness[Large]}, {46.7, 
      Thickness[Large]}, {46.800000000000004`, 
      Thickness[Large]}, {46.900000000000006`, 
      Thickness[Large]}, {47., 
      Thickness[Large]}, {47.1, 
      Thickness[Large]}, {47.2, 
      Thickness[Large]}, {47.300000000000004`, 
      Thickness[Large]}, {47.400000000000006`, 
      Thickness[Large]}, {47.5, 
      Thickness[Large]}, {47.6, 
      Thickness[Large]}, {47.7, 
      Thickness[Large]}, {47.800000000000004`, 
      Thickness[Large]}, {47.900000000000006`, 
      Thickness[Large]}, {48., 
      Thickness[Large]}, {48.1, 
      Thickness[Large]}, {48.2, 
      Thickness[Large]}, {48.300000000000004`, 
      Thickness[Large]}, {48.400000000000006`, 
      Thickness[Large]}, {48.5, 
      Thickness[Large]}, {48.6, 
      Thickness[Large]}, {48.7, 
      Thickness[Large]}, {48.800000000000004`, 
      Thickness[Large]}, {48.900000000000006`, 
      Thickness[Large]}, {49., 
      Thickness[Large]}, {49.1, 
      Thickness[Large]}, {49.2, 
      Thickness[Large]}, {49.300000000000004`, 
      Thickness[Large]}, {49.400000000000006`, 
      Thickness[Large]}, {49.5, 
      Thickness[Large]}, {49.6, 
      Thickness[Large]}, {49.7, 
      Thickness[Large]}, {49.800000000000004`, 
      Thickness[Large]}, {49.900000000000006`, 
      Thickness[Large]}, {50., 
      Thickness[Large]}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->20,
  ImagePadding->{{All, All}, {All, All}},
  ImageSize->1000,
  Method->{
   "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> Automatic, "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (DateString[
         Identity[#], "DateShort"]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotInteractivity:>True,
  PlotLabel->FormBox[
    TagBox[
     GridBox[{{
        StyleBox["\"BTC-USD average ROI, bought year to today\"", {20, 
          RGBColor[1, 0, 0]}, StripOnInput -> False]}, {
        StyleBox[
         InterpretationBox[
         "\"Overall mean ROI: \
\\!\\(\\*FormBox[\\\"\\\\\\\"68.72%\\\\\\\"\\\", TraditionalForm]\\)\"", 
          StringForm["Overall mean ROI: ``", 
           PercentForm[0.6871688779725695]], Editable -> False], {15}, 
         StripOnInput -> False]}, {
        StyleBox[
        "\"(updated: Mon 6 Oct 2025 14:39:56)\"", {15}, StripOnInput -> 
         False]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
      DefaultBaseStyle -> "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
    TraditionalForm],
  PlotRange->{{3.5343648*^9, 3.9446784*^9}, {0, 1.0774839166884067`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.02], 
     Scaled[0.08639999999999999]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.946311419063467*^9, 3.946311480580036*^9}, {
   3.9463115155186357`*^9, 3.946311529400943*^9}, {3.946311617624442*^9, 
   3.94631167464539*^9}, 3.946311707389769*^9, 3.946311747359344*^9, 
   3.9463118393885517`*^9, {3.946311870590426*^9, 3.946311897237561*^9}, 
   3.946311953425026*^9, {3.946312013630485*^9, 3.946312023817294*^9}, {
   3.946312102772057*^9, 3.9463121144275637`*^9}, 3.946312194611287*^9, {
   3.9463122251951036`*^9, 3.9463122715878572`*^9}, {3.946312350107255*^9, 
   3.946312370494214*^9}, 3.946312470377449*^9, 3.946312514787488*^9, {
   3.946312605232792*^9, 3.946312614798656*^9}, {3.946312742377035*^9, 
   3.946312790918768*^9}, {3.946313062836591*^9, 3.946313095030487*^9}, 
   3.946313587021223*^9, {3.946314085051569*^9, 3.9463141033005543`*^9}, 
   3.94631430195298*^9, {3.9463153279144917`*^9, 3.946315353975007*^9}, 
   3.946315487010236*^9, {3.946315523150622*^9, 3.94631553517697*^9}, {
   3.9463155662424107`*^9, 3.9463155772446127`*^9}, 3.9463157107016773`*^9, 
   3.9463157600951853`*^9, 3.946315806248382*^9, 3.946315945132496*^9, 
   3.946316149416081*^9, {3.9463163174174128`*^9, 3.946316340527899*^9}, {
   3.9463164174452133`*^9, 3.946316453354672*^9}, {3.9464188591252003`*^9, 
   3.9464188786466227`*^9}, 3.947010431507107*^9, 3.9479748902861967`*^9, 
   3.9503771689238853`*^9, 3.9503773536468983`*^9, 3.951729950923524*^9, 
   3.9517300574009447`*^9, 3.951730245477989*^9, {3.951730553494874*^9, 
   3.951730591680168*^9}, {3.951730628496957*^9, 3.951730670818571*^9}, 
   3.951730792134409*^9, 3.951730834934157*^9, 3.951731100502431*^9, 
   3.951731217612885*^9, 3.95176188175139*^9, 3.951762009297061*^9, 
   3.951836382296844*^9, 3.9524211804741592`*^9, 3.9524588400518503`*^9, 
   3.952458881079535*^9, 3.952459251071453*^9, 3.9530564921721888`*^9, 
   3.953150948570221*^9, {3.953151323600047*^9, 3.953151341931014*^9}, 
   3.9532084802647457`*^9, 3.953208541391184*^9, 3.9532086119317827`*^9, 
   3.9535662860734377`*^9, 3.954103658915306*^9, 3.9542732023964043`*^9, 
   3.955127407831347*^9, 3.955649257989863*^9, 3.956506797223741*^9, 
   3.956695298074954*^9, 3.957003703239661*^9, 3.958544487476056*^9, 
   3.958902481981266*^9, 3.9593733342992764`*^9, 3.9598908388144417`*^9, 
   3.9605420120954103`*^9, 3.960816356223134*^9, 3.9610692861741133`*^9, 
   3.961244345274804*^9, 3.962017530615508*^9, 3.962543344219928*^9, 
   3.962624581704661*^9, 3.962877514878283*^9, 3.9632418616925983`*^9, 
   3.963399001352396*^9, 3.963859644806829*^9, 3.965326598935669*^9, 
   3.9687647973250237`*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"c7c86933-ec48-4ce9-833e-c67e6ade12d9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1370, 1257},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
FrontEndVersion->"14.3 for Mac OS X ARM (64-bit) (July 8, 2025)",
StyleDefinitions->"Chatbook.nb",
ExpressionUUID->"eb0acc2b-5af2-48c2-ad76-60d1e9b289fc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 928, 13, 96, "Title",ExpressionUUID->"deb1a217-b104-4580-882f-939ace20911a"],
Cell[CellGroupData[{
Cell[1529, 39, 2504, 71, 19, "Input",ExpressionUUID->"5f80661a-cd8b-4293-acf4-83030feaedf6",
 CellOpen->False],
Cell[4036, 112, 989, 20, 44, "Output",ExpressionUUID->"7872e4ea-df80-403f-bd17-d740fcf6bb27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5062, 137, 6679, 146, 19, "Input",ExpressionUUID->"f96d83c5-c56e-457f-a564-3a7b7085a9c1",
 CellOpen->False],
Cell[11744, 285, 158500, 2683, 449, "Output",ExpressionUUID->"c6d6a0a2-22a7-43e8-8ad4-e37834daf9da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170281, 2973, 7710, 172, 19, "Input",ExpressionUUID->"e502aed4-b579-4540-ba7f-de883c36cbdb",
 CellOpen->False],
Cell[177994, 3147, 271923, 4856, 441, "Output",ExpressionUUID->"8c6bbd97-b1f4-4ff4-91a5-19e0c42df476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449954, 8008, 6545, 150, 19, "Input",ExpressionUUID->"a81dae0e-52a1-41ad-8eb4-09661b97ca59",
 CellOpen->False],
Cell[456502, 8160, 110624, 2504, 485, "Output",ExpressionUUID->"c7c86933-ec48-4ce9-833e-c67e6ade12d9"]
}, Open  ]]
}, Open  ]]
}
]
*)

